
app_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001deec  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003da0  0801e09c  0801e09c  0002e09c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003f1a  08021e3c  08021e3c  00031e3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000278  08025d58  08025d58  00035d58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000158  08025fd0  08025fd0  00035fd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00073494  08026128  08026128  00036128  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080995bc  080995bc  000b0164  2**0
                  CONTENTS
  8 .ARM          00000008  080995bc  080995bc  000a95bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080995c4  080995c4  000b0164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080995c4  080995c4  000a95c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080995d8  080995d8  000a95d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  080995e0  000b0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000131b8  20000164  08099744  000b0164  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  2001331c  08099744  000b331c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000b0164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000c0000  2**2
                  ALLOC
 17 .debug_line   0005853d  00000000  00000000  000b0194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000f5afb  00000000  00000000  001086d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001970d  00000000  00000000  001fe1cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003088  00000000  00000000  002178e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00118e90  00000000  00000000  0021a968  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000067d0  00000000  00000000  003337f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    000377f8  00000000  00000000  00339fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000321d1  00000000  00000000  003717c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000d2  00000000  00000000  003a3991  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008bfc  00000000  00000000  003a3a64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e084 	.word	0x0801e084

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801e084 	.word	0x0801e084

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b96e 	b.w	8000584 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468c      	mov	ip, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	f040 8083 	bne.w	80003d6 <__udivmoddi4+0x116>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4617      	mov	r7, r2
 80002d4:	d947      	bls.n	8000366 <__udivmoddi4+0xa6>
 80002d6:	fab2 f282 	clz	r2, r2
 80002da:	b142      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002dc:	f1c2 0020 	rsb	r0, r2, #32
 80002e0:	fa24 f000 	lsr.w	r0, r4, r0
 80002e4:	4091      	lsls	r1, r2
 80002e6:	4097      	lsls	r7, r2
 80002e8:	ea40 0c01 	orr.w	ip, r0, r1
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbbc f6f8 	udiv	r6, ip, r8
 80002f8:	fa1f fe87 	uxth.w	lr, r7
 80002fc:	fb08 c116 	mls	r1, r8, r6, ip
 8000300:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000304:	fb06 f10e 	mul.w	r1, r6, lr
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18fb      	adds	r3, r7, r3
 800030e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000312:	f080 8119 	bcs.w	8000548 <__udivmoddi4+0x288>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8116 	bls.w	8000548 <__udivmoddi4+0x288>
 800031c:	3e02      	subs	r6, #2
 800031e:	443b      	add	r3, r7
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0f8 	udiv	r0, r3, r8
 8000328:	fb08 3310 	mls	r3, r8, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fe0e 	mul.w	lr, r0, lr
 8000334:	45a6      	cmp	lr, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	193c      	adds	r4, r7, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8105 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000342:	45a6      	cmp	lr, r4
 8000344:	f240 8102 	bls.w	800054c <__udivmoddi4+0x28c>
 8000348:	3802      	subs	r0, #2
 800034a:	443c      	add	r4, r7
 800034c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000350:	eba4 040e 	sub.w	r4, r4, lr
 8000354:	2600      	movs	r6, #0
 8000356:	b11d      	cbz	r5, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c5 4300 	strd	r4, r3, [r5]
 8000360:	4631      	mov	r1, r6
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	b902      	cbnz	r2, 800036a <__udivmoddi4+0xaa>
 8000368:	deff      	udf	#255	; 0xff
 800036a:	fab2 f282 	clz	r2, r2
 800036e:	2a00      	cmp	r2, #0
 8000370:	d150      	bne.n	8000414 <__udivmoddi4+0x154>
 8000372:	1bcb      	subs	r3, r1, r7
 8000374:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000378:	fa1f f887 	uxth.w	r8, r7
 800037c:	2601      	movs	r6, #1
 800037e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000382:	0c21      	lsrs	r1, r4, #16
 8000384:	fb0e 331c 	mls	r3, lr, ip, r3
 8000388:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800038c:	fb08 f30c 	mul.w	r3, r8, ip
 8000390:	428b      	cmp	r3, r1
 8000392:	d907      	bls.n	80003a4 <__udivmoddi4+0xe4>
 8000394:	1879      	adds	r1, r7, r1
 8000396:	f10c 30ff 	add.w	r0, ip, #4294967295
 800039a:	d202      	bcs.n	80003a2 <__udivmoddi4+0xe2>
 800039c:	428b      	cmp	r3, r1
 800039e:	f200 80e9 	bhi.w	8000574 <__udivmoddi4+0x2b4>
 80003a2:	4684      	mov	ip, r0
 80003a4:	1ac9      	subs	r1, r1, r3
 80003a6:	b2a3      	uxth	r3, r4
 80003a8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ac:	fb0e 1110 	mls	r1, lr, r0, r1
 80003b0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003b4:	fb08 f800 	mul.w	r8, r8, r0
 80003b8:	45a0      	cmp	r8, r4
 80003ba:	d907      	bls.n	80003cc <__udivmoddi4+0x10c>
 80003bc:	193c      	adds	r4, r7, r4
 80003be:	f100 33ff 	add.w	r3, r0, #4294967295
 80003c2:	d202      	bcs.n	80003ca <__udivmoddi4+0x10a>
 80003c4:	45a0      	cmp	r8, r4
 80003c6:	f200 80d9 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003ca:	4618      	mov	r0, r3
 80003cc:	eba4 0408 	sub.w	r4, r4, r8
 80003d0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003d4:	e7bf      	b.n	8000356 <__udivmoddi4+0x96>
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d909      	bls.n	80003ee <__udivmoddi4+0x12e>
 80003da:	2d00      	cmp	r5, #0
 80003dc:	f000 80b1 	beq.w	8000542 <__udivmoddi4+0x282>
 80003e0:	2600      	movs	r6, #0
 80003e2:	e9c5 0100 	strd	r0, r1, [r5]
 80003e6:	4630      	mov	r0, r6
 80003e8:	4631      	mov	r1, r6
 80003ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ee:	fab3 f683 	clz	r6, r3
 80003f2:	2e00      	cmp	r6, #0
 80003f4:	d14a      	bne.n	800048c <__udivmoddi4+0x1cc>
 80003f6:	428b      	cmp	r3, r1
 80003f8:	d302      	bcc.n	8000400 <__udivmoddi4+0x140>
 80003fa:	4282      	cmp	r2, r0
 80003fc:	f200 80b8 	bhi.w	8000570 <__udivmoddi4+0x2b0>
 8000400:	1a84      	subs	r4, r0, r2
 8000402:	eb61 0103 	sbc.w	r1, r1, r3
 8000406:	2001      	movs	r0, #1
 8000408:	468c      	mov	ip, r1
 800040a:	2d00      	cmp	r5, #0
 800040c:	d0a8      	beq.n	8000360 <__udivmoddi4+0xa0>
 800040e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000412:	e7a5      	b.n	8000360 <__udivmoddi4+0xa0>
 8000414:	f1c2 0320 	rsb	r3, r2, #32
 8000418:	fa20 f603 	lsr.w	r6, r0, r3
 800041c:	4097      	lsls	r7, r2
 800041e:	fa01 f002 	lsl.w	r0, r1, r2
 8000422:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000426:	40d9      	lsrs	r1, r3
 8000428:	4330      	orrs	r0, r6
 800042a:	0c03      	lsrs	r3, r0, #16
 800042c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000430:	fa1f f887 	uxth.w	r8, r7
 8000434:	fb0e 1116 	mls	r1, lr, r6, r1
 8000438:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800043c:	fb06 f108 	mul.w	r1, r6, r8
 8000440:	4299      	cmp	r1, r3
 8000442:	fa04 f402 	lsl.w	r4, r4, r2
 8000446:	d909      	bls.n	800045c <__udivmoddi4+0x19c>
 8000448:	18fb      	adds	r3, r7, r3
 800044a:	f106 3cff 	add.w	ip, r6, #4294967295
 800044e:	f080 808d 	bcs.w	800056c <__udivmoddi4+0x2ac>
 8000452:	4299      	cmp	r1, r3
 8000454:	f240 808a 	bls.w	800056c <__udivmoddi4+0x2ac>
 8000458:	3e02      	subs	r6, #2
 800045a:	443b      	add	r3, r7
 800045c:	1a5b      	subs	r3, r3, r1
 800045e:	b281      	uxth	r1, r0
 8000460:	fbb3 f0fe 	udiv	r0, r3, lr
 8000464:	fb0e 3310 	mls	r3, lr, r0, r3
 8000468:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800046c:	fb00 f308 	mul.w	r3, r0, r8
 8000470:	428b      	cmp	r3, r1
 8000472:	d907      	bls.n	8000484 <__udivmoddi4+0x1c4>
 8000474:	1879      	adds	r1, r7, r1
 8000476:	f100 3cff 	add.w	ip, r0, #4294967295
 800047a:	d273      	bcs.n	8000564 <__udivmoddi4+0x2a4>
 800047c:	428b      	cmp	r3, r1
 800047e:	d971      	bls.n	8000564 <__udivmoddi4+0x2a4>
 8000480:	3802      	subs	r0, #2
 8000482:	4439      	add	r1, r7
 8000484:	1acb      	subs	r3, r1, r3
 8000486:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800048a:	e778      	b.n	800037e <__udivmoddi4+0xbe>
 800048c:	f1c6 0c20 	rsb	ip, r6, #32
 8000490:	fa03 f406 	lsl.w	r4, r3, r6
 8000494:	fa22 f30c 	lsr.w	r3, r2, ip
 8000498:	431c      	orrs	r4, r3
 800049a:	fa20 f70c 	lsr.w	r7, r0, ip
 800049e:	fa01 f306 	lsl.w	r3, r1, r6
 80004a2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004a6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004aa:	431f      	orrs	r7, r3
 80004ac:	0c3b      	lsrs	r3, r7, #16
 80004ae:	fbb1 f9fe 	udiv	r9, r1, lr
 80004b2:	fa1f f884 	uxth.w	r8, r4
 80004b6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ba:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004be:	fb09 fa08 	mul.w	sl, r9, r8
 80004c2:	458a      	cmp	sl, r1
 80004c4:	fa02 f206 	lsl.w	r2, r2, r6
 80004c8:	fa00 f306 	lsl.w	r3, r0, r6
 80004cc:	d908      	bls.n	80004e0 <__udivmoddi4+0x220>
 80004ce:	1861      	adds	r1, r4, r1
 80004d0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004d4:	d248      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 80004d6:	458a      	cmp	sl, r1
 80004d8:	d946      	bls.n	8000568 <__udivmoddi4+0x2a8>
 80004da:	f1a9 0902 	sub.w	r9, r9, #2
 80004de:	4421      	add	r1, r4
 80004e0:	eba1 010a 	sub.w	r1, r1, sl
 80004e4:	b2bf      	uxth	r7, r7
 80004e6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004ea:	fb0e 1110 	mls	r1, lr, r0, r1
 80004ee:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 80004f2:	fb00 f808 	mul.w	r8, r0, r8
 80004f6:	45b8      	cmp	r8, r7
 80004f8:	d907      	bls.n	800050a <__udivmoddi4+0x24a>
 80004fa:	19e7      	adds	r7, r4, r7
 80004fc:	f100 31ff 	add.w	r1, r0, #4294967295
 8000500:	d22e      	bcs.n	8000560 <__udivmoddi4+0x2a0>
 8000502:	45b8      	cmp	r8, r7
 8000504:	d92c      	bls.n	8000560 <__udivmoddi4+0x2a0>
 8000506:	3802      	subs	r0, #2
 8000508:	4427      	add	r7, r4
 800050a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800050e:	eba7 0708 	sub.w	r7, r7, r8
 8000512:	fba0 8902 	umull	r8, r9, r0, r2
 8000516:	454f      	cmp	r7, r9
 8000518:	46c6      	mov	lr, r8
 800051a:	4649      	mov	r1, r9
 800051c:	d31a      	bcc.n	8000554 <__udivmoddi4+0x294>
 800051e:	d017      	beq.n	8000550 <__udivmoddi4+0x290>
 8000520:	b15d      	cbz	r5, 800053a <__udivmoddi4+0x27a>
 8000522:	ebb3 020e 	subs.w	r2, r3, lr
 8000526:	eb67 0701 	sbc.w	r7, r7, r1
 800052a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800052e:	40f2      	lsrs	r2, r6
 8000530:	ea4c 0202 	orr.w	r2, ip, r2
 8000534:	40f7      	lsrs	r7, r6
 8000536:	e9c5 2700 	strd	r2, r7, [r5]
 800053a:	2600      	movs	r6, #0
 800053c:	4631      	mov	r1, r6
 800053e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000542:	462e      	mov	r6, r5
 8000544:	4628      	mov	r0, r5
 8000546:	e70b      	b.n	8000360 <__udivmoddi4+0xa0>
 8000548:	4606      	mov	r6, r0
 800054a:	e6e9      	b.n	8000320 <__udivmoddi4+0x60>
 800054c:	4618      	mov	r0, r3
 800054e:	e6fd      	b.n	800034c <__udivmoddi4+0x8c>
 8000550:	4543      	cmp	r3, r8
 8000552:	d2e5      	bcs.n	8000520 <__udivmoddi4+0x260>
 8000554:	ebb8 0e02 	subs.w	lr, r8, r2
 8000558:	eb69 0104 	sbc.w	r1, r9, r4
 800055c:	3801      	subs	r0, #1
 800055e:	e7df      	b.n	8000520 <__udivmoddi4+0x260>
 8000560:	4608      	mov	r0, r1
 8000562:	e7d2      	b.n	800050a <__udivmoddi4+0x24a>
 8000564:	4660      	mov	r0, ip
 8000566:	e78d      	b.n	8000484 <__udivmoddi4+0x1c4>
 8000568:	4681      	mov	r9, r0
 800056a:	e7b9      	b.n	80004e0 <__udivmoddi4+0x220>
 800056c:	4666      	mov	r6, ip
 800056e:	e775      	b.n	800045c <__udivmoddi4+0x19c>
 8000570:	4630      	mov	r0, r6
 8000572:	e74a      	b.n	800040a <__udivmoddi4+0x14a>
 8000574:	f1ac 0c02 	sub.w	ip, ip, #2
 8000578:	4439      	add	r1, r7
 800057a:	e713      	b.n	80003a4 <__udivmoddi4+0xe4>
 800057c:	3802      	subs	r0, #2
 800057e:	443c      	add	r4, r7
 8000580:	e724      	b.n	80003cc <__udivmoddi4+0x10c>
 8000582:	bf00      	nop

08000584 <__aeabi_idiv0>:
 8000584:	4770      	bx	lr
 8000586:	bf00      	nop

08000588 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000588:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800058c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800058e:	e003      	b.n	8000598 <LoopCopyDataInit>

08000590 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000590:	4b0c      	ldr	r3, [pc, #48]	; (80005c4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000592:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000594:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000596:	3104      	adds	r1, #4

08000598 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000598:	480b      	ldr	r0, [pc, #44]	; (80005c8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059a:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800059c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800059e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a0:	d3f6      	bcc.n	8000590 <CopyDataInit>
  ldr  r2, =_sbss
 80005a2:	4a0b      	ldr	r2, [pc, #44]	; (80005d0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a4:	e002      	b.n	80005ac <LoopFillZerobss>

080005a6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005a6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005a8:	f842 3b04 	str.w	r3, [r2], #4

080005ac <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005ac:	4b09      	ldr	r3, [pc, #36]	; (80005d4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b0:	d3f9      	bcc.n	80005a6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b2:	f005 f86f 	bl	8005694 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005b6:	f01c fd33 	bl	801d020 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ba:	f000 fe2b 	bl	8001214 <main>
  bx  lr    
 80005be:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c4:	080995e0 	.word	0x080995e0
  ldr  r0, =_sdata
 80005c8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005cc:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005d0:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005d4:	2001331c 	.word	0x2001331c

080005d8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005d8:	e7fe      	b.n	80005d8 <ADC_IRQHandler>

080005da <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005da:	f000 bc35 	b.w	8000e48 <touchgfx_init>

080005de <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005de:	f000 bca3 	b.w	8000f28 <touchgfx_taskEntry>

080005e2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005e2:	4770      	bx	lr

080005e4 <_ZN20STM32TouchControllerD0Ev>:
 80005e4:	b510      	push	{r4, lr}
 80005e6:	2104      	movs	r1, #4
 80005e8:	4604      	mov	r4, r0
 80005ea:	f01c fba7 	bl	801cd3c <_ZdlPvj>
 80005ee:	4620      	mov	r0, r4
 80005f0:	bd10      	pop	{r4, pc}
	...

080005f4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005f4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005f6:	4b0c      	ldr	r3, [pc, #48]	; (8000628 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005f8:	4c0c      	ldr	r4, [pc, #48]	; (800062c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80005fa:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80005fc:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80005fe:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000600:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000602:	6863      	ldr	r3, [r4, #4]
 8000604:	4798      	blx	r3
 8000606:	f640 0311 	movw	r3, #2065	; 0x811
 800060a:	4298      	cmp	r0, r3
 800060c:	d10a      	bne.n	8000624 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800060e:	4d09      	ldr	r5, [pc, #36]	; (8000634 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000610:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000612:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000614:	2082      	movs	r0, #130	; 0x82
 8000616:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000618:	682b      	ldr	r3, [r5, #0]
 800061a:	2082      	movs	r0, #130	; 0x82
 800061c:	68db      	ldr	r3, [r3, #12]
 800061e:	4798      	blx	r3
 8000620:	2000      	movs	r0, #0
    }

    return ret;
}
 8000622:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000624:	2001      	movs	r0, #1
 8000626:	e7fc      	b.n	8000622 <_Z11BSP_TS_Inittt+0x2e>
 8000628:	20000180 	.word	0x20000180
 800062c:	2000004c 	.word	0x2000004c
 8000630:	20000182 	.word	0x20000182
 8000634:	20000184 	.word	0x20000184

08000638 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000638:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800063c:	20f0      	movs	r0, #240	; 0xf0
 800063e:	f7ff bfd9 	b.w	80005f4 <_Z11BSP_TS_Inittt>
	...

08000644 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000644:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000646:	4d34      	ldr	r5, [pc, #208]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000648:	682b      	ldr	r3, [r5, #0]
{
 800064a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064c:	691b      	ldr	r3, [r3, #16]
 800064e:	2082      	movs	r0, #130	; 0x82
 8000650:	4798      	blx	r3
 8000652:	b280      	uxth	r0, r0
 8000654:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000656:	2800      	cmp	r0, #0
 8000658:	d04c      	beq.n	80006f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800065a:	682b      	ldr	r3, [r5, #0]
 800065c:	f10d 0206 	add.w	r2, sp, #6
 8000660:	695b      	ldr	r3, [r3, #20]
 8000662:	a901      	add	r1, sp, #4
 8000664:	2082      	movs	r0, #130	; 0x82
 8000666:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000668:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800066c:	f640 6274 	movw	r2, #3700	; 0xe74
 8000670:	4293      	cmp	r3, r2
 8000672:	d941      	bls.n	80006f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>
        {
            y = 3700;
 8000674:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000678:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800067c:	f5c2 6267 	rsb	r2, r2, #3696	; 0xe70
 8000680:	3204      	adds	r2, #4
 8000682:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000684:	2a0a      	cmp	r2, #10
 8000686:	d93d      	bls.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        yr = y / 11;
 8000688:	230b      	movs	r3, #11
 800068a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800068e:	4b23      	ldr	r3, [pc, #140]	; (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000690:	881b      	ldrh	r3, [r3, #0]
 8000692:	429a      	cmp	r2, r3
 8000694:	d901      	bls.n	800069a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
        {
            yr = TsYBoundary - 1;
 8000696:	1e5a      	subs	r2, r3, #1
 8000698:	b292      	uxth	r2, r2
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800069a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800069e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006a2:	428b      	cmp	r3, r1
 80006a4:	d830      	bhi.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>
        {
            x = 3870 - x;
 80006a6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006aa:	330e      	adds	r3, #14
 80006ac:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006ae:	210f      	movs	r1, #15
 80006b0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b4:	491a      	ldr	r1, [pc, #104]	; (8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
 80006b6:	8809      	ldrh	r1, [r1, #0]
 80006b8:	428b      	cmp	r3, r1
 80006ba:	d901      	bls.n	80006c0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
        {
            xr = TsXBoundary - 1;
 80006bc:	1e4b      	subs	r3, r1, #1
 80006be:	b29b      	uxth	r3, r3
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c0:	4e18      	ldr	r6, [pc, #96]	; (8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c2:	4d19      	ldr	r5, [pc, #100]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c8:	4283      	cmp	r3, r0
 80006ca:	b281      	uxth	r1, r0
 80006cc:	bf8c      	ite	hi
 80006ce:	1a59      	subhi	r1, r3, r1
 80006d0:	1ac9      	subls	r1, r1, r3
 80006d2:	b2b8      	uxth	r0, r7
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d4:	42ba      	cmp	r2, r7
 80006d6:	bf8c      	ite	hi
 80006d8:	1a10      	subhi	r0, r2, r0
 80006da:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006dc:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006de:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e0:	4401      	add	r1, r0
 80006e2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006e4:	bfc8      	it	gt
 80006e6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006ea:	bfc8      	it	gt
 80006ec:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006ee:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f0:	682b      	ldr	r3, [r5, #0]
 80006f2:	80a3      	strh	r3, [r4, #4]
    }
}
 80006f4:	b003      	add	sp, #12
 80006f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80006f8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80006fa:	bf9c      	itt	ls
 80006fc:	23b4      	movls	r3, #180	; 0xb4
 80006fe:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000702:	e7b9      	b.n	8000678 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000704:	2200      	movs	r2, #0
 8000706:	e7c8      	b.n	800069a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
            x = 3800 - x;
 8000708:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800070c:	3308      	adds	r3, #8
 800070e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000710:	2b0e      	cmp	r3, #14
 8000712:	d8cc      	bhi.n	80006ae <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
            xr = 0;
 8000714:	2300      	movs	r3, #0
 8000716:	e7d3      	b.n	80006c0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
 8000718:	20000184 	.word	0x20000184
 800071c:	20000182 	.word	0x20000182
 8000720:	20000180 	.word	0x20000180
 8000724:	20000188 	.word	0x20000188
 8000728:	2000018c 	.word	0x2000018c

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800072c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800072e:	4668      	mov	r0, sp
{
 8000730:	460d      	mov	r5, r1
 8000732:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000734:	f7ff ff86 	bl	8000644 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000738:	f8bd 0000 	ldrh.w	r0, [sp]
 800073c:	b130      	cbz	r0, 800074c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800073e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000742:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000744:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000748:	6023      	str	r3, [r4, #0]
        return true;
 800074a:	2001      	movs	r0, #1
}
 800074c:	b003      	add	sp, #12
 800074e:	bd30      	pop	{r4, r5, pc}

08000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000752:	4770      	bx	lr

08000754 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000754:	4770      	bx	lr

08000756 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000756:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000758:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800075c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000760:	4770      	bx	lr

08000762 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000762:	2000      	movs	r0, #0
 8000764:	4770      	bx	lr

08000766 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000766:	2000      	movs	r0, #0
 8000768:	4770      	bx	lr

0800076a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800076a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800076c:	b10b      	cbz	r3, 8000772 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800076e:	4608      	mov	r0, r1
 8000770:	4718      	bx	r3
        }
    }
 8000772:	4770      	bx	lr

08000774 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000774:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800077a:	6840      	ldr	r0, [r0, #4]
 800077c:	6803      	ldr	r3, [r0, #0]
 800077e:	699b      	ldr	r3, [r3, #24]
 8000780:	4718      	bx	r3

08000782 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000782:	4770      	bx	lr

08000784 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000784:	4770      	bx	lr

08000786 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000786:	4770      	bx	lr

08000788 <_ZN11TouchGFXHAL10initializeEv>:
using namespace touchgfx;

uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 8000788:	b570      	push	{r4, r5, r6, lr}
 800078a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078c:	f000 fc6e 	bl	800106c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8000790:	6823      	ldr	r3, [r4, #0]
 8000792:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 8000796:	4b04      	ldr	r3, [pc, #16]	; (80007a8 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 8000798:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 800079c:	4620      	mov	r0, r4
 800079e:	46ac      	mov	ip, r5
}
 80007a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80007a4:	4760      	bx	ip
 80007a6:	bf00      	nop
 80007a8:	d0000000 	.word	0xd0000000

080007ac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007ac:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007ae:	b931      	cbnz	r1, 80007be <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007b0:	4b0a      	ldr	r3, [pc, #40]	; (80007dc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007b2:	4a0b      	ldr	r2, [pc, #44]	; (80007e0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007b4:	480b      	ldr	r0, [pc, #44]	; (80007e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007b6:	f44f 7125 	mov.w	r1, #660	; 0x294
 80007ba:	f01c faed 	bl	801cd98 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007be:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007c2:	3a00      	subs	r2, #0
 80007c4:	4908      	ldr	r1, [pc, #32]	; (80007e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007c6:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007c8:	bf18      	it	ne
 80007ca:	2201      	movne	r2, #1
 80007cc:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80007ce:	3b00      	subs	r3, #0
 80007d0:	4a06      	ldr	r2, [pc, #24]	; (80007ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 80007d2:	bf18      	it	ne
 80007d4:	2301      	movne	r3, #1
 80007d6:	7013      	strb	r3, [r2, #0]
    }
 80007d8:	bd08      	pop	{r3, pc}
 80007da:	bf00      	nop
 80007dc:	0801e0fc 	.word	0x0801e0fc
 80007e0:	0801e134 	.word	0x0801e134
 80007e4:	0801e182 	.word	0x0801e182
 80007e8:	20012dc2 	.word	0x20012dc2
 80007ec:	20012dc3 	.word	0x20012dc3

080007f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80007f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80007f2:	6803      	ldr	r3, [r0, #0]
{
 80007f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80007f6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007f8:	4798      	blx	r3
    enableInterrupts();
 80007fa:	6823      	ldr	r3, [r4, #0]
 80007fc:	4620      	mov	r0, r4
 80007fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000800:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000802:	f000 f8b5 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000806:	6823      	ldr	r3, [r4, #0]
 8000808:	4620      	mov	r0, r4
 800080a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800080c:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800080e:	2029      	movs	r0, #41	; 0x29
 8000810:	f000 ff6c 	bl	80016ec <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000814:	f000 f8ac 	bl	8000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000818:	6823      	ldr	r3, [r4, #0]
 800081a:	4620      	mov	r0, r4
 800081c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800081e:	4798      	blx	r3
    for (;;)
 8000820:	e7f8      	b.n	8000814 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

08000822 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000822:	b510      	push	{r4, lr}
 8000824:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000826:	f00a fd57 	bl	800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800082a:	6823      	ldr	r3, [r4, #0]
 800082c:	4620      	mov	r0, r4
 800082e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 8000832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000836:	4718      	bx	r3

08000838 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000838:	f000 bc0a 	b.w	8001050 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800083c <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800083c:	f000 bc0e 	b.w	800105c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000840 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000840:	f000 bc32 	b.w	80010a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000844 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000844:	f000 bbe0 	b.w	8001008 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000848 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000848:	f000 bc32 	b.w	80010b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800084c <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800084c:	f000 bc3a 	b.w	80010c4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000850 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000850:	f000 bbe4 	b.w	800101c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000854 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000854:	f009 bef8 	b.w	800a648 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000858 <_ZN11TouchGFXHALD0Ev>:
 8000858:	b510      	push	{r4, lr}
 800085a:	217c      	movs	r1, #124	; 0x7c
 800085c:	4604      	mov	r4, r0
 800085e:	f01c fa6d 	bl	801cd3c <_ZdlPvj>
 8000862:	4620      	mov	r0, r4
 8000864:	bd10      	pop	{r4, pc}

08000866 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000866:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800086a:	b11b      	cbz	r3, 8000874 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800086c:	6840      	ldr	r0, [r0, #4]
 800086e:	6803      	ldr	r3, [r0, #0]
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	4718      	bx	r3
    }
 8000874:	4618      	mov	r0, r3
 8000876:	4770      	bx	lr

08000878 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000878:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800087a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800087e:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000882:	4b10      	ldr	r3, [pc, #64]	; (80008c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000884:	428c      	cmp	r4, r1
 8000886:	781a      	ldrb	r2, [r3, #0]
 8000888:	d00d      	beq.n	80008a6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800088a:	b95a      	cbnz	r2, 80008a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800088c:	4a0e      	ldr	r2, [pc, #56]	; (80008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800088e:	490f      	ldr	r1, [pc, #60]	; (80008cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000890:	480f      	ldr	r0, [pc, #60]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000892:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000894:	4d0f      	ldr	r5, [pc, #60]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000896:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000898:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800089a:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800089c:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800089e:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80008a0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80008a2:	701a      	strb	r2, [r3, #0]
    }
 80008a4:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008a6:	2a00      	cmp	r2, #0
 80008a8:	d0fc      	beq.n	80008a4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80008aa:	4809      	ldr	r0, [pc, #36]	; (80008d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80008ac:	4a07      	ldr	r2, [pc, #28]	; (80008cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80008ae:	8801      	ldrh	r1, [r0, #0]
 80008b0:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80008b2:	4a05      	ldr	r2, [pc, #20]	; (80008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80008b4:	4d07      	ldr	r5, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80008b6:	8814      	ldrh	r4, [r2, #0]
 80008b8:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80008ba:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80008bc:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80008be:	2200      	movs	r2, #0
 80008c0:	e7ef      	b.n	80008a2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80008c2:	bf00      	nop
 80008c4:	20012dbc 	.word	0x20012dbc
 80008c8:	20012db8 	.word	0x20012db8
 80008cc:	20012dbe 	.word	0x20012dbe
 80008d0:	20012dba 	.word	0x20012dba
 80008d4:	20012dc0 	.word	0x20012dc0

080008d8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008d8:	2101      	movs	r1, #1
{
 80008da:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008dc:	2200      	movs	r2, #0
 80008de:	4608      	mov	r0, r1
 80008e0:	f007 fbb2 	bl	8008048 <osSemaphoreNew>
 80008e4:	4b0a      	ldr	r3, [pc, #40]	; (8000910 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008e6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008e8:	b928      	cbnz	r0, 80008f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008ea:	4b0a      	ldr	r3, [pc, #40]	; (8000914 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008ec:	4a0a      	ldr	r2, [pc, #40]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008ee:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80008f0:	480a      	ldr	r0, [pc, #40]	; (800091c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80008f2:	f01c fa51 	bl	801cd98 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80008f6:	2200      	movs	r2, #0
 80008f8:	2104      	movs	r1, #4
 80008fa:	2001      	movs	r0, #1
 80008fc:	f007 fc42 	bl	8008184 <osMessageQueueNew>
 8000900:	4b07      	ldr	r3, [pc, #28]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000902:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000904:	b918      	cbnz	r0, 800090e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000906:	4b07      	ldr	r3, [pc, #28]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000908:	4a03      	ldr	r2, [pc, #12]	; (8000918 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800090a:	212b      	movs	r1, #43	; 0x2b
 800090c:	e7f0      	b.n	80008f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800090e:	bd08      	pop	{r3, pc}
 8000910:	20000194 	.word	0x20000194
 8000914:	0801e294 	.word	0x0801e294
 8000918:	0801e2dd 	.word	0x0801e2dd
 800091c:	0801e30c 	.word	0x0801e30c
 8000920:	20000190 	.word	0x20000190
 8000924:	0801e352 	.word	0x0801e352

08000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000928:	4b02      	ldr	r3, [pc, #8]	; (8000934 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800092a:	f04f 31ff 	mov.w	r1, #4294967295
 800092e:	6818      	ldr	r0, [r3, #0]
 8000930:	f007 bbd4 	b.w	80080dc <osSemaphoreAcquire>
 8000934:	20000194 	.word	0x20000194

08000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000938:	4b01      	ldr	r3, [pc, #4]	; (8000940 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800093a:	6818      	ldr	r0, [r3, #0]
 800093c:	f007 bbfa 	b.w	8008134 <osSemaphoreRelease>
 8000940:	20000194 	.word	0x20000194

08000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000944:	4b02      	ldr	r3, [pc, #8]	; (8000950 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000946:	2100      	movs	r1, #0
 8000948:	6818      	ldr	r0, [r3, #0]
 800094a:	f007 bbc7 	b.w	80080dc <osSemaphoreAcquire>
 800094e:	bf00      	nop
 8000950:	20000194 	.word	0x20000194

08000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000954:	f7ff bff0 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000958:	4803      	ldr	r0, [pc, #12]	; (8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800095a:	4904      	ldr	r1, [pc, #16]	; (800096c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800095c:	6800      	ldr	r0, [r0, #0]
 800095e:	2300      	movs	r3, #0
 8000960:	461a      	mov	r2, r3
 8000962:	f007 bc4b 	b.w	80081fc <osMessageQueuePut>
 8000966:	bf00      	nop
 8000968:	20000190 	.word	0x20000190
 800096c:	20000004 	.word	0x20000004

08000970 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000970:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000972:	4c08      	ldr	r4, [pc, #32]	; (8000994 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000974:	2300      	movs	r3, #0
 8000976:	461a      	mov	r2, r3
 8000978:	a901      	add	r1, sp, #4
 800097a:	6820      	ldr	r0, [r4, #0]
 800097c:	f007 fc6e 	bl	800825c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000980:	6820      	ldr	r0, [r4, #0]
 8000982:	f04f 33ff 	mov.w	r3, #4294967295
 8000986:	2200      	movs	r2, #0
 8000988:	a901      	add	r1, sp, #4
 800098a:	f007 fc67 	bl	800825c <osMessageQueueGet>
}
 800098e:	b002      	add	sp, #8
 8000990:	bd10      	pop	{r4, pc}
 8000992:	bf00      	nop
 8000994:	20000190 	.word	0x20000190

08000998 <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * running without an operating system, the implementation can run
 * a very short task and return.
 */
void OSWrappers::taskYield()
{
    osThreadYield();
 8000998:	f007 bb38 	b.w	800800c <osThreadYield>

0800099c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 800099c:	6803      	ldr	r3, [r0, #0]
 800099e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009a0:	4718      	bx	r3

080009a2 <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009a2:	2001      	movs	r0, #1
 80009a4:	4770      	bx	lr

080009a6 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009a6:	6803      	ldr	r3, [r0, #0]
 80009a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009aa:	4718      	bx	r3

080009ac <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 80009ac:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ae:	2300      	movs	r3, #0
 80009b0:	9301      	str	r3, [sp, #4]
 80009b2:	4b0d      	ldr	r3, [pc, #52]	; (80009e8 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 80009b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009b6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009ba:	631a      	str	r2, [r3, #48]	; 0x30
 80009bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009be:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009c2:	9201      	str	r2, [sp, #4]
 80009c4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009c6:	691a      	ldr	r2, [r3, #16]
 80009c8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009cc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009ce:	691a      	ldr	r2, [r3, #16]
 80009d0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009d4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009d6:	4b05      	ldr	r3, [pc, #20]	; (80009ec <_ZN10STM32F4DMA10initializeEv+0x40>)
 80009d8:	4a05      	ldr	r2, [pc, #20]	; (80009f0 <_ZN10STM32F4DMA10initializeEv+0x44>)
 80009da:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009dc:	4b05      	ldr	r3, [pc, #20]	; (80009f4 <_ZN10STM32F4DMA10initializeEv+0x48>)
 80009de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009e2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009e4:	b002      	add	sp, #8
 80009e6:	4770      	bx	lr
 80009e8:	40023800 	.word	0x40023800
 80009ec:	2001320c 	.word	0x2001320c
 80009f0:	08000a01 	.word	0x08000a01
 80009f4:	e000e100 	.word	0xe000e100

080009f8 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80009f8:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80009fc:	4770      	bx	lr
	...

08000a00 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000a00:	4b02      	ldr	r3, [pc, #8]	; (8000a0c <DMA2D_XferCpltCallback+0xc>)
 8000a02:	681b      	ldr	r3, [r3, #0]
 8000a04:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a06:	6803      	ldr	r3, [r0, #0]
 8000a08:	695b      	ldr	r3, [r3, #20]
 8000a0a:	4718      	bx	r3
 8000a0c:	20012dc4 	.word	0x20012dc4

08000a10 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000a10:	b508      	push	{r3, lr}
 8000a12:	280b      	cmp	r0, #11
 8000a14:	d80b      	bhi.n	8000a2e <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000a16:	e8df f000 	tbb	[pc, r0]
 8000a1a:	0612      	.short	0x0612
 8000a1c:	0a0a0a10 	.word	0x0a0a0a10
 8000a20:	0808080a 	.word	0x0808080a
 8000a24:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a26:	2001      	movs	r0, #1
}
 8000a28:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000a2a:	2005      	movs	r0, #5
        break;
 8000a2c:	e7fc      	b.n	8000a28 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000a2e:	4b05      	ldr	r3, [pc, #20]	; (8000a44 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a30:	4a05      	ldr	r2, [pc, #20]	; (8000a48 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a32:	4806      	ldr	r0, [pc, #24]	; (8000a4c <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000a34:	2165      	movs	r1, #101	; 0x65
 8000a36:	f01c f9af 	bl	801cd98 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000a3a:	2000      	movs	r0, #0
 8000a3c:	e7f4      	b.n	8000a28 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000a3e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a40:	e7f2      	b.n	8000a28 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a42:	bf00      	nop
 8000a44:	0801e394 	.word	0x0801e394
 8000a48:	0801e3af 	.word	0x0801e3af
 8000a4c:	0801e3fb 	.word	0x0801e3fb

08000a50 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000a50:	b508      	push	{r3, lr}
 8000a52:	280a      	cmp	r0, #10
 8000a54:	d809      	bhi.n	8000a6a <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000a56:	e8df f000 	tbb	[pc, r0]
 8000a5a:	0610      	.short	0x0610
 8000a5c:	0808080e 	.word	0x0808080e
 8000a60:	06060608 	.word	0x06060608
 8000a64:	06          	.byte	0x06
 8000a65:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a66:	2001      	movs	r0, #1
}
 8000a68:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000a6a:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000a6c:	4a05      	ldr	r2, [pc, #20]	; (8000a84 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000a6e:	4806      	ldr	r0, [pc, #24]	; (8000a88 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000a70:	2186      	movs	r1, #134	; 0x86
 8000a72:	f01c f991 	bl	801cd98 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000a76:	2000      	movs	r0, #0
 8000a78:	e7f6      	b.n	8000a68 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000a7a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000a7c:	e7f4      	b.n	8000a68 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000a7e:	bf00      	nop
 8000a80:	0801e394 	.word	0x0801e394
 8000a84:	0801e43f 	.word	0x0801e43f
 8000a88:	0801e3fb 	.word	0x0801e3fb

08000a8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000a8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a90:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000a94:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a96:	4640      	mov	r0, r8
 8000a98:	f7ff ffba 	bl	8000a10 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000a9c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000a9e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000aa0:	4638      	mov	r0, r7
 8000aa2:	f7ff ffb5 	bl	8000a10 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000aa6:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000aa8:	4638      	mov	r0, r7
 8000aaa:	f7ff ffd1 	bl	8000a50 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000aae:	8aa1      	ldrh	r1, [r4, #20]
 8000ab0:	8b62      	ldrh	r2, [r4, #26]
 8000ab2:	4b53      	ldr	r3, [pc, #332]	; (8000c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000ab4:	1a52      	subs	r2, r2, r1
 8000ab6:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000ab8:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000aba:	8b22      	ldrh	r2, [r4, #24]
 8000abc:	1a52      	subs	r2, r2, r1
 8000abe:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ac0:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000ac2:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ac4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ac8:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000aca:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000acc:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ace:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ad0:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000ad2:	f8d4 c000 	ldr.w	ip, [r4]
 8000ad6:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000ada:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000ade:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000ae2:	469e      	mov	lr, r3
 8000ae4:	d03b      	beq.n	8000b5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000ae6:	d815      	bhi.n	8000b14 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000ae8:	f1bc 0f20 	cmp.w	ip, #32
 8000aec:	ea45 0002 	orr.w	r0, r5, r2
 8000af0:	d079      	beq.n	8000be6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000af2:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000af6:	d076      	beq.n	8000be6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000af8:	f1bc 0f04 	cmp.w	ip, #4
 8000afc:	d02b      	beq.n	8000b56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000afe:	4b40      	ldr	r3, [pc, #256]	; (8000c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000b00:	432a      	orrs	r2, r5
 8000b02:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b08:	61da      	str	r2, [r3, #28]
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b0a:	bf14      	ite	ne
 8000b0c:	4a3d      	ldrne	r2, [pc, #244]	; (8000c04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b0e:	f240 2201 	movweq	r2, #513	; 0x201
 8000b12:	e01e      	b.n	8000b52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc6>
    switch (blitOp.operation)
 8000b14:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000b18:	d007      	beq.n	8000b2a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000b1a:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000b1e:	d1ee      	bne.n	8000afe <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b20:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b24:	f042 0209 	orr.w	r2, r2, #9
 8000b28:	e003      	b.n	8000b32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b2a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b2e:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000b34:	68e0      	ldr	r0, [r4, #12]
 8000b36:	0202      	lsls	r2, r0, #8
 8000b38:	0144      	lsls	r4, r0, #5
 8000b3a:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000b3e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000b42:	00c0      	lsls	r0, r0, #3
 8000b44:	4322      	orrs	r2, r4
 8000b46:	b2c0      	uxtb	r0, r0
 8000b48:	4302      	orrs	r2, r0
 8000b4a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000b4c:	4a2e      	ldr	r2, [pc, #184]	; (8000c08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b4e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b50:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000b52:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000b54:	e043      	b.n	8000bde <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b56:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000b5a:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b5c:	e7f6      	b.n	8000b4c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000b5e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b60:	432a      	orrs	r2, r5
 8000b62:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000b66:	1d04      	adds	r4, r0, #4
 8000b68:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b6a:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b6c:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000b6e:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b70:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000b72:	b142      	cbz	r2, 8000b86 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000b74:	2a01      	cmp	r2, #1
 8000b76:	d01c      	beq.n	8000bb2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
                assert(0 && "Unsupported format");
 8000b78:	4b24      	ldr	r3, [pc, #144]	; (8000c0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 8000b7a:	4a25      	ldr	r2, [pc, #148]	; (8000c10 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 8000b7c:	4825      	ldr	r0, [pc, #148]	; (8000c14 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000b7e:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000b82:	f01c f909 	bl	801cd98 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000b86:	8842      	ldrh	r2, [r0, #2]
 8000b88:	69d9      	ldr	r1, [r3, #28]
 8000b8a:	1e50      	subs	r0, r2, #1
 8000b8c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000b90:	f022 0210 	bic.w	r2, r2, #16
 8000b94:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000b98:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000b9a:	2501      	movs	r5, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000b9c:	4c18      	ldr	r4, [pc, #96]	; (8000c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000b9e:	69e3      	ldr	r3, [r4, #28]
 8000ba0:	f043 0320 	orr.w	r3, r3, #32
 8000ba4:	61e3      	str	r3, [r4, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000ba6:	69e3      	ldr	r3, [r4, #28]
 8000ba8:	069b      	lsls	r3, r3, #26
 8000baa:	d513      	bpl.n	8000bd4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                OSWrappers::taskYield();
 8000bac:	f7ff fef4 	bl	8000998 <_ZN8touchgfx10OSWrappers9taskYieldEv>
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bb0:	e7f9      	b.n	8000ba6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x11a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bb2:	8842      	ldrh	r2, [r0, #2]
 8000bb4:	69d9      	ldr	r1, [r3, #28]
 8000bb6:	1e50      	subs	r0, r2, #1
 8000bb8:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000bbc:	f022 0210 	bic.w	r2, r2, #16
 8000bc0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000bc4:	f1b9 05ff 	subs.w	r5, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bc8:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000bcc:	bf18      	it	ne
 8000bce:	2501      	movne	r5, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd0:	61da      	str	r2, [r3, #28]
                break;
 8000bd2:	e7e3      	b.n	8000b9c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x110>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bd4:	2310      	movs	r3, #16
 8000bd6:	60a3      	str	r3, [r4, #8]
            if(blend)
 8000bd8:	b11d      	cbz	r5, 8000be2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bda:	4b0b      	ldr	r3, [pc, #44]	; (8000c08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000bdc:	6023      	str	r3, [r4, #0]
}
 8000bde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000be2:	4b08      	ldr	r3, [pc, #32]	; (8000c04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000be4:	e7fa      	b.n	8000bdc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000be6:	4b08      	ldr	r3, [pc, #32]	; (8000c08 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000be8:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000bec:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bf0:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bf4:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000bf8:	f8ce 3000 	str.w	r3, [lr]
        break;
 8000bfc:	e7ef      	b.n	8000bde <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
 8000bfe:	bf00      	nop
 8000c00:	4002b000 	.word	0x4002b000
 8000c04:	00010201 	.word	0x00010201
 8000c08:	00020201 	.word	0x00020201
 8000c0c:	0801e48c 	.word	0x0801e48c
 8000c10:	0801e4a6 	.word	0x0801e4a6
 8000c14:	0801e3fb 	.word	0x0801e3fb

08000c18 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000c1c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1e:	4630      	mov	r0, r6
 8000c20:	f7ff ff16 	bl	8000a50 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c24:	8aa7      	ldrh	r7, [r4, #20]
 8000c26:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c28:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c2a:	4b1e      	ldr	r3, [pc, #120]	; (8000ca4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c2c:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c2e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c30:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c34:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c36:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c38:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c3c:	6821      	ldr	r1, [r4, #0]
 8000c3e:	2908      	cmp	r1, #8
 8000c40:	d118      	bne.n	8000c74 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c42:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c44:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c46:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000c48:	7f21      	ldrb	r1, [r4, #28]
 8000c4a:	4a17      	ldr	r2, [pc, #92]	; (8000ca8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000c4c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000c50:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000c52:	68e1      	ldr	r1, [r4, #12]
 8000c54:	020a      	lsls	r2, r1, #8
 8000c56:	0148      	lsls	r0, r1, #5
 8000c58:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000c5c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000c60:	00c9      	lsls	r1, r1, #3
 8000c62:	4302      	orrs	r2, r0
 8000c64:	b2c9      	uxtb	r1, r1
 8000c66:	430a      	orrs	r2, r1
 8000c68:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c6a:	4a10      	ldr	r2, [pc, #64]	; (8000cac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c6c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c6e:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c70:	601a      	str	r2, [r3, #0]
    }
}
 8000c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c74:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c76:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c78:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000c7a:	68e1      	ldr	r1, [r4, #12]
 8000c7c:	b91e      	cbnz	r6, 8000c86 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000c7e:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c80:	4b08      	ldr	r3, [pc, #32]	; (8000ca4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8000c82:	4a0b      	ldr	r2, [pc, #44]	; (8000cb0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8000c84:	e7f4      	b.n	8000c70 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000c86:	020a      	lsls	r2, r1, #8
 8000c88:	0148      	lsls	r0, r1, #5
 8000c8a:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000c8e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000c92:	00c9      	lsls	r1, r1, #3
 8000c94:	b2c9      	uxtb	r1, r1
 8000c96:	4302      	orrs	r2, r0
 8000c98:	430a      	orrs	r2, r1
 8000c9a:	7f21      	ldrb	r1, [r4, #28]
 8000c9c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000ca0:	639a      	str	r2, [r3, #56]	; 0x38
 8000ca2:	e7ed      	b.n	8000c80 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8000ca4:	4002b000 	.word	0x4002b000
 8000ca8:	00010009 	.word	0x00010009
 8000cac:	00020201 	.word	0x00020201
 8000cb0:	00030201 	.word	0x00030201

08000cb4 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000cb4:	4b05      	ldr	r3, [pc, #20]	; (8000ccc <_ZN10STM32F4DMAD1Ev+0x18>)
 8000cb6:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_ZN10STM32F4DMAD1Ev+0x1c>)
 8000cba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000cbe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000cc2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000cc6:	f3bf 8f6f 	isb	sy
}
 8000cca:	4770      	bx	lr
 8000ccc:	0801e4f0 	.word	0x0801e4f0
 8000cd0:	e000e100 	.word	0xe000e100

08000cd4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000cd4:	b510      	push	{r4, lr}
 8000cd6:	4604      	mov	r4, r0
}
 8000cd8:	f7ff ffec 	bl	8000cb4 <_ZN10STM32F4DMAD1Ev>
 8000cdc:	4620      	mov	r0, r4
 8000cde:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000ce2:	f01c f82b 	bl	801cd3c <_ZdlPvj>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
	...

08000cec <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8000cec:	b570      	push	{r4, r5, r6, lr}
 8000cee:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000cf0:	4625      	mov	r5, r4
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN10STM32F4DMAC1Ev+0x30>)
 8000cf4:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000cf6:	2600      	movs	r6, #0
 8000cf8:	6060      	str	r0, [r4, #4]
 8000cfa:	7226      	strb	r6, [r4, #8]
 8000cfc:	7266      	strb	r6, [r4, #9]
 8000cfe:	f845 3b20 	str.w	r3, [r5], #32
 8000d02:	2260      	movs	r2, #96	; 0x60
 8000d04:	4629      	mov	r1, r5
 8000d06:	f00a fc21 	bl	800b54c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000d0a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000d0e:	60ee      	str	r6, [r5, #12]
 8000d10:	3520      	adds	r5, #32
 8000d12:	42ab      	cmp	r3, r5
 8000d14:	d1fb      	bne.n	8000d0e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8000d16:	4620      	mov	r0, r4
 8000d18:	bd70      	pop	{r4, r5, r6, pc}
 8000d1a:	bf00      	nop
 8000d1c:	0801e4f0 	.word	0x0801e4f0

08000d20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr

08000d24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d24:	200c      	movs	r0, #12
 8000d26:	4770      	bx	lr

08000d28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d28:	230c      	movs	r3, #12
 8000d2a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d2e:	3008      	adds	r0, #8
 8000d30:	4770      	bx	lr

08000d32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d32:	230c      	movs	r3, #12
 8000d34:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d38:	3008      	adds	r0, #8
 8000d3a:	4770      	bx	lr

08000d3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d3c:	2001      	movs	r0, #1
 8000d3e:	4770      	bx	lr

08000d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d40:	f640 606c 	movw	r0, #3692	; 0xe6c
 8000d44:	4770      	bx	lr

08000d46 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d46:	f640 636c 	movw	r3, #3692	; 0xe6c
 8000d4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d4e:	3008      	adds	r0, #8
 8000d50:	4770      	bx	lr

08000d52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d52:	f640 636c 	movw	r3, #3692	; 0xe6c
 8000d56:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5a:	3008      	adds	r0, #8
 8000d5c:	4770      	bx	lr

08000d5e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d5e:	2001      	movs	r0, #1
 8000d60:	4770      	bx	lr

08000d62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d62:	2010      	movs	r0, #16
 8000d64:	4770      	bx	lr

08000d66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d66:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d6e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d72:	3008      	adds	r0, #8
 8000d74:	4770      	bx	lr

08000d76 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d76:	4608      	mov	r0, r1
 8000d78:	f001 b906 	b.w	8001f88 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d7c:	b510      	push	{r4, lr}
 8000d7e:	4b03      	ldr	r3, [pc, #12]	; (8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000d80:	6003      	str	r3, [r0, #0]
 8000d82:	4604      	mov	r4, r0
 8000d84:	f009 fa76 	bl	800a274 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d88:	4620      	mov	r0, r4
 8000d8a:	bd10      	pop	{r4, pc}
 8000d8c:	0801e5a8 	.word	0x0801e5a8

08000d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000d90:	b510      	push	{r4, lr}
 8000d92:	4604      	mov	r4, r0
 8000d94:	f7ff fff2 	bl	8000d7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	2114      	movs	r1, #20
 8000d9c:	f01b ffce 	bl	801cd3c <_ZdlPvj>
 8000da0:	4620      	mov	r0, r4
 8000da2:	bd10      	pop	{r4, pc}

08000da4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000da4:	b510      	push	{r4, lr}
 8000da6:	4b03      	ldr	r3, [pc, #12]	; (8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000da8:	6003      	str	r3, [r0, #0]
 8000daa:	4604      	mov	r4, r0
 8000dac:	f009 fa62 	bl	800a274 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}
 8000db4:	0801e574 	.word	0x0801e574

08000db8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000db8:	b510      	push	{r4, lr}
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f7ff fff2 	bl	8000da4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	f640 6174 	movw	r1, #3700	; 0xe74
 8000dc6:	f01b ffb9 	bl	801cd3c <_ZdlPvj>
 8000dca:	4620      	mov	r0, r4
 8000dcc:	bd10      	pop	{r4, pc}
	...

08000dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000dd0:	b510      	push	{r4, lr}
 8000dd2:	4b03      	ldr	r3, [pc, #12]	; (8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dd4:	6003      	str	r3, [r0, #0]
 8000dd6:	4604      	mov	r4, r0
 8000dd8:	f009 fa4c 	bl	800a274 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ddc:	4620      	mov	r0, r4
 8000dde:	bd10      	pop	{r4, pc}
 8000de0:	0801e540 	.word	0x0801e540

08000de4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000de4:	b510      	push	{r4, lr}
 8000de6:	4604      	mov	r4, r0
 8000de8:	f7ff fff2 	bl	8000dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	2118      	movs	r1, #24
 8000df0:	f01b ffa4 	bl	801cd3c <_ZdlPvj>
 8000df4:	4620      	mov	r0, r4
 8000df6:	bd10      	pop	{r4, pc}

08000df8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000df8:	b510      	push	{r4, lr}
 8000dfa:	4b08      	ldr	r3, [pc, #32]	; (8000e1c <_ZN12FrontendHeapD1Ev+0x24>)
 8000dfc:	6003      	str	r3, [r0, #0]
 8000dfe:	4604      	mov	r4, r0
 8000e00:	f500 606a 	add.w	r0, r0, #3744	; 0xea0
 8000e04:	f7ff ffba 	bl	8000d7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e08:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e0c:	f7ff ffca 	bl	8000da4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e10:	f104 0014 	add.w	r0, r4, #20
 8000e14:	f7ff ffdc 	bl	8000dd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen4PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e18:	4620      	mov	r0, r4
 8000e1a:	bd10      	pop	{r4, pc}
 8000e1c:	0801e5dc 	.word	0x0801e5dc

08000e20 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e20:	b508      	push	{r3, lr}
 8000e22:	4802      	ldr	r0, [pc, #8]	; (8000e2c <__tcf_0+0xc>)
 8000e24:	f7ff ffe8 	bl	8000df8 <_ZN12FrontendHeapD1Ev>
 8000e28:	bd08      	pop	{r3, pc}
 8000e2a:	bf00      	nop
 8000e2c:	2000019c 	.word	0x2000019c

08000e30 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e30:	b510      	push	{r4, lr}
 8000e32:	4604      	mov	r4, r0
 8000e34:	f7ff ffe0 	bl	8000df8 <_ZN12FrontendHeapD1Ev>
 8000e38:	4620      	mov	r0, r4
 8000e3a:	f241 0118 	movw	r1, #4120	; 0x1018
 8000e3e:	f01b ff7d 	bl	801cd3c <_ZdlPvj>
 8000e42:	4620      	mov	r0, r4
 8000e44:	bd10      	pop	{r4, pc}
	...

08000e48 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e4c:	f000 ffde 	bl	8001e0c <_ZN14BitmapDatabase11getInstanceEv>
 8000e50:	4605      	mov	r5, r0
 8000e52:	f000 ffdf 	bl	8001e14 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e56:	2400      	movs	r4, #0
 8000e58:	4601      	mov	r1, r0
 8000e5a:	4623      	mov	r3, r4
 8000e5c:	4628      	mov	r0, r5
 8000e5e:	4622      	mov	r2, r4
 8000e60:	9400      	str	r4, [sp, #0]
 8000e62:	f010 f899 	bl	8010f98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e66:	4b25      	ldr	r3, [pc, #148]	; (8000efc <touchgfx_init+0xb4>)
 8000e68:	4a25      	ldr	r2, [pc, #148]	; (8000f00 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000e6a:	4d26      	ldr	r5, [pc, #152]	; (8000f04 <touchgfx_init+0xbc>)
 8000e6c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e6e:	4620      	mov	r0, r4
 8000e70:	f003 fbd2 	bl	8004618 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e74:	4824      	ldr	r0, [pc, #144]	; (8000f08 <touchgfx_init+0xc0>)
 8000e76:	f00f ffd1 	bl	8010e1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e7a:	782b      	ldrb	r3, [r5, #0]
 8000e7c:	f3bf 8f5b 	dmb	ish
 8000e80:	07db      	lsls	r3, r3, #31
 8000e82:	d435      	bmi.n	8000ef0 <touchgfx_init+0xa8>
 8000e84:	4628      	mov	r0, r5
 8000e86:	f01b ff5b 	bl	801cd40 <__cxa_guard_acquire>
 8000e8a:	b388      	cbz	r0, 8000ef0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000e8c:	4c1f      	ldr	r4, [pc, #124]	; (8000f0c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e8e:	4b20      	ldr	r3, [pc, #128]	; (8000f10 <touchgfx_init+0xc8>)
 8000e90:	6023      	str	r3, [r4, #0]
 8000e92:	f504 666c 	add.w	r6, r4, #3776	; 0xec0
 8000e96:	f104 0014 	add.w	r0, r4, #20
 8000e9a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000e9e:	f504 676a 	add.w	r7, r4, #3744	; 0xea0
 8000ea2:	6060      	str	r0, [r4, #4]
 8000ea4:	f8c4 8008 	str.w	r8, [r4, #8]
 8000ea8:	60e7      	str	r7, [r4, #12]
 8000eaa:	6126      	str	r6, [r4, #16]
 8000eac:	f009 f9e4 	bl	800a278 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000eb0:	4b18      	ldr	r3, [pc, #96]	; (8000f14 <touchgfx_init+0xcc>)
 8000eb2:	6163      	str	r3, [r4, #20]
 8000eb4:	4640      	mov	r0, r8
 8000eb6:	f009 f9df 	bl	800a278 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000eba:	4b17      	ldr	r3, [pc, #92]	; (8000f18 <touchgfx_init+0xd0>)
 8000ebc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ebe:	4638      	mov	r0, r7
 8000ec0:	f009 f9da 	bl	800a278 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec4:	4b15      	ldr	r3, [pc, #84]	; (8000f1c <touchgfx_init+0xd4>)
 8000ec6:	f8c4 3ea0 	str.w	r3, [r4, #3744]	; 0xea0
 8000eca:	f604 60b4 	addw	r0, r4, #3764	; 0xeb4
 8000ece:	f003 fc25 	bl	800471c <_ZN5ModelC1Ev>
 8000ed2:	4622      	mov	r2, r4
 8000ed4:	f604 61b4 	addw	r1, r4, #3764	; 0xeb4
 8000ed8:	4630      	mov	r0, r6
 8000eda:	f003 fc15 	bl	8004708 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ede:	4630      	mov	r0, r6
 8000ee0:	f001 f852 	bl	8001f88 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000ee4:	4628      	mov	r0, r5
 8000ee6:	f01b ff37 	bl	801cd58 <__cxa_guard_release>
 8000eea:	480d      	ldr	r0, [pc, #52]	; (8000f20 <touchgfx_init+0xd8>)
 8000eec:	f01b ff72 	bl	801cdd4 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ef0:	480c      	ldr	r0, [pc, #48]	; (8000f24 <touchgfx_init+0xdc>)
}
 8000ef2:	b002      	add	sp, #8
 8000ef4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ef8:	f7ff bc46 	b.w	8000788 <_ZN11TouchGFXHAL10initializeEv>
 8000efc:	20012e20 	.word	0x20012e20
 8000f00:	20001e54 	.word	0x20001e54
 8000f04:	20000198 	.word	0x20000198
 8000f08:	20000008 	.word	0x20000008
 8000f0c:	2000019c 	.word	0x2000019c
 8000f10:	0801e5dc 	.word	0x0801e5dc
 8000f14:	0801e540 	.word	0x0801e540
 8000f18:	0801e574 	.word	0x0801e574
 8000f1c:	0801e5a8 	.word	0x0801e5a8
 8000f20:	08000e21 	.word	0x08000e21
 8000f24:	20001dd8 	.word	0x20001dd8

08000f28 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f28:	4801      	ldr	r0, [pc, #4]	; (8000f30 <touchgfx_taskEntry+0x8>)
 8000f2a:	f7ff bc61 	b.w	80007f0 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f2e:	bf00      	nop
 8000f30:	20001dd8 	.word	0x20001dd8

08000f34 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f34:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f36:	4c24      	ldr	r4, [pc, #144]	; (8000fc8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 8000f38:	4e24      	ldr	r6, [pc, #144]	; (8000fcc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000f3a:	4b25      	ldr	r3, [pc, #148]	; (8000fd0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 8000f3c:	4d25      	ldr	r5, [pc, #148]	; (8000fd4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8000f3e:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 8000f40:	4630      	mov	r0, r6
 8000f42:	f7ff fed3 	bl	8000cec <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 8000f46:	4628      	mov	r0, r5
 8000f48:	f013 f8aa 	bl	80140a0 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f4c:	4b22      	ldr	r3, [pc, #136]	; (8000fd8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        instance = this;
 8000f4e:	4823      	ldr	r0, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 8000f50:	60dc      	str	r4, [r3, #12]
 8000f52:	2200      	movs	r2, #0
 8000f54:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f58:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8000f5c:	4920      	ldr	r1, [pc, #128]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        instance = this;
 8000f5e:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 8000f60:	4820      	ldr	r0, [pc, #128]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 8000f62:	851a      	strh	r2, [r3, #40]	; 0x28
          lastRenderMethod(HARDWARE)
 8000f64:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8000f68:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000f6c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        DISPLAY_HEIGHT = height;
 8000f70:	4d1d      	ldr	r5, [pc, #116]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8000f72:	6759      	str	r1, [r3, #116]	; 0x74
        DISPLAY_WIDTH = width;
 8000f74:	24f0      	movs	r4, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	2101      	movs	r1, #1
        DISPLAY_WIDTH = width;
 8000f78:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 8000f7a:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f7e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f82:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f86:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000f8a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000f8e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000f92:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000f96:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000f9a:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f9e:	62da      	str	r2, [r3, #44]	; 0x2c
 8000fa0:	861a      	strh	r2, [r3, #48]	; 0x30
 8000fa2:	661a      	str	r2, [r3, #96]	; 0x60
 8000fa4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fa8:	671a      	str	r2, [r3, #112]	; 0x70
 8000faa:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        DISPLAY_HEIGHT = height;
 8000fae:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 8000fb0:	4d0e      	ldr	r5, [pc, #56]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fb2:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8000fb6:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000fb8:	4a0d      	ldr	r2, [pc, #52]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fba:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000fbc:	4a0d      	ldr	r2, [pc, #52]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fbe:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fc0:	4a0d      	ldr	r2, [pc, #52]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8000fc2:	601a      	str	r2, [r3, #0]
}
 8000fc4:	bd70      	pop	{r4, r5, r6, pc}
 8000fc6:	bf00      	nop
 8000fc8:	200011b4 	.word	0x200011b4
 8000fcc:	200011b8 	.word	0x200011b8
 8000fd0:	0801e0ec 	.word	0x0801e0ec
 8000fd4:	20001e58 	.word	0x20001e58
 8000fd8:	20001dd8 	.word	0x20001dd8
 8000fdc:	20012dc4 	.word	0x20012dc4
 8000fe0:	01000001 	.word	0x01000001
 8000fe4:	20012db8 	.word	0x20012db8
 8000fe8:	20012dba 	.word	0x20012dba
 8000fec:	20012dbc 	.word	0x20012dbc
 8000ff0:	20012dbe 	.word	0x20012dbe
 8000ff4:	20012dc0 	.word	0x20012dc0
 8000ff8:	0801e1d0 	.word	0x0801e1d0

08000ffc <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8000ffc:	4801      	ldr	r0, [pc, #4]	; (8001004 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8000ffe:	f7ff be59 	b.w	8000cb4 <_ZN10STM32F4DMAD1Ev>
 8001002:	bf00      	nop
 8001004:	200011b8 	.word	0x200011b8

08001008 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001008:	4b03      	ldr	r3, [pc, #12]	; (8001018 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 800100a:	2290      	movs	r2, #144	; 0x90
 800100c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001010:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop
 8001018:	e000e100 	.word	0xe000e100

0800101c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800101c:	4a09      	ldr	r2, [pc, #36]	; (8001044 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800101e:	490a      	ldr	r1, [pc, #40]	; (8001048 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001020:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001022:	480a      	ldr	r0, [pc, #40]	; (800104c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001024:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001028:	3b01      	subs	r3, #1
 800102a:	b29b      	uxth	r3, r3
 800102c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800102e:	6911      	ldr	r1, [r2, #16]
 8001030:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001034:	3901      	subs	r1, #1
 8001036:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001038:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800103a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800103c:	f043 0301 	orr.w	r3, r3, #1
 8001040:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001042:	4770      	bx	lr
 8001044:	40016800 	.word	0x40016800
 8001048:	20001ed2 	.word	0x20001ed2
 800104c:	20001ed0 	.word	0x20001ed0

08001050 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001050:	4b01      	ldr	r3, [pc, #4]	; (8001058 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001052:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 8001054:	4770      	bx	lr
 8001056:	bf00      	nop
 8001058:	40016884 	.word	0x40016884

0800105c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800105c:	4b02      	ldr	r3, [pc, #8]	; (8001068 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800105e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001060:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001062:	f843 2c60 	str.w	r2, [r3, #-96]
}
 8001066:	4770      	bx	lr
 8001068:	40016884 	.word	0x40016884

0800106c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800106c:	b570      	push	{r4, r5, r6, lr}
 800106e:	4604      	mov	r4, r0
    HAL::initialize();
 8001070:	f009 fb3d 	bl	800a6ee <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001074:	6823      	ldr	r3, [r4, #0]
 8001076:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 8001078:	f00c ff4e 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800107c:	4601      	mov	r1, r0
 800107e:	4620      	mov	r0, r4
 8001080:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001082:	6823      	ldr	r3, [r4, #0]
 8001084:	4a05      	ldr	r2, [pc, #20]	; (800109c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001086:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 800108a:	4620      	mov	r0, r4
 800108c:	46ac      	mov	ip, r5
 800108e:	2300      	movs	r3, #0
}
 8001090:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001094:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001098:	4760      	bx	ip
 800109a:	bf00      	nop
 800109c:	d004b000 	.word	0xd004b000

080010a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010a0:	f009 bb0c 	b.w	800a6bc <_ZN8touchgfx3HAL10beginFrameEv>

080010a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80010a4:	f009 bb16 	b.w	800a6d4 <_ZN8touchgfx3HAL8endFrameEv>

080010a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010a8:	f009 bad4 	b.w	800a654 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010ac:	f009 bc2d 	b.w	800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010b0:	4b03      	ldr	r3, [pc, #12]	; (80010c0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010b6:	609a      	str	r2, [r3, #8]
 80010b8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010bc:	609a      	str	r2, [r3, #8]
}
 80010be:	4770      	bx	lr
 80010c0:	e000e100 	.word	0xe000e100

080010c4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010c4:	4b08      	ldr	r3, [pc, #32]	; (80010e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010c6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010ca:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010ce:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010d2:	f3bf 8f6f 	isb	sy
 80010d6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010da:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010de:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010e2:	f3bf 8f6f 	isb	sy
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80010ec:	4b13      	ldr	r3, [pc, #76]	; (800113c <HAL_LTDC_LineEventCallback+0x50>)
 80010ee:	4a14      	ldr	r2, [pc, #80]	; (8001140 <HAL_LTDC_LineEventCallback+0x54>)
 80010f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80010f2:	8811      	ldrh	r1, [r2, #0]
 80010f4:	428b      	cmp	r3, r1
    {
 80010f6:	b510      	push	{r4, lr}
 80010f8:	4c12      	ldr	r4, [pc, #72]	; (8001144 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80010fa:	d113      	bne.n	8001124 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80010fc:	4b12      	ldr	r3, [pc, #72]	; (8001148 <HAL_LTDC_LineEventCallback+0x5c>)
 80010fe:	8819      	ldrh	r1, [r3, #0]
 8001100:	f005 fd76 	bl	8006bf0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001104:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001106:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800110a:	3301      	adds	r3, #1
 800110c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001110:	f7ff fc22 	bl	8000958 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001114:	6820      	ldr	r0, [r4, #0]
 8001116:	f00a f8df 	bl	800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800111a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800111e:	2000      	movs	r0, #0
 8001120:	f7ff bb16 	b.w	8000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001124:	f005 fd64 	bl	8006bf0 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001128:	2000      	movs	r0, #0
 800112a:	f7ff fb12 	bl	8000752 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 800112e:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001130:	6803      	ldr	r3, [r0, #0]
    }
 8001132:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001136:	69db      	ldr	r3, [r3, #28]
 8001138:	4718      	bx	r3
 800113a:	bf00      	nop
 800113c:	40016800 	.word	0x40016800
 8001140:	20001ed2 	.word	0x20001ed2
 8001144:	20012dc4 	.word	0x20012dc4
 8001148:	20001ed0 	.word	0x20001ed0

0800114c <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 800114c:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800114e:	4b06      	ldr	r3, [pc, #24]	; (8001168 <SPI5_Write+0x1c>)
{
 8001150:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	4805      	ldr	r0, [pc, #20]	; (800116c <SPI5_Write+0x20>)
 8001158:	2201      	movs	r2, #1
 800115a:	f10d 0106 	add.w	r1, sp, #6
 800115e:	f006 fa83 	bl	8007668 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001162:	b003      	add	sp, #12
 8001164:	f85d fb04 	ldr.w	pc, [sp], #4
 8001168:	20000010 	.word	0x20000010
 800116c:	200130b8 	.word	0x200130b8

08001170 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001170:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001172:	2064      	movs	r0, #100	; 0x64
 8001174:	f006 ff5c 	bl	8008030 <osDelay>
  for(;;)
 8001178:	e7fb      	b.n	8001172 <StartDefaultTask+0x2>
	...

0800117c <SystemClock_Config>:
{
 800117c:	b530      	push	{r4, r5, lr}
 800117e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001180:	2210      	movs	r2, #16
 8001182:	2100      	movs	r1, #0
 8001184:	a80a      	add	r0, sp, #40	; 0x28
 8001186:	f01b ff91 	bl	801d0ac <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800118a:	2214      	movs	r2, #20
 800118c:	2100      	movs	r1, #0
 800118e:	a803      	add	r0, sp, #12
 8001190:	f01b ff8c 	bl	801d0ac <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001194:	2400      	movs	r4, #0
 8001196:	4b1d      	ldr	r3, [pc, #116]	; (800120c <SystemClock_Config+0x90>)
 8001198:	9401      	str	r4, [sp, #4]
 800119a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800119c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80011a0:	641a      	str	r2, [r3, #64]	; 0x40
 80011a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011a4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011a8:	9301      	str	r3, [sp, #4]
 80011aa:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011ac:	4b18      	ldr	r3, [pc, #96]	; (8001210 <SystemClock_Config+0x94>)
 80011ae:	9402      	str	r4, [sp, #8]
 80011b0:	681a      	ldr	r2, [r3, #0]
 80011b2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80011b6:	601a      	str	r2, [r3, #0]
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80011be:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011c0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011c2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011c4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80011c8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80011cc:	2502      	movs	r5, #2
 80011ce:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80011d2:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80011d6:	2108      	movs	r1, #8
 80011d8:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80011dc:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011e0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80011e2:	2304      	movs	r3, #4
 80011e4:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80011e6:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011e8:	f005 fd20 	bl	8006c2c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011ec:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011ee:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011f2:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80011f6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80011fa:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011fe:	2105      	movs	r1, #5
 8001200:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001202:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001204:	f005 feec 	bl	8006fe0 <HAL_RCC_ClockConfig>
}
 8001208:	b015      	add	sp, #84	; 0x54
 800120a:	bd30      	pop	{r4, r5, pc}
 800120c:	40023800 	.word	0x40023800
 8001210:	40007000 	.word	0x40007000

08001214 <main>:
{
 8001214:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001218:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800121a:	f004 fa49 	bl	80056b0 <HAL_Init>
  SystemClock_Config();
 800121e:	f7ff ffad 	bl	800117c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001222:	2214      	movs	r2, #20
 8001224:	2100      	movs	r1, #0
 8001226:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001228:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800122a:	f01b ff3f 	bl	801d0ac <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800122e:	4bc4      	ldr	r3, [pc, #784]	; (8001540 <main+0x32c>)
 8001230:	9400      	str	r4, [sp, #0]
 8001232:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001234:	48c3      	ldr	r0, [pc, #780]	; (8001544 <main+0x330>)
  hi2c3.Instance = I2C3;
 8001236:	4dc4      	ldr	r5, [pc, #784]	; (8001548 <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001238:	f042 0220 	orr.w	r2, r2, #32
 800123c:	631a      	str	r2, [r3, #48]	; 0x30
 800123e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001240:	f002 0220 	and.w	r2, r2, #32
 8001244:	9200      	str	r2, [sp, #0]
 8001246:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001248:	9401      	str	r4, [sp, #4]
 800124a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800124c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001250:	631a      	str	r2, [r3, #48]	; 0x30
 8001252:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001254:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001258:	9201      	str	r2, [sp, #4]
 800125a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800125c:	9402      	str	r4, [sp, #8]
 800125e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001260:	f042 0204 	orr.w	r2, r2, #4
 8001264:	631a      	str	r2, [r3, #48]	; 0x30
 8001266:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001268:	f002 0204 	and.w	r2, r2, #4
 800126c:	9202      	str	r2, [sp, #8]
 800126e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001270:	9403      	str	r4, [sp, #12]
 8001272:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001274:	f042 0201 	orr.w	r2, r2, #1
 8001278:	631a      	str	r2, [r3, #48]	; 0x30
 800127a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800127c:	f002 0201 	and.w	r2, r2, #1
 8001280:	9203      	str	r2, [sp, #12]
 8001282:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001284:	9404      	str	r4, [sp, #16]
 8001286:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001288:	f042 0202 	orr.w	r2, r2, #2
 800128c:	631a      	str	r2, [r3, #48]	; 0x30
 800128e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001290:	f002 0202 	and.w	r2, r2, #2
 8001294:	9204      	str	r2, [sp, #16]
 8001296:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001298:	9405      	str	r4, [sp, #20]
 800129a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800129c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80012a0:	631a      	str	r2, [r3, #48]	; 0x30
 80012a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012a4:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80012a8:	9205      	str	r2, [sp, #20]
 80012aa:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80012ac:	9406      	str	r4, [sp, #24]
 80012ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012b0:	f042 0210 	orr.w	r2, r2, #16
 80012b4:	631a      	str	r2, [r3, #48]	; 0x30
 80012b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012b8:	f002 0210 	and.w	r2, r2, #16
 80012bc:	9206      	str	r2, [sp, #24]
 80012be:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80012c0:	9407      	str	r4, [sp, #28]
 80012c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012c4:	f042 0208 	orr.w	r2, r2, #8
 80012c8:	631a      	str	r2, [r3, #48]	; 0x30
 80012ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012cc:	f003 0308 	and.w	r3, r3, #8
 80012d0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012d2:	4622      	mov	r2, r4
 80012d4:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80012d6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012d8:	f004 feac 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80012dc:	489b      	ldr	r0, [pc, #620]	; (800154c <main+0x338>)
 80012de:	4622      	mov	r2, r4
 80012e0:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80012e4:	f004 fea6 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13|GPIO_PIN_14, GPIO_PIN_RESET);
 80012e8:	4622      	mov	r2, r4
 80012ea:	4899      	ldr	r0, [pc, #612]	; (8001550 <main+0x33c>)
 80012ec:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 80012f0:	f004 fea0 	bl	8006034 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012f4:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80012f6:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012f8:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80012fc:	4891      	ldr	r0, [pc, #580]	; (8001544 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012fe:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001300:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001302:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001306:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001308:	f004 fda8 	bl	8005e5c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800130c:	4891      	ldr	r0, [pc, #580]	; (8001554 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800130e:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001310:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001312:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001316:	f004 fda1 	bl	8005e5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800131a:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800131e:	488b      	ldr	r0, [pc, #556]	; (800154c <main+0x338>)
 8001320:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001322:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001326:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800132a:	f004 fd97 	bl	8005e5c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800132e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14;
 8001330:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001334:	4886      	ldr	r0, [pc, #536]	; (8001550 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001336:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800133a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800133e:	f004 fd8d 	bl	8005e5c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001342:	4885      	ldr	r0, [pc, #532]	; (8001558 <main+0x344>)
 8001344:	4b85      	ldr	r3, [pc, #532]	; (800155c <main+0x348>)
 8001346:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001348:	f004 fc7c 	bl	8005c44 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800134c:	4a84      	ldr	r2, [pc, #528]	; (8001560 <main+0x34c>)
 800134e:	4b85      	ldr	r3, [pc, #532]	; (8001564 <main+0x350>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001350:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001352:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001356:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001358:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800135c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001360:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001364:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001368:	f005 f846 	bl	80063f8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800136c:	2110      	movs	r1, #16
 800136e:	4628      	mov	r0, r5
 8001370:	f005 fa82 	bl	8006878 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001374:	4621      	mov	r1, r4
 8001376:	4628      	mov	r0, r5
 8001378:	f005 fa9d 	bl	80068b6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800137c:	487a      	ldr	r0, [pc, #488]	; (8001568 <main+0x354>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800137e:	497b      	ldr	r1, [pc, #492]	; (800156c <main+0x358>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001380:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001382:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001386:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800138a:	f44f 7500 	mov.w	r5, #512	; 0x200
 800138e:	2318      	movs	r3, #24
 8001390:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001394:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001396:	4d76      	ldr	r5, [pc, #472]	; (8001570 <main+0x35c>)
  hspi5.Init.CRCPolynomial = 10;
 8001398:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800139a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800139e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80013a2:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80013a6:	f006 f903 	bl	80075b0 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80013aa:	4b72      	ldr	r3, [pc, #456]	; (8001574 <main+0x360>)
  SdramTiming.LoadToActiveDelay = 2;
 80013ac:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80013ae:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80013b2:	f04f 0a10 	mov.w	sl, #16
 80013b6:	2340      	movs	r3, #64	; 0x40
 80013b8:	e9c5 a304 	strd	sl, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80013bc:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80013c0:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80013c4:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80013c8:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80013cc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80013d0:	62ab      	str	r3, [r5, #40]	; 0x28
  SdramTiming.WriteRecoveryTime = 3;
 80013d2:	f04f 0b03 	mov.w	fp, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80013d6:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80013d8:	a90d      	add	r1, sp, #52	; 0x34
 80013da:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 80013dc:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 80013e0:	9310      	str	r3, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80013e2:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80013e6:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 80013ea:	e9cd b711 	strd	fp, r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 80013ee:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80013f0:	f005 ffea 	bl	80073c8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80013f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80013f8:	a909      	add	r1, sp, #36	; 0x24
 80013fa:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80013fc:	e9cd 960a 	strd	r9, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001400:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001402:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001404:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001406:	f005 ffff 	bl	8007408 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800140a:	4630      	mov	r0, r6
 800140c:	f004 f97c 	bl	8005708 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001410:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001414:	a909      	add	r1, sp, #36	; 0x24
 8001416:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001418:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800141c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001420:	f005 fff2 	bl	8007408 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001424:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001428:	a909      	add	r1, sp, #36	; 0x24
 800142a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800142c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001430:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001434:	f005 ffe8 	bl	8007408 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001438:	f44f 730c 	mov.w	r3, #560	; 0x230
 800143c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800143e:	9b08      	ldr	r3, [sp, #32]
 8001440:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001442:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001446:	a909      	add	r1, sp, #36	; 0x24
 8001448:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800144a:	e9cd 8909 	strd	r8, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800144e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001450:	f005 ffda 	bl	8007408 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001454:	f240 516a 	movw	r1, #1386	; 0x56a
 8001458:	4628      	mov	r0, r5
 800145a:	f005 ffec 	bl	8007436 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800145e:	2234      	movs	r2, #52	; 0x34
 8001460:	4621      	mov	r1, r4
 8001462:	eb0d 0002 	add.w	r0, sp, r2
 8001466:	f01b fe21 	bl	801d0ac <memset>
  hltdc.Instance = LTDC;
 800146a:	4d43      	ldr	r5, [pc, #268]	; (8001578 <main+0x364>)
 800146c:	4b43      	ldr	r3, [pc, #268]	; (800157c <main+0x368>)
  hltdc.Init.Backcolor.Blue = 0;
 800146e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001470:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001474:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001476:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800147a:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800147c:	f240 1c0d 	movw	ip, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001480:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001484:	f240 1343 	movw	r3, #323	; 0x143
 8001488:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800148c:	f240 1e17 	movw	lr, #279	; 0x117
 8001490:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001494:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001496:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800149a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800149e:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 80014a0:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80014a4:	f005 faac 	bl	8006a00 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80014a8:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80014aa:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80014ac:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80014b0:	f44f 6880 	mov.w	r8, #1024	; 0x400
 80014b4:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80014b6:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 80014ba:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80014be:	e9cd 8114 	strd	r8, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 80014c2:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80014c6:	a90d      	add	r1, sp, #52	; 0x34
 80014c8:	4622      	mov	r2, r4
 80014ca:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80014cc:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80014d0:	4d2b      	ldr	r5, [pc, #172]	; (8001580 <main+0x36c>)
  pLayerCfg.ImageHeight = 320;
 80014d2:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80014d4:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80014d6:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80014da:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80014de:	f005 fb5a 	bl	8006b96 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80014e2:	4b28      	ldr	r3, [pc, #160]	; (8001584 <main+0x370>)
 80014e4:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 80014e6:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80014e8:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 8001598 <main+0x384>
  LcdDrv->Init();
 80014ec:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80014ee:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 80014f0:	4d25      	ldr	r5, [pc, #148]	; (8001588 <main+0x374>)
  LcdDrv->DisplayOff();
 80014f2:	68db      	ldr	r3, [r3, #12]
 80014f4:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80014f6:	4b25      	ldr	r3, [pc, #148]	; (800158c <main+0x378>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80014f8:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80014fc:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001500:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001502:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001506:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800150a:	f004 fbab 	bl	8005c64 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800150e:	4631      	mov	r1, r6
 8001510:	4628      	mov	r0, r5
 8001512:	f004 fc5f 	bl	8005dd4 <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001516:	4d1e      	ldr	r5, [pc, #120]	; (8001590 <main+0x37c>)
  ADC_ChannelConfTypeDef sConfig = {0};
 8001518:	4652      	mov	r2, sl
 800151a:	4621      	mov	r1, r4
 800151c:	a80d      	add	r0, sp, #52	; 0x34
 800151e:	f01b fdc5 	bl	801d0ac <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001522:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001526:	e9c5 9300 	strd	r9, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800152a:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800152c:	4b19      	ldr	r3, [pc, #100]	; (8001594 <main+0x380>)
 800152e:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001530:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001532:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001534:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001536:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800153a:	62ec      	str	r4, [r5, #44]	; 0x2c
 800153c:	e02e      	b.n	800159c <main+0x388>
 800153e:	bf00      	nop
 8001540:	40023800 	.word	0x40023800
 8001544:	40020800 	.word	0x40020800
 8001548:	20013064 	.word	0x20013064
 800154c:	40020c00 	.word	0x40020c00
 8001550:	40021800 	.word	0x40021800
 8001554:	40020000 	.word	0x40020000
 8001558:	20013110 	.word	0x20013110
 800155c:	40023000 	.word	0x40023000
 8001560:	40005c00 	.word	0x40005c00
 8001564:	000186a0 	.word	0x000186a0
 8001568:	200130b8 	.word	0x200130b8
 800156c:	40015000 	.word	0x40015000
 8001570:	2001324c 	.word	0x2001324c
 8001574:	a0000140 	.word	0xa0000140
 8001578:	20013118 	.word	0x20013118
 800157c:	40016800 	.word	0x40016800
 8001580:	20001ed4 	.word	0x20001ed4
 8001584:	20000014 	.word	0x20000014
 8001588:	2001320c 	.word	0x2001320c
 800158c:	4002b000 	.word	0x4002b000
 8001590:	200131c0 	.word	0x200131c0
 8001594:	0f000001 	.word	0x0f000001
 8001598:	40012000 	.word	0x40012000
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800159c:	60ec      	str	r4, [r5, #12]
  hadc1.Init.NbrOfConversion = 1;
 800159e:	61ee      	str	r6, [r5, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80015a0:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80015a4:	616e      	str	r6, [r5, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80015a6:	f004 f8c3 	bl	8005730 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80015aa:	a90d      	add	r1, sp, #52	; 0x34
 80015ac:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 80015ae:	e9cd 660d 	strd	r6, r6, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80015b2:	940f      	str	r4, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80015b4:	f004 fa58 	bl	8005a68 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 80015b8:	f7ff f80f 	bl	80005da <MX_TouchGFX_Init>
  osKernelInitialize();
 80015bc:	f006 fcb0 	bl	8007f20 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80015c0:	4a08      	ldr	r2, [pc, #32]	; (80015e4 <main+0x3d0>)
 80015c2:	4809      	ldr	r0, [pc, #36]	; (80015e8 <main+0x3d4>)
 80015c4:	4621      	mov	r1, r4
 80015c6:	f006 fcd7 	bl	8007f78 <osThreadNew>
 80015ca:	4b08      	ldr	r3, [pc, #32]	; (80015ec <main+0x3d8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015cc:	4a08      	ldr	r2, [pc, #32]	; (80015f0 <main+0x3dc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80015ce:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80015d0:	4621      	mov	r1, r4
 80015d2:	4808      	ldr	r0, [pc, #32]	; (80015f4 <main+0x3e0>)
 80015d4:	f006 fcd0 	bl	8007f78 <osThreadNew>
 80015d8:	4b07      	ldr	r3, [pc, #28]	; (80015f8 <main+0x3e4>)
 80015da:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80015dc:	f006 fcb2 	bl	8007f44 <osKernelStart>
  while (1)
 80015e0:	e7fe      	b.n	80015e0 <main+0x3cc>
 80015e2:	bf00      	nop
 80015e4:	0801e624 	.word	0x0801e624
 80015e8:	08001171 	.word	0x08001171
 80015ec:	20013060 	.word	0x20013060
 80015f0:	0801e600 	.word	0x0801e600
 80015f4:	080005df 	.word	0x080005df
 80015f8:	20013208 	.word	0x20013208

080015fc <IOE_Init>:
 80015fc:	4770      	bx	lr

080015fe <IOE_ITConfig>:
 80015fe:	4770      	bx	lr

08001600 <IOE_Write>:
{
 8001600:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001602:	4b09      	ldr	r3, [pc, #36]	; (8001628 <IOE_Write+0x28>)
 8001604:	f88d 2017 	strb.w	r2, [sp, #23]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	9302      	str	r3, [sp, #8]
 800160c:	f10d 0217 	add.w	r2, sp, #23
 8001610:	2301      	movs	r3, #1
 8001612:	9200      	str	r2, [sp, #0]
 8001614:	9301      	str	r3, [sp, #4]
 8001616:	460a      	mov	r2, r1
 8001618:	4601      	mov	r1, r0
 800161a:	4804      	ldr	r0, [pc, #16]	; (800162c <IOE_Write+0x2c>)
 800161c:	f004 ff94 	bl	8006548 <HAL_I2C_Mem_Write>
}
 8001620:	b007      	add	sp, #28
 8001622:	f85d fb04 	ldr.w	pc, [sp], #4
 8001626:	bf00      	nop
 8001628:	2000000c 	.word	0x2000000c
 800162c:	20013064 	.word	0x20013064

08001630 <IOE_Read>:
{
 8001630:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001632:	2300      	movs	r3, #0
 8001634:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001638:	4b08      	ldr	r3, [pc, #32]	; (800165c <IOE_Read+0x2c>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	9302      	str	r3, [sp, #8]
{
 800163e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001640:	2301      	movs	r3, #1
 8001642:	f10d 0117 	add.w	r1, sp, #23
 8001646:	9100      	str	r1, [sp, #0]
 8001648:	9301      	str	r3, [sp, #4]
 800164a:	4601      	mov	r1, r0
 800164c:	4804      	ldr	r0, [pc, #16]	; (8001660 <IOE_Read+0x30>)
 800164e:	f005 f80b 	bl	8006668 <HAL_I2C_Mem_Read>
}
 8001652:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001656:	b007      	add	sp, #28
 8001658:	f85d fb04 	ldr.w	pc, [sp], #4
 800165c:	2000000c 	.word	0x2000000c
 8001660:	20013064 	.word	0x20013064

08001664 <IOE_ReadMultiple>:
{
 8001664:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001666:	4c08      	ldr	r4, [pc, #32]	; (8001688 <IOE_ReadMultiple+0x24>)
 8001668:	6824      	ldr	r4, [r4, #0]
 800166a:	9200      	str	r2, [sp, #0]
 800166c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001670:	460a      	mov	r2, r1
 8001672:	2301      	movs	r3, #1
 8001674:	4601      	mov	r1, r0
 8001676:	4805      	ldr	r0, [pc, #20]	; (800168c <IOE_ReadMultiple+0x28>)
 8001678:	f004 fff6 	bl	8006668 <HAL_I2C_Mem_Read>
}
 800167c:	3800      	subs	r0, #0
 800167e:	bf18      	it	ne
 8001680:	2001      	movne	r0, #1
 8001682:	b004      	add	sp, #16
 8001684:	bd10      	pop	{r4, pc}
 8001686:	bf00      	nop
 8001688:	2000000c 	.word	0x2000000c
 800168c:	20013064 	.word	0x20013064

08001690 <IOE_Delay>:
 8001690:	f004 b83a 	b.w	8005708 <HAL_Delay>

08001694 <LCD_IO_Init>:
{
 8001694:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001696:	4806      	ldr	r0, [pc, #24]	; (80016b0 <LCD_IO_Init+0x1c>)
 8001698:	2200      	movs	r2, #0
 800169a:	2104      	movs	r1, #4
 800169c:	f004 fcca 	bl	8006034 <HAL_GPIO_WritePin>
}
 80016a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016a4:	4802      	ldr	r0, [pc, #8]	; (80016b0 <LCD_IO_Init+0x1c>)
 80016a6:	2201      	movs	r2, #1
 80016a8:	2104      	movs	r1, #4
 80016aa:	f004 bcc3 	b.w	8006034 <HAL_GPIO_WritePin>
 80016ae:	bf00      	nop
 80016b0:	40020800 	.word	0x40020800

080016b4 <LCD_IO_WriteData>:
{
 80016b4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016b6:	4d0b      	ldr	r5, [pc, #44]	; (80016e4 <LCD_IO_WriteData+0x30>)
{
 80016b8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80016ba:	2201      	movs	r2, #1
 80016bc:	480a      	ldr	r0, [pc, #40]	; (80016e8 <LCD_IO_WriteData+0x34>)
 80016be:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016c2:	f004 fcb7 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016c6:	2200      	movs	r2, #0
 80016c8:	2104      	movs	r1, #4
 80016ca:	4628      	mov	r0, r5
 80016cc:	f004 fcb2 	bl	8006034 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80016d0:	4620      	mov	r0, r4
 80016d2:	f7ff fd3b 	bl	800114c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016d6:	4628      	mov	r0, r5
 80016d8:	2201      	movs	r2, #1
}
 80016da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80016de:	2104      	movs	r1, #4
 80016e0:	f004 bca8 	b.w	8006034 <HAL_GPIO_WritePin>
 80016e4:	40020800 	.word	0x40020800
 80016e8:	40020c00 	.word	0x40020c00

080016ec <LCD_IO_WriteReg>:
{
 80016ec:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016ee:	4d0b      	ldr	r5, [pc, #44]	; (800171c <LCD_IO_WriteReg+0x30>)
{
 80016f0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80016f2:	2200      	movs	r2, #0
 80016f4:	480a      	ldr	r0, [pc, #40]	; (8001720 <LCD_IO_WriteReg+0x34>)
 80016f6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80016fa:	f004 fc9b 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80016fe:	2200      	movs	r2, #0
 8001700:	2104      	movs	r1, #4
 8001702:	4628      	mov	r0, r5
 8001704:	f004 fc96 	bl	8006034 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001708:	4620      	mov	r0, r4
 800170a:	f7ff fd1f 	bl	800114c <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800170e:	4628      	mov	r0, r5
 8001710:	2201      	movs	r2, #1
}
 8001712:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001716:	2104      	movs	r1, #4
 8001718:	f004 bc8c 	b.w	8006034 <HAL_GPIO_WritePin>
 800171c:	40020800 	.word	0x40020800
 8001720:	40020c00 	.word	0x40020c00

08001724 <LCD_IO_ReadData>:
{
 8001724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001726:	4e14      	ldr	r6, [pc, #80]	; (8001778 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001728:	4f14      	ldr	r7, [pc, #80]	; (800177c <LCD_IO_ReadData+0x58>)
{
 800172a:	4605      	mov	r5, r0
 800172c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800172e:	4630      	mov	r0, r6
 8001730:	2200      	movs	r2, #0
 8001732:	2104      	movs	r1, #4
 8001734:	f004 fc7e 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001738:	2200      	movs	r2, #0
 800173a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800173e:	4638      	mov	r0, r7
 8001740:	f004 fc78 	bl	8006034 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001744:	4628      	mov	r0, r5
 8001746:	f7ff fd01 	bl	800114c <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800174a:	4b0d      	ldr	r3, [pc, #52]	; (8001780 <LCD_IO_ReadData+0x5c>)
 800174c:	480d      	ldr	r0, [pc, #52]	; (8001784 <LCD_IO_ReadData+0x60>)
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	4622      	mov	r2, r4
 8001752:	a901      	add	r1, sp, #4
 8001754:	f006 f924 	bl	80079a0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001758:	4638      	mov	r0, r7
 800175a:	2201      	movs	r2, #1
 800175c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001760:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001762:	f004 fc67 	bl	8006034 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001766:	4630      	mov	r0, r6
 8001768:	2201      	movs	r2, #1
 800176a:	2104      	movs	r1, #4
 800176c:	f004 fc62 	bl	8006034 <HAL_GPIO_WritePin>
}
 8001770:	4620      	mov	r0, r4
 8001772:	b003      	add	sp, #12
 8001774:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001776:	bf00      	nop
 8001778:	40020800 	.word	0x40020800
 800177c:	40020c00 	.word	0x40020c00
 8001780:	20000010 	.word	0x20000010
 8001784:	200130b8 	.word	0x200130b8

08001788 <LCD_Delay>:
  HAL_Delay(Delay);
 8001788:	f003 bfbe 	b.w	8005708 <HAL_Delay>

0800178c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800178c:	6802      	ldr	r2, [r0, #0]
 800178e:	4b03      	ldr	r3, [pc, #12]	; (800179c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001790:	429a      	cmp	r2, r3
 8001792:	d101      	bne.n	8001798 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001794:	f003 bfa6 	b.w	80056e4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001798:	4770      	bx	lr
 800179a:	bf00      	nop
 800179c:	40001000 	.word	0x40001000

080017a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80017a0:	4770      	bx	lr
	...

080017a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80017a4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017a6:	4b0e      	ldr	r3, [pc, #56]	; (80017e0 <HAL_MspInit+0x3c>)
 80017a8:	2200      	movs	r2, #0
 80017aa:	9200      	str	r2, [sp, #0]
 80017ac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80017ae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80017b2:	6459      	str	r1, [r3, #68]	; 0x44
 80017b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80017b6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80017ba:	9100      	str	r1, [sp, #0]
 80017bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017be:	9201      	str	r2, [sp, #4]
 80017c0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80017c2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80017c6:	6419      	str	r1, [r3, #64]	; 0x40
 80017c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80017ce:	9301      	str	r3, [sp, #4]
 80017d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80017d2:	210f      	movs	r1, #15
 80017d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80017d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80017da:	f004 b9f3 	b.w	8005bc4 <HAL_NVIC_SetPriority>
 80017de:	bf00      	nop
 80017e0:	40023800 	.word	0x40023800

080017e4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80017e4:	b510      	push	{r4, lr}
 80017e6:	4604      	mov	r4, r0
 80017e8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017ea:	2214      	movs	r2, #20
 80017ec:	2100      	movs	r1, #0
 80017ee:	a803      	add	r0, sp, #12
 80017f0:	f01b fc5c 	bl	801d0ac <memset>
  if(hadc->Instance==ADC1)
 80017f4:	6822      	ldr	r2, [r4, #0]
 80017f6:	4b12      	ldr	r3, [pc, #72]	; (8001840 <HAL_ADC_MspInit+0x5c>)
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d11f      	bne.n	800183c <HAL_ADC_MspInit+0x58>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80017fc:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001800:	2200      	movs	r2, #0
 8001802:	9201      	str	r2, [sp, #4]
 8001804:	6c59      	ldr	r1, [r3, #68]	; 0x44
    PA1     ------> ADC1_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001806:	480f      	ldr	r0, [pc, #60]	; (8001844 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001808:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 800180c:	6459      	str	r1, [r3, #68]	; 0x44
 800180e:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001810:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8001814:	9101      	str	r1, [sp, #4]
 8001816:	9901      	ldr	r1, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001818:	9202      	str	r2, [sp, #8]
 800181a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800181c:	f041 0101 	orr.w	r1, r1, #1
 8001820:	6319      	str	r1, [r3, #48]	; 0x30
 8001822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001824:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001826:	f003 0301 	and.w	r3, r3, #1
 800182a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800182c:	2102      	movs	r1, #2
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800182e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001830:	2303      	movs	r3, #3
 8001832:	e9cd 1303 	strd	r1, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001836:	a903      	add	r1, sp, #12
 8001838:	f004 fb10 	bl	8005e5c <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800183c:	b008      	add	sp, #32
 800183e:	bd10      	pop	{r4, pc}
 8001840:	40012000 	.word	0x40012000
 8001844:	40020000 	.word	0x40020000

08001848 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001848:	6802      	ldr	r2, [r0, #0]
 800184a:	4b09      	ldr	r3, [pc, #36]	; (8001870 <HAL_CRC_MspInit+0x28>)
 800184c:	429a      	cmp	r2, r3
{
 800184e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001850:	d10b      	bne.n	800186a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001852:	2300      	movs	r3, #0
 8001854:	9301      	str	r3, [sp, #4]
 8001856:	4b07      	ldr	r3, [pc, #28]	; (8001874 <HAL_CRC_MspInit+0x2c>)
 8001858:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800185a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800185e:	631a      	str	r2, [r3, #48]	; 0x30
 8001860:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001862:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001866:	9301      	str	r3, [sp, #4]
 8001868:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800186a:	b002      	add	sp, #8
 800186c:	4770      	bx	lr
 800186e:	bf00      	nop
 8001870:	40023000 	.word	0x40023000
 8001874:	40023800 	.word	0x40023800

08001878 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001878:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 800187a:	4b0f      	ldr	r3, [pc, #60]	; (80018b8 <HAL_DMA2D_MspInit+0x40>)
 800187c:	6802      	ldr	r2, [r0, #0]
 800187e:	429a      	cmp	r2, r3
 8001880:	d116      	bne.n	80018b0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001882:	2200      	movs	r2, #0
 8001884:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001888:	9201      	str	r2, [sp, #4]
 800188a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800188c:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001890:	6319      	str	r1, [r3, #48]	; 0x30
 8001892:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001894:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001898:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800189a:	2105      	movs	r1, #5
 800189c:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800189e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80018a0:	f004 f990 	bl	8005bc4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018a4:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80018a6:	b003      	add	sp, #12
 80018a8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018ac:	f004 b9bc 	b.w	8005c28 <HAL_NVIC_EnableIRQ>
}
 80018b0:	b003      	add	sp, #12
 80018b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80018b6:	bf00      	nop
 80018b8:	4002b000 	.word	0x4002b000

080018bc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80018bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80018c0:	4604      	mov	r4, r0
 80018c2:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018c4:	2214      	movs	r2, #20
 80018c6:	2100      	movs	r1, #0
 80018c8:	a803      	add	r0, sp, #12
 80018ca:	f01b fbef 	bl	801d0ac <memset>
  if(hi2c->Instance==I2C3)
 80018ce:	6822      	ldr	r2, [r4, #0]
 80018d0:	4b24      	ldr	r3, [pc, #144]	; (8001964 <HAL_I2C_MspInit+0xa8>)
 80018d2:	429a      	cmp	r2, r3
 80018d4:	d143      	bne.n	800195e <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018d6:	4c24      	ldr	r4, [pc, #144]	; (8001968 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018d8:	4824      	ldr	r0, [pc, #144]	; (800196c <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018da:	2500      	movs	r5, #0
 80018dc:	9500      	str	r5, [sp, #0]
 80018de:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018e0:	f043 0304 	orr.w	r3, r3, #4
 80018e4:	6323      	str	r3, [r4, #48]	; 0x30
 80018e6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018e8:	f003 0304 	and.w	r3, r3, #4
 80018ec:	9300      	str	r3, [sp, #0]
 80018ee:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018f0:	9501      	str	r5, [sp, #4]
 80018f2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018f4:	f043 0301 	orr.w	r3, r3, #1
 80018f8:	6323      	str	r3, [r4, #48]	; 0x30
 80018fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80018fc:	f003 0301 	and.w	r3, r3, #1
 8001900:	9301      	str	r3, [sp, #4]
 8001902:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001904:	f04f 0912 	mov.w	r9, #18
 8001908:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800190c:	f04f 0801 	mov.w	r8, #1
 8001910:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001912:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001914:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001916:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800191a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800191e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001920:	f004 fa9c 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001924:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001928:	4811      	ldr	r0, [pc, #68]	; (8001970 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800192a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800192c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800192e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001932:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001936:	f004 fa91 	bl	8005e5c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800193a:	9502      	str	r5, [sp, #8]
 800193c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800193e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001942:	6423      	str	r3, [r4, #64]	; 0x40
 8001944:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001946:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800194a:	9302      	str	r3, [sp, #8]
 800194c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800194e:	6a23      	ldr	r3, [r4, #32]
 8001950:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001954:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001956:	6a23      	ldr	r3, [r4, #32]
 8001958:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800195c:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800195e:	b009      	add	sp, #36	; 0x24
 8001960:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001964:	40005c00 	.word	0x40005c00
 8001968:	40023800 	.word	0x40023800
 800196c:	40020800 	.word	0x40020800
 8001970:	40020000 	.word	0x40020000

08001974 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001976:	b099      	sub	sp, #100	; 0x64
 8001978:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800197a:	2214      	movs	r2, #20
 800197c:	2100      	movs	r1, #0
 800197e:	a807      	add	r0, sp, #28
 8001980:	f01b fb94 	bl	801d0ac <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001984:	2230      	movs	r2, #48	; 0x30
 8001986:	eb0d 0002 	add.w	r0, sp, r2
 800198a:	2100      	movs	r1, #0
 800198c:	f01b fb8e 	bl	801d0ac <memset>
  if(hltdc->Instance==LTDC)
 8001990:	6822      	ldr	r2, [r4, #0]
 8001992:	4b5e      	ldr	r3, [pc, #376]	; (8001b0c <HAL_LTDC_MspInit+0x198>)
 8001994:	429a      	cmp	r2, r3
 8001996:	f040 80b7 	bne.w	8001b08 <HAL_LTDC_MspInit+0x194>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800199a:	2308      	movs	r3, #8
 800199c:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800199e:	23c0      	movs	r3, #192	; 0xc0
 80019a0:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80019a2:	2304      	movs	r3, #4
 80019a4:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019a6:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80019a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80019ac:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80019ae:	f005 fbe1 	bl	8007174 <HAL_RCCEx_PeriphCLKConfig>
 80019b2:	b108      	cbz	r0, 80019b8 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 80019b4:	f7ff fef4 	bl	80017a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019b8:	4b55      	ldr	r3, [pc, #340]	; (8001b10 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019ba:	4856      	ldr	r0, [pc, #344]	; (8001b14 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019bc:	2400      	movs	r4, #0
 80019be:	9400      	str	r4, [sp, #0]
 80019c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019c2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80019c6:	645a      	str	r2, [r3, #68]	; 0x44
 80019c8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019ca:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80019ce:	9200      	str	r2, [sp, #0]
 80019d0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80019d2:	9401      	str	r4, [sp, #4]
 80019d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019d6:	f042 0220 	orr.w	r2, r2, #32
 80019da:	631a      	str	r2, [r3, #48]	; 0x30
 80019dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019de:	f002 0220 	and.w	r2, r2, #32
 80019e2:	9201      	str	r2, [sp, #4]
 80019e4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019e6:	9402      	str	r4, [sp, #8]
 80019e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ea:	f042 0201 	orr.w	r2, r2, #1
 80019ee:	631a      	str	r2, [r3, #48]	; 0x30
 80019f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019f2:	f002 0201 	and.w	r2, r2, #1
 80019f6:	9202      	str	r2, [sp, #8]
 80019f8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80019fa:	9403      	str	r4, [sp, #12]
 80019fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fe:	f042 0202 	orr.w	r2, r2, #2
 8001a02:	631a      	str	r2, [r3, #48]	; 0x30
 8001a04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a06:	f002 0202 	and.w	r2, r2, #2
 8001a0a:	9203      	str	r2, [sp, #12]
 8001a0c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001a0e:	9404      	str	r4, [sp, #16]
 8001a10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a12:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001a16:	631a      	str	r2, [r3, #48]	; 0x30
 8001a18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a1a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001a1e:	9204      	str	r2, [sp, #16]
 8001a20:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a22:	9405      	str	r4, [sp, #20]
 8001a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a26:	f042 0204 	orr.w	r2, r2, #4
 8001a2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a2e:	f002 0204 	and.w	r2, r2, #4
 8001a32:	9205      	str	r2, [sp, #20]
 8001a34:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a36:	9406      	str	r4, [sp, #24]
 8001a38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a3a:	f042 0208 	orr.w	r2, r2, #8
 8001a3e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a42:	f003 0308 	and.w	r3, r3, #8
 8001a46:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a48:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a4a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a4c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a4e:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a50:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a54:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a56:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a5a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a5e:	f004 f9fd 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001a62:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a66:	482c      	ldr	r0, [pc, #176]	; (8001b18 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a68:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a6a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a6c:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a70:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a72:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a76:	f004 f9f1 	bl	8005e5c <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001a7a:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a7c:	4827      	ldr	r0, [pc, #156]	; (8001b1c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a7e:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a82:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a86:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a8a:	f004 f9e7 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001a8e:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a92:	4822      	ldr	r0, [pc, #136]	; (8001b1c <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a94:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a96:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a98:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a9c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aa0:	f004 f9dc 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001aa4:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa8:	481d      	ldr	r0, [pc, #116]	; (8001b20 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001aaa:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aae:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ab2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ab6:	f004 f9d1 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001abc:	4819      	ldr	r0, [pc, #100]	; (8001b24 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001abe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ac0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ac2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ac6:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001aca:	f004 f9c7 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ace:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ad0:	4815      	ldr	r0, [pc, #84]	; (8001b28 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ad2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ad4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ada:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ade:	f004 f9bd 	bl	8005e5c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001ae2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ae6:	480e      	ldr	r0, [pc, #56]	; (8001b20 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001ae8:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aec:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001af0:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001af4:	f004 f9b2 	bl	8005e5c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001af8:	2058      	movs	r0, #88	; 0x58
 8001afa:	4622      	mov	r2, r4
 8001afc:	2105      	movs	r1, #5
 8001afe:	f004 f861 	bl	8005bc4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001b02:	2058      	movs	r0, #88	; 0x58
 8001b04:	f004 f890 	bl	8005c28 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001b08:	b019      	add	sp, #100	; 0x64
 8001b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b0c:	40016800 	.word	0x40016800
 8001b10:	40023800 	.word	0x40023800
 8001b14:	40021400 	.word	0x40021400
 8001b18:	40020000 	.word	0x40020000
 8001b1c:	40020400 	.word	0x40020400
 8001b20:	40021800 	.word	0x40021800
 8001b24:	40020800 	.word	0x40020800
 8001b28:	40020c00 	.word	0x40020c00

08001b2c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001b2c:	b510      	push	{r4, lr}
 8001b2e:	4604      	mov	r4, r0
 8001b30:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b32:	2214      	movs	r2, #20
 8001b34:	2100      	movs	r1, #0
 8001b36:	a803      	add	r0, sp, #12
 8001b38:	f01b fab8 	bl	801d0ac <memset>
  if(hspi->Instance==SPI5)
 8001b3c:	6822      	ldr	r2, [r4, #0]
 8001b3e:	4b15      	ldr	r3, [pc, #84]	; (8001b94 <HAL_SPI_MspInit+0x68>)
 8001b40:	429a      	cmp	r2, r3
 8001b42:	d124      	bne.n	8001b8e <HAL_SPI_MspInit+0x62>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b44:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001b48:	2200      	movs	r2, #0
 8001b4a:	9201      	str	r2, [sp, #4]
 8001b4c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b4e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8001b52:	6459      	str	r1, [r3, #68]	; 0x44
 8001b54:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b56:	f401 1180 	and.w	r1, r1, #1048576	; 0x100000
 8001b5a:	9101      	str	r1, [sp, #4]
 8001b5c:	9901      	ldr	r1, [sp, #4]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b5e:	9202      	str	r2, [sp, #8]
 8001b60:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b62:	f041 0120 	orr.w	r1, r1, #32
 8001b66:	6319      	str	r1, [r3, #48]	; 0x30
 8001b68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b6a:	9205      	str	r2, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b6c:	f003 0320 	and.w	r3, r3, #32
 8001b70:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b72:	f44f 7160 	mov.w	r1, #896	; 0x380
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b76:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b78:	2302      	movs	r3, #2
 8001b7a:	e9cd 1303 	strd	r1, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001b7e:	2003      	movs	r0, #3
 8001b80:	2305      	movs	r3, #5
 8001b82:	e9cd 0306 	strd	r0, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b86:	a903      	add	r1, sp, #12
 8001b88:	4803      	ldr	r0, [pc, #12]	; (8001b98 <HAL_SPI_MspInit+0x6c>)
 8001b8a:	f004 f967 	bl	8005e5c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001b8e:	b008      	add	sp, #32
 8001b90:	bd10      	pop	{r4, pc}
 8001b92:	bf00      	nop
 8001b94:	40015000 	.word	0x40015000
 8001b98:	40021400 	.word	0x40021400

08001b9c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (FMC_Initialized) {
 8001ba0:	4b2c      	ldr	r3, [pc, #176]	; (8001c54 <HAL_SDRAM_MspInit+0xb8>)
 8001ba2:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001ba4:	b086      	sub	sp, #24
  if (FMC_Initialized) {
 8001ba6:	2c00      	cmp	r4, #0
 8001ba8:	d150      	bne.n	8001c4c <HAL_SDRAM_MspInit+0xb0>
  FMC_Initialized = 1;
 8001baa:	f04f 0801 	mov.w	r8, #1
 8001bae:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001bb2:	4b29      	ldr	r3, [pc, #164]	; (8001c58 <HAL_SDRAM_MspInit+0xbc>)
 8001bb4:	9400      	str	r4, [sp, #0]
 8001bb6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bb8:	4828      	ldr	r0, [pc, #160]	; (8001c5c <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001bba:	ea42 0208 	orr.w	r2, r2, r8
 8001bbe:	639a      	str	r2, [r3, #56]	; 0x38
 8001bc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bc2:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001bc4:	ea03 0308 	and.w	r3, r3, r8
 8001bc8:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bca:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bcc:	2603      	movs	r6, #3
 8001bce:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001bd0:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bd2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bd4:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001bd8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bdc:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be0:	f004 f93c 	bl	8005e5c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001be4:	481e      	ldr	r0, [pc, #120]	; (8001c60 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001be6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001be8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bea:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bf2:	f004 f933 	bl	8005e5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001bf6:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bfa:	481a      	ldr	r0, [pc, #104]	; (8001c64 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bfc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bfe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c00:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c04:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c08:	f004 f928 	bl	8005e5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001c0c:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c10:	4815      	ldr	r0, [pc, #84]	; (8001c68 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c12:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c14:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c16:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c1a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c1e:	f004 f91d 	bl	8005e5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001c22:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c26:	4811      	ldr	r0, [pc, #68]	; (8001c6c <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c28:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c2a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c30:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c34:	f004 f912 	bl	8005e5c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001c38:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3a:	480d      	ldr	r0, [pc, #52]	; (8001c70 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c3c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c40:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c44:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c48:	f004 f908 	bl	8005e5c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001c4c:	b006      	add	sp, #24
 8001c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c52:	bf00      	nop
 8001c54:	20001ed8 	.word	0x20001ed8
 8001c58:	40023800 	.word	0x40023800
 8001c5c:	40021400 	.word	0x40021400
 8001c60:	40020800 	.word	0x40020800
 8001c64:	40021800 	.word	0x40021800
 8001c68:	40021000 	.word	0x40021000
 8001c6c:	40020c00 	.word	0x40020c00
 8001c70:	40020400 	.word	0x40020400

08001c74 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001c74:	b530      	push	{r4, r5, lr}
 8001c76:	4601      	mov	r1, r0
 8001c78:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	2036      	movs	r0, #54	; 0x36
 8001c7e:	f003 ffa1 	bl	8005bc4 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001c82:	2036      	movs	r0, #54	; 0x36
 8001c84:	f003 ffd0 	bl	8005c28 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c88:	2500      	movs	r5, #0
 8001c8a:	4b15      	ldr	r3, [pc, #84]	; (8001ce0 <HAL_InitTick+0x6c>)
 8001c8c:	9502      	str	r5, [sp, #8]
 8001c8e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001c90:	4c14      	ldr	r4, [pc, #80]	; (8001ce4 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c92:	f042 0210 	orr.w	r2, r2, #16
 8001c96:	641a      	str	r2, [r3, #64]	; 0x40
 8001c98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c9a:	f003 0310 	and.w	r3, r3, #16
 8001c9e:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ca0:	a901      	add	r1, sp, #4
 8001ca2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ca4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ca6:	f005 fa47 	bl	8007138 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001caa:	f005 fa35 	bl	8007118 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001cae:	4b0e      	ldr	r3, [pc, #56]	; (8001ce8 <HAL_InitTick+0x74>)
 8001cb0:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001cb2:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001cb6:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001cb8:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001cba:	4b0c      	ldr	r3, [pc, #48]	; (8001cec <HAL_InitTick+0x78>)
 8001cbc:	fbb0 f0f3 	udiv	r0, r0, r3
 8001cc0:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001cc2:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001cc4:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001cc6:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001cc8:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001cca:	f006 f84d 	bl	8007d68 <HAL_TIM_Base_Init>
 8001cce:	b920      	cbnz	r0, 8001cda <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001cd0:	4620      	mov	r0, r4
 8001cd2:	f005 ff03 	bl	8007adc <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001cd6:	b009      	add	sp, #36	; 0x24
 8001cd8:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001cda:	2001      	movs	r0, #1
 8001cdc:	e7fb      	b.n	8001cd6 <HAL_InitTick+0x62>
 8001cde:	bf00      	nop
 8001ce0:	40023800 	.word	0x40023800
 8001ce4:	20013280 	.word	0x20013280
 8001ce8:	40001000 	.word	0x40001000
 8001cec:	000f4240 	.word	0x000f4240

08001cf0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001cf0:	4770      	bx	lr

08001cf2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001cf2:	e7fe      	b.n	8001cf2 <HardFault_Handler>

08001cf4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001cf4:	e7fe      	b.n	8001cf4 <MemManage_Handler>

08001cf6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001cf6:	e7fe      	b.n	8001cf6 <BusFault_Handler>

08001cf8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001cf8:	e7fe      	b.n	8001cf8 <UsageFault_Handler>

08001cfa <DebugMon_Handler>:
 8001cfa:	4770      	bx	lr

08001cfc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001cfc:	4801      	ldr	r0, [pc, #4]	; (8001d04 <TIM6_DAC_IRQHandler+0x8>)
 8001cfe:	f005 bf2b 	b.w	8007b58 <HAL_TIM_IRQHandler>
 8001d02:	bf00      	nop
 8001d04:	20013280 	.word	0x20013280

08001d08 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001d08:	4801      	ldr	r0, [pc, #4]	; (8001d10 <LTDC_IRQHandler+0x8>)
 8001d0a:	f004 bee7 	b.w	8006adc <HAL_LTDC_IRQHandler>
 8001d0e:	bf00      	nop
 8001d10:	20013118 	.word	0x20013118

08001d14 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001d14:	4801      	ldr	r0, [pc, #4]	; (8001d1c <DMA2D_IRQHandler+0x8>)
 8001d16:	f003 bfd3 	b.w	8005cc0 <HAL_DMA2D_IRQHandler>
 8001d1a:	bf00      	nop
 8001d1c:	2001320c 	.word	0x2001320c

08001d20 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001d20:	2001      	movs	r0, #1
 8001d22:	4770      	bx	lr

08001d24 <_kill>:

int _kill(int pid, int sig)
{
 8001d24:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d26:	f01b f86d 	bl	801ce04 <__errno>
 8001d2a:	2316      	movs	r3, #22
 8001d2c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001d2e:	f04f 30ff 	mov.w	r0, #4294967295
 8001d32:	bd08      	pop	{r3, pc}

08001d34 <_exit>:

void _exit (int status)
{
 8001d34:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d36:	f01b f865 	bl	801ce04 <__errno>
 8001d3a:	2316      	movs	r3, #22
 8001d3c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001d3e:	e7fe      	b.n	8001d3e <_exit+0xa>

08001d40 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001d40:	b570      	push	{r4, r5, r6, lr}
 8001d42:	460e      	mov	r6, r1
 8001d44:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d46:	2500      	movs	r5, #0
 8001d48:	42a5      	cmp	r5, r4
 8001d4a:	db01      	blt.n	8001d50 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001d4c:	4620      	mov	r0, r4
 8001d4e:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001d50:	f3af 8000 	nop.w
 8001d54:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d56:	3501      	adds	r5, #1
 8001d58:	e7f6      	b.n	8001d48 <_read+0x8>

08001d5a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001d5a:	b570      	push	{r4, r5, r6, lr}
 8001d5c:	460e      	mov	r6, r1
 8001d5e:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d60:	2500      	movs	r5, #0
 8001d62:	42a5      	cmp	r5, r4
 8001d64:	db01      	blt.n	8001d6a <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001d66:	4620      	mov	r0, r4
 8001d68:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001d6a:	5d70      	ldrb	r0, [r6, r5]
 8001d6c:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d70:	3501      	adds	r5, #1
 8001d72:	e7f6      	b.n	8001d62 <_write+0x8>

08001d74 <_close>:

int _close(int file)
{
	return -1;
}
 8001d74:	f04f 30ff 	mov.w	r0, #4294967295
 8001d78:	4770      	bx	lr

08001d7a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001d7a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001d7e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001d80:	2000      	movs	r0, #0
 8001d82:	4770      	bx	lr

08001d84 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001d84:	2001      	movs	r0, #1
 8001d86:	4770      	bx	lr

08001d88 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001d88:	2000      	movs	r0, #0
 8001d8a:	4770      	bx	lr

08001d8c <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001d8c:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001d8e:	4b0a      	ldr	r3, [pc, #40]	; (8001db8 <_sbrk+0x2c>)
 8001d90:	6819      	ldr	r1, [r3, #0]
{
 8001d92:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001d94:	b909      	cbnz	r1, 8001d9a <_sbrk+0xe>
		heap_end = &end;
 8001d96:	4909      	ldr	r1, [pc, #36]	; (8001dbc <_sbrk+0x30>)
 8001d98:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001d9a:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001d9c:	4669      	mov	r1, sp
 8001d9e:	4402      	add	r2, r0
 8001da0:	428a      	cmp	r2, r1
 8001da2:	d906      	bls.n	8001db2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001da4:	f01b f82e 	bl	801ce04 <__errno>
 8001da8:	230c      	movs	r3, #12
 8001daa:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001dac:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001db0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001db2:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001db4:	e7fc      	b.n	8001db0 <_sbrk+0x24>
 8001db6:	bf00      	nop
 8001db8:	20001edc 	.word	0x20001edc
 8001dbc:	20013320 	.word	0x20013320

08001dc0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId CALCULATION_AREA = 3; // ariblk_25_4bpp
    static const touchgfx::FontId SIGN_AREA = 4;        // ariblk_15_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001dc0:	4770      	bx	lr

08001dc2 <_ZN23ApplicationFontProviderD0Ev>:
 8001dc2:	b510      	push	{r4, lr}
 8001dc4:	2104      	movs	r1, #4
 8001dc6:	4604      	mov	r4, r0
 8001dc8:	f01a ffb8 	bl	801cd3c <_ZdlPvj>
 8001dcc:	4620      	mov	r0, r4
 8001dce:	bd10      	pop	{r4, pc}

08001dd0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8001dd0:	b508      	push	{r3, lr}
 8001dd2:	2905      	cmp	r1, #5
 8001dd4:	d818      	bhi.n	8001e08 <_ZN23ApplicationFontProvider7getFontEt+0x38>
 8001dd6:	e8df f001 	tbb	[pc, r1]
 8001dda:	0703      	.short	0x0703
 8001ddc:	130f0f0b 	.word	0x130f0f0b
    switch (typography)
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001de0:	f002 fc66 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8001de4:	6800      	ldr	r0, [r0, #0]
        // ariblk_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 8001de6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001de8:	f002 fc62 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8001dec:	6840      	ldr	r0, [r0, #4]
 8001dee:	e7fa      	b.n	8001de6 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001df0:	f002 fc5e 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8001df4:	6880      	ldr	r0, [r0, #8]
 8001df6:	e7f6      	b.n	8001de6 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8001df8:	f002 fc5a 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8001dfc:	68c0      	ldr	r0, [r0, #12]
 8001dfe:	e7f2      	b.n	8001de6 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8001e00:	f002 fc56 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8001e04:	6900      	ldr	r0, [r0, #16]
 8001e06:	e7ee      	b.n	8001de6 <_ZN23ApplicationFontProvider7getFontEt+0x16>
{
 8001e08:	2000      	movs	r0, #0
 8001e0a:	e7ec      	b.n	8001de6 <_ZN23ApplicationFontProvider7getFontEt+0x16>

08001e0c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001e0c:	4800      	ldr	r0, [pc, #0]	; (8001e10 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001e0e:	4770      	bx	lr
 8001e10:	0801e65c 	.word	0x0801e65c

08001e14 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001e14:	200f      	movs	r0, #15
 8001e16:	4770      	bx	lr

08001e18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001e18:	b513      	push	{r0, r1, r4, lr}
 8001e1a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001e1c:	b151      	cbz	r1, 8001e34 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001e1e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001e20:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001e22:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001e26:	aa01      	add	r2, sp, #4
 8001e28:	689c      	ldr	r4, [r3, #8]
 8001e2a:	f10d 0303 	add.w	r3, sp, #3
 8001e2e:	47a0      	blx	r4
        return glyph;
    }
 8001e30:	b002      	add	sp, #8
 8001e32:	bd10      	pop	{r4, pc}
            return 0;
 8001e34:	4608      	mov	r0, r1
 8001e36:	e7fb      	b.n	8001e30 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001e38 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001e38:	8940      	ldrh	r0, [r0, #10]
 8001e3a:	4770      	bx	lr

08001e3c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001e3c:	8980      	ldrh	r0, [r0, #12]
 8001e3e:	4770      	bx	lr

08001e40 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001e40:	8880      	ldrh	r0, [r0, #4]
 8001e42:	4770      	bx	lr

08001e44 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001e44:	7983      	ldrb	r3, [r0, #6]
 8001e46:	8880      	ldrh	r0, [r0, #4]
 8001e48:	4418      	add	r0, r3
    }
 8001e4a:	b280      	uxth	r0, r0
 8001e4c:	4770      	bx	lr

08001e4e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001e4e:	79c0      	ldrb	r0, [r0, #7]
    }
 8001e50:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001e54:	4770      	bx	lr

08001e56 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001e56:	79c0      	ldrb	r0, [r0, #7]
    }
 8001e58:	09c0      	lsrs	r0, r0, #7
 8001e5a:	4770      	bx	lr

08001e5c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001e5c:	4770      	bx	lr

08001e5e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001e5e:	b510      	push	{r4, lr}
    }
 8001e60:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001e62:	4604      	mov	r4, r0
    }
 8001e64:	f01a ff6a 	bl	801cd3c <_ZdlPvj>
 8001e68:	4620      	mov	r0, r4
 8001e6a:	bd10      	pop	{r4, pc}

08001e6c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8001e6c:	4770      	bx	lr

08001e6e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001e6e:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8001e72:	6808      	ldr	r0, [r1, #0]
 8001e74:	6849      	ldr	r1, [r1, #4]
 8001e76:	c303      	stmia	r3!, {r0, r1}
    }
 8001e78:	4770      	bx	lr

08001e7a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001e7a:	4770      	bx	lr

08001e7c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001e7c:	4770      	bx	lr

08001e7e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001e7e:	6041      	str	r1, [r0, #4]
    }
 8001e80:	4770      	bx	lr

08001e82 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001e82:	4770      	bx	lr

08001e84 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001e84:	2301      	movs	r3, #1
 8001e86:	7203      	strb	r3, [r0, #8]
    }
 8001e88:	4770      	bx	lr

08001e8a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001e8a:	4770      	bx	lr

08001e8c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001e8c:	4770      	bx	lr

08001e8e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001e8e:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8001e90:	68c2      	ldr	r2, [r0, #12]
 8001e92:	6841      	ldr	r1, [r0, #4]
 8001e94:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8001e96:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8001e98:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8001e9c:	07d2      	lsls	r2, r2, #31
 8001e9e:	bf48      	it	mi
 8001ea0:	590a      	ldrmi	r2, [r1, r4]
 8001ea2:	689b      	ldr	r3, [r3, #8]
    }
 8001ea4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8001ea8:	bf48      	it	mi
 8001eaa:	58d3      	ldrmi	r3, [r2, r3]
 8001eac:	4718      	bx	r3

08001eae <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8001eae:	6843      	ldr	r3, [r0, #4]
 8001eb0:	b12b      	cbz	r3, 8001ebe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8001eb2:	6883      	ldr	r3, [r0, #8]
 8001eb4:	b92b      	cbnz	r3, 8001ec2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001eb6:	68c0      	ldr	r0, [r0, #12]
 8001eb8:	f000 0001 	and.w	r0, r0, #1
 8001ebc:	4770      	bx	lr
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	4770      	bx	lr
 8001ec2:	2001      	movs	r0, #1
    }
 8001ec4:	4770      	bx	lr

08001ec6 <_ZN8touchgfx12NoTransitionD0Ev>:
 8001ec6:	b510      	push	{r4, lr}
 8001ec8:	210c      	movs	r1, #12
 8001eca:	4604      	mov	r4, r0
 8001ecc:	f01a ff36 	bl	801cd3c <_ZdlPvj>
 8001ed0:	4620      	mov	r0, r4
 8001ed2:	bd10      	pop	{r4, pc}

08001ed4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	2110      	movs	r1, #16
 8001ed8:	4604      	mov	r4, r0
 8001eda:	f01a ff2f 	bl	801cd3c <_ZdlPvj>
 8001ede:	4620      	mov	r0, r4
 8001ee0:	bd10      	pop	{r4, pc}

08001ee2 <_ZN23FrontendApplicationBaseD0Ev>:
 8001ee2:	b510      	push	{r4, lr}
 8001ee4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8001ee8:	4604      	mov	r4, r0
 8001eea:	f01a ff27 	bl	801cd3c <_ZdlPvj>
 8001eee:	4620      	mov	r0, r4
 8001ef0:	bd10      	pop	{r4, pc}

08001ef2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8001ef2:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8001ef4:	f00c f810 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 8001ef8:	6803      	ldr	r3, [r0, #0]
    }
 8001efa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8001efe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f00:	4718      	bx	r3

08001f02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8001f02:	b510      	push	{r4, lr}
 8001f04:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8001f06:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8001f0a:	b158      	cbz	r0, 8001f24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8001f0c:	6803      	ldr	r3, [r0, #0]
 8001f0e:	68db      	ldr	r3, [r3, #12]
 8001f10:	4798      	blx	r3
 8001f12:	b138      	cbz	r0, 8001f24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8001f14:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8001f18:	6803      	ldr	r3, [r0, #0]
 8001f1a:	689b      	ldr	r3, [r3, #8]
 8001f1c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8001f1e:	2300      	movs	r3, #0
 8001f20:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8001f24:	bd10      	pop	{r4, pc}
	...

08001f28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen4_screen/Screen4View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8001f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001f2a:	4604      	mov	r4, r0
 8001f2c:	4617      	mov	r7, r2
 8001f2e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8001f30:	f00c f812 	bl	800df58 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8001f34:	4b10      	ldr	r3, [pc, #64]	; (8001f78 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8001f36:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8001f38:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8001f3c:	4e0f      	ldr	r6, [pc, #60]	; (8001f7c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8001f3e:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8001f40:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8001f44:	4b0e      	ldr	r3, [pc, #56]	; (8001f80 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8001f46:	6830      	ldr	r0, [r6, #0]
 8001f48:	6023      	str	r3, [r4, #0]
 8001f4a:	4b0e      	ldr	r3, [pc, #56]	; (8001f84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8001f4c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8001f50:	6803      	ldr	r3, [r0, #0]
 8001f52:	2101      	movs	r1, #1
 8001f54:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8001f56:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8001f5a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8001f5c:	4628      	mov	r0, r5
 8001f5e:	f002 fb5b 	bl	8004618 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001f62:	6833      	ldr	r3, [r6, #0]
 8001f64:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8001f68:	b10a      	cbz	r2, 8001f6e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8001f6a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001f6c:	b900      	cbnz	r0, 8001f70 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8001f6e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8001f70:	f013 fdc9 	bl	8015b06 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8001f74:	4620      	mov	r0, r4
 8001f76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f78:	20012e10 	.word	0x20012e10
 8001f7c:	20012dc4 	.word	0x20012dc4
 8001f80:	0801ede4 	.word	0x0801ede4
 8001f84:	0801edcc 	.word	0x0801edcc

08001f88 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f88:	4b06      	ldr	r3, [pc, #24]	; (8001fa4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8001f8a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001f8e:	2300      	movs	r3, #0
 8001f90:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f94:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001f98:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001f9c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8001fa0:	4770      	bx	lr
 8001fa2:	bf00      	nop
 8001fa4:	0800214d 	.word	0x0800214d

08001fa8 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8001fa8:	4b06      	ldr	r3, [pc, #24]	; (8001fc4 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8001faa:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001fae:	2300      	movs	r3, #0
 8001fb0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001fb4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001fb8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001fbc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8001fc0:	4770      	bx	lr
 8001fc2:	bf00      	nop
 8001fc4:	080022b1 	.word	0x080022b1

08001fc8 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>:
 8001fc8:	4b06      	ldr	r3, [pc, #24]	; (8001fe4 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv+0x1c>)
 8001fca:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001fce:	2300      	movs	r3, #0
 8001fd0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen3ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001fd4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001fd8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001fdc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8001fe0:	4770      	bx	lr
 8001fe2:	bf00      	nop
 8001fe4:	08002415 	.word	0x08002415

08001fe8 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>:
 8001fe8:	4b06      	ldr	r3, [pc, #24]	; (8002004 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv+0x1c>)
 8001fea:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001fee:	2300      	movs	r3, #0
 8001ff0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen4

void FrontendApplicationBase::gotoScreen4ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen4ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001ff4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001ff8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001ffc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002000:	4770      	bx	lr
 8002002:	bf00      	nop
 8002004:	0800257d 	.word	0x0800257d

08002008 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002008:	6803      	ldr	r3, [r0, #0]
 800200a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800200c:	4718      	bx	r3
	...

08002010 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002010:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002014:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002016:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002018:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 800201c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800201e:	6803      	ldr	r3, [r0, #0]
 8002020:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002022:	4688      	mov	r8, r1
 8002024:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002026:	4798      	blx	r3
 8002028:	f5b0 7fc8 	cmp.w	r0, #400	; 0x190
 800202c:	d205      	bcs.n	800203a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 800202e:	4b41      	ldr	r3, [pc, #260]	; (8002134 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 8002030:	4a41      	ldr	r2, [pc, #260]	; (8002138 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002032:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002034:	4841      	ldr	r0, [pc, #260]	; (800213c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002036:	f01a feaf 	bl	801cd98 <__assert_func>
 800203a:	6860      	ldr	r0, [r4, #4]
 800203c:	6803      	ldr	r3, [r0, #0]
 800203e:	6a1b      	ldr	r3, [r3, #32]
 8002040:	4798      	blx	r3
 8002042:	280f      	cmp	r0, #15
 8002044:	d803      	bhi.n	800204e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 8002046:	4b3e      	ldr	r3, [pc, #248]	; (8002140 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002048:	4a3b      	ldr	r2, [pc, #236]	; (8002138 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800204a:	21a4      	movs	r1, #164	; 0xa4
 800204c:	e7f2      	b.n	8002034 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800204e:	68e0      	ldr	r0, [r4, #12]
 8002050:	6803      	ldr	r3, [r0, #0]
 8002052:	6a1b      	ldr	r3, [r3, #32]
 8002054:	4798      	blx	r3
 8002056:	280b      	cmp	r0, #11
 8002058:	d803      	bhi.n	8002062 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 800205a:	4b3a      	ldr	r3, [pc, #232]	; (8002144 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800205c:	4a36      	ldr	r2, [pc, #216]	; (8002138 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800205e:	21a5      	movs	r1, #165	; 0xa5
 8002060:	e7e8      	b.n	8002034 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 8002062:	f00b ff59 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 8002066:	f00b ff5d 	bl	800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800206a:	f8d9 0000 	ldr.w	r0, [r9]
 800206e:	b110      	cbz	r0, 8002076 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8002070:	6803      	ldr	r3, [r0, #0]
 8002072:	68db      	ldr	r3, [r3, #12]
 8002074:	4798      	blx	r3
    if (*currentTrans)
 8002076:	f8d9 0000 	ldr.w	r0, [r9]
 800207a:	b110      	cbz	r0, 8002082 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 800207c:	6803      	ldr	r3, [r0, #0]
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	4798      	blx	r3
    if (*currentScreen)
 8002082:	6838      	ldr	r0, [r7, #0]
 8002084:	b110      	cbz	r0, 800208c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 8002086:	6803      	ldr	r3, [r0, #0]
 8002088:	695b      	ldr	r3, [r3, #20]
 800208a:	4798      	blx	r3
    if (*currentPresenter)
 800208c:	f8d8 0000 	ldr.w	r0, [r8]
 8002090:	b110      	cbz	r0, 8002098 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8002092:	6803      	ldr	r3, [r0, #0]
 8002094:	685b      	ldr	r3, [r3, #4]
 8002096:	4798      	blx	r3
    if (*currentScreen)
 8002098:	6838      	ldr	r0, [r7, #0]
 800209a:	b110      	cbz	r0, 80020a2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 800209c:	6803      	ldr	r3, [r0, #0]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4798      	blx	r3
    if (*currentPresenter)
 80020a2:	f8d8 0000 	ldr.w	r0, [r8]
 80020a6:	b110      	cbz	r0, 80020ae <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 80020a8:	6803      	ldr	r3, [r0, #0]
 80020aa:	689b      	ldr	r3, [r3, #8]
 80020ac:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80020ae:	68e0      	ldr	r0, [r4, #12]
 80020b0:	2100      	movs	r1, #0
 80020b2:	f7ff ffa9 	bl	8002008 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
        : screenContainer(0), done(false)
 80020b6:	f04f 0b00 	mov.w	fp, #0
 80020ba:	4b23      	ldr	r3, [pc, #140]	; (8002148 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80020bc:	6003      	str	r3, [r0, #0]
 80020be:	4605      	mov	r5, r0
 80020c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80020c4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80020c8:	68a0      	ldr	r0, [r4, #8]
 80020ca:	6803      	ldr	r3, [r0, #0]
 80020cc:	4659      	mov	r1, fp
 80020ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020d0:	4798      	blx	r3
 80020d2:	4606      	mov	r6, r0
 80020d4:	f002 fbbc 	bl	8004850 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80020d8:	6860      	ldr	r0, [r4, #4]
 80020da:	6803      	ldr	r3, [r0, #0]
 80020dc:	4659      	mov	r1, fp
 80020de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020e0:	4798      	blx	r3
 80020e2:	4631      	mov	r1, r6
 80020e4:	4604      	mov	r4, r0
 80020e6:	f002 fb5d 	bl	80047a4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80020ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80020ee:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80020f2:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80020f4:	b1e4      	cbz	r4, 8002130 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 80020f6:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80020f8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80020fc:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80020fe:	f8c4 a008 	str.w	sl, [r4, #8]
 8002102:	4630      	mov	r0, r6
 8002104:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002106:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002108:	4798      	blx	r3
    newPresenter->activate();
 800210a:	6823      	ldr	r3, [r4, #0]
 800210c:	4620      	mov	r0, r4
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002112:	4629      	mov	r1, r5
 8002114:	4630      	mov	r0, r6
 8002116:	f00d fb56 	bl	800f7c6 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800211a:	682b      	ldr	r3, [r5, #0]
 800211c:	4628      	mov	r0, r5
 800211e:	691b      	ldr	r3, [r3, #16]
 8002120:	4798      	blx	r3
    newTransition->invalidate();
 8002122:	682b      	ldr	r3, [r5, #0]
 8002124:	4628      	mov	r0, r5
 8002126:	695b      	ldr	r3, [r3, #20]
 8002128:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 800212a:	4620      	mov	r0, r4
 800212c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002130:	4623      	mov	r3, r4
 8002132:	e7e1      	b.n	80020f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 8002134:	0801e798 	.word	0x0801e798
 8002138:	0801e826 	.word	0x0801e826
 800213c:	0801e92a 	.word	0x0801e92a
 8002140:	0801e971 	.word	0x0801e971
 8002144:	0801ea14 	.word	0x0801ea14
 8002148:	0801ee28 	.word	0x0801ee28

0800214c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 800214c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800214e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002152:	9300      	str	r3, [sp, #0]
 8002154:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002158:	4b04      	ldr	r3, [pc, #16]	; (800216c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 800215a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800215e:	4804      	ldr	r0, [pc, #16]	; (8002170 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8002160:	f7ff ff56 	bl	8002010 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002164:	b003      	add	sp, #12
 8002166:	f85d fb04 	ldr.w	pc, [sp], #4
 800216a:	bf00      	nop
 800216c:	20012e04 	.word	0x20012e04
 8002170:	20012e00 	.word	0x20012e00

08002174 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002174:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002178:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800217a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800217c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002180:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002182:	6803      	ldr	r3, [r0, #0]
 8002184:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002186:	4688      	mov	r8, r1
 8002188:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800218a:	4798      	blx	r3
 800218c:	f5b0 7f2b 	cmp.w	r0, #684	; 0x2ac
 8002190:	d205      	bcs.n	800219e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8002192:	4b41      	ldr	r3, [pc, #260]	; (8002298 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 8002194:	4a41      	ldr	r2, [pc, #260]	; (800229c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002196:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002198:	4841      	ldr	r0, [pc, #260]	; (80022a0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800219a:	f01a fdfd 	bl	801cd98 <__assert_func>
 800219e:	6860      	ldr	r0, [r4, #4]
 80021a0:	6803      	ldr	r3, [r0, #0]
 80021a2:	6a1b      	ldr	r3, [r3, #32]
 80021a4:	4798      	blx	r3
 80021a6:	280f      	cmp	r0, #15
 80021a8:	d803      	bhi.n	80021b2 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 80021aa:	4b3e      	ldr	r3, [pc, #248]	; (80022a4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80021ac:	4a3b      	ldr	r2, [pc, #236]	; (800229c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80021ae:	21a4      	movs	r1, #164	; 0xa4
 80021b0:	e7f2      	b.n	8002198 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021b2:	68e0      	ldr	r0, [r4, #12]
 80021b4:	6803      	ldr	r3, [r0, #0]
 80021b6:	6a1b      	ldr	r3, [r3, #32]
 80021b8:	4798      	blx	r3
 80021ba:	280b      	cmp	r0, #11
 80021bc:	d803      	bhi.n	80021c6 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80021be:	4b3a      	ldr	r3, [pc, #232]	; (80022a8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80021c0:	4a36      	ldr	r2, [pc, #216]	; (800229c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80021c2:	21a5      	movs	r1, #165	; 0xa5
 80021c4:	e7e8      	b.n	8002198 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80021c6:	f00b fea7 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 80021ca:	f00b feab 	bl	800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021ce:	f8d9 0000 	ldr.w	r0, [r9]
 80021d2:	b110      	cbz	r0, 80021da <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80021d4:	6803      	ldr	r3, [r0, #0]
 80021d6:	68db      	ldr	r3, [r3, #12]
 80021d8:	4798      	blx	r3
    if (*currentTrans)
 80021da:	f8d9 0000 	ldr.w	r0, [r9]
 80021de:	b110      	cbz	r0, 80021e6 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 80021e0:	6803      	ldr	r3, [r0, #0]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	4798      	blx	r3
    if (*currentScreen)
 80021e6:	6838      	ldr	r0, [r7, #0]
 80021e8:	b110      	cbz	r0, 80021f0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 80021ea:	6803      	ldr	r3, [r0, #0]
 80021ec:	695b      	ldr	r3, [r3, #20]
 80021ee:	4798      	blx	r3
    if (*currentPresenter)
 80021f0:	f8d8 0000 	ldr.w	r0, [r8]
 80021f4:	b110      	cbz	r0, 80021fc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 80021f6:	6803      	ldr	r3, [r0, #0]
 80021f8:	685b      	ldr	r3, [r3, #4]
 80021fa:	4798      	blx	r3
    if (*currentScreen)
 80021fc:	6838      	ldr	r0, [r7, #0]
 80021fe:	b110      	cbz	r0, 8002206 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8002200:	6803      	ldr	r3, [r0, #0]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	4798      	blx	r3
    if (*currentPresenter)
 8002206:	f8d8 0000 	ldr.w	r0, [r8]
 800220a:	b110      	cbz	r0, 8002212 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 800220c:	6803      	ldr	r3, [r0, #0]
 800220e:	689b      	ldr	r3, [r3, #8]
 8002210:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002212:	68e0      	ldr	r0, [r4, #12]
 8002214:	2100      	movs	r1, #0
 8002216:	f7ff fef7 	bl	8002008 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800221a:	f04f 0b00 	mov.w	fp, #0
 800221e:	4b23      	ldr	r3, [pc, #140]	; (80022ac <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002220:	6003      	str	r3, [r0, #0]
 8002222:	4605      	mov	r5, r0
 8002224:	f8c0 b004 	str.w	fp, [r0, #4]
 8002228:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800222c:	68a0      	ldr	r0, [r4, #8]
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	4659      	mov	r1, fp
 8002232:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002234:	4798      	blx	r3
 8002236:	4606      	mov	r6, r0
 8002238:	f002 fb6c 	bl	8004914 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800223c:	6860      	ldr	r0, [r4, #4]
 800223e:	6803      	ldr	r3, [r0, #0]
 8002240:	4659      	mov	r1, fp
 8002242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002244:	4798      	blx	r3
 8002246:	4631      	mov	r1, r6
 8002248:	4604      	mov	r4, r0
 800224a:	f002 fb19 	bl	8004880 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 800224e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002252:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002256:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002258:	b1e4      	cbz	r4, 8002294 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 800225a:	1d23      	adds	r3, r4, #4
 800225c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002260:	6833      	ldr	r3, [r6, #0]
 8002262:	f8c4 a008 	str.w	sl, [r4, #8]
 8002266:	4630      	mov	r0, r6
 8002268:	68db      	ldr	r3, [r3, #12]
 800226a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800226c:	4798      	blx	r3
    newPresenter->activate();
 800226e:	6823      	ldr	r3, [r4, #0]
 8002270:	4620      	mov	r0, r4
 8002272:	681b      	ldr	r3, [r3, #0]
 8002274:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002276:	4629      	mov	r1, r5
 8002278:	4630      	mov	r0, r6
 800227a:	f00d faa4 	bl	800f7c6 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800227e:	682b      	ldr	r3, [r5, #0]
 8002280:	4628      	mov	r0, r5
 8002282:	691b      	ldr	r3, [r3, #16]
 8002284:	4798      	blx	r3
    newTransition->invalidate();
 8002286:	682b      	ldr	r3, [r5, #0]
 8002288:	4628      	mov	r0, r5
 800228a:	695b      	ldr	r3, [r3, #20]
 800228c:	4798      	blx	r3
}
 800228e:	4620      	mov	r0, r4
 8002290:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002294:	4623      	mov	r3, r4
 8002296:	e7e1      	b.n	800225c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 8002298:	0801e798 	.word	0x0801e798
 800229c:	0801eab7 	.word	0x0801eab7
 80022a0:	0801e92a 	.word	0x0801e92a
 80022a4:	0801e971 	.word	0x0801e971
 80022a8:	0801ea14 	.word	0x0801ea14
 80022ac:	0801ee28 	.word	0x0801ee28

080022b0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:
{
 80022b0:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80022b2:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80022b6:	9300      	str	r3, [sp, #0]
 80022b8:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80022bc:	4b04      	ldr	r3, [pc, #16]	; (80022d0 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 80022be:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80022c2:	4804      	ldr	r0, [pc, #16]	; (80022d4 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 80022c4:	f7ff ff56 	bl	8002174 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80022c8:	b003      	add	sp, #12
 80022ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80022ce:	bf00      	nop
 80022d0:	20012e04 	.word	0x20012e04
 80022d4:	20012e00 	.word	0x20012e00

080022d8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022de:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022e0:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80022e4:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022e6:	6803      	ldr	r3, [r0, #0]
 80022e8:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80022ea:	4688      	mov	r8, r1
 80022ec:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022ee:	4798      	blx	r3
 80022f0:	f5b0 7fe0 	cmp.w	r0, #448	; 0x1c0
 80022f4:	d205      	bcs.n	8002302 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 80022f6:	4b41      	ldr	r3, [pc, #260]	; (80023fc <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 80022f8:	4a41      	ldr	r2, [pc, #260]	; (8002400 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80022fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022fc:	4841      	ldr	r0, [pc, #260]	; (8002404 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80022fe:	f01a fd4b 	bl	801cd98 <__assert_func>
 8002302:	6860      	ldr	r0, [r4, #4]
 8002304:	6803      	ldr	r3, [r0, #0]
 8002306:	6a1b      	ldr	r3, [r3, #32]
 8002308:	4798      	blx	r3
 800230a:	280f      	cmp	r0, #15
 800230c:	d803      	bhi.n	8002316 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 800230e:	4b3e      	ldr	r3, [pc, #248]	; (8002408 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002310:	4a3b      	ldr	r2, [pc, #236]	; (8002400 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002312:	21a4      	movs	r1, #164	; 0xa4
 8002314:	e7f2      	b.n	80022fc <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002316:	68e0      	ldr	r0, [r4, #12]
 8002318:	6803      	ldr	r3, [r0, #0]
 800231a:	6a1b      	ldr	r3, [r3, #32]
 800231c:	4798      	blx	r3
 800231e:	280b      	cmp	r0, #11
 8002320:	d803      	bhi.n	800232a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 8002322:	4b3a      	ldr	r3, [pc, #232]	; (800240c <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002324:	4a36      	ldr	r2, [pc, #216]	; (8002400 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002326:	21a5      	movs	r1, #165	; 0xa5
 8002328:	e7e8      	b.n	80022fc <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 800232a:	f00b fdf5 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800232e:	f00b fdf9 	bl	800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002332:	f8d9 0000 	ldr.w	r0, [r9]
 8002336:	b110      	cbz	r0, 800233e <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 8002338:	6803      	ldr	r3, [r0, #0]
 800233a:	68db      	ldr	r3, [r3, #12]
 800233c:	4798      	blx	r3
    if (*currentTrans)
 800233e:	f8d9 0000 	ldr.w	r0, [r9]
 8002342:	b110      	cbz	r0, 800234a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8002344:	6803      	ldr	r3, [r0, #0]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	4798      	blx	r3
    if (*currentScreen)
 800234a:	6838      	ldr	r0, [r7, #0]
 800234c:	b110      	cbz	r0, 8002354 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 800234e:	6803      	ldr	r3, [r0, #0]
 8002350:	695b      	ldr	r3, [r3, #20]
 8002352:	4798      	blx	r3
    if (*currentPresenter)
 8002354:	f8d8 0000 	ldr.w	r0, [r8]
 8002358:	b110      	cbz	r0, 8002360 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 800235a:	6803      	ldr	r3, [r0, #0]
 800235c:	685b      	ldr	r3, [r3, #4]
 800235e:	4798      	blx	r3
    if (*currentScreen)
 8002360:	6838      	ldr	r0, [r7, #0]
 8002362:	b110      	cbz	r0, 800236a <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8002364:	6803      	ldr	r3, [r0, #0]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	4798      	blx	r3
    if (*currentPresenter)
 800236a:	f8d8 0000 	ldr.w	r0, [r8]
 800236e:	b110      	cbz	r0, 8002376 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 8002370:	6803      	ldr	r3, [r0, #0]
 8002372:	689b      	ldr	r3, [r3, #8]
 8002374:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002376:	68e0      	ldr	r0, [r4, #12]
 8002378:	2100      	movs	r1, #0
 800237a:	f7ff fe45 	bl	8002008 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800237e:	f04f 0b00 	mov.w	fp, #0
 8002382:	4b23      	ldr	r3, [pc, #140]	; (8002410 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8002384:	6003      	str	r3, [r0, #0]
 8002386:	4605      	mov	r5, r0
 8002388:	f8c0 b004 	str.w	fp, [r0, #4]
 800238c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002390:	68a0      	ldr	r0, [r4, #8]
 8002392:	6803      	ldr	r3, [r0, #0]
 8002394:	4659      	mov	r1, fp
 8002396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002398:	4798      	blx	r3
 800239a:	4606      	mov	r6, r0
 800239c:	f002 fb18 	bl	80049d0 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80023a0:	6860      	ldr	r0, [r4, #4]
 80023a2:	6803      	ldr	r3, [r0, #0]
 80023a4:	4659      	mov	r1, fp
 80023a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023a8:	4798      	blx	r3
 80023aa:	4631      	mov	r1, r6
 80023ac:	4604      	mov	r4, r0
 80023ae:	f002 fadd 	bl	800496c <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 80023b2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80023b6:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80023ba:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80023bc:	b1e4      	cbz	r4, 80023f8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 80023be:	1d23      	adds	r3, r4, #4
 80023c0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80023c4:	6833      	ldr	r3, [r6, #0]
 80023c6:	f8c4 a008 	str.w	sl, [r4, #8]
 80023ca:	4630      	mov	r0, r6
 80023cc:	68db      	ldr	r3, [r3, #12]
 80023ce:	63f4      	str	r4, [r6, #60]	; 0x3c
 80023d0:	4798      	blx	r3
    newPresenter->activate();
 80023d2:	6823      	ldr	r3, [r4, #0]
 80023d4:	4620      	mov	r0, r4
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023da:	4629      	mov	r1, r5
 80023dc:	4630      	mov	r0, r6
 80023de:	f00d f9f2 	bl	800f7c6 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023e2:	682b      	ldr	r3, [r5, #0]
 80023e4:	4628      	mov	r0, r5
 80023e6:	691b      	ldr	r3, [r3, #16]
 80023e8:	4798      	blx	r3
    newTransition->invalidate();
 80023ea:	682b      	ldr	r3, [r5, #0]
 80023ec:	4628      	mov	r0, r5
 80023ee:	695b      	ldr	r3, [r3, #20]
 80023f0:	4798      	blx	r3
}
 80023f2:	4620      	mov	r0, r4
 80023f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 80023f8:	4623      	mov	r3, r4
 80023fa:	e7e1      	b.n	80023c0 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 80023fc:	0801e798 	.word	0x0801e798
 8002400:	0801ebbb 	.word	0x0801ebbb
 8002404:	0801e92a 	.word	0x0801e92a
 8002408:	0801e971 	.word	0x0801e971
 800240c:	0801ea14 	.word	0x0801ea14
 8002410:	0801ee28 	.word	0x0801ee28

08002414 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv>:
{
 8002414:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002416:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800241a:	9300      	str	r3, [sp, #0]
 800241c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002420:	4b04      	ldr	r3, [pc, #16]	; (8002434 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x20>)
 8002422:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002426:	4804      	ldr	r0, [pc, #16]	; (8002438 <_ZN23FrontendApplicationBase33gotoScreen3ScreenNoTransitionImplEv+0x24>)
 8002428:	f7ff ff56 	bl	80022d8 <_ZN8touchgfx14makeTransitionI11Screen3View16Screen3PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800242c:	b003      	add	sp, #12
 800242e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002432:	bf00      	nop
 8002434:	20012e04 	.word	0x20012e04
 8002438:	20012e00 	.word	0x20012e00

0800243c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800243c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002440:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002442:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002444:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002448:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800244a:	6803      	ldr	r3, [r0, #0]
 800244c:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800244e:	4688      	mov	r8, r1
 8002450:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002452:	4798      	blx	r3
 8002454:	f640 636b 	movw	r3, #3691	; 0xe6b
 8002458:	4298      	cmp	r0, r3
 800245a:	d805      	bhi.n	8002468 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 800245c:	4b41      	ldr	r3, [pc, #260]	; (8002564 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 800245e:	4a42      	ldr	r2, [pc, #264]	; (8002568 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002460:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002462:	4842      	ldr	r0, [pc, #264]	; (800256c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8002464:	f01a fc98 	bl	801cd98 <__assert_func>
 8002468:	6860      	ldr	r0, [r4, #4]
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	6a1b      	ldr	r3, [r3, #32]
 800246e:	4798      	blx	r3
 8002470:	280f      	cmp	r0, #15
 8002472:	d803      	bhi.n	800247c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8002474:	4b3e      	ldr	r3, [pc, #248]	; (8002570 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002476:	4a3c      	ldr	r2, [pc, #240]	; (8002568 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002478:	21a4      	movs	r1, #164	; 0xa4
 800247a:	e7f2      	b.n	8002462 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800247c:	68e0      	ldr	r0, [r4, #12]
 800247e:	6803      	ldr	r3, [r0, #0]
 8002480:	6a1b      	ldr	r3, [r3, #32]
 8002482:	4798      	blx	r3
 8002484:	280b      	cmp	r0, #11
 8002486:	d803      	bhi.n	8002490 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8002488:	4b3a      	ldr	r3, [pc, #232]	; (8002574 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 800248a:	4a37      	ldr	r2, [pc, #220]	; (8002568 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800248c:	21a5      	movs	r1, #165	; 0xa5
 800248e:	e7e8      	b.n	8002462 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8002490:	f00b fd42 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 8002494:	f00b fd46 	bl	800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002498:	f8d9 0000 	ldr.w	r0, [r9]
 800249c:	b110      	cbz	r0, 80024a4 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 800249e:	6803      	ldr	r3, [r0, #0]
 80024a0:	68db      	ldr	r3, [r3, #12]
 80024a2:	4798      	blx	r3
    if (*currentTrans)
 80024a4:	f8d9 0000 	ldr.w	r0, [r9]
 80024a8:	b110      	cbz	r0, 80024b0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 80024aa:	6803      	ldr	r3, [r0, #0]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	4798      	blx	r3
    if (*currentScreen)
 80024b0:	6838      	ldr	r0, [r7, #0]
 80024b2:	b110      	cbz	r0, 80024ba <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 80024b4:	6803      	ldr	r3, [r0, #0]
 80024b6:	695b      	ldr	r3, [r3, #20]
 80024b8:	4798      	blx	r3
    if (*currentPresenter)
 80024ba:	f8d8 0000 	ldr.w	r0, [r8]
 80024be:	b110      	cbz	r0, 80024c6 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 80024c0:	6803      	ldr	r3, [r0, #0]
 80024c2:	685b      	ldr	r3, [r3, #4]
 80024c4:	4798      	blx	r3
    if (*currentScreen)
 80024c6:	6838      	ldr	r0, [r7, #0]
 80024c8:	b110      	cbz	r0, 80024d0 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 80024ca:	6803      	ldr	r3, [r0, #0]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	4798      	blx	r3
    if (*currentPresenter)
 80024d0:	f8d8 0000 	ldr.w	r0, [r8]
 80024d4:	b110      	cbz	r0, 80024dc <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 80024d6:	6803      	ldr	r3, [r0, #0]
 80024d8:	689b      	ldr	r3, [r3, #8]
 80024da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80024dc:	68e0      	ldr	r0, [r4, #12]
 80024de:	2100      	movs	r1, #0
 80024e0:	f7ff fd92 	bl	8002008 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80024e4:	f04f 0b00 	mov.w	fp, #0
 80024e8:	4b23      	ldr	r3, [pc, #140]	; (8002578 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80024ea:	6003      	str	r3, [r0, #0]
 80024ec:	4605      	mov	r5, r0
 80024ee:	f8c0 b004 	str.w	fp, [r0, #4]
 80024f2:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024f6:	68a0      	ldr	r0, [r4, #8]
 80024f8:	6803      	ldr	r3, [r0, #0]
 80024fa:	4659      	mov	r1, fp
 80024fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024fe:	4798      	blx	r3
 8002500:	4606      	mov	r6, r0
 8002502:	f002 fe0f 	bl	8005124 <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002506:	6860      	ldr	r0, [r4, #4]
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	4659      	mov	r1, fp
 800250c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800250e:	4798      	blx	r3
 8002510:	4631      	mov	r1, r6
 8002512:	4604      	mov	r4, r0
 8002514:	f002 fa74 	bl	8004a00 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
 8002518:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800251c:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8002520:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8002522:	b1e4      	cbz	r4, 800255e <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002524:	1d23      	adds	r3, r4, #4
 8002526:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800252a:	6833      	ldr	r3, [r6, #0]
 800252c:	f8c4 a008 	str.w	sl, [r4, #8]
 8002530:	4630      	mov	r0, r6
 8002532:	68db      	ldr	r3, [r3, #12]
 8002534:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002536:	4798      	blx	r3
    newPresenter->activate();
 8002538:	6823      	ldr	r3, [r4, #0]
 800253a:	4620      	mov	r0, r4
 800253c:	681b      	ldr	r3, [r3, #0]
 800253e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002540:	4629      	mov	r1, r5
 8002542:	4630      	mov	r0, r6
 8002544:	f00d f93f 	bl	800f7c6 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002548:	682b      	ldr	r3, [r5, #0]
 800254a:	4628      	mov	r0, r5
 800254c:	691b      	ldr	r3, [r3, #16]
 800254e:	4798      	blx	r3
    newTransition->invalidate();
 8002550:	682b      	ldr	r3, [r5, #0]
 8002552:	4628      	mov	r0, r5
 8002554:	695b      	ldr	r3, [r3, #20]
 8002556:	4798      	blx	r3
}
 8002558:	4620      	mov	r0, r4
 800255a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 800255e:	4623      	mov	r3, r4
 8002560:	e7e1      	b.n	8002526 <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 8002562:	bf00      	nop
 8002564:	0801e798 	.word	0x0801e798
 8002568:	0801ecbf 	.word	0x0801ecbf
 800256c:	0801e92a 	.word	0x0801e92a
 8002570:	0801e971 	.word	0x0801e971
 8002574:	0801ea14 	.word	0x0801ea14
 8002578:	0801ee28 	.word	0x0801ee28

0800257c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen4ScreenNoTransitionImpl()
{
 800257c:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800257e:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8002582:	9300      	str	r3, [sp, #0]
 8002584:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002588:	4b04      	ldr	r3, [pc, #16]	; (800259c <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x20>)
 800258a:	f500 719c 	add.w	r1, r0, #312	; 0x138
 800258e:	4804      	ldr	r0, [pc, #16]	; (80025a0 <_ZN23FrontendApplicationBase33gotoScreen4ScreenNoTransitionImplEv+0x24>)
 8002590:	f7ff ff54 	bl	800243c <_ZN8touchgfx14makeTransitionI11Screen4View16Screen4PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8002594:	b003      	add	sp, #12
 8002596:	f85d fb04 	ldr.w	pc, [sp], #4
 800259a:	bf00      	nop
 800259c:	20012e04 	.word	0x20012e04
 80025a0:	20012e00 	.word	0x20012e00

080025a4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80025a4:	6a00      	ldr	r0, [r0, #32]
 80025a6:	4770      	bx	lr

080025a8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80025a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80025aa:	4770      	bx	lr

080025ac <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80025ac:	4770      	bx	lr

080025ae <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80025ae:	888b      	ldrh	r3, [r1, #4]
 80025b0:	6980      	ldr	r0, [r0, #24]
 80025b2:	680a      	ldr	r2, [r1, #0]
 80025b4:	0adb      	lsrs	r3, r3, #11
 80025b6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80025ba:	4410      	add	r0, r2
 80025bc:	4770      	bx	lr

080025be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80025be:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80025c0:	b1c2      	cbz	r2, 80025f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80025c2:	7b13      	ldrb	r3, [r2, #12]
 80025c4:	b1b3      	cbz	r3, 80025f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80025c6:	7b54      	ldrb	r4, [r2, #13]
 80025c8:	7ad2      	ldrb	r2, [r2, #11]
 80025ca:	0224      	lsls	r4, r4, #8
 80025cc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80025d0:	4314      	orrs	r4, r2
 80025d2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80025d4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80025d6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80025da:	8813      	ldrh	r3, [r2, #0]
 80025dc:	428b      	cmp	r3, r1
 80025de:	d102      	bne.n	80025e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80025e0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80025e4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80025e6:	d805      	bhi.n	80025f4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80025e8:	3801      	subs	r0, #1
 80025ea:	b280      	uxth	r0, r0
 80025ec:	3204      	adds	r2, #4
 80025ee:	2800      	cmp	r0, #0
 80025f0:	d1f3      	bne.n	80025da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80025f2:	e7f7      	b.n	80025e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80025f4:	2000      	movs	r0, #0
 80025f6:	e7f5      	b.n	80025e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080025f8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80025f8:	b510      	push	{r4, lr}
 80025fa:	2128      	movs	r1, #40	; 0x28
 80025fc:	4604      	mov	r4, r0
 80025fe:	f01a fb9d 	bl	801cd3c <_ZdlPvj>
 8002602:	4620      	mov	r0, r4
 8002604:	bd10      	pop	{r4, pc}
	...

08002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002608:	b530      	push	{r4, r5, lr}
 800260a:	b089      	sub	sp, #36	; 0x24
 800260c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800260e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002612:	9506      	str	r5, [sp, #24]
 8002614:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002618:	9505      	str	r5, [sp, #20]
 800261a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800261e:	9504      	str	r5, [sp, #16]
 8002620:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002624:	9503      	str	r5, [sp, #12]
 8002626:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800262a:	9502      	str	r5, [sp, #8]
 800262c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002630:	9501      	str	r5, [sp, #4]
 8002632:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002636:	9500      	str	r5, [sp, #0]
 8002638:	f00c fca6 	bl	800ef88 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800263c:	4b06      	ldr	r3, [pc, #24]	; (8002658 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800263e:	6023      	str	r3, [r4, #0]
 8002640:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002642:	61a3      	str	r3, [r4, #24]
 8002644:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002646:	61e3      	str	r3, [r4, #28]
 8002648:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800264a:	6223      	str	r3, [r4, #32]
 800264c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800264e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002650:	4620      	mov	r0, r4
 8002652:	b009      	add	sp, #36	; 0x24
 8002654:	bd30      	pop	{r4, r5, pc}
 8002656:	bf00      	nop
 8002658:	0801ee4c 	.word	0x0801ee4c

0800265c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800265c:	2000      	movs	r0, #0
 800265e:	4770      	bx	lr

08002660 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002660:	8081      	strh	r1, [r0, #4]
    }
 8002662:	4770      	bx	lr

08002664 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002664:	80c1      	strh	r1, [r0, #6]
    }
 8002666:	4770      	bx	lr

08002668 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002668:	8101      	strh	r1, [r0, #8]
    }
 800266a:	4770      	bx	lr

0800266c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800266c:	8141      	strh	r1, [r0, #10]
    }
 800266e:	4770      	bx	lr

08002670 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002670:	4770      	bx	lr

08002672 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002672:	4770      	bx	lr

08002674 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002674:	4770      	bx	lr

08002676 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002676:	4770      	bx	lr

08002678 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002678:	4770      	bx	lr

0800267a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800267a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800267c:	88c4      	ldrh	r4, [r0, #6]
 800267e:	6803      	ldr	r3, [r0, #0]
 8002680:	1b12      	subs	r2, r2, r4
 8002682:	8884      	ldrh	r4, [r0, #4]
 8002684:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002686:	1b09      	subs	r1, r1, r4
 8002688:	b212      	sxth	r2, r2
    }
 800268a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800268e:	b209      	sxth	r1, r1
 8002690:	4718      	bx	r3

08002692 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002692:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002696:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002698:	f04f 33ff 	mov.w	r3, #4294967295
 800269c:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800269e:	6813      	ldr	r3, [r2, #0]
 80026a0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80026a2:	6010      	str	r0, [r2, #0]
    }
 80026a4:	4770      	bx	lr

080026a6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80026a6:	4770      	bx	lr

080026a8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80026a8:	4770      	bx	lr

080026aa <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80026aa:	4770      	bx	lr

080026ac <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80026ac:	4770      	bx	lr

080026ae <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80026ae:	4770      	bx	lr

080026b0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80026b0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80026b4:	b11a      	cbz	r2, 80026be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80026b6:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80026ba:	b102      	cbz	r2, 80026be <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80026bc:	6018      	str	r0, [r3, #0]
        }
    }
 80026be:	4770      	bx	lr

080026c0 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80026c0:	4770      	bx	lr

080026c2 <_ZN15Screen1ViewBase9ToggleLEDEv>:
     * Virtual Action Handlers
     */
    virtual void ToggleLED()
    {
        // Override and implement this function in Screen1
    }
 80026c2:	4770      	bx	lr

080026c4 <_ZN15Screen1ViewBase10ToggleLED2Ev>:

    virtual void ToggleLED2()
    {
        // Override and implement this function in Screen1
    }
 80026c4:	4770      	bx	lr

080026c6 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80026c6:	4770      	bx	lr

080026c8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80026c8:	4770      	bx	lr

080026ca <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80026ca:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80026cc:	68c2      	ldr	r2, [r0, #12]
 80026ce:	6844      	ldr	r4, [r0, #4]
 80026d0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026d2:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80026d4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026d8:	07d2      	lsls	r2, r2, #31
 80026da:	bf48      	it	mi
 80026dc:	5962      	ldrmi	r2, [r4, r5]
 80026de:	689b      	ldr	r3, [r3, #8]
    }
 80026e0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80026e2:	bf48      	it	mi
 80026e4:	58d3      	ldrmi	r3, [r2, r3]
 80026e6:	4718      	bx	r3

080026e8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80026e8:	6843      	ldr	r3, [r0, #4]
 80026ea:	b12b      	cbz	r3, 80026f8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80026ec:	6883      	ldr	r3, [r0, #8]
 80026ee:	b92b      	cbnz	r3, 80026fc <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80026f0:	68c0      	ldr	r0, [r0, #12]
 80026f2:	f000 0001 	and.w	r0, r0, #1
 80026f6:	4770      	bx	lr
 80026f8:	4618      	mov	r0, r3
 80026fa:	4770      	bx	lr
 80026fc:	2001      	movs	r0, #1
    }
 80026fe:	4770      	bx	lr

08002700 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002700:	b510      	push	{r4, lr}
 8002702:	2110      	movs	r1, #16
 8002704:	4604      	mov	r4, r0
 8002706:	f01a fb19 	bl	801cd3c <_ZdlPvj>
 800270a:	4620      	mov	r0, r4
 800270c:	bd10      	pop	{r4, pc}

0800270e <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 800270e:	b510      	push	{r4, lr}
 8002710:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8002714:	4604      	mov	r4, r0
 8002716:	f01a fb11 	bl	801cd3c <_ZdlPvj>
 800271a:	4620      	mov	r0, r4
 800271c:	bd10      	pop	{r4, pc}

0800271e <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 800271e:	f100 0298 	add.w	r2, r0, #152	; 0x98
 8002722:	4291      	cmp	r1, r2
{
 8002724:	b510      	push	{r4, lr}
    if (&src == &toggleButton1)
 8002726:	d104      	bne.n	8002732 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    {
        //ToggleLED
        //When toggleButton1 clicked call virtual function
        //Call ToggleLED
        ToggleLED();
 8002728:	6803      	ldr	r3, [r0, #0]
 800272a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        //ChangeScreen3
        //When buttonWithIcon2 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
}
 800272c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ToggleLED2();
 8002730:	4718      	bx	r3
    else if (&src == &toggleButton2)
 8002732:	f100 02d0 	add.w	r2, r0, #208	; 0xd0
 8002736:	4291      	cmp	r1, r2
 8002738:	d102      	bne.n	8002740 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
        ToggleLED2();
 800273a:	6803      	ldr	r3, [r0, #0]
 800273c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800273e:	e7f5      	b.n	800272c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    else if (&src == &buttonWithIcon1)
 8002740:	f500 7284 	add.w	r2, r0, #264	; 0x108
 8002744:	4291      	cmp	r1, r2
 8002746:	d105      	bne.n	8002754 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002748:	f00b fbe6 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
}
 800274c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen2ScreenNoTransition();
 8002750:	f7ff bc2a 	b.w	8001fa8 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
    else if (&src == &buttonWithIcon2)
 8002754:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002758:	4299      	cmp	r1, r3
 800275a:	d105      	bne.n	8002768 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4a>
 800275c:	f00b fbdc 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
}
 8002760:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen3ScreenNoTransition();
 8002764:	f7ff bc30 	b.w	8001fc8 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
}
 8002768:	bd10      	pop	{r4, pc}
	...

0800276c <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 800276c:	4a07      	ldr	r2, [pc, #28]	; (800278c <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800276e:	6002      	str	r2, [r0, #0]
 8002770:	2200      	movs	r2, #0
 8002772:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002776:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800277a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800277e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002782:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002786:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002788:	4770      	bx	lr
 800278a:	bf00      	nop
 800278c:	08020858 	.word	0x08020858

08002790 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002790:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002792:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002794:	4604      	mov	r4, r0
        setX(x);
 8002796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002798:	4615      	mov	r5, r2
        setX(x);
 800279a:	4798      	blx	r3
        setY(y);
 800279c:	6823      	ldr	r3, [r4, #0]
 800279e:	4629      	mov	r1, r5
 80027a0:	4620      	mov	r0, r4
 80027a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80027a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80027a8:	4718      	bx	r3
	...

080027ac <_ZN8touchgfx12ToggleButtonC1Ev>:
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80027ac:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80027ae:	2226      	movs	r2, #38	; 0x26
 80027b0:	4604      	mov	r4, r0
 80027b2:	2100      	movs	r1, #0
 80027b4:	f01a fc7a 	bl	801d0ac <memset>
class Widget : public Drawable
 80027b8:	4620      	mov	r0, r4
 80027ba:	f7ff ffd7 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 80027be:	2300      	movs	r3, #0
 80027c0:	62a3      	str	r3, [r4, #40]	; 0x28
 80027c2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80027c6:	2301      	movs	r3, #1
 80027c8:	4a06      	ldr	r2, [pc, #24]	; (80027e4 <_ZN8touchgfx12ToggleButtonC1Ev+0x38>)
 80027ca:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80027ce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027d2:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80027d4:	8623      	strh	r3, [r4, #48]	; 0x30
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80027d6:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
 80027da:	6022      	str	r2, [r4, #0]
 80027dc:	86a3      	strh	r3, [r4, #52]	; 0x34
 80027de:	4620      	mov	r0, r4
 80027e0:	bd10      	pop	{r4, pc}
 80027e2:	bf00      	nop
 80027e4:	080202a0 	.word	0x080202a0

080027e8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 80027e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027ec:	4604      	mov	r4, r0
 80027ee:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 80027f0:	4625      	mov	r5, r4
        : presenter(0)
 80027f2:	f00c fe6b 	bl	800f4cc <_ZN8touchgfx6ScreenC1Ev>
 80027f6:	f04f 0b00 	mov.w	fp, #0
 80027fa:	4b81      	ldr	r3, [pc, #516]	; (8002a00 <_ZN15Screen1ViewBaseC1Ev+0x218>)
 80027fc:	f8c4 b03c 	str.w	fp, [r4, #60]	; 0x3c
 8002800:	f845 3b40 	str.w	r3, [r5], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002804:	4659      	mov	r1, fp
 8002806:	2226      	movs	r2, #38	; 0x26
 8002808:	4628      	mov	r0, r5
 800280a:	f01a fc4f 	bl	801d0ac <memset>
 800280e:	4628      	mov	r0, r5
 8002810:	f7ff ffac 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8002814:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002818:	27ff      	movs	r7, #255	; 0xff
 800281a:	4b7a      	ldr	r3, [pc, #488]	; (8002a04 <_ZN15Screen1ViewBaseC1Ev+0x21c>)
 800281c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
        : Widget(), bitmap(bitmap), alpha(255)
 800281e:	2226      	movs	r2, #38	; 0x26
 8002820:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002824:	4659      	mov	r1, fp
 8002826:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 800282a:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 800282e:	4630      	mov	r0, r6
 8002830:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002834:	f01a fc3a 	bl	801d0ac <memset>
 8002838:	4630      	mov	r0, r6
 800283a:	f7ff ff97 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 800283e:	4b72      	ldr	r3, [pc, #456]	; (8002a08 <_ZN15Screen1ViewBaseC1Ev+0x220>)
 8002840:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002842:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8002846:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bitmap);
 800284a:	a907      	add	r1, sp, #28
 800284c:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bitmap), alpha(255)
 8002850:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bitmap);
 8002854:	4630      	mov	r0, r6
 8002856:	f009 fe3c 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800285a:	f104 09d0 	add.w	r9, r4, #208	; 0xd0
 800285e:	4650      	mov	r0, sl
 8002860:	f7ff ffa4 	bl	80027ac <_ZN8touchgfx12ToggleButtonC1Ev>
 8002864:	f504 7884 	add.w	r8, r4, #264	; 0x108
 8002868:	4648      	mov	r0, r9
 800286a:	f7ff ff9f 	bl	80027ac <_ZN8touchgfx12ToggleButtonC1Ev>
 800286e:	f504 77a2 	add.w	r7, r4, #324	; 0x144
 8002872:	4640      	mov	r0, r8
 8002874:	f009 fe06 	bl	800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8002878:	4638      	mov	r0, r7
 800287a:	f009 fe03 	bl	800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800287e:	4b63      	ldr	r3, [pc, #396]	; (8002a0c <_ZN15Screen1ViewBaseC1Ev+0x224>)
 8002880:	e9c4 3460 	strd	r3, r4, [r4, #384]	; 0x180
 8002884:	4b62      	ldr	r3, [pc, #392]	; (8002a10 <_ZN15Screen1ViewBaseC1Ev+0x228>)
        setXY(x, y);
 8002886:	465a      	mov	r2, fp
 8002888:	e9c4 3b62 	strd	r3, fp, [r4, #392]	; 0x188
 800288c:	4659      	mov	r1, fp
 800288e:	4628      	mov	r0, r5
 8002890:	f7ff ff7e 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002894:	4628      	mov	r0, r5
 8002896:	21f0      	movs	r1, #240	; 0xf0
 8002898:	f7ff fee6 	bl	8002668 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800289c:	4628      	mov	r0, r5
 800289e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80028a2:	f7ff fee3 	bl	800266c <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 80028a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    image1.setXY(0, 0);
 80028aa:	465a      	mov	r2, fp
 80028ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80028ae:	4659      	mov	r1, fp
 80028b0:	4630      	mov	r0, r6
 80028b2:	f7ff ff6d 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 80028b6:	f04f 030a 	mov.w	r3, #10
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_PORTRAIT_TEXTURE_240X320PX_ID));
 80028ba:	a907      	add	r1, sp, #28
 80028bc:	4630      	mov	r0, r6
 80028be:	f04f 0b09 	mov.w	fp, #9
 80028c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80028c6:	f009 fe04 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    toggleButton1.setXY(56, 104);
 80028ca:	4650      	mov	r0, sl
 80028cc:	2268      	movs	r2, #104	; 0x68
 80028ce:	2138      	movs	r1, #56	; 0x38
 80028d0:	f7ff ff5e 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 80028d4:	f04f 0308 	mov.w	r3, #8
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 80028d8:	f8a4 b0cc 	strh.w	fp, [r4, #204]	; 0xcc
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80028dc:	aa07      	add	r2, sp, #28
 80028de:	a906      	add	r1, sp, #24
 80028e0:	4650      	mov	r0, sl
 80028e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80028e6:	f8ad b01c 	strh.w	fp, [sp, #28]
 80028ea:	f009 facb 	bl	800be84 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 80028ee:	f504 72c0 	add.w	r2, r4, #384	; 0x180
 80028f2:	9203      	str	r2, [sp, #12]
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80028f4:	f8c4 20c0 	str.w	r2, [r4, #192]	; 0xc0
    toggleButton2.setXY(56, 166);
 80028f8:	4648      	mov	r0, r9
 80028fa:	22a6      	movs	r2, #166	; 0xa6
 80028fc:	2138      	movs	r1, #56	; 0x38
 80028fe:	f7ff ff47 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8002902:	f04f 0308 	mov.w	r3, #8
        originalPressed = bitmapPressed;
 8002906:	f8a4 b104 	strh.w	fp, [r4, #260]	; 0x104
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800290a:	aa07      	add	r2, sp, #28
 800290c:	a906      	add	r1, sp, #24
 800290e:	4648      	mov	r0, r9
 8002910:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002914:	f8ad b01c 	strh.w	fp, [sp, #28]
 8002918:	f009 fab4 	bl	800be84 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800291c:	9b03      	ldr	r3, [sp, #12]
 800291e:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
    buttonWithIcon1.setXY(35, 248);
 8002922:	4640      	mov	r0, r8
 8002924:	22f8      	movs	r2, #248	; 0xf8
 8002926:	2123      	movs	r1, #35	; 0x23
 8002928:	f7ff ff32 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800292c:	2305      	movs	r3, #5
 800292e:	f8ad 3018 	strh.w	r3, [sp, #24]
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_PLAY_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8002932:	f10d 0c18 	add.w	ip, sp, #24
 8002936:	ab07      	add	r3, sp, #28
 8002938:	9300      	str	r3, [sp, #0]
 800293a:	f04f 0201 	mov.w	r2, #1
 800293e:	4663      	mov	r3, ip
 8002940:	f10d 0c14 	add.w	ip, sp, #20
 8002944:	f8ad 2010 	strh.w	r2, [sp, #16]
 8002948:	f04f 0102 	mov.w	r1, #2
 800294c:	4662      	mov	r2, ip
 800294e:	f04f 0003 	mov.w	r0, #3
 8002952:	f10d 0c10 	add.w	ip, sp, #16
 8002956:	f8ad 1014 	strh.w	r1, [sp, #20]
 800295a:	f8ad 001c 	strh.w	r0, [sp, #28]
 800295e:	4661      	mov	r1, ip
 8002960:	4640      	mov	r0, r8
 8002962:	f009 fcec 	bl	800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
    {
        iconY = y;
 8002966:	f04f 0308 	mov.w	r3, #8
        iconX = x;
 800296a:	f04f 0b46 	mov.w	fp, #70	; 0x46
        iconY = y;
 800296e:	f8a4 3142 	strh.w	r3, [r4, #322]	; 0x142
 8002972:	9b03      	ldr	r3, [sp, #12]
 8002974:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
    buttonWithIcon2.setXY(35, 10);
 8002978:	4638      	mov	r0, r7
        iconX = x;
 800297a:	f8a4 b140 	strh.w	fp, [r4, #320]	; 0x140
 800297e:	220a      	movs	r2, #10
 8002980:	2123      	movs	r1, #35	; 0x23
 8002982:	f7ff ff05 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8002986:	2307      	movs	r3, #7
 8002988:	f8ad 3018 	strh.w	r3, [sp, #24]
 800298c:	f04f 0201 	mov.w	r2, #1
    buttonWithIcon2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_TOOLS_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8002990:	ab07      	add	r3, sp, #28
 8002992:	f04f 0102 	mov.w	r1, #2
 8002996:	f04f 0003 	mov.w	r0, #3
 800299a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800299e:	f8ad 1014 	strh.w	r1, [sp, #20]
 80029a2:	aa05      	add	r2, sp, #20
 80029a4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80029a8:	9300      	str	r3, [sp, #0]
 80029aa:	a904      	add	r1, sp, #16
 80029ac:	ab06      	add	r3, sp, #24
 80029ae:	4638      	mov	r0, r7
 80029b0:	f009 fcc5 	bl	800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconY = y;
 80029b4:	2310      	movs	r3, #16
 80029b6:	f8a4 317e 	strh.w	r3, [r4, #382]	; 0x17e
 80029ba:	9b03      	ldr	r3, [sp, #12]
 80029bc:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029c0:	1d20      	adds	r0, r4, #4
 80029c2:	4629      	mov	r1, r5
        iconX = x;
 80029c4:	f8a4 b17c 	strh.w	fp, [r4, #380]	; 0x17c
 80029c8:	9003      	str	r0, [sp, #12]
 80029ca:	f007 fcfd 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029ce:	9803      	ldr	r0, [sp, #12]
 80029d0:	4631      	mov	r1, r6
 80029d2:	f007 fcf9 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029d6:	9803      	ldr	r0, [sp, #12]
 80029d8:	4651      	mov	r1, sl
 80029da:	f007 fcf5 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029de:	9803      	ldr	r0, [sp, #12]
 80029e0:	4649      	mov	r1, r9
 80029e2:	f007 fcf1 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029e6:	9803      	ldr	r0, [sp, #12]
 80029e8:	4641      	mov	r1, r8
 80029ea:	f007 fced 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029ee:	9803      	ldr	r0, [sp, #12]
 80029f0:	4639      	mov	r1, r7
 80029f2:	f007 fce9 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029f6:	4620      	mov	r0, r4
 80029f8:	b009      	add	sp, #36	; 0x24
 80029fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029fe:	bf00      	nop
 8002a00:	0801eebc 	.word	0x0801eebc
 8002a04:	08020428 	.word	0x08020428
 8002a08:	08020674 	.word	0x08020674
 8002a0c:	0801eea4 	.word	0x0801eea4
 8002a10:	0800271f 	.word	0x0800271f

08002a14 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a14:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a16:	4770      	bx	lr

08002a18 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002a18:	b570      	push	{r4, r5, r6, lr}
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002a1a:	790d      	ldrb	r5, [r1, #4]
        bool wasPressed = getPressed();
 8002a1c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 8002a20:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a22:	b93d      	cbnz	r5, 8002a34 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1c>
 8002a24:	b13b      	cbz	r3, 8002a36 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            setPressed(newPressedValue);
            invalidate();
        }
        if (newPressedValue)
        {
            executeAction();
 8002a26:	6823      	ldr	r3, [r4, #0]
 8002a28:	4620      	mov	r0, r4
 8002a2a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
        }
    }
 8002a2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002a32:	4718      	bx	r3
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002a34:	b17b      	cbz	r3, 8002a56 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3e>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002a36:	fab5 f385 	clz	r3, r5
 8002a3a:	095b      	lsrs	r3, r3, #5
 8002a3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
    {
        pressed = isPressed;
        handlePressedUpdated();
 8002a40:	6823      	ldr	r3, [r4, #0]
 8002a42:	4620      	mov	r0, r4
 8002a44:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002a48:	4798      	blx	r3
            invalidate();
 8002a4a:	6823      	ldr	r3, [r4, #0]
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	695b      	ldr	r3, [r3, #20]
 8002a50:	4798      	blx	r3
        if (newPressedValue)
 8002a52:	2d00      	cmp	r5, #0
 8002a54:	d0e7      	beq.n	8002a26 <_ZN8touchgfx18TouchButtonTrigger16handleClickEventERKNS_10ClickEventE+0xe>
    }
 8002a56:	bd70      	pop	{r4, r5, r6, pc}

08002a58 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8002a58:	4770      	bx	lr

08002a5a <_ZN15Screen2ViewBase11downclickedEv>:
     * Virtual Action Handlers
     */
    virtual void downclicked()
    {
        // Override and implement this function in Screen2
    }
 8002a5a:	4770      	bx	lr

08002a5c <_ZN15Screen2ViewBase9upclickedEv>:

    virtual void upclicked()
    {
        // Override and implement this function in Screen2
    }
 8002a5c:	4770      	bx	lr

08002a5e <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 8002a5e:	4770      	bx	lr

08002a60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002a60:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002a64:	b12b      	cbz	r3, 8002a72 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x12>
 8002a66:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 8002a68:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002a6a:	b123      	cbz	r3, 8002a76 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x16>
 8002a6c:	6f43      	ldr	r3, [r0, #116]	; 0x74
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 8002a6e:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002a70:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002a72:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8002a74:	e7f8      	b.n	8002a68 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002a76:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002a78:	e7f9      	b.n	8002a6e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv+0xe>

08002a7a <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a7a:	4770      	bx	lr

08002a7c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002a7c:	4770      	bx	lr

08002a7e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a80:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002a82:	68c2      	ldr	r2, [r0, #12]
 8002a84:	6844      	ldr	r4, [r0, #4]
 8002a86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a88:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002a8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a8e:	07d2      	lsls	r2, r2, #31
 8002a90:	bf48      	it	mi
 8002a92:	5962      	ldrmi	r2, [r4, r5]
 8002a94:	689b      	ldr	r3, [r3, #8]
    }
 8002a96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002a98:	bf48      	it	mi
 8002a9a:	58d3      	ldrmi	r3, [r2, r3]
 8002a9c:	4718      	bx	r3

08002a9e <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002a9e:	6843      	ldr	r3, [r0, #4]
 8002aa0:	b12b      	cbz	r3, 8002aae <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002aa2:	6883      	ldr	r3, [r0, #8]
 8002aa4:	b92b      	cbnz	r3, 8002ab2 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002aa6:	68c0      	ldr	r0, [r0, #12]
 8002aa8:	f000 0001 	and.w	r0, r0, #1
 8002aac:	4770      	bx	lr
 8002aae:	4618      	mov	r0, r3
 8002ab0:	4770      	bx	lr
 8002ab2:	2001      	movs	r0, #1
    }
 8002ab4:	4770      	bx	lr

08002ab6 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ab6:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ab8:	68c2      	ldr	r2, [r0, #12]
 8002aba:	6844      	ldr	r4, [r0, #4]
 8002abc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002abe:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002ac0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ac4:	07d2      	lsls	r2, r2, #31
 8002ac6:	bf48      	it	mi
 8002ac8:	5962      	ldrmi	r2, [r4, r5]
 8002aca:	689b      	ldr	r3, [r3, #8]
    }
 8002acc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ace:	bf48      	it	mi
 8002ad0:	58d3      	ldrmi	r3, [r2, r3]
 8002ad2:	4718      	bx	r3

08002ad4 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002ad4:	6843      	ldr	r3, [r0, #4]
 8002ad6:	b12b      	cbz	r3, 8002ae4 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002ad8:	6883      	ldr	r3, [r0, #8]
 8002ada:	b92b      	cbnz	r3, 8002ae8 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002adc:	68c0      	ldr	r0, [r0, #12]
 8002ade:	f000 0001 	and.w	r0, r0, #1
 8002ae2:	4770      	bx	lr
 8002ae4:	4618      	mov	r0, r3
 8002ae6:	4770      	bx	lr
 8002ae8:	2001      	movs	r0, #1
    }
 8002aea:	4770      	bx	lr

08002aec <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002aec:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002af0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002af4:	4770      	bx	lr

08002af6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002af6:	b510      	push	{r4, lr}
 8002af8:	2178      	movs	r1, #120	; 0x78
 8002afa:	4604      	mov	r4, r0
 8002afc:	f01a f91e 	bl	801cd3c <_ZdlPvj>
 8002b00:	4620      	mov	r0, r4
 8002b02:	bd10      	pop	{r4, pc}

08002b04 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b04:	b510      	push	{r4, lr}
 8002b06:	2110      	movs	r1, #16
 8002b08:	4604      	mov	r4, r0
 8002b0a:	f01a f917 	bl	801cd3c <_ZdlPvj>
 8002b0e:	4620      	mov	r0, r4
 8002b10:	bd10      	pop	{r4, pc}

08002b12 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002b12:	b510      	push	{r4, lr}
 8002b14:	2110      	movs	r1, #16
 8002b16:	4604      	mov	r4, r0
 8002b18:	f01a f910 	bl	801cd3c <_ZdlPvj>
 8002b1c:	4620      	mov	r0, r4
 8002b1e:	bd10      	pop	{r4, pc}

08002b20 <_ZN15Screen2ViewBaseD0Ev>:
    virtual ~Screen2ViewBase() {}
 8002b20:	b510      	push	{r4, lr}
 8002b22:	f44f 712a 	mov.w	r1, #680	; 0x2a8
 8002b26:	4604      	mov	r4, r0
 8002b28:	f01a f908 	bl	801cd3c <_ZdlPvj>
 8002b2c:	4620      	mov	r0, r4
 8002b2e:	bd10      	pop	{r4, pc}

08002b30 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002b30:	b510      	push	{r4, lr}
 8002b32:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002b34:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002b36:	b150      	cbz	r0, 8002b4e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002b38:	6803      	ldr	r3, [r0, #0]
 8002b3a:	68db      	ldr	r3, [r3, #12]
 8002b3c:	4798      	blx	r3
 8002b3e:	b130      	cbz	r0, 8002b4e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002b40:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002b42:	6803      	ldr	r3, [r0, #0]
 8002b44:	4621      	mov	r1, r4
 8002b46:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b4c:	4718      	bx	r3
    }
 8002b4e:	bd10      	pop	{r4, pc}

08002b50 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8002b50:	f100 02d8 	add.w	r2, r0, #216	; 0xd8
 8002b54:	4291      	cmp	r1, r2
 8002b56:	d102      	bne.n	8002b5e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //downclicked
        //When flexButton1 clicked call virtual function
        //Call downclicked
        downclicked();
 8002b58:	6803      	ldr	r3, [r0, #0]
 8002b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &flexButton2)
    {
        //upclicked
        //When flexButton2 clicked call virtual function
        //Call upclicked
        upclicked();
 8002b5c:	4718      	bx	r3
    else if (&src == &flexButton2)
 8002b5e:	f500 72a8 	add.w	r2, r0, #336	; 0x150
 8002b62:	4291      	cmp	r1, r2
 8002b64:	d102      	bne.n	8002b6c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        upclicked();
 8002b66:	6803      	ldr	r3, [r0, #0]
 8002b68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b6a:	e7f7      	b.n	8002b5c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b6c:	4770      	bx	lr

08002b6e <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithIcon1)
 8002b6e:	f500 7010 	add.w	r0, r0, #576	; 0x240
 8002b72:	4288      	cmp	r0, r1
{
 8002b74:	b508      	push	{r3, lr}
    if (&src == &buttonWithIcon1)
 8002b76:	d105      	bne.n	8002b84 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002b78:	f00b f9ce 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
}
 8002b7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8002b80:	f7ff ba02 	b.w	8001f88 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8002b84:	bd08      	pop	{r3, pc}

08002b86 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002b86:	b570      	push	{r4, r5, r6, lr}
 8002b88:	4604      	mov	r4, r0
 8002b8a:	461d      	mov	r5, r3
 8002b8c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002b90:	f7ff fdfe 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002b94:	6823      	ldr	r3, [r4, #0]
 8002b96:	4629      	mov	r1, r5
 8002b98:	4620      	mov	r0, r4
 8002b9a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002b9c:	4798      	blx	r3
        setHeight(height);
 8002b9e:	6823      	ldr	r3, [r4, #0]
 8002ba0:	4631      	mov	r1, r6
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 8002ba6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002baa:	4718      	bx	r3

08002bac <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002bac:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002bae:	2226      	movs	r2, #38	; 0x26
    Box()
 8002bb0:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002bb2:	2100      	movs	r1, #0
 8002bb4:	f01a fa7a 	bl	801d0ac <memset>
 8002bb8:	4620      	mov	r0, r4
 8002bba:	f7ff fdd7 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8002bbe:	4b04      	ldr	r3, [pc, #16]	; (8002bd0 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002bc0:	6023      	str	r3, [r4, #0]
 8002bc2:	23ff      	movs	r3, #255	; 0xff
 8002bc4:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 8002bc8:	2300      	movs	r3, #0
 8002bca:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002bcc:	4620      	mov	r0, r4
 8002bce:	bd10      	pop	{r4, pc}
 8002bd0:	08020428 	.word	0x08020428

08002bd4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8002bd4:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002bd6:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002bd8:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002bda:	2100      	movs	r1, #0
 8002bdc:	f01a fa66 	bl	801d0ac <memset>
 8002be0:	4620      	mov	r0, r4
 8002be2:	f7ff fdc3 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8002be6:	4b07      	ldr	r3, [pc, #28]	; (8002c04 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002be8:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002bea:	4b07      	ldr	r3, [pc, #28]	; (8002c08 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 8002bec:	62a3      	str	r3, [r4, #40]	; 0x28
 8002bee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002bf2:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002bf4:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002bfe:	8723      	strh	r3, [r4, #56]	; 0x38
    {
    }
 8002c00:	4620      	mov	r0, r4
 8002c02:	bd10      	pop	{r4, pc}
 8002c04:	08020380 	.word	0x08020380
 8002c08:	0801e790 	.word	0x0801e790

08002c0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8002c0c:	b570      	push	{r4, r5, r6, lr}
 8002c0e:	4604      	mov	r4, r0
          firstChild(0)
 8002c10:	f7ff fdac 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002c14:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8002c18:	4626      	mov	r6, r4
 8002c1a:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	2500      	movs	r5, #0
 8002c20:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002c24:	4b0d      	ldr	r3, [pc, #52]	; (8002c5c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev+0x50>)
 8002c26:	62a5      	str	r5, [r4, #40]	; 0x28
 8002c28:	6325      	str	r5, [r4, #48]	; 0x30
 8002c2a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002c2e:	4630      	mov	r0, r6
 8002c30:	f7ff ffbc 	bl	8002bac <_ZN8touchgfx3BoxC1Ev>
 8002c34:	4b0a      	ldr	r3, [pc, #40]	; (8002c60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev+0x54>)
 8002c36:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002c38:	462a      	mov	r2, r5
 8002c3a:	4629      	mov	r1, r5
 8002c3c:	4630      	mov	r0, r6
        : color(0)
 8002c3e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002c42:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002c46:	6625      	str	r5, [r4, #96]	; 0x60
 8002c48:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002c4c:	f7ff fda0 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002c50:	4620      	mov	r0, r4
 8002c52:	4631      	mov	r1, r6
 8002c54:	f007 fbb8 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002c58:	4620      	mov	r0, r4
 8002c5a:	bd70      	pop	{r4, r5, r6, pc}
 8002c5c:	0801f004 	.word	0x0801f004
 8002c60:	08020568 	.word	0x08020568

08002c64 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8002c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c68:	ed2d 8b04 	vpush	{d8-d9}
 8002c6c:	4604      	mov	r4, r0
 8002c6e:	b08b      	sub	sp, #44	; 0x2c
 8002c70:	f00c fc2c 	bl	800f4cc <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 8002c74:	4622      	mov	r2, r4
 8002c76:	2500      	movs	r5, #0
 8002c78:	4bb7      	ldr	r3, [pc, #732]	; (8002f58 <_ZN15Screen2ViewBaseC1Ev+0x2f4>)
 8002c7a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002c7c:	f842 3b40 	str.w	r3, [r2], #64
 8002c80:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002c84:	4610      	mov	r0, r2
 8002c86:	ee08 2a10 	vmov	s16, r2
 8002c8a:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8002c8e:	f7ff ff8d 	bl	8002bac <_ZN8touchgfx3BoxC1Ev>
        : Widget(), bitmap(bitmap), alpha(255)
 8002c92:	2226      	movs	r2, #38	; 0x26
 8002c94:	4629      	mov	r1, r5
 8002c96:	4630      	mov	r0, r6
 8002c98:	f8ad 8020 	strh.w	r8, [sp, #32]
 8002c9c:	f01a fa06 	bl	801d0ac <memset>
 8002ca0:	4630      	mov	r0, r6
 8002ca2:	f7ff fd63 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8002ca6:	4bad      	ldr	r3, [pc, #692]	; (8002f5c <_ZN15Screen2ViewBaseC1Ev+0x2f8>)
 8002ca8:	66e3      	str	r3, [r4, #108]	; 0x6c
        Image::setBitmap(bitmap);
 8002caa:	af08      	add	r7, sp, #32
        : Widget(), bitmap(bitmap), alpha(255)
 8002cac:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8002cb0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bitmap);
 8002cb4:	4639      	mov	r1, r7
        : Widget(), bitmap(bitmap), alpha(255)
 8002cb6:	f884 8094 	strb.w	r8, [r4, #148]	; 0x94
        Image::setBitmap(bitmap);
 8002cba:	4630      	mov	r0, r6
 8002cbc:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 8002cc0:	f009 fc07 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002cc4:	4650      	mov	r0, sl
 8002cc6:	f7ff ff85 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8002cca:	f104 09d8 	add.w	r9, r4, #216	; 0xd8
 8002cce:	4ba4      	ldr	r3, [pc, #656]	; (8002f60 <_ZN15Screen2ViewBaseC1Ev+0x2fc>)
 8002cd0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002cd4:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 8002cd8:	4648      	mov	r0, r9
 8002cda:	f504 78a8 	add.w	r8, r4, #336	; 0x150
 8002cde:	f7ff ff95 	bl	8002c0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev>
 8002ce2:	4640      	mov	r0, r8
 8002ce4:	f7ff ff92 	bl	8002c0c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEEC1Ev>
 8002ce8:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8002cec:	4618      	mov	r0, r3
 8002cee:	ee08 3a90 	vmov	s17, r3
 8002cf2:	f7ff ff6f 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8002cf6:	f504 7301 	add.w	r3, r4, #516	; 0x204
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	ee09 3a10 	vmov	s18, r3
 8002d00:	f7ff ff68 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8002d04:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002d08:	4618      	mov	r0, r3
 8002d0a:	ee09 3a90 	vmov	s19, r3
 8002d0e:	f009 fbb9 	bl	800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002d12:	4b94      	ldr	r3, [pc, #592]	; (8002f64 <_ZN15Screen2ViewBaseC1Ev+0x300>)
 8002d14:	e9c4 34a2 	strd	r3, r4, [r4, #648]	; 0x288
 8002d18:	4b93      	ldr	r3, [pc, #588]	; (8002f68 <_ZN15Screen2ViewBaseC1Ev+0x304>)
 8002d1a:	e9c4 35a4 	strd	r3, r5, [r4, #656]	; 0x290
 8002d1e:	4b93      	ldr	r3, [pc, #588]	; (8002f6c <_ZN15Screen2ViewBaseC1Ev+0x308>)
 8002d20:	e9c4 34a6 	strd	r3, r4, [r4, #664]	; 0x298
 8002d24:	4b92      	ldr	r3, [pc, #584]	; (8002f70 <_ZN15Screen2ViewBaseC1Ev+0x30c>)
 8002d26:	e9c4 35a8 	strd	r3, r5, [r4, #672]	; 0x2a0
    __background.setPosition(0, 0, 240, 320);
 8002d2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002d2e:	ee18 0a10 	vmov	r0, s16
 8002d32:	9300      	str	r3, [sp, #0]
 8002d34:	462a      	mov	r2, r5
 8002d36:	23f0      	movs	r3, #240	; 0xf0
 8002d38:	4629      	mov	r1, r5
 8002d3a:	f7ff ff24 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002d3e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    image1.setXY(0, 0);
 8002d42:	462a      	mov	r2, r5
 8002d44:	66a3      	str	r3, [r4, #104]	; 0x68
 8002d46:	4629      	mov	r1, r5
 8002d48:	4630      	mov	r0, r6
 8002d4a:	f7ff fd21 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8002d4e:	230a      	movs	r3, #10
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_PORTRAIT_TEXTURE_240X320PX_ID));
 8002d50:	4639      	mov	r1, r7
 8002d52:	4630      	mov	r0, r6
 8002d54:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002d58:	f009 fbbb 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setPosition(55, 85, 131, 37);
 8002d5c:	2325      	movs	r3, #37	; 0x25
 8002d5e:	9300      	str	r3, [sp, #0]
 8002d60:	2255      	movs	r2, #85	; 0x55
 8002d62:	2383      	movs	r3, #131	; 0x83
 8002d64:	2137      	movs	r1, #55	; 0x37
 8002d66:	4650      	mov	r0, sl
 8002d68:	f7ff ff0d 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002d6c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002d70:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d74:	4b7f      	ldr	r3, [pc, #508]	; (8002f74 <_ZN15Screen2ViewBaseC1Ev+0x310>)
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002d76:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
 8002d7a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4).getText());
 8002d7c:	f504 7b1f 	add.w	fp, r4, #636	; 0x27c
 8002d80:	b92b      	cbnz	r3, 8002d8e <_ZN15Screen2ViewBaseC1Ev+0x12a>
 8002d82:	4b7d      	ldr	r3, [pc, #500]	; (8002f78 <_ZN15Screen2ViewBaseC1Ev+0x314>)
 8002d84:	4a7d      	ldr	r2, [pc, #500]	; (8002f7c <_ZN15Screen2ViewBaseC1Ev+0x318>)
 8002d86:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002d88:	487d      	ldr	r0, [pc, #500]	; (8002f80 <_ZN15Screen2ViewBaseC1Ev+0x31c>)
 8002d8a:	f01a f805 	bl	801cd98 <__assert_func>
 8002d8e:	4b7d      	ldr	r3, [pc, #500]	; (8002f84 <_ZN15Screen2ViewBaseC1Ev+0x320>)
 8002d90:	881b      	ldrh	r3, [r3, #0]
 8002d92:	2b03      	cmp	r3, #3
 8002d94:	d803      	bhi.n	8002d9e <_ZN15Screen2ViewBaseC1Ev+0x13a>
 8002d96:	4b7c      	ldr	r3, [pc, #496]	; (8002f88 <_ZN15Screen2ViewBaseC1Ev+0x324>)
 8002d98:	4a78      	ldr	r2, [pc, #480]	; (8002f7c <_ZN15Screen2ViewBaseC1Ev+0x318>)
 8002d9a:	21af      	movs	r1, #175	; 0xaf
 8002d9c:	e7f4      	b.n	8002d88 <_ZN15Screen2ViewBaseC1Ev+0x124>
        return texts->getText(typedTextId);
 8002d9e:	4b7b      	ldr	r3, [pc, #492]	; (8002f8c <_ZN15Screen2ViewBaseC1Ev+0x328>)
 8002da0:	2103      	movs	r1, #3
 8002da2:	6818      	ldr	r0, [r3, #0]
 8002da4:	f001 fc74 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 8002da8:	4a79      	ldr	r2, [pc, #484]	; (8002f90 <_ZN15Screen2ViewBaseC1Ev+0x32c>)
 8002daa:	4603      	mov	r3, r0
 8002dac:	2105      	movs	r1, #5
 8002dae:	4658      	mov	r0, fp
 8002db0:	f00e f826 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002db4:	4b77      	ldr	r3, [pc, #476]	; (8002f94 <_ZN15Screen2ViewBaseC1Ev+0x330>)
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002db6:	f8c4 b0d4 	str.w	fp, [r4, #212]	; 0xd4
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 8002dba:	4639      	mov	r1, r7
        borderBox.setPosition(x, y, width, height);
 8002dbc:	f04f 0b32 	mov.w	fp, #50	; 0x32
 8002dc0:	4650      	mov	r0, sl
 8002dc2:	9308      	str	r3, [sp, #32]
 8002dc4:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8002dc8:	f009 f81c 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002dcc:	f8cd b000 	str.w	fp, [sp]
 8002dd0:	465b      	mov	r3, fp
 8002dd2:	462a      	mov	r2, r5
 8002dd4:	4629      	mov	r1, r5
 8002dd6:	f504 7086 	add.w	r0, r4, #268	; 0x10c
 8002dda:	f7ff fed4 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002dde:	f04f 0205 	mov.w	r2, #5
        down = colorPressed;
 8002de2:	496d      	ldr	r1, [pc, #436]	; (8002f98 <_ZN15Screen2ViewBaseC1Ev+0x334>)
        borderDown = borderColorPressed;
 8002de4:	4b6d      	ldr	r3, [pc, #436]	; (8002f9c <_ZN15Screen2ViewBaseC1Ev+0x338>)
 8002de6:	f8a4 213c 	strh.w	r2, [r4, #316]	; 0x13c
 8002dea:	486d      	ldr	r0, [pc, #436]	; (8002fa0 <_ZN15Screen2ViewBaseC1Ev+0x33c>)
        down = colorPressed;
 8002dec:	4a6d      	ldr	r2, [pc, #436]	; (8002fa4 <_ZN15Screen2ViewBaseC1Ev+0x340>)
        borderDown = borderColorPressed;
 8002dee:	e9c4 0352 	strd	r0, r3, [r4, #328]	; 0x148
        down = colorPressed;
 8002df2:	e9c4 2150 	strd	r2, r1, [r4, #320]	; 0x140
        handlePressedUpdated();
 8002df6:	4648      	mov	r0, r9
 8002df8:	f7ff fe32 	bl	8002a60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setPosition(35, 173, 50, 50);
 8002dfc:	f8cd b000 	str.w	fp, [sp]
 8002e00:	465b      	mov	r3, fp
 8002e02:	4648      	mov	r0, r9
 8002e04:	22ad      	movs	r2, #173	; 0xad
 8002e06:	2123      	movs	r1, #35	; 0x23
 8002e08:	f7ff febd 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setAction(flexButtonCallback);
 8002e0c:	f504 7e26 	add.w	lr, r4, #664	; 0x298
        action = &callback;
 8002e10:	f8c4 e108 	str.w	lr, [r4, #264]	; 0x108
        borderBox.setPosition(x, y, width, height);
 8002e14:	465b      	mov	r3, fp
 8002e16:	f8cd b000 	str.w	fp, [sp]
 8002e1a:	462a      	mov	r2, r5
 8002e1c:	4629      	mov	r1, r5
 8002e1e:	f504 70c2 	add.w	r0, r4, #388	; 0x184
 8002e22:	f8cd e00c 	str.w	lr, [sp, #12]
 8002e26:	f7ff feae 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002e2a:	495b      	ldr	r1, [pc, #364]	; (8002f98 <_ZN15Screen2ViewBaseC1Ev+0x334>)
 8002e2c:	4a5d      	ldr	r2, [pc, #372]	; (8002fa4 <_ZN15Screen2ViewBaseC1Ev+0x340>)
        borderUp = borderColorReleased;
 8002e2e:	485c      	ldr	r0, [pc, #368]	; (8002fa0 <_ZN15Screen2ViewBaseC1Ev+0x33c>)
 8002e30:	f8c4 01c0 	str.w	r0, [r4, #448]	; 0x1c0
 8002e34:	f04f 0c05 	mov.w	ip, #5
        down = colorPressed;
 8002e38:	e9c4 216e 	strd	r2, r1, [r4, #440]	; 0x1b8
        borderDown = borderColorPressed;
 8002e3c:	f502 124c 	add.w	r2, r2, #3342336	; 0x330000
 8002e40:	f8a4 c1b4 	strh.w	ip, [r4, #436]	; 0x1b4
 8002e44:	f8c4 21c4 	str.w	r2, [r4, #452]	; 0x1c4
        handlePressedUpdated();
 8002e48:	4640      	mov	r0, r8
 8002e4a:	f7ff fe09 	bl	8002a60 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18TouchButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setPosition(155, 173, 50, 50);
 8002e4e:	465b      	mov	r3, fp
 8002e50:	f8cd b000 	str.w	fp, [sp]
 8002e54:	4640      	mov	r0, r8
 8002e56:	22ad      	movs	r2, #173	; 0xad
 8002e58:	219b      	movs	r1, #155	; 0x9b
 8002e5a:	f7ff fe94 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e5e:	9a03      	ldr	r2, [sp, #12]
 8002e60:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
    textArea2.setXY(167, 135);
 8002e64:	ee18 0a90 	vmov	r0, s17
 8002e68:	2287      	movs	r2, #135	; 0x87
 8002e6a:	21a7      	movs	r1, #167	; 0xa7
 8002e6c:	f7ff fc90 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8002e70:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002e74:	4b47      	ldr	r3, [pc, #284]	; (8002f94 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 8002e76:	f8c4 21f8 	str.w	r2, [r4, #504]	; 0x1f8
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 8002e7a:	ee18 0a90 	vmov	r0, s17
        linespace = space;
 8002e7e:	f8a4 51fc 	strh.w	r5, [r4, #508]	; 0x1fc
 8002e82:	f04f 0b01 	mov.w	fp, #1
 8002e86:	4639      	mov	r1, r7
 8002e88:	9308      	str	r3, [sp, #32]
 8002e8a:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8002e8e:	f008 ffb9 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2_1.setXY(32, 135);
 8002e92:	ee19 0a10 	vmov	r0, s18
 8002e96:	2287      	movs	r2, #135	; 0x87
 8002e98:	2120      	movs	r1, #32
 8002e9a:	f7ff fc79 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8002e9e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002ea2:	4b3c      	ldr	r3, [pc, #240]	; (8002f94 <_ZN15Screen2ViewBaseC1Ev+0x330>)
 8002ea4:	f8c4 2234 	str.w	r2, [r4, #564]	; 0x234
    textArea2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8002ea8:	ee19 0a10 	vmov	r0, s18
        linespace = space;
 8002eac:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
 8002eb0:	4639      	mov	r1, r7
 8002eb2:	2502      	movs	r5, #2
 8002eb4:	9308      	str	r3, [sp, #32]
 8002eb6:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8002eba:	f008 ffa3 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonWithIcon1.setXY(35, 247);
 8002ebe:	ee19 0a90 	vmov	r0, s19
 8002ec2:	22f7      	movs	r2, #247	; 0xf7
 8002ec4:	2123      	movs	r1, #35	; 0x23
 8002ec6:	f7ff fc63 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8002eca:	2306      	movs	r3, #6
 8002ecc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002ed0:	2303      	movs	r3, #3
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REFRESH_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8002ed2:	aa06      	add	r2, sp, #24
 8002ed4:	ee19 0a90 	vmov	r0, s19
 8002ed8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002edc:	a905      	add	r1, sp, #20
 8002ede:	ab07      	add	r3, sp, #28
 8002ee0:	9700      	str	r7, [sp, #0]
 8002ee2:	f8ad 5018 	strh.w	r5, [sp, #24]
 8002ee6:	f8ad b014 	strh.w	fp, [sp, #20]
 8002eea:	f009 fa28 	bl	800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8002eee:	2346      	movs	r3, #70	; 0x46
 8002ef0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
        iconY = y;
 8002ef4:	2310      	movs	r3, #16
 8002ef6:	1d25      	adds	r5, r4, #4
 8002ef8:	f8a4 327a 	strh.w	r3, [r4, #634]	; 0x27a
    buttonWithIcon1.setAction(buttonCallback);
 8002efc:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002f00:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
 8002f04:	ee18 1a10 	vmov	r1, s16
 8002f08:	4628      	mov	r0, r5
 8002f0a:	f007 fa5d 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f0e:	4631      	mov	r1, r6
 8002f10:	4628      	mov	r0, r5
 8002f12:	f007 fa59 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f16:	4651      	mov	r1, sl
 8002f18:	4628      	mov	r0, r5
 8002f1a:	f007 fa55 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f1e:	4649      	mov	r1, r9
 8002f20:	4628      	mov	r0, r5
 8002f22:	f007 fa51 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f26:	4641      	mov	r1, r8
 8002f28:	4628      	mov	r0, r5
 8002f2a:	f007 fa4d 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f2e:	ee18 1a90 	vmov	r1, s17
 8002f32:	4628      	mov	r0, r5
 8002f34:	f007 fa48 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f38:	ee19 1a10 	vmov	r1, s18
 8002f3c:	4628      	mov	r0, r5
 8002f3e:	f007 fa43 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f42:	4628      	mov	r0, r5
 8002f44:	ee19 1a90 	vmov	r1, s19
 8002f48:	f007 fa3e 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f4c:	4620      	mov	r0, r4
 8002f4e:	b00b      	add	sp, #44	; 0x2c
 8002f50:	ecbd 8b04 	vpop	{d8-d9}
 8002f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f58:	0801f0c8 	.word	0x0801f0c8
 8002f5c:	08020674 	.word	0x08020674
 8002f60:	080204c0 	.word	0x080204c0
 8002f64:	0801f098 	.word	0x0801f098
 8002f68:	08002b6f 	.word	0x08002b6f
 8002f6c:	0801f0b0 	.word	0x0801f0b0
 8002f70:	08002b51 	.word	0x08002b51
 8002f74:	20012e14 	.word	0x20012e14
 8002f78:	0801eef0 	.word	0x0801eef0
 8002f7c:	0801ef32 	.word	0x0801ef32
 8002f80:	0801ef60 	.word	0x0801ef60
 8002f84:	20012e18 	.word	0x20012e18
 8002f88:	0801efa7 	.word	0x0801efa7
 8002f8c:	20012e20 	.word	0x20012e20
 8002f90:	0801eff9 	.word	0x0801eff9
 8002f94:	0801e790 	.word	0x0801e790
 8002f98:	ff0099cc 	.word	0xff0099cc
 8002f9c:	ff336699 	.word	0xff336699
 8002fa0:	ff003366 	.word	0xff003366
 8002fa4:	ff006699 	.word	0xff006699

08002fa8 <_ZN15Screen3ViewBaseD1Ev>:

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase() {}
 8002fa8:	4770      	bx	lr

08002faa <_ZN15Screen3ViewBase11setupScreenEv>:
}

void Screen3ViewBase::setupScreen()
{

}
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fac:	4770      	bx	lr

08002fae <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002fae:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002fb0:	68c2      	ldr	r2, [r0, #12]
 8002fb2:	6844      	ldr	r4, [r0, #4]
 8002fb4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002fb6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002fb8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002fbc:	07d2      	lsls	r2, r2, #31
 8002fbe:	bf48      	it	mi
 8002fc0:	5962      	ldrmi	r2, [r4, r5]
 8002fc2:	689b      	ldr	r3, [r3, #8]
    }
 8002fc4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002fc6:	bf48      	it	mi
 8002fc8:	58d3      	ldrmi	r3, [r2, r3]
 8002fca:	4718      	bx	r3

08002fcc <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002fcc:	6843      	ldr	r3, [r0, #4]
 8002fce:	b12b      	cbz	r3, 8002fdc <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002fd0:	6883      	ldr	r3, [r0, #8]
 8002fd2:	b92b      	cbnz	r3, 8002fe0 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002fd4:	68c0      	ldr	r0, [r0, #12]
 8002fd6:	f000 0001 	and.w	r0, r0, #1
 8002fda:	4770      	bx	lr
 8002fdc:	4618      	mov	r0, r3
 8002fde:	4770      	bx	lr
 8002fe0:	2001      	movs	r0, #1
    }
 8002fe2:	4770      	bx	lr

08002fe4 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fe4:	b510      	push	{r4, lr}
 8002fe6:	2110      	movs	r1, #16
 8002fe8:	4604      	mov	r4, r0
 8002fea:	f019 fea7 	bl	801cd3c <_ZdlPvj>
 8002fee:	4620      	mov	r0, r4
 8002ff0:	bd10      	pop	{r4, pc}

08002ff2 <_ZN15Screen3ViewBaseD0Ev>:
 8002ff2:	b510      	push	{r4, lr}
 8002ff4:	f44f 71e0 	mov.w	r1, #448	; 0x1c0
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	f019 fe9f 	bl	801cd3c <_ZdlPvj>
 8002ffe:	4620      	mov	r0, r4
 8003000:	bd10      	pop	{r4, pc}

08003002 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003002:	b508      	push	{r3, lr}
    if (&src == &buttonWithIcon1)
 8003004:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003008:	4299      	cmp	r1, r3
 800300a:	d105      	bne.n	8003018 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800300c:	f00a ff84 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
        //ChangeScreen5
        //When buttonWithIcon2 clicked change screen to Screen4
        //Go to Screen4 with no screen transition
        application().gotoScreen4ScreenNoTransition();
    }
}
 8003010:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8003014:	f7fe bfb8 	b.w	8001f88 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    else if (&src == &buttonWithIcon2)
 8003018:	f500 70b6 	add.w	r0, r0, #364	; 0x16c
 800301c:	4281      	cmp	r1, r0
 800301e:	d105      	bne.n	800302c <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8003020:	f00a ff7a 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003024:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen4ScreenNoTransition();
 8003028:	f7fe bfde 	b.w	8001fe8 <_ZN23FrontendApplicationBase29gotoScreen4ScreenNoTransitionEv>
}
 800302c:	bd08      	pop	{r3, pc}
	...

08003030 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bitmap = Bitmap())
 8003030:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bitmap), alpha(255)
 8003032:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bitmap = Bitmap())
 8003034:	4604      	mov	r4, r0
 8003036:	460d      	mov	r5, r1
        : Widget(), bitmap(bitmap), alpha(255)
 8003038:	2100      	movs	r1, #0
 800303a:	f01a f837 	bl	801d0ac <memset>
 800303e:	4620      	mov	r0, r4
 8003040:	f7ff fb94 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8003044:	4b06      	ldr	r3, [pc, #24]	; (8003060 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8003046:	6023      	str	r3, [r4, #0]
 8003048:	882b      	ldrh	r3, [r5, #0]
 800304a:	84e3      	strh	r3, [r4, #38]	; 0x26
 800304c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bitmap);
 800304e:	4620      	mov	r0, r4
        : Widget(), bitmap(bitmap), alpha(255)
 8003050:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bitmap);
 8003054:	4629      	mov	r1, r5
 8003056:	f009 fa3c 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800305a:	4620      	mov	r0, r4
 800305c:	bd38      	pop	{r3, r4, r5, pc}
 800305e:	bf00      	nop
 8003060:	08020674 	.word	0x08020674

08003064 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003068:	ed2d 8b02 	vpush	{d8}
 800306c:	4604      	mov	r4, r0
 800306e:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003070:	4625      	mov	r5, r4
 8003072:	f04f 0b00 	mov.w	fp, #0
 8003076:	f00c fa29 	bl	800f4cc <_ZN8touchgfx6ScreenC1Ev>
 800307a:	4b9f      	ldr	r3, [pc, #636]	; (80032f8 <_ZN15Screen3ViewBaseC1Ev+0x294>)
 800307c:	f8c4 b03c 	str.w	fp, [r4, #60]	; 0x3c
 8003080:	f845 3b40 	str.w	r3, [r5], #64
        : Widget(), alpha(255), color(0)
 8003084:	2226      	movs	r2, #38	; 0x26
 8003086:	4659      	mov	r1, fp
 8003088:	4628      	mov	r0, r5
 800308a:	f01a f80f 	bl	801d0ac <memset>
 800308e:	4628      	mov	r0, r5
 8003090:	f7ff fb6c 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 8003094:	4b99      	ldr	r3, [pc, #612]	; (80032fc <_ZN15Screen3ViewBaseC1Ev+0x298>)
 8003096:	6423      	str	r3, [r4, #64]	; 0x40
 8003098:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800309c:	23ff      	movs	r3, #255	; 0xff
 800309e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 80030a2:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80030a6:	f104 0998 	add.w	r9, r4, #152	; 0x98
 80030aa:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 80030ae:	a908      	add	r1, sp, #32
 80030b0:	4650      	mov	r0, sl
 80030b2:	f104 08c4 	add.w	r8, r4, #196	; 0xc4
 80030b6:	f8ad 7020 	strh.w	r7, [sp, #32]
 80030ba:	f7ff ffb9 	bl	8003030 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030be:	a908      	add	r1, sp, #32
 80030c0:	4648      	mov	r0, r9
 80030c2:	f104 06f0 	add.w	r6, r4, #240	; 0xf0
 80030c6:	f8ad 7020 	strh.w	r7, [sp, #32]
 80030ca:	f7ff ffb1 	bl	8003030 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030ce:	a908      	add	r1, sp, #32
 80030d0:	4640      	mov	r0, r8
 80030d2:	f8ad 7020 	strh.w	r7, [sp, #32]
 80030d6:	f7ff ffab 	bl	8003030 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80030da:	4659      	mov	r1, fp
 80030dc:	2226      	movs	r2, #38	; 0x26
 80030de:	4630      	mov	r0, r6
 80030e0:	f019 ffe4 	bl	801d0ac <memset>
 80030e4:	4630      	mov	r0, r6
 80030e6:	f7ff fb41 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 80030ea:	4b85      	ldr	r3, [pc, #532]	; (8003300 <_ZN15Screen3ViewBaseC1Ev+0x29c>)
 80030ec:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80030f0:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80030f4:	f8a4 711c 	strh.w	r7, [r4, #284]	; 0x11c
 80030f8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80030fc:	f504 7798 	add.w	r7, r4, #304	; 0x130
        : TextArea(), wildcard(0)
 8003100:	4b80      	ldr	r3, [pc, #512]	; (8003304 <_ZN15Screen3ViewBaseC1Ev+0x2a0>)
 8003102:	f8c4 b120 	str.w	fp, [r4, #288]	; 0x120
 8003106:	f8a4 b128 	strh.w	fp, [r4, #296]	; 0x128
 800310a:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
 800310e:	f8c4 b12c 	str.w	fp, [r4, #300]	; 0x12c
 8003112:	4638      	mov	r0, r7
 8003114:	f009 f9b6 	bl	800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003118:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 800311c:	4618      	mov	r0, r3
 800311e:	ee08 3a10 	vmov	s16, r3
 8003122:	f009 f9af 	bl	800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003126:	4b78      	ldr	r3, [pc, #480]	; (8003308 <_ZN15Screen3ViewBaseC1Ev+0x2a4>)
 8003128:	e9c4 346c 	strd	r3, r4, [r4, #432]	; 0x1b0
 800312c:	4b77      	ldr	r3, [pc, #476]	; (800330c <_ZN15Screen3ViewBaseC1Ev+0x2a8>)
        setXY(x, y);
 800312e:	465a      	mov	r2, fp
 8003130:	e9c4 3b6e 	strd	r3, fp, [r4, #440]	; 0x1b8
 8003134:	4659      	mov	r1, fp
 8003136:	4628      	mov	r0, r5
 8003138:	f7ff fb2a 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800313c:	21f0      	movs	r1, #240	; 0xf0
 800313e:	4628      	mov	r0, r5
 8003140:	f7ff fa92 	bl	8002668 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8003144:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8003148:	4628      	mov	r0, r5
 800314a:	f7ff fa8f 	bl	800266c <_ZN8touchgfx8Drawable9setHeightEs>
        this->color = color;
 800314e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003152:	66a3      	str	r3, [r4, #104]	; 0x68
    image1.setXY(0, 0);
 8003154:	465a      	mov	r2, fp
 8003156:	4659      	mov	r1, fp
 8003158:	4650      	mov	r0, sl
 800315a:	f7ff fb19 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800315e:	220a      	movs	r2, #10
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_PORTRAIT_TEXTURE_240X320PX_ID));
 8003160:	a908      	add	r1, sp, #32
 8003162:	4650      	mov	r0, sl
 8003164:	f8ad 2020 	strh.w	r2, [sp, #32]
 8003168:	f009 f9b3 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LightOFF.setXY(96, 96);
 800316c:	2260      	movs	r2, #96	; 0x60
 800316e:	4611      	mov	r1, r2
 8003170:	4648      	mov	r0, r9
 8003172:	f7ff fb0d 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8003176:	220d      	movs	r2, #13
    LightOFF.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_REMOVE_48_ID));
 8003178:	a908      	add	r1, sp, #32
 800317a:	4648      	mov	r0, r9
 800317c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8003180:	f009 f9a7 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LightON.setXY(96, 96);
 8003184:	2260      	movs	r2, #96	; 0x60
 8003186:	4611      	mov	r1, r2
 8003188:	4640      	mov	r0, r8
 800318a:	f7ff fb01 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800318e:	220b      	movs	r2, #11
        visible = vis;
 8003190:	f884 b0e9 	strb.w	fp, [r4, #233]	; 0xe9
    LightON.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_DONE_48_ID));
 8003194:	a908      	add	r1, sp, #32
 8003196:	4640      	mov	r0, r8
 8003198:	f8ad 2020 	strh.w	r2, [sp, #32]
 800319c:	f009 f999 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setXY(63, 39);
 80031a0:	2227      	movs	r2, #39	; 0x27
 80031a2:	213f      	movs	r1, #63	; 0x3f
 80031a4:	4630      	mov	r0, r6
 80031a6:	f7ff faf3 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80031aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80031ae:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80031b2:	4b57      	ldr	r3, [pc, #348]	; (8003310 <_ZN15Screen3ViewBaseC1Ev+0x2ac>)
        linespace = space;
 80031b4:	f8a4 b124 	strh.w	fp, [r4, #292]	; 0x124
 80031b8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID6).getText());
 80031ba:	f504 7bd4 	add.w	fp, r4, #424	; 0x1a8
 80031be:	b92b      	cbnz	r3, 80031cc <_ZN15Screen3ViewBaseC1Ev+0x168>
 80031c0:	4b54      	ldr	r3, [pc, #336]	; (8003314 <_ZN15Screen3ViewBaseC1Ev+0x2b0>)
 80031c2:	4a55      	ldr	r2, [pc, #340]	; (8003318 <_ZN15Screen3ViewBaseC1Ev+0x2b4>)
 80031c4:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80031c6:	4855      	ldr	r0, [pc, #340]	; (800331c <_ZN15Screen3ViewBaseC1Ev+0x2b8>)
 80031c8:	f019 fde6 	bl	801cd98 <__assert_func>
 80031cc:	4b54      	ldr	r3, [pc, #336]	; (8003320 <_ZN15Screen3ViewBaseC1Ev+0x2bc>)
 80031ce:	881b      	ldrh	r3, [r3, #0]
 80031d0:	2b05      	cmp	r3, #5
 80031d2:	d803      	bhi.n	80031dc <_ZN15Screen3ViewBaseC1Ev+0x178>
 80031d4:	4b53      	ldr	r3, [pc, #332]	; (8003324 <_ZN15Screen3ViewBaseC1Ev+0x2c0>)
 80031d6:	4a50      	ldr	r2, [pc, #320]	; (8003318 <_ZN15Screen3ViewBaseC1Ev+0x2b4>)
 80031d8:	21af      	movs	r1, #175	; 0xaf
 80031da:	e7f4      	b.n	80031c6 <_ZN15Screen3ViewBaseC1Ev+0x162>
        return texts->getText(typedTextId);
 80031dc:	4b52      	ldr	r3, [pc, #328]	; (8003328 <_ZN15Screen3ViewBaseC1Ev+0x2c4>)
 80031de:	2105      	movs	r1, #5
 80031e0:	6818      	ldr	r0, [r3, #0]
 80031e2:	f001 fa55 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 80031e6:	4a51      	ldr	r2, [pc, #324]	; (800332c <_ZN15Screen3ViewBaseC1Ev+0x2c8>)
 80031e8:	4603      	mov	r3, r0
 80031ea:	2104      	movs	r1, #4
 80031ec:	4658      	mov	r0, fp
 80031ee:	f00d fe07 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80031f2:	f8c4 b12c 	str.w	fp, [r4, #300]	; 0x12c
    textArea1.resizeToCurrentText();
 80031f6:	4630      	mov	r0, r6
 80031f8:	f008 fde7 	bl	800bdca <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80031fc:	f04f 0b04 	mov.w	fp, #4
 8003200:	4b3f      	ldr	r3, [pc, #252]	; (8003300 <_ZN15Screen3ViewBaseC1Ev+0x29c>)
 8003202:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8003204:	a908      	add	r1, sp, #32
 8003206:	4630      	mov	r0, r6
 8003208:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800320c:	f008 fdfa 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonWithIcon1.setXY(35, 249);
 8003210:	4638      	mov	r0, r7
 8003212:	22f9      	movs	r2, #249	; 0xf9
 8003214:	2123      	movs	r1, #35	; 0x23
 8003216:	f7ff fabb 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800321a:	f04f 0301 	mov.w	r3, #1
 800321e:	f8ad 3014 	strh.w	r3, [sp, #20]
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_GO_BACK_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8003222:	a907      	add	r1, sp, #28
 8003224:	ab08      	add	r3, sp, #32
 8003226:	9300      	str	r3, [sp, #0]
 8003228:	f04f 0202 	mov.w	r2, #2
 800322c:	460b      	mov	r3, r1
 800322e:	a906      	add	r1, sp, #24
 8003230:	f8ad 2018 	strh.w	r2, [sp, #24]
 8003234:	f8ad b01c 	strh.w	fp, [sp, #28]
 8003238:	460a      	mov	r2, r1
 800323a:	f04f 0b03 	mov.w	fp, #3
 800323e:	a905      	add	r1, sp, #20
 8003240:	4638      	mov	r0, r7
 8003242:	f8ad b020 	strh.w	fp, [sp, #32]
 8003246:	f009 f87a 	bl	800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setAction(buttonCallback);
 800324a:	f504 70d8 	add.w	r0, r4, #432	; 0x1b0
        iconX = x;
 800324e:	2346      	movs	r3, #70	; 0x46
        iconY = y;
 8003250:	f04f 0110 	mov.w	r1, #16
        iconX = x;
 8003254:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        iconY = y;
 8003258:	f8a4 116a 	strh.w	r1, [r4, #362]	; 0x16a
 800325c:	9003      	str	r0, [sp, #12]
 800325e:	f8c4 0158 	str.w	r0, [r4, #344]	; 0x158
    buttonWithIcon2.setXY(35, 189);
 8003262:	22bd      	movs	r2, #189	; 0xbd
 8003264:	ee18 0a10 	vmov	r0, s16
 8003268:	2123      	movs	r1, #35	; 0x23
 800326a:	f7ff fa91 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800326e:	f04f 0301 	mov.w	r3, #1
 8003272:	f8ad 3014 	strh.w	r3, [sp, #20]
    buttonWithIcon2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
 8003276:	a805      	add	r0, sp, #20
 8003278:	ab08      	add	r3, sp, #32
 800327a:	f04f 0202 	mov.w	r2, #2
 800327e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8003282:	9300      	str	r3, [sp, #0]
 8003284:	aa06      	add	r2, sp, #24
 8003286:	ab07      	add	r3, sp, #28
 8003288:	4601      	mov	r1, r0
 800328a:	ee18 0a10 	vmov	r0, s16
 800328e:	f8ad b01c 	strh.w	fp, [sp, #28]
 8003292:	f8ad b020 	strh.w	fp, [sp, #32]
 8003296:	f009 f852 	bl	800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
        iconX = x;
 800329a:	2347      	movs	r3, #71	; 0x47
 800329c:	f8a4 31a4 	strh.w	r3, [r4, #420]	; 0x1a4
        iconY = y;
 80032a0:	f04f 0110 	mov.w	r1, #16
 80032a4:	9b03      	ldr	r3, [sp, #12]
 80032a6:	f8c4 3194 	str.w	r3, [r4, #404]	; 0x194
 80032aa:	1d20      	adds	r0, r4, #4
 80032ac:	f8a4 11a6 	strh.w	r1, [r4, #422]	; 0x1a6
 80032b0:	4629      	mov	r1, r5
 80032b2:	9003      	str	r0, [sp, #12]
 80032b4:	f007 f888 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032b8:	9803      	ldr	r0, [sp, #12]
 80032ba:	4651      	mov	r1, sl
 80032bc:	f007 f884 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032c0:	9803      	ldr	r0, [sp, #12]
 80032c2:	4649      	mov	r1, r9
 80032c4:	f007 f880 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032c8:	9803      	ldr	r0, [sp, #12]
 80032ca:	4641      	mov	r1, r8
 80032cc:	f007 f87c 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032d0:	9803      	ldr	r0, [sp, #12]
 80032d2:	4631      	mov	r1, r6
 80032d4:	f007 f878 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032d8:	9803      	ldr	r0, [sp, #12]
 80032da:	4639      	mov	r1, r7
 80032dc:	f007 f874 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032e0:	9803      	ldr	r0, [sp, #12]
 80032e2:	ee18 1a10 	vmov	r1, s16
 80032e6:	f007 f86f 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032ea:	4620      	mov	r0, r4
 80032ec:	b00b      	add	sp, #44	; 0x2c
 80032ee:	ecbd 8b02 	vpop	{d8}
 80032f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032f6:	bf00      	nop
 80032f8:	0801f11c 	.word	0x0801f11c
 80032fc:	08020428 	.word	0x08020428
 8003300:	0801e790 	.word	0x0801e790
 8003304:	080204c0 	.word	0x080204c0
 8003308:	0801f104 	.word	0x0801f104
 800330c:	08003003 	.word	0x08003003
 8003310:	20012e14 	.word	0x20012e14
 8003314:	0801eef0 	.word	0x0801eef0
 8003318:	0801ef32 	.word	0x0801ef32
 800331c:	0801ef60 	.word	0x0801ef60
 8003320:	20012e18 	.word	0x20012e18
 8003324:	0801efa7 	.word	0x0801efa7
 8003328:	20012e20 	.word	0x20012e20
 800332c:	0801eff9 	.word	0x0801eff9

08003330 <_ZN15Screen4ViewBaseD1Ev>:

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase() {}
 8003330:	4770      	bx	lr

08003332 <_ZN15Screen4ViewBase11clicked_oneEv>:
     * Virtual Action Handlers
     */
    virtual void clicked_one()
    {
        // Override and implement this function in Screen4
    }
 8003332:	4770      	bx	lr

08003334 <_ZN15Screen4ViewBase11clicked_twoEv>:

    virtual void clicked_two()
    {
        // Override and implement this function in Screen4
    }
 8003334:	4770      	bx	lr

08003336 <_ZN15Screen4ViewBase13clicked_threeEv>:

    virtual void clicked_three()
    {
        // Override and implement this function in Screen4
    }
 8003336:	4770      	bx	lr

08003338 <_ZN15Screen4ViewBase12clicked_fourEv>:

    virtual void clicked_four()
    {
        // Override and implement this function in Screen4
    }
 8003338:	4770      	bx	lr

0800333a <_ZN15Screen4ViewBase12clicked_fiveEv>:

    virtual void clicked_five()
    {
        // Override and implement this function in Screen4
    }
 800333a:	4770      	bx	lr

0800333c <_ZN15Screen4ViewBase11clicked_sixEv>:

    virtual void clicked_six()
    {
        // Override and implement this function in Screen4
    }
 800333c:	4770      	bx	lr

0800333e <_ZN15Screen4ViewBase13clicked_sevenEv>:

    virtual void clicked_seven()
    {
        // Override and implement this function in Screen4
    }
 800333e:	4770      	bx	lr

08003340 <_ZN15Screen4ViewBase13clicked_eightEv>:

    virtual void clicked_eight()
    {
        // Override and implement this function in Screen4
    }
 8003340:	4770      	bx	lr

08003342 <_ZN15Screen4ViewBase12clicked_nineEv>:

    virtual void clicked_nine()
    {
        // Override and implement this function in Screen4
    }
 8003342:	4770      	bx	lr

08003344 <_ZN15Screen4ViewBase12clicked_zeroEv>:

    virtual void clicked_zero()
    {
        // Override and implement this function in Screen4
    }
 8003344:	4770      	bx	lr

08003346 <_ZN15Screen4ViewBase11clicked_addEv>:

    virtual void clicked_add()
    {
        // Override and implement this function in Screen4
    }
 8003346:	4770      	bx	lr

08003348 <_ZN15Screen4ViewBase11clicked_mulEv>:

    virtual void clicked_mul()
    {
        // Override and implement this function in Screen4
    }
 8003348:	4770      	bx	lr

0800334a <_ZN15Screen4ViewBase10clicked_eqEv>:

    virtual void clicked_eq()
    {
        // Override and implement this function in Screen4
    }
 800334a:	4770      	bx	lr

0800334c <_ZN15Screen4ViewBase11clicked_divEv>:

    virtual void clicked_div()
    {
        // Override and implement this function in Screen4
    }
 800334c:	4770      	bx	lr

0800334e <_ZN15Screen4ViewBase11clicked_subEv>:

    virtual void clicked_sub()
    {
        // Override and implement this function in Screen4
    }
 800334e:	4770      	bx	lr

08003350 <_ZN15Screen4ViewBase13clicked_clearEv>:

    virtual void clicked_clear()
    {
        // Override and implement this function in Screen4
    }
 8003350:	4770      	bx	lr

08003352 <_ZN15Screen4ViewBase11setupScreenEv>:
}

void Screen4ViewBase::setupScreen()
{

}
 8003352:	4770      	bx	lr

08003354 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
        borderBox.setColor(T::getPressed() ? down : up);
 8003354:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003358:	b12b      	cbz	r3, 8003366 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 800335a:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
 800335c:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800335e:	b123      	cbz	r3, 800336a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 8003360:	6f43      	ldr	r3, [r0, #116]	; 0x74
        borderColor = color;
 8003362:	6603      	str	r3, [r0, #96]	; 0x60
    }
 8003364:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8003366:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8003368:	e7f8      	b.n	800335c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800336a:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800336c:	e7f9      	b.n	8003362 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

0800336e <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800336e:	4770      	bx	lr

08003370 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8003370:	4770      	bx	lr

08003372 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003372:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003374:	68c2      	ldr	r2, [r0, #12]
 8003376:	6844      	ldr	r4, [r0, #4]
 8003378:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800337a:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800337c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003380:	07d2      	lsls	r2, r2, #31
 8003382:	bf48      	it	mi
 8003384:	5962      	ldrmi	r2, [r4, r5]
 8003386:	689b      	ldr	r3, [r3, #8]
    }
 8003388:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800338a:	bf48      	it	mi
 800338c:	58d3      	ldrmi	r3, [r2, r3]
 800338e:	4718      	bx	r3

08003390 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003390:	6843      	ldr	r3, [r0, #4]
 8003392:	b12b      	cbz	r3, 80033a0 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003394:	6883      	ldr	r3, [r0, #8]
 8003396:	b92b      	cbnz	r3, 80033a4 <_ZNK8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003398:	68c0      	ldr	r0, [r0, #12]
 800339a:	f000 0001 	and.w	r0, r0, #1
 800339e:	4770      	bx	lr
 80033a0:	4618      	mov	r0, r3
 80033a2:	4770      	bx	lr
 80033a4:	2001      	movs	r0, #1
    }
 80033a6:	4770      	bx	lr

080033a8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
        alpha = newAlpha;
 80033a8:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80033ac:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    }
 80033b0:	4770      	bx	lr

080033b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 80033b2:	b510      	push	{r4, lr}
 80033b4:	2178      	movs	r1, #120	; 0x78
 80033b6:	4604      	mov	r4, r0
 80033b8:	f019 fcc0 	bl	801cd3c <_ZdlPvj>
 80033bc:	4620      	mov	r0, r4
 80033be:	bd10      	pop	{r4, pc}

080033c0 <_ZN8touchgfx8CallbackI15Screen4ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80033c0:	b510      	push	{r4, lr}
 80033c2:	2110      	movs	r1, #16
 80033c4:	4604      	mov	r4, r0
 80033c6:	f019 fcb9 	bl	801cd3c <_ZdlPvj>
 80033ca:	4620      	mov	r0, r4
 80033cc:	bd10      	pop	{r4, pc}

080033ce <_ZN15Screen4ViewBaseD0Ev>:
    virtual ~Screen4ViewBase() {}
 80033ce:	b510      	push	{r4, lr}
 80033d0:	f44f 6164 	mov.w	r1, #3648	; 0xe40
 80033d4:	4604      	mov	r4, r0
 80033d6:	f019 fcb1 	bl	801cd3c <_ZdlPvj>
 80033da:	4620      	mov	r0, r4
 80033dc:	bd10      	pop	{r4, pc}

080033de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80033de:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 80033e0:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 80033e2:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 80033e6:	4604      	mov	r4, r0
 80033e8:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80033ea:	b99b      	cbnz	r3, 8003414 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80033ec:	b98e      	cbnz	r6, 8003412 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80033ee:	fab3 f383 	clz	r3, r3
 80033f2:	095b      	lsrs	r3, r3, #5
 80033f4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80033f8:	6823      	ldr	r3, [r4, #0]
 80033fa:	4620      	mov	r0, r4
 80033fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003400:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8003402:	6823      	ldr	r3, [r4, #0]
 8003404:	4620      	mov	r0, r4
 8003406:	695b      	ldr	r3, [r3, #20]
 8003408:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800340a:	b116      	cbz	r6, 8003412 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 800340c:	792b      	ldrb	r3, [r5, #4]
 800340e:	2b01      	cmp	r3, #1
 8003410:	d003      	beq.n	800341a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8003412:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003414:	2e00      	cmp	r6, #0
 8003416:	d0fc      	beq.n	8003412 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8003418:	e7e9      	b.n	80033ee <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 800341a:	6823      	ldr	r3, [r4, #0]
 800341c:	4620      	mov	r0, r4
 800341e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    }
 8003422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8003426:	4718      	bx	r3

08003428 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen4ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 8003428:	f100 0298 	add.w	r2, r0, #152	; 0x98
 800342c:	4291      	cmp	r1, r2
{
 800342e:	b510      	push	{r4, lr}
 8003430:	4603      	mov	r3, r0
    if (&src == &flexButton1)
 8003432:	d104      	bne.n	800343e <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
    {
        //clicked_one
        //When flexButton1 clicked call virtual function
        //Call clicked_one
        clicked_one();
 8003434:	6803      	ldr	r3, [r0, #0]
 8003436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        //clicked_clear
        //When flexButtonClear clicked call virtual function
        //Call clicked_clear
        clicked_clear();
    }
}
 8003438:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        clicked_two();
 800343c:	4718      	bx	r3
    else if (&src == &flexButton2)
 800343e:	f500 7288 	add.w	r2, r0, #272	; 0x110
 8003442:	4291      	cmp	r1, r2
 8003444:	d102      	bne.n	800344c <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
        clicked_two();
 8003446:	6803      	ldr	r3, [r0, #0]
 8003448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800344a:	e7f5      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton3)
 800344c:	f500 72c4 	add.w	r2, r0, #392	; 0x188
 8003450:	4291      	cmp	r1, r2
 8003452:	d102      	bne.n	800345a <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        clicked_three();
 8003454:	6803      	ldr	r3, [r0, #0]
 8003456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003458:	e7ee      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton4)
 800345a:	f500 7200 	add.w	r2, r0, #512	; 0x200
 800345e:	4291      	cmp	r1, r2
 8003460:	d102      	bne.n	8003468 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
        clicked_four();
 8003462:	6803      	ldr	r3, [r0, #0]
 8003464:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003466:	e7e7      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton5)
 8003468:	f500 721e 	add.w	r2, r0, #632	; 0x278
 800346c:	4291      	cmp	r1, r2
 800346e:	d102      	bne.n	8003476 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
        clicked_five();
 8003470:	6803      	ldr	r3, [r0, #0]
 8003472:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003474:	e7e0      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton6)
 8003476:	f500 723c 	add.w	r2, r0, #752	; 0x2f0
 800347a:	4291      	cmp	r1, r2
 800347c:	d102      	bne.n	8003484 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5c>
        clicked_six();
 800347e:	6803      	ldr	r3, [r0, #0]
 8003480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003482:	e7d9      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton7)
 8003484:	f500 725a 	add.w	r2, r0, #872	; 0x368
 8003488:	4291      	cmp	r1, r2
 800348a:	d102      	bne.n	8003492 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6a>
        clicked_seven();
 800348c:	6803      	ldr	r3, [r0, #0]
 800348e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003490:	e7d2      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton8)
 8003492:	f500 7278 	add.w	r2, r0, #992	; 0x3e0
 8003496:	4291      	cmp	r1, r2
 8003498:	d102      	bne.n	80034a0 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x78>
        clicked_eight();
 800349a:	6803      	ldr	r3, [r0, #0]
 800349c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800349e:	e7cb      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton9)
 80034a0:	f500 628b 	add.w	r2, r0, #1112	; 0x458
 80034a4:	4291      	cmp	r1, r2
 80034a6:	d102      	bne.n	80034ae <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x86>
        clicked_nine();
 80034a8:	6803      	ldr	r3, [r0, #0]
 80034aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034ac:	e7c4      	b.n	8003438 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButton_add)
 80034ae:	f500 629a 	add.w	r2, r0, #1232	; 0x4d0
 80034b2:	4291      	cmp	r1, r2
 80034b4:	d105      	bne.n	80034c2 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x9a>
        clicked_add();
 80034b6:	6802      	ldr	r2, [r0, #0]
 80034b8:	6d52      	ldr	r2, [r2, #84]	; 0x54
}
 80034ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        clicked_clear();
 80034be:	4618      	mov	r0, r3
 80034c0:	4710      	bx	r2
    else if (&src == &flexButton_mul)
 80034c2:	f500 62a9 	add.w	r2, r0, #1352	; 0x548
 80034c6:	4291      	cmp	r1, r2
 80034c8:	d102      	bne.n	80034d0 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa8>
        clicked_mul();
 80034ca:	6802      	ldr	r2, [r0, #0]
 80034cc:	6d92      	ldr	r2, [r2, #88]	; 0x58
 80034ce:	e7f4      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    else if (&src == &flexButton0)
 80034d0:	f500 62b8 	add.w	r2, r0, #1472	; 0x5c0
 80034d4:	4291      	cmp	r1, r2
 80034d6:	d102      	bne.n	80034de <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb6>
        clicked_zero();
 80034d8:	6802      	ldr	r2, [r0, #0]
 80034da:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80034dc:	e7ed      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    else if (&src == &flexButton_eq)
 80034de:	f500 62c7 	add.w	r2, r0, #1592	; 0x638
 80034e2:	4291      	cmp	r1, r2
 80034e4:	d102      	bne.n	80034ec <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc4>
        clicked_eq();
 80034e6:	6802      	ldr	r2, [r0, #0]
 80034e8:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80034ea:	e7e6      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    else if (&src == &flexButton_sub)
 80034ec:	f500 62d6 	add.w	r2, r0, #1712	; 0x6b0
 80034f0:	4291      	cmp	r1, r2
 80034f2:	d102      	bne.n	80034fa <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
        clicked_sub();
 80034f4:	6802      	ldr	r2, [r0, #0]
 80034f6:	6e52      	ldr	r2, [r2, #100]	; 0x64
 80034f8:	e7df      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    else if (&src == &flexButton_div)
 80034fa:	f500 62e5 	add.w	r2, r0, #1832	; 0x728
 80034fe:	4291      	cmp	r1, r2
 8003500:	d102      	bne.n	8003508 <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>
        clicked_div();
 8003502:	6802      	ldr	r2, [r0, #0]
 8003504:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8003506:	e7d8      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    else if (&src == &flexButton10)
 8003508:	f600 420c 	addw	r2, r0, #3084	; 0xc0c
 800350c:	4291      	cmp	r1, r2
 800350e:	d105      	bne.n	800351c <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003510:	f00a fd02 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen3ScreenNoTransition();
 8003518:	f7fe bd56 	b.w	8001fc8 <_ZN23FrontendApplicationBase29gotoScreen3ScreenNoTransitionEv>
    else if (&src == &flexButtonClear)
 800351c:	f500 624b 	add.w	r2, r0, #3248	; 0xcb0
 8003520:	4291      	cmp	r1, r2
 8003522:	d102      	bne.n	800352a <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x102>
        clicked_clear();
 8003524:	6802      	ldr	r2, [r0, #0]
 8003526:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8003528:	e7c7      	b.n	80034ba <_ZN15Screen4ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
}
 800352a:	bd10      	pop	{r4, pc}

0800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800352c:	b570      	push	{r4, r5, r6, lr}
 800352e:	4604      	mov	r4, r0
 8003530:	f7ff f91c 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8003534:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8003538:	4626      	mov	r6, r4
 800353a:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800353c:	2301      	movs	r3, #1
 800353e:	2500      	movs	r5, #0
 8003540:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8003544:	4b0d      	ldr	r3, [pc, #52]	; (800357c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 8003546:	62a5      	str	r5, [r4, #40]	; 0x28
 8003548:	6325      	str	r5, [r4, #48]	; 0x30
 800354a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 800354e:	4630      	mov	r0, r6
 8003550:	f7ff fb2c 	bl	8002bac <_ZN8touchgfx3BoxC1Ev>
 8003554:	4b0a      	ldr	r3, [pc, #40]	; (8003580 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 8003556:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8003558:	462a      	mov	r2, r5
 800355a:	4629      	mov	r1, r5
 800355c:	4630      	mov	r0, r6
        : color(0)
 800355e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8003562:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8003566:	6625      	str	r5, [r4, #96]	; 0x60
 8003568:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 800356c:	f7ff f910 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003570:	4620      	mov	r0, r4
 8003572:	4631      	mov	r1, r6
 8003574:	f006 ff28 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003578:	4620      	mov	r0, r4
 800357a:	bd70      	pop	{r4, r5, r6, pc}
 800357c:	0801f150 	.word	0x0801f150
 8003580:	08020568 	.word	0x08020568

08003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8003584:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8003586:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8003588:	9b01      	ldr	r3, [sp, #4]
 800358a:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 800358c:	6803      	ldr	r3, [r0, #0]
    }
 800358e:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8003592:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        down = colorPressed;
 8003596:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 800359a:	4718      	bx	r3

0800359c <_ZN15Screen4ViewBaseC1Ev>:
Screen4ViewBase::Screen4ViewBase() :
 800359c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035a0:	ed2d 8b10 	vpush	{d8-d15}
 80035a4:	4604      	mov	r4, r0
 80035a6:	b09f      	sub	sp, #124	; 0x7c
 80035a8:	f00b ff90 	bl	800f4cc <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen4ViewBase::flexButtonCallbackHandler)
 80035ac:	4622      	mov	r2, r4
 80035ae:	2500      	movs	r5, #0
 80035b0:	4be2      	ldr	r3, [pc, #904]	; (800393c <_ZN15Screen4ViewBaseC1Ev+0x3a0>)
 80035b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80035b4:	f842 3b40 	str.w	r3, [r2], #64
 80035b8:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 80035bc:	4610      	mov	r0, r2
 80035be:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80035c2:	ee08 2a10 	vmov	s16, r2
 80035c6:	f7ff faf1 	bl	8002bac <_ZN8touchgfx3BoxC1Ev>
        : Widget(), bitmap(bitmap), alpha(255)
 80035ca:	2226      	movs	r2, #38	; 0x26
 80035cc:	4629      	mov	r1, r5
 80035ce:	4658      	mov	r0, fp
 80035d0:	f8ad 6070 	strh.w	r6, [sp, #112]	; 0x70
 80035d4:	f019 fd6a 	bl	801d0ac <memset>
 80035d8:	4658      	mov	r0, fp
 80035da:	f7ff f8c7 	bl	800276c <_ZN8touchgfx8DrawableC1Ev>
 80035de:	4bd8      	ldr	r3, [pc, #864]	; (8003940 <_ZN15Screen4ViewBaseC1Ev+0x3a4>)
 80035e0:	66e3      	str	r3, [r4, #108]	; 0x6c
 80035e2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80035e6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bitmap);
 80035ea:	a91c      	add	r1, sp, #112	; 0x70
        : Widget(), bitmap(bitmap), alpha(255)
 80035ec:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bitmap);
 80035f0:	4658      	mov	r0, fp
 80035f2:	f008 ff6e 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80035f6:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80035fa:	4618      	mov	r0, r3
 80035fc:	ee0a 3a10 	vmov	s20, r3
 8003600:	f7ff ff94 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003604:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8003608:	4618      	mov	r0, r3
 800360a:	ee0a 3a90 	vmov	s21, r3
 800360e:	f7ff ff8d 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003612:	f504 73c4 	add.w	r3, r4, #392	; 0x188
 8003616:	4618      	mov	r0, r3
 8003618:	ee0b 3a10 	vmov	s22, r3
 800361c:	f7ff ff86 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003620:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003624:	4618      	mov	r0, r3
 8003626:	ee0b 3a90 	vmov	s23, r3
 800362a:	f7ff ff7f 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800362e:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8003632:	4618      	mov	r0, r3
 8003634:	ee0c 3a10 	vmov	s24, r3
 8003638:	f7ff ff78 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800363c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8003640:	4618      	mov	r0, r3
 8003642:	ee0c 3a90 	vmov	s25, r3
 8003646:	f7ff ff71 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800364a:	f504 735a 	add.w	r3, r4, #872	; 0x368
 800364e:	4618      	mov	r0, r3
 8003650:	ee0d 3a10 	vmov	s26, r3
 8003654:	f7ff ff6a 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003658:	f504 7378 	add.w	r3, r4, #992	; 0x3e0
 800365c:	4618      	mov	r0, r3
 800365e:	ee0d 3a90 	vmov	s27, r3
 8003662:	f7ff ff63 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003666:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 800366a:	4618      	mov	r0, r3
 800366c:	ee0e 3a10 	vmov	s28, r3
 8003670:	f7ff ff5c 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003674:	f504 639a 	add.w	r3, r4, #1232	; 0x4d0
 8003678:	4618      	mov	r0, r3
 800367a:	ee0e 3a90 	vmov	s29, r3
 800367e:	f7ff ff55 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003682:	f504 63a9 	add.w	r3, r4, #1352	; 0x548
 8003686:	4618      	mov	r0, r3
 8003688:	ee0f 3a10 	vmov	s30, r3
 800368c:	f7ff ff4e 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003690:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
 8003694:	4618      	mov	r0, r3
 8003696:	ee0f 3a90 	vmov	s31, r3
 800369a:	f7ff ff47 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800369e:	f504 63c7 	add.w	r3, r4, #1592	; 0x638
 80036a2:	4618      	mov	r0, r3
 80036a4:	9302      	str	r3, [sp, #8]
 80036a6:	f7ff ff41 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80036aa:	f504 63d6 	add.w	r3, r4, #1712	; 0x6b0
 80036ae:	4618      	mov	r0, r3
 80036b0:	9303      	str	r3, [sp, #12]
 80036b2:	f7ff ff3b 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80036b6:	f504 63e5 	add.w	r3, r4, #1832	; 0x728
 80036ba:	4618      	mov	r0, r3
 80036bc:	9304      	str	r3, [sp, #16]
 80036be:	f7ff ff35 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80036c2:	f504 63f4 	add.w	r3, r4, #1952	; 0x7a0
 80036c6:	a91c      	add	r1, sp, #112	; 0x70
 80036c8:	4618      	mov	r0, r3
 80036ca:	ee08 3a90 	vmov	s17, r3
 80036ce:	f8ad 6070 	strh.w	r6, [sp, #112]	; 0x70
 80036d2:	f007 ffaf 	bl	800b634 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80036d6:	f204 73cc 	addw	r3, r4, #1996	; 0x7cc
        : TextArea(), wildcard(0)
 80036da:	4618      	mov	r0, r3
 80036dc:	4f99      	ldr	r7, [pc, #612]	; (8003944 <_ZN15Screen4ViewBaseC1Ev+0x3a8>)
 80036de:	9305      	str	r3, [sp, #20]
 80036e0:	f7ff fa78 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 80036e4:	f604 030c 	addw	r3, r4, #2060	; 0x80c
 80036e8:	f8c4 77cc 	str.w	r7, [r4, #1996]	; 0x7cc
 80036ec:	4618      	mov	r0, r3
 80036ee:	f8c4 5808 	str.w	r5, [r4, #2056]	; 0x808
 80036f2:	9306      	str	r3, [sp, #24]
 80036f4:	f7ff fa6e 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 80036f8:	f604 0348 	addw	r3, r4, #2120	; 0x848
 80036fc:	4618      	mov	r0, r3
 80036fe:	9307      	str	r3, [sp, #28]
 8003700:	f7ff fa68 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003704:	f604 0388 	addw	r3, r4, #2184	; 0x888
 8003708:	f8c4 7848 	str.w	r7, [r4, #2120]	; 0x848
 800370c:	4618      	mov	r0, r3
 800370e:	f8c4 5884 	str.w	r5, [r4, #2180]	; 0x884
 8003712:	9308      	str	r3, [sp, #32]
 8003714:	f7ff fa5e 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003718:	f604 03c4 	addw	r3, r4, #2244	; 0x8c4
 800371c:	4618      	mov	r0, r3
 800371e:	9309      	str	r3, [sp, #36]	; 0x24
 8003720:	f7ff fa58 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003724:	f504 6310 	add.w	r3, r4, #2304	; 0x900
 8003728:	4618      	mov	r0, r3
 800372a:	930a      	str	r3, [sp, #40]	; 0x28
 800372c:	f7ff fa52 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003730:	f604 133c 	addw	r3, r4, #2364	; 0x93c
 8003734:	4618      	mov	r0, r3
 8003736:	930b      	str	r3, [sp, #44]	; 0x2c
 8003738:	f7ff fa4c 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 800373c:	f604 1378 	addw	r3, r4, #2424	; 0x978
 8003740:	4618      	mov	r0, r3
 8003742:	930c      	str	r3, [sp, #48]	; 0x30
 8003744:	f7ff fa46 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003748:	f604 13b4 	addw	r3, r4, #2484	; 0x9b4
 800374c:	4618      	mov	r0, r3
 800374e:	930d      	str	r3, [sp, #52]	; 0x34
 8003750:	f7ff fa40 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003754:	f504 631f 	add.w	r3, r4, #2544	; 0x9f0
 8003758:	4618      	mov	r0, r3
 800375a:	930e      	str	r3, [sp, #56]	; 0x38
 800375c:	f7ff fa3a 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003760:	f604 232c 	addw	r3, r4, #2604	; 0xa2c
 8003764:	4618      	mov	r0, r3
 8003766:	930f      	str	r3, [sp, #60]	; 0x3c
 8003768:	f7ff fa34 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 800376c:	f604 2368 	addw	r3, r4, #2664	; 0xa68
 8003770:	4618      	mov	r0, r3
 8003772:	9310      	str	r3, [sp, #64]	; 0x40
 8003774:	f7ff fa2e 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003778:	f604 23a4 	addw	r3, r4, #2724	; 0xaa4
 800377c:	4618      	mov	r0, r3
 800377e:	9311      	str	r3, [sp, #68]	; 0x44
 8003780:	f7ff fa28 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003784:	f504 632e 	add.w	r3, r4, #2784	; 0xae0
 8003788:	4618      	mov	r0, r3
 800378a:	9312      	str	r3, [sp, #72]	; 0x48
 800378c:	f7ff fa22 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 8003790:	f604 331c 	addw	r3, r4, #2844	; 0xb1c
 8003794:	4618      	mov	r0, r3
 8003796:	9313      	str	r3, [sp, #76]	; 0x4c
 8003798:	f7ff fa1c 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 800379c:	f604 3358 	addw	r3, r4, #2904	; 0xb58
 80037a0:	4618      	mov	r0, r3
 80037a2:	9314      	str	r3, [sp, #80]	; 0x50
 80037a4:	f7ff fa16 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 80037a8:	f604 3394 	addw	r3, r4, #2964	; 0xb94
 80037ac:	4618      	mov	r0, r3
 80037ae:	9315      	str	r3, [sp, #84]	; 0x54
 80037b0:	f7ff fa10 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 80037b4:	f504 633d 	add.w	r3, r4, #3024	; 0xbd0
 80037b8:	4618      	mov	r0, r3
 80037ba:	9316      	str	r3, [sp, #88]	; 0x58
 80037bc:	f7ff fa0a 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 80037c0:	f604 430c 	addw	r3, r4, #3084	; 0xc0c
 80037c4:	4618      	mov	r0, r3
 80037c6:	9317      	str	r3, [sp, #92]	; 0x5c
 80037c8:	f7ff feb0 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037cc:	f604 4384 	addw	r3, r4, #3204	; 0xc84
 80037d0:	a91c      	add	r1, sp, #112	; 0x70
 80037d2:	4618      	mov	r0, r3
 80037d4:	ee09 3a10 	vmov	s18, r3
 80037d8:	f8ad 6070 	strh.w	r6, [sp, #112]	; 0x70
 80037dc:	f007 ff2a 	bl	800b634 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037e0:	f504 634b 	add.w	r3, r4, #3248	; 0xcb0
 80037e4:	4618      	mov	r0, r3
 80037e6:	9318      	str	r3, [sp, #96]	; 0x60
 80037e8:	f7ff fea0 	bl	800352c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80037ec:	f604 5328 	addw	r3, r4, #3368	; 0xd28
 80037f0:	a91c      	add	r1, sp, #112	; 0x70
 80037f2:	4618      	mov	r0, r3
 80037f4:	ee09 3a90 	vmov	s19, r3
 80037f8:	f8ad 6070 	strh.w	r6, [sp, #112]	; 0x70
 80037fc:	f007 ff1a 	bl	800b634 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003800:	f604 5354 	addw	r3, r4, #3412	; 0xd54
 8003804:	4618      	mov	r0, r3
 8003806:	9319      	str	r3, [sp, #100]	; 0x64
 8003808:	f7ff f9e4 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
 800380c:	f604 5394 	addw	r3, r4, #3476	; 0xd94
 8003810:	f8c4 7d54 	str.w	r7, [r4, #3412]	; 0xd54
 8003814:	4618      	mov	r0, r3
 8003816:	f8c4 5d90 	str.w	r5, [r4, #3472]	; 0xd90
 800381a:	931a      	str	r3, [sp, #104]	; 0x68
 800381c:	f7ff f9da 	bl	8002bd4 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003820:	4b49      	ldr	r3, [pc, #292]	; (8003948 <_ZN15Screen4ViewBaseC1Ev+0x3ac>)
 8003822:	f8c4 3e30 	str.w	r3, [r4, #3632]	; 0xe30
 8003826:	4b49      	ldr	r3, [pc, #292]	; (800394c <_ZN15Screen4ViewBaseC1Ev+0x3b0>)
 8003828:	f8c4 3e38 	str.w	r3, [r4, #3640]	; 0xe38
    __background.setPosition(0, 0, 240, 320);
 800382c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003830:	ee18 0a10 	vmov	r0, s16
 8003834:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
 8003838:	9300      	str	r3, [sp, #0]
 800383a:	462a      	mov	r2, r5
 800383c:	23f0      	movs	r3, #240	; 0xf0
 800383e:	4629      	mov	r1, r5
        this->color = color;
 8003840:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
 8003844:	f8c4 5dd0 	str.w	r5, [r4, #3536]	; 0xdd0
 8003848:	f8c4 4e34 	str.w	r4, [r4, #3636]	; 0xe34
 800384c:	f8c4 5e3c 	str.w	r5, [r4, #3644]	; 0xe3c
 8003850:	f7ff f999 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    image1.setXY(0, 0);
 8003854:	462a      	mov	r2, r5
 8003856:	4629      	mov	r1, r5
 8003858:	4658      	mov	r0, fp
 800385a:	f8c4 9068 	str.w	r9, [r4, #104]	; 0x68
        borderBox.setPosition(x, y, width, height);
 800385e:	2632      	movs	r6, #50	; 0x32
 8003860:	f7fe ff96 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8003864:	f04f 030a 	mov.w	r3, #10
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_PORTRAIT_TEXTURE_240X320PX_ID));
 8003868:	a91c      	add	r1, sp, #112	; 0x70
 800386a:	4658      	mov	r0, fp
 800386c:	f8df a0ec 	ldr.w	sl, [pc, #236]	; 800395c <_ZN15Screen4ViewBaseC1Ev+0x3c0>
 8003870:	f8ad 3070 	strh.w	r3, [sp, #112]	; 0x70
        borderSize = size;
 8003874:	f04f 0805 	mov.w	r8, #5
 8003878:	f008 fe2b 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800387c:	4633      	mov	r3, r6
 800387e:	9600      	str	r6, [sp, #0]
 8003880:	462a      	mov	r2, r5
 8003882:	4629      	mov	r1, r5
 8003884:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8003888:	f7ff f97d 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800388c:	4b30      	ldr	r3, [pc, #192]	; (8003950 <_ZN15Screen4ViewBaseC1Ev+0x3b4>)
 800388e:	4a31      	ldr	r2, [pc, #196]	; (8003954 <_ZN15Screen4ViewBaseC1Ev+0x3b8>)
 8003890:	4931      	ldr	r1, [pc, #196]	; (8003958 <_ZN15Screen4ViewBaseC1Ev+0x3bc>)
 8003892:	f8a4 80fc 	strh.w	r8, [r4, #252]	; 0xfc
 8003896:	ee1a 0a10 	vmov	r0, s20
 800389a:	f8cd a000 	str.w	sl, [sp]
    flexButton1.setAction(flexButtonCallback);
 800389e:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80038a2:	f7ff fe6f 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setPosition(7, 174, 50, 50);
 80038a6:	4633      	mov	r3, r6
 80038a8:	ee1a 0a10 	vmov	r0, s20
 80038ac:	9600      	str	r6, [sp, #0]
 80038ae:	22ae      	movs	r2, #174	; 0xae
 80038b0:	2107      	movs	r1, #7
 80038b2:	f7ff f968 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038b6:	4633      	mov	r3, r6
 80038b8:	9600      	str	r6, [sp, #0]
 80038ba:	462a      	mov	r2, r5
 80038bc:	4629      	mov	r1, r5
 80038be:	f504 70a2 	add.w	r0, r4, #324	; 0x144
        action = &callback;
 80038c2:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
 80038c6:	f7ff f95e 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80038ca:	4b21      	ldr	r3, [pc, #132]	; (8003950 <_ZN15Screen4ViewBaseC1Ev+0x3b4>)
 80038cc:	4a21      	ldr	r2, [pc, #132]	; (8003954 <_ZN15Screen4ViewBaseC1Ev+0x3b8>)
 80038ce:	4922      	ldr	r1, [pc, #136]	; (8003958 <_ZN15Screen4ViewBaseC1Ev+0x3bc>)
 80038d0:	f8a4 8174 	strh.w	r8, [r4, #372]	; 0x174
 80038d4:	ee1a 0a90 	vmov	r0, s21
 80038d8:	f8cd a000 	str.w	sl, [sp]
 80038dc:	f7ff fe52 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setPosition(51, 174, 50, 50);
 80038e0:	4633      	mov	r3, r6
 80038e2:	ee1a 0a90 	vmov	r0, s21
 80038e6:	9600      	str	r6, [sp, #0]
 80038e8:	22ae      	movs	r2, #174	; 0xae
 80038ea:	2133      	movs	r1, #51	; 0x33
 80038ec:	f7ff f94b 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038f0:	4633      	mov	r3, r6
 80038f2:	9600      	str	r6, [sp, #0]
 80038f4:	462a      	mov	r2, r5
 80038f6:	4629      	mov	r1, r5
 80038f8:	f504 70de 	add.w	r0, r4, #444	; 0x1bc
 80038fc:	f8c4 7140 	str.w	r7, [r4, #320]	; 0x140
 8003900:	f7ff f941 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003904:	4b12      	ldr	r3, [pc, #72]	; (8003950 <_ZN15Screen4ViewBaseC1Ev+0x3b4>)
 8003906:	4a13      	ldr	r2, [pc, #76]	; (8003954 <_ZN15Screen4ViewBaseC1Ev+0x3b8>)
 8003908:	4913      	ldr	r1, [pc, #76]	; (8003958 <_ZN15Screen4ViewBaseC1Ev+0x3bc>)
 800390a:	f8a4 81ec 	strh.w	r8, [r4, #492]	; 0x1ec
 800390e:	ee1b 0a10 	vmov	r0, s22
 8003912:	f8cd a000 	str.w	sl, [sp]
 8003916:	f7ff fe35 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton3.setPosition(95, 174, 50, 50);
 800391a:	4633      	mov	r3, r6
 800391c:	ee1b 0a10 	vmov	r0, s22
 8003920:	9600      	str	r6, [sp, #0]
 8003922:	22ae      	movs	r2, #174	; 0xae
 8003924:	215f      	movs	r1, #95	; 0x5f
 8003926:	f7ff f92e 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800392a:	4633      	mov	r3, r6
 800392c:	9600      	str	r6, [sp, #0]
 800392e:	462a      	mov	r2, r5
 8003930:	4629      	mov	r1, r5
 8003932:	f504 700d 	add.w	r0, r4, #564	; 0x234
 8003936:	f8c4 71b8 	str.w	r7, [r4, #440]	; 0x1b8
 800393a:	e011      	b.n	8003960 <_ZN15Screen4ViewBaseC1Ev+0x3c4>
 800393c:	0801f1fc 	.word	0x0801f1fc
 8003940:	08020674 	.word	0x08020674
 8003944:	080204c0 	.word	0x080204c0
 8003948:	0801f1e4 	.word	0x0801f1e4
 800394c:	08003429 	.word	0x08003429
 8003950:	ff003366 	.word	0xff003366
 8003954:	ff0099cc 	.word	0xff0099cc
 8003958:	ff006699 	.word	0xff006699
 800395c:	ff336699 	.word	0xff336699
 8003960:	f7ff f911 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003964:	4bc3      	ldr	r3, [pc, #780]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003966:	4ac4      	ldr	r2, [pc, #784]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003968:	49c4      	ldr	r1, [pc, #784]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 800396a:	f8a4 8264 	strh.w	r8, [r4, #612]	; 0x264
 800396e:	ee1b 0a90 	vmov	r0, s23
 8003972:	f8cd a000 	str.w	sl, [sp]
 8003976:	f7ff fe05 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton4.setPosition(7, 218, 50, 50);
 800397a:	4633      	mov	r3, r6
 800397c:	ee1b 0a90 	vmov	r0, s23
 8003980:	9600      	str	r6, [sp, #0]
 8003982:	22da      	movs	r2, #218	; 0xda
 8003984:	2107      	movs	r1, #7
 8003986:	f7ff f8fe 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 800398a:	4633      	mov	r3, r6
 800398c:	9600      	str	r6, [sp, #0]
 800398e:	462a      	mov	r2, r5
 8003990:	4629      	mov	r1, r5
 8003992:	f504 702b 	add.w	r0, r4, #684	; 0x2ac
 8003996:	f8c4 7230 	str.w	r7, [r4, #560]	; 0x230
 800399a:	f7ff f8f4 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800399e:	4bb5      	ldr	r3, [pc, #724]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 80039a0:	4ab5      	ldr	r2, [pc, #724]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 80039a2:	49b6      	ldr	r1, [pc, #728]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 80039a4:	f8a4 82dc 	strh.w	r8, [r4, #732]	; 0x2dc
 80039a8:	ee1c 0a10 	vmov	r0, s24
 80039ac:	f8cd a000 	str.w	sl, [sp]
 80039b0:	f7ff fde8 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton5.setPosition(51, 218, 50, 50);
 80039b4:	4633      	mov	r3, r6
 80039b6:	ee1c 0a10 	vmov	r0, s24
 80039ba:	9600      	str	r6, [sp, #0]
 80039bc:	22da      	movs	r2, #218	; 0xda
 80039be:	2133      	movs	r1, #51	; 0x33
 80039c0:	f7ff f8e1 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039c4:	4633      	mov	r3, r6
 80039c6:	9600      	str	r6, [sp, #0]
 80039c8:	462a      	mov	r2, r5
 80039ca:	4629      	mov	r1, r5
 80039cc:	f504 7049 	add.w	r0, r4, #804	; 0x324
 80039d0:	f8c4 72a8 	str.w	r7, [r4, #680]	; 0x2a8
 80039d4:	f7ff f8d7 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton6.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80039d8:	4ba6      	ldr	r3, [pc, #664]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 80039da:	4aa7      	ldr	r2, [pc, #668]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 80039dc:	49a7      	ldr	r1, [pc, #668]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 80039de:	f8a4 8354 	strh.w	r8, [r4, #852]	; 0x354
 80039e2:	ee1c 0a90 	vmov	r0, s25
 80039e6:	f8cd a000 	str.w	sl, [sp]
 80039ea:	f7ff fdcb 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton6.setPosition(95, 218, 50, 50);
 80039ee:	4633      	mov	r3, r6
 80039f0:	ee1c 0a90 	vmov	r0, s25
 80039f4:	9600      	str	r6, [sp, #0]
 80039f6:	22da      	movs	r2, #218	; 0xda
 80039f8:	215f      	movs	r1, #95	; 0x5f
 80039fa:	f7ff f8c4 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039fe:	4633      	mov	r3, r6
 8003a00:	9600      	str	r6, [sp, #0]
 8003a02:	462a      	mov	r2, r5
 8003a04:	4629      	mov	r1, r5
 8003a06:	f504 7067 	add.w	r0, r4, #924	; 0x39c
 8003a0a:	f8c4 7320 	str.w	r7, [r4, #800]	; 0x320
 8003a0e:	f7ff f8ba 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton7.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a12:	4b98      	ldr	r3, [pc, #608]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003a14:	4a98      	ldr	r2, [pc, #608]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003a16:	4999      	ldr	r1, [pc, #612]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003a18:	f8a4 83cc 	strh.w	r8, [r4, #972]	; 0x3cc
 8003a1c:	ee1d 0a10 	vmov	r0, s26
 8003a20:	f8cd a000 	str.w	sl, [sp]
 8003a24:	f7ff fdae 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton7.setPosition(7, 264, 50, 50);
 8003a28:	4633      	mov	r3, r6
 8003a2a:	ee1d 0a10 	vmov	r0, s26
 8003a2e:	9600      	str	r6, [sp, #0]
 8003a30:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003a34:	2107      	movs	r1, #7
 8003a36:	f7ff f8a6 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a3a:	4633      	mov	r3, r6
 8003a3c:	9600      	str	r6, [sp, #0]
 8003a3e:	462a      	mov	r2, r5
 8003a40:	4629      	mov	r1, r5
 8003a42:	f204 4014 	addw	r0, r4, #1044	; 0x414
 8003a46:	f8c4 7398 	str.w	r7, [r4, #920]	; 0x398
 8003a4a:	f7ff f89c 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton8.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a4e:	4b89      	ldr	r3, [pc, #548]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003a50:	4a89      	ldr	r2, [pc, #548]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003a52:	498a      	ldr	r1, [pc, #552]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003a54:	f8a4 8444 	strh.w	r8, [r4, #1092]	; 0x444
 8003a58:	ee1d 0a90 	vmov	r0, s27
 8003a5c:	f8cd a000 	str.w	sl, [sp]
 8003a60:	f7ff fd90 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton8.setPosition(51, 264, 50, 50);
 8003a64:	4633      	mov	r3, r6
 8003a66:	ee1d 0a90 	vmov	r0, s27
 8003a6a:	9600      	str	r6, [sp, #0]
 8003a6c:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003a70:	2133      	movs	r1, #51	; 0x33
 8003a72:	f7ff f888 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a76:	4633      	mov	r3, r6
 8003a78:	9600      	str	r6, [sp, #0]
 8003a7a:	462a      	mov	r2, r5
 8003a7c:	4629      	mov	r1, r5
 8003a7e:	f204 408c 	addw	r0, r4, #1164	; 0x48c
 8003a82:	f8c4 7410 	str.w	r7, [r4, #1040]	; 0x410
 8003a86:	f7ff f87e 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton9.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a8a:	4b7a      	ldr	r3, [pc, #488]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003a8c:	4a7a      	ldr	r2, [pc, #488]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003a8e:	497b      	ldr	r1, [pc, #492]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003a90:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8003a94:	ee1e 0a10 	vmov	r0, s28
 8003a98:	f8cd a000 	str.w	sl, [sp]
 8003a9c:	f7ff fd72 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton9.setPosition(95, 264, 50, 50);
 8003aa0:	4633      	mov	r3, r6
 8003aa2:	ee1e 0a10 	vmov	r0, s28
 8003aa6:	9600      	str	r6, [sp, #0]
 8003aa8:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003aac:	215f      	movs	r1, #95	; 0x5f
 8003aae:	f7ff f86a 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ab2:	4633      	mov	r3, r6
 8003ab4:	9600      	str	r6, [sp, #0]
 8003ab6:	462a      	mov	r2, r5
 8003ab8:	4629      	mov	r1, r5
 8003aba:	f204 5004 	addw	r0, r4, #1284	; 0x504
 8003abe:	f8c4 7488 	str.w	r7, [r4, #1160]	; 0x488
 8003ac2:	f7ff f860 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_add.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003ac6:	4b6b      	ldr	r3, [pc, #428]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003ac8:	4a6b      	ldr	r2, [pc, #428]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003aca:	496c      	ldr	r1, [pc, #432]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003acc:	f8a4 8534 	strh.w	r8, [r4, #1332]	; 0x534
 8003ad0:	ee1e 0a90 	vmov	r0, s29
 8003ad4:	f8cd a000 	str.w	sl, [sp]
 8003ad8:	f7ff fd54 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_add.setPosition(140, 174, 50, 50);
 8003adc:	4633      	mov	r3, r6
 8003ade:	ee1e 0a90 	vmov	r0, s29
 8003ae2:	9600      	str	r6, [sp, #0]
 8003ae4:	22ae      	movs	r2, #174	; 0xae
 8003ae6:	218c      	movs	r1, #140	; 0x8c
 8003ae8:	f7ff f84d 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003aec:	4633      	mov	r3, r6
 8003aee:	9600      	str	r6, [sp, #0]
 8003af0:	462a      	mov	r2, r5
 8003af2:	4629      	mov	r1, r5
 8003af4:	f204 507c 	addw	r0, r4, #1404	; 0x57c
 8003af8:	f8c4 7500 	str.w	r7, [r4, #1280]	; 0x500
 8003afc:	f7ff f843 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_mul.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003b00:	4b5c      	ldr	r3, [pc, #368]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003b02:	4a5d      	ldr	r2, [pc, #372]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003b04:	495d      	ldr	r1, [pc, #372]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003b06:	f8a4 85ac 	strh.w	r8, [r4, #1452]	; 0x5ac
 8003b0a:	ee1f 0a10 	vmov	r0, s30
 8003b0e:	f8cd a000 	str.w	sl, [sp]
 8003b12:	f7ff fd37 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_mul.setPosition(185, 174, 50, 50);
 8003b16:	4633      	mov	r3, r6
 8003b18:	ee1f 0a10 	vmov	r0, s30
 8003b1c:	9600      	str	r6, [sp, #0]
 8003b1e:	22ae      	movs	r2, #174	; 0xae
 8003b20:	21b9      	movs	r1, #185	; 0xb9
 8003b22:	f7ff f830 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b26:	4633      	mov	r3, r6
 8003b28:	9600      	str	r6, [sp, #0]
 8003b2a:	462a      	mov	r2, r5
 8003b2c:	4629      	mov	r1, r5
 8003b2e:	f204 50f4 	addw	r0, r4, #1524	; 0x5f4
 8003b32:	f8c4 7578 	str.w	r7, [r4, #1400]	; 0x578
 8003b36:	f7ff f826 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003b3a:	4b4e      	ldr	r3, [pc, #312]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003b3c:	4a4e      	ldr	r2, [pc, #312]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003b3e:	494f      	ldr	r1, [pc, #316]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003b40:	f8a4 8624 	strh.w	r8, [r4, #1572]	; 0x624
 8003b44:	ee1f 0a90 	vmov	r0, s31
 8003b48:	f8cd a000 	str.w	sl, [sp]
 8003b4c:	f7ff fd1a 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton0.setPosition(140, 218, 50, 50);
 8003b50:	4633      	mov	r3, r6
 8003b52:	ee1f 0a90 	vmov	r0, s31
 8003b56:	9600      	str	r6, [sp, #0]
 8003b58:	22da      	movs	r2, #218	; 0xda
 8003b5a:	218c      	movs	r1, #140	; 0x8c
 8003b5c:	f7ff f813 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b60:	4633      	mov	r3, r6
 8003b62:	9600      	str	r6, [sp, #0]
 8003b64:	462a      	mov	r2, r5
 8003b66:	4629      	mov	r1, r5
 8003b68:	f204 606c 	addw	r0, r4, #1644	; 0x66c
 8003b6c:	f8c4 75f0 	str.w	r7, [r4, #1520]	; 0x5f0
 8003b70:	f7ff f809 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_eq.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003b74:	4b3f      	ldr	r3, [pc, #252]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003b76:	4a40      	ldr	r2, [pc, #256]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003b78:	4940      	ldr	r1, [pc, #256]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003b7a:	9802      	ldr	r0, [sp, #8]
 8003b7c:	f8a4 869c 	strh.w	r8, [r4, #1692]	; 0x69c
 8003b80:	f8cd a000 	str.w	sl, [sp]
 8003b84:	f7ff fcfe 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_eq.setPosition(185, 218, 50, 50);
 8003b88:	4633      	mov	r3, r6
 8003b8a:	9802      	ldr	r0, [sp, #8]
 8003b8c:	9600      	str	r6, [sp, #0]
 8003b8e:	22da      	movs	r2, #218	; 0xda
 8003b90:	21b9      	movs	r1, #185	; 0xb9
 8003b92:	f7fe fff8 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b96:	4633      	mov	r3, r6
 8003b98:	9600      	str	r6, [sp, #0]
 8003b9a:	462a      	mov	r2, r5
 8003b9c:	4629      	mov	r1, r5
 8003b9e:	f204 60e4 	addw	r0, r4, #1764	; 0x6e4
 8003ba2:	f8c4 7668 	str.w	r7, [r4, #1640]	; 0x668
 8003ba6:	f7fe ffee 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_sub.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003baa:	4b32      	ldr	r3, [pc, #200]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003bac:	4a32      	ldr	r2, [pc, #200]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003bae:	4933      	ldr	r1, [pc, #204]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003bb0:	9803      	ldr	r0, [sp, #12]
 8003bb2:	f8a4 8714 	strh.w	r8, [r4, #1812]	; 0x714
 8003bb6:	f8cd a000 	str.w	sl, [sp]
 8003bba:	f7ff fce3 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_sub.setPosition(140, 264, 50, 50);
 8003bbe:	4633      	mov	r3, r6
 8003bc0:	9803      	ldr	r0, [sp, #12]
 8003bc2:	9600      	str	r6, [sp, #0]
 8003bc4:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003bc8:	218c      	movs	r1, #140	; 0x8c
 8003bca:	f7fe ffdc 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003bce:	4633      	mov	r3, r6
 8003bd0:	9600      	str	r6, [sp, #0]
 8003bd2:	462a      	mov	r2, r5
 8003bd4:	4629      	mov	r1, r5
 8003bd6:	f204 705c 	addw	r0, r4, #1884	; 0x75c
 8003bda:	f8c4 76e0 	str.w	r7, [r4, #1760]	; 0x6e0
 8003bde:	f7fe ffd2 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_div.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003be2:	4b24      	ldr	r3, [pc, #144]	; (8003c74 <_ZN15Screen4ViewBaseC1Ev+0x6d8>)
 8003be4:	4a24      	ldr	r2, [pc, #144]	; (8003c78 <_ZN15Screen4ViewBaseC1Ev+0x6dc>)
 8003be6:	4925      	ldr	r1, [pc, #148]	; (8003c7c <_ZN15Screen4ViewBaseC1Ev+0x6e0>)
 8003be8:	9804      	ldr	r0, [sp, #16]
 8003bea:	f8a4 878c 	strh.w	r8, [r4, #1932]	; 0x78c
 8003bee:	f8cd a000 	str.w	sl, [sp]
 8003bf2:	f7ff fcc7 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_div.setPosition(185, 264, 50, 50);
 8003bf6:	4633      	mov	r3, r6
 8003bf8:	f44f 7284 	mov.w	r2, #264	; 0x108
 8003bfc:	9804      	ldr	r0, [sp, #16]
 8003bfe:	9600      	str	r6, [sp, #0]
 8003c00:	21b9      	movs	r1, #185	; 0xb9
 8003c02:	f7fe ffc0 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_BACKGROUNDS_MAIN_BG_320X240PX_ID));
 8003c06:	ee18 0a90 	vmov	r0, s17
 8003c0a:	a91c      	add	r1, sp, #112	; 0x70
 8003c0c:	f8c4 7758 	str.w	r7, [r4, #1880]	; 0x758
 8003c10:	f8ad 5070 	strh.w	r5, [sp, #112]	; 0x70
 8003c14:	f008 fc5d 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(7, 60, 227, 114);
 8003c18:	2372      	movs	r3, #114	; 0x72
 8003c1a:	223c      	movs	r2, #60	; 0x3c
 8003c1c:	ee18 0a90 	vmov	r0, s17
 8003c20:	9300      	str	r3, [sp, #0]
 8003c22:	2107      	movs	r1, #7
 8003c24:	23e3      	movs	r3, #227	; 0xe3
 8003c26:	f7fe ffae 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c2a:	ee18 0a90 	vmov	r0, s17
 8003c2e:	4629      	mov	r1, r5
 8003c30:	f007 fcc7 	bl	800b5c2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    calculation_text_area.setPosition(11, 71, 102, 31);
 8003c34:	231f      	movs	r3, #31
 8003c36:	9300      	str	r3, [sp, #0]
 8003c38:	9805      	ldr	r0, [sp, #20]
 8003c3a:	2366      	movs	r3, #102	; 0x66
 8003c3c:	2247      	movs	r2, #71	; 0x47
 8003c3e:	210b      	movs	r1, #11
 8003c40:	f7fe ffa1 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c44:	4b0e      	ldr	r3, [pc, #56]	; (8003c80 <_ZN15Screen4ViewBaseC1Ev+0x6e4>)
        this->color = color;
 8003c46:	f8c4 97fc 	str.w	r9, [r4, #2044]	; 0x7fc
 8003c4a:	681b      	ldr	r3, [r3, #0]
        linespace = space;
 8003c4c:	f8a4 5800 	strh.w	r5, [r4, #2048]	; 0x800
    Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID8).getText());
 8003c50:	f604 56d4 	addw	r6, r4, #3540	; 0xdd4
 8003c54:	b92b      	cbnz	r3, 8003c62 <_ZN15Screen4ViewBaseC1Ev+0x6c6>
 8003c56:	4b0b      	ldr	r3, [pc, #44]	; (8003c84 <_ZN15Screen4ViewBaseC1Ev+0x6e8>)
 8003c58:	4a0b      	ldr	r2, [pc, #44]	; (8003c88 <_ZN15Screen4ViewBaseC1Ev+0x6ec>)
 8003c5a:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003c5c:	480b      	ldr	r0, [pc, #44]	; (8003c8c <_ZN15Screen4ViewBaseC1Ev+0x6f0>)
 8003c5e:	f019 f89b 	bl	801cd98 <__assert_func>
 8003c62:	4b0b      	ldr	r3, [pc, #44]	; (8003c90 <_ZN15Screen4ViewBaseC1Ev+0x6f4>)
 8003c64:	881b      	ldrh	r3, [r3, #0]
 8003c66:	2b07      	cmp	r3, #7
 8003c68:	d816      	bhi.n	8003c98 <_ZN15Screen4ViewBaseC1Ev+0x6fc>
 8003c6a:	4b0a      	ldr	r3, [pc, #40]	; (8003c94 <_ZN15Screen4ViewBaseC1Ev+0x6f8>)
 8003c6c:	4a06      	ldr	r2, [pc, #24]	; (8003c88 <_ZN15Screen4ViewBaseC1Ev+0x6ec>)
 8003c6e:	21af      	movs	r1, #175	; 0xaf
 8003c70:	e7f4      	b.n	8003c5c <_ZN15Screen4ViewBaseC1Ev+0x6c0>
 8003c72:	bf00      	nop
 8003c74:	ff003366 	.word	0xff003366
 8003c78:	ff0099cc 	.word	0xff0099cc
 8003c7c:	ff006699 	.word	0xff006699
 8003c80:	20012e14 	.word	0x20012e14
 8003c84:	0801eef0 	.word	0x0801eef0
 8003c88:	0801ef32 	.word	0x0801ef32
 8003c8c:	0801ef60 	.word	0x0801ef60
 8003c90:	20012e18 	.word	0x20012e18
 8003c94:	0801efa7 	.word	0x0801efa7
        return texts->getText(typedTextId);
 8003c98:	4bd5      	ldr	r3, [pc, #852]	; (8003ff0 <_ZN15Screen4ViewBaseC1Ev+0xa54>)
 8003c9a:	2107      	movs	r1, #7
 8003c9c:	6818      	ldr	r0, [r3, #0]
 8003c9e:	f000 fcf7 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 8003ca2:	4ad4      	ldr	r2, [pc, #848]	; (8003ff4 <_ZN15Screen4ViewBaseC1Ev+0xa58>)
 8003ca4:	4603      	mov	r3, r0
 8003ca6:	210a      	movs	r1, #10
 8003ca8:	4630      	mov	r0, r6
 8003caa:	f00d f8a9 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003cae:	f04f 0206 	mov.w	r2, #6
    calculation_text_area.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 8003cb2:	9805      	ldr	r0, [sp, #20]
        wildcard = value;
 8003cb4:	f8c4 6808 	str.w	r6, [r4, #2056]	; 0x808
 8003cb8:	a91c      	add	r1, sp, #112	; 0x70
 8003cba:	4ecf      	ldr	r6, [pc, #828]	; (8003ff8 <_ZN15Screen4ViewBaseC1Ev+0xa5c>)
 8003cbc:	f8ad 2074 	strh.w	r2, [sp, #116]	; 0x74
 8003cc0:	961c      	str	r6, [sp, #112]	; 0x70
 8003cc2:	f008 f89f 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea2.setXY(7, 102);
 8003cc6:	2266      	movs	r2, #102	; 0x66
 8003cc8:	9806      	ldr	r0, [sp, #24]
 8003cca:	2107      	movs	r1, #7
 8003ccc:	f7fe fd60 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8003cd0:	2308      	movs	r3, #8
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 8003cd2:	9806      	ldr	r0, [sp, #24]
        this->color = color;
 8003cd4:	f8c4 983c 	str.w	r9, [r4, #2108]	; 0x83c
 8003cd8:	a91c      	add	r1, sp, #112	; 0x70
        linespace = space;
 8003cda:	f8a4 5840 	strh.w	r5, [r4, #2112]	; 0x840
 8003cde:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003ce2:	961c      	str	r6, [sp, #112]	; 0x70
 8003ce4:	f008 f88e 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    result_text_area.setPosition(18, 131, 207, 36);
 8003ce8:	2324      	movs	r3, #36	; 0x24
 8003cea:	9300      	str	r3, [sp, #0]
 8003cec:	2283      	movs	r2, #131	; 0x83
 8003cee:	23cf      	movs	r3, #207	; 0xcf
 8003cf0:	9807      	ldr	r0, [sp, #28]
 8003cf2:	2112      	movs	r1, #18
 8003cf4:	f7fe ff47 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    Unicode::snprintf(result_text_areaBuffer, RESULT_TEXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
 8003cf8:	f604 52e8 	addw	r2, r4, #3560	; 0xde8
 8003cfc:	921b      	str	r2, [sp, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cfe:	4abf      	ldr	r2, [pc, #764]	; (8003ffc <_ZN15Screen4ViewBaseC1Ev+0xa60>)
        this->color = color;
 8003d00:	f8c4 9878 	str.w	r9, [r4, #2168]	; 0x878
 8003d04:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 8003d06:	f8a4 587c 	strh.w	r5, [r4, #2172]	; 0x87c
 8003d0a:	2b00      	cmp	r3, #0
 8003d0c:	d0a3      	beq.n	8003c56 <_ZN15Screen4ViewBaseC1Ev+0x6ba>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003d0e:	49bc      	ldr	r1, [pc, #752]	; (8004000 <_ZN15Screen4ViewBaseC1Ev+0xa64>)
 8003d10:	880b      	ldrh	r3, [r1, #0]
 8003d12:	2b0a      	cmp	r3, #10
 8003d14:	d9a9      	bls.n	8003c6a <_ZN15Screen4ViewBaseC1Ev+0x6ce>
        return texts->getText(typedTextId);
 8003d16:	4bb6      	ldr	r3, [pc, #728]	; (8003ff0 <_ZN15Screen4ViewBaseC1Ev+0xa54>)
 8003d18:	210a      	movs	r1, #10
 8003d1a:	6818      	ldr	r0, [r3, #0]
 8003d1c:	f000 fcb8 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 8003d20:	4ab4      	ldr	r2, [pc, #720]	; (8003ff4 <_ZN15Screen4ViewBaseC1Ev+0xa58>)
 8003d22:	4603      	mov	r3, r0
 8003d24:	2114      	movs	r1, #20
 8003d26:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003d28:	f00d f86a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003d2c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003d2e:	f8c4 0884 	str.w	r0, [r4, #2180]	; 0x884
    result_text_area.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
 8003d32:	a81c      	add	r0, sp, #112	; 0x70
        : typedTextId(id)
 8003d34:	2309      	movs	r3, #9
 8003d36:	4601      	mov	r1, r0
 8003d38:	9807      	ldr	r0, [sp, #28]
 8003d3a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003d3e:	961c      	str	r6, [sp, #112]	; 0x70
 8003d40:	f008 f860 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea4.setXY(25, 187);
 8003d44:	22bb      	movs	r2, #187	; 0xbb
 8003d46:	9808      	ldr	r0, [sp, #32]
 8003d48:	2119      	movs	r1, #25
 8003d4a:	f7fe fd21 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));
 8003d4e:	a81c      	add	r0, sp, #112	; 0x70
 8003d50:	230b      	movs	r3, #11
 8003d52:	4601      	mov	r1, r0
        this->color = color;
 8003d54:	f8c4 98b8 	str.w	r9, [r4, #2232]	; 0x8b8
 8003d58:	9808      	ldr	r0, [sp, #32]
        linespace = space;
 8003d5a:	f8a4 58bc 	strh.w	r5, [r4, #2236]	; 0x8bc
 8003d5e:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003d62:	961c      	str	r6, [sp, #112]	; 0x70
 8003d64:	f008 f84e 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea5.setXY(70, 187);
 8003d68:	22bb      	movs	r2, #187	; 0xbb
 8003d6a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003d6c:	2146      	movs	r1, #70	; 0x46
 8003d6e:	f7fe fd0f 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));
 8003d72:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 8003d76:	f04f 000c 	mov.w	r0, #12
 8003d7a:	4661      	mov	r1, ip
 8003d7c:	f8ad 0074 	strh.w	r0, [sp, #116]	; 0x74
        this->color = color;
 8003d80:	f8c4 98f4 	str.w	r9, [r4, #2292]	; 0x8f4
 8003d84:	9809      	ldr	r0, [sp, #36]	; 0x24
        linespace = space;
 8003d86:	f8a4 58f8 	strh.w	r5, [r4, #2296]	; 0x8f8
 8003d8a:	961c      	str	r6, [sp, #112]	; 0x70
 8003d8c:	f008 f83a 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea6.setXY(114, 187);
 8003d90:	22bb      	movs	r2, #187	; 0xbb
 8003d92:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003d94:	2172      	movs	r1, #114	; 0x72
 8003d96:	f7fe fcfb 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8003d9a:	f04f 0c0d 	mov.w	ip, #13
 8003d9e:	f8ad c074 	strh.w	ip, [sp, #116]	; 0x74
    textArea6.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));
 8003da2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 8003da6:	4661      	mov	r1, ip
 8003da8:	980a      	ldr	r0, [sp, #40]	; 0x28
        this->color = color;
 8003daa:	f8c4 9930 	str.w	r9, [r4, #2352]	; 0x930
        linespace = space;
 8003dae:	f8a4 5934 	strh.w	r5, [r4, #2356]	; 0x934
 8003db2:	961c      	str	r6, [sp, #112]	; 0x70
 8003db4:	f008 f826 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea7.setXY(25, 231);
 8003db8:	22e7      	movs	r2, #231	; 0xe7
 8003dba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003dbc:	2119      	movs	r1, #25
 8003dbe:	f7fe fce7 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea7.setTypedText(touchgfx::TypedText(T_SINGLEUSEID15));
 8003dc2:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003dc6:	f04f 0c0e 	mov.w	ip, #14
 8003dca:	4671      	mov	r1, lr
 8003dcc:	980b      	ldr	r0, [sp, #44]	; 0x2c
        this->color = color;
 8003dce:	f8c4 996c 	str.w	r9, [r4, #2412]	; 0x96c
        linespace = space;
 8003dd2:	f8a4 5970 	strh.w	r5, [r4, #2416]	; 0x970
 8003dd6:	f8ad c074 	strh.w	ip, [sp, #116]	; 0x74
 8003dda:	961c      	str	r6, [sp, #112]	; 0x70
 8003ddc:	f008 f812 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea8.setXY(70, 231);
 8003de0:	22e7      	movs	r2, #231	; 0xe7
 8003de2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003de4:	2146      	movs	r1, #70	; 0x46
 8003de6:	f7fe fcd3 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea8.setTypedText(touchgfx::TypedText(T_SINGLEUSEID16));
 8003dea:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003dee:	230f      	movs	r3, #15
 8003df0:	4671      	mov	r1, lr
 8003df2:	980c      	ldr	r0, [sp, #48]	; 0x30
        this->color = color;
 8003df4:	f8c4 99a8 	str.w	r9, [r4, #2472]	; 0x9a8
        linespace = space;
 8003df8:	f8a4 59ac 	strh.w	r5, [r4, #2476]	; 0x9ac
 8003dfc:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003e00:	961c      	str	r6, [sp, #112]	; 0x70
 8003e02:	f007 ffff 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea9.setXY(114, 231);
 8003e06:	22e7      	movs	r2, #231	; 0xe7
 8003e08:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003e0a:	2172      	movs	r1, #114	; 0x72
 8003e0c:	f7fe fcc0 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea9.setTypedText(touchgfx::TypedText(T_SINGLEUSEID17));
 8003e10:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003e14:	2310      	movs	r3, #16
 8003e16:	4671      	mov	r1, lr
 8003e18:	980d      	ldr	r0, [sp, #52]	; 0x34
        this->color = color;
 8003e1a:	f8c4 99e4 	str.w	r9, [r4, #2532]	; 0x9e4
        linespace = space;
 8003e1e:	f8a4 59e8 	strh.w	r5, [r4, #2536]	; 0x9e8
 8003e22:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003e26:	961c      	str	r6, [sp, #112]	; 0x70
 8003e28:	f007 ffec 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea10.setXY(24, 277);
 8003e2c:	f240 1215 	movw	r2, #277	; 0x115
 8003e30:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003e32:	2118      	movs	r1, #24
 8003e34:	f7fe fcac 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea10.setTypedText(touchgfx::TypedText(T_SINGLEUSEID18));
 8003e38:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003e3c:	2311      	movs	r3, #17
 8003e3e:	4671      	mov	r1, lr
 8003e40:	980e      	ldr	r0, [sp, #56]	; 0x38
        this->color = color;
 8003e42:	f8c4 9a20 	str.w	r9, [r4, #2592]	; 0xa20
        linespace = space;
 8003e46:	f8a4 5a24 	strh.w	r5, [r4, #2596]	; 0xa24
 8003e4a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003e4e:	961c      	str	r6, [sp, #112]	; 0x70
 8003e50:	f007 ffd8 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea11.setXY(70, 277);
 8003e54:	f240 1215 	movw	r2, #277	; 0x115
 8003e58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003e5a:	2146      	movs	r1, #70	; 0x46
 8003e5c:	f7fe fc98 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea11.setTypedText(touchgfx::TypedText(T_SINGLEUSEID19));
 8003e60:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003e64:	2312      	movs	r3, #18
 8003e66:	4671      	mov	r1, lr
 8003e68:	980f      	ldr	r0, [sp, #60]	; 0x3c
        this->color = color;
 8003e6a:	f8c4 9a5c 	str.w	r9, [r4, #2652]	; 0xa5c
        linespace = space;
 8003e6e:	f8a4 5a60 	strh.w	r5, [r4, #2656]	; 0xa60
 8003e72:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003e76:	961c      	str	r6, [sp, #112]	; 0x70
 8003e78:	f007 ffc4 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea12.setXY(114, 277);
 8003e7c:	f240 1215 	movw	r2, #277	; 0x115
 8003e80:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003e82:	2172      	movs	r1, #114	; 0x72
 8003e84:	f7fe fc84 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea12.setTypedText(touchgfx::TypedText(T_SINGLEUSEID20));
 8003e88:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003e8c:	2313      	movs	r3, #19
 8003e8e:	4671      	mov	r1, lr
 8003e90:	9810      	ldr	r0, [sp, #64]	; 0x40
        this->color = color;
 8003e92:	f8c4 9a98 	str.w	r9, [r4, #2712]	; 0xa98
        linespace = space;
 8003e96:	f8a4 5a9c 	strh.w	r5, [r4, #2716]	; 0xa9c
 8003e9a:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003e9e:	961c      	str	r6, [sp, #112]	; 0x70
 8003ea0:	f007 ffb0 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea13.setXY(159, 231);
 8003ea4:	22e7      	movs	r2, #231	; 0xe7
 8003ea6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003ea8:	219f      	movs	r1, #159	; 0x9f
 8003eaa:	f7fe fc71 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea13.setTypedText(touchgfx::TypedText(T_SINGLEUSEID21));
 8003eae:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003eb2:	2314      	movs	r3, #20
 8003eb4:	4671      	mov	r1, lr
 8003eb6:	9811      	ldr	r0, [sp, #68]	; 0x44
        this->color = color;
 8003eb8:	f8c4 9ad4 	str.w	r9, [r4, #2772]	; 0xad4
        linespace = space;
 8003ebc:	f8a4 5ad8 	strh.w	r5, [r4, #2776]	; 0xad8
 8003ec0:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003ec4:	961c      	str	r6, [sp, #112]	; 0x70
 8003ec6:	f007 ff9d 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea14.setXY(157, 187);
 8003eca:	22bb      	movs	r2, #187	; 0xbb
 8003ecc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003ece:	219d      	movs	r1, #157	; 0x9d
 8003ed0:	f7fe fc5e 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea14.setTypedText(touchgfx::TypedText(T_SINGLEUSEID22));
 8003ed4:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003ed8:	2315      	movs	r3, #21
 8003eda:	4671      	mov	r1, lr
 8003edc:	9812      	ldr	r0, [sp, #72]	; 0x48
        this->color = color;
 8003ede:	f8c4 9b10 	str.w	r9, [r4, #2832]	; 0xb10
        linespace = space;
 8003ee2:	f8a4 5b14 	strh.w	r5, [r4, #2836]	; 0xb14
 8003ee6:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003eea:	961c      	str	r6, [sp, #112]	; 0x70
 8003eec:	f007 ff8a 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea15.setXY(161, 277);
 8003ef0:	f240 1215 	movw	r2, #277	; 0x115
 8003ef4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003ef6:	21a1      	movs	r1, #161	; 0xa1
 8003ef8:	f7fe fc4a 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea15.setTypedText(touchgfx::TypedText(T_SINGLEUSEID23));
 8003efc:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003f00:	2316      	movs	r3, #22
 8003f02:	4671      	mov	r1, lr
 8003f04:	9813      	ldr	r0, [sp, #76]	; 0x4c
        this->color = color;
 8003f06:	f8c4 9b4c 	str.w	r9, [r4, #2892]	; 0xb4c
        linespace = space;
 8003f0a:	f8a4 5b50 	strh.w	r5, [r4, #2896]	; 0xb50
 8003f0e:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003f12:	961c      	str	r6, [sp, #112]	; 0x70
 8003f14:	f007 ff76 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea16.setXY(204, 187);
 8003f18:	22bb      	movs	r2, #187	; 0xbb
 8003f1a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003f1c:	21cc      	movs	r1, #204	; 0xcc
 8003f1e:	f7fe fc37 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea16.setTypedText(touchgfx::TypedText(T_SINGLEUSEID24));
 8003f22:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003f26:	2317      	movs	r3, #23
 8003f28:	4671      	mov	r1, lr
 8003f2a:	9814      	ldr	r0, [sp, #80]	; 0x50
        this->color = color;
 8003f2c:	f8c4 9b88 	str.w	r9, [r4, #2952]	; 0xb88
        linespace = space;
 8003f30:	f8a4 5b8c 	strh.w	r5, [r4, #2956]	; 0xb8c
 8003f34:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003f38:	961c      	str	r6, [sp, #112]	; 0x70
 8003f3a:	f007 ff63 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea17.setXY(204, 277);
 8003f3e:	f240 1215 	movw	r2, #277	; 0x115
 8003f42:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003f44:	21cc      	movs	r1, #204	; 0xcc
 8003f46:	f7fe fc23 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 8003f4a:	f04f 0e18 	mov.w	lr, #24
 8003f4e:	f8ad e074 	strh.w	lr, [sp, #116]	; 0x74
    textArea17.setTypedText(touchgfx::TypedText(T_SINGLEUSEID25));
 8003f52:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003f56:	4671      	mov	r1, lr
 8003f58:	9815      	ldr	r0, [sp, #84]	; 0x54
        this->color = color;
 8003f5a:	f8c4 9bc4 	str.w	r9, [r4, #3012]	; 0xbc4
        linespace = space;
 8003f5e:	f8a4 5bc8 	strh.w	r5, [r4, #3016]	; 0xbc8
 8003f62:	961c      	str	r6, [sp, #112]	; 0x70
 8003f64:	f007 ff4e 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textArea17_1.setXY(202, 231);
 8003f68:	22e7      	movs	r2, #231	; 0xe7
 8003f6a:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003f6c:	21ca      	movs	r1, #202	; 0xca
 8003f6e:	f7fe fc0f 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
    textArea17_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID26));
 8003f72:	f10d 0e70 	add.w	lr, sp, #112	; 0x70
 8003f76:	2319      	movs	r3, #25
 8003f78:	4671      	mov	r1, lr
 8003f7a:	9816      	ldr	r0, [sp, #88]	; 0x58
        this->color = color;
 8003f7c:	f8c4 9c00 	str.w	r9, [r4, #3072]	; 0xc00
        linespace = space;
 8003f80:	f8a4 5c04 	strh.w	r5, [r4, #3076]	; 0xc04
 8003f84:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8003f88:	961c      	str	r6, [sp, #112]	; 0x70
 8003f8a:	f007 ff3b 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f8e:	f04f 0e36 	mov.w	lr, #54	; 0x36
 8003f92:	f8cd e000 	str.w	lr, [sp]
 8003f96:	2378      	movs	r3, #120	; 0x78
 8003f98:	462a      	mov	r2, r5
 8003f9a:	4629      	mov	r1, r5
 8003f9c:	f504 6044 	add.w	r0, r4, #3136	; 0xc40
 8003fa0:	f7fe fdf1 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton10.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003fa4:	4b17      	ldr	r3, [pc, #92]	; (8004004 <_ZN15Screen4ViewBaseC1Ev+0xa68>)
 8003fa6:	4a18      	ldr	r2, [pc, #96]	; (8004008 <_ZN15Screen4ViewBaseC1Ev+0xa6c>)
 8003fa8:	4918      	ldr	r1, [pc, #96]	; (800400c <_ZN15Screen4ViewBaseC1Ev+0xa70>)
 8003faa:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003fac:	f8a4 8c70 	strh.w	r8, [r4, #3184]	; 0xc70
 8003fb0:	f8cd a000 	str.w	sl, [sp]
 8003fb4:	f7ff fae6 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton10.setPosition(7, 6, 120, 54);
 8003fb8:	f04f 0e36 	mov.w	lr, #54	; 0x36
 8003fbc:	f8cd e000 	str.w	lr, [sp]
 8003fc0:	2378      	movs	r3, #120	; 0x78
 8003fc2:	2206      	movs	r2, #6
 8003fc4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003fc6:	2107      	movs	r1, #7
 8003fc8:	f7fe fddd 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fcc:	f04f 000c 	mov.w	r0, #12
 8003fd0:	f8ad 0070 	strh.w	r0, [sp, #112]	; 0x70
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID));
 8003fd4:	a81c      	add	r0, sp, #112	; 0x70
 8003fd6:	4601      	mov	r1, r0
 8003fd8:	f8c4 7c3c 	str.w	r7, [r4, #3132]	; 0xc3c
 8003fdc:	ee19 0a10 	vmov	r0, s18
 8003fe0:	f008 fa77 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(37, 13, 57, 40);
 8003fe4:	2028      	movs	r0, #40	; 0x28
 8003fe6:	2339      	movs	r3, #57	; 0x39
 8003fe8:	220d      	movs	r2, #13
 8003fea:	9000      	str	r0, [sp, #0]
 8003fec:	e010      	b.n	8004010 <_ZN15Screen4ViewBaseC1Ev+0xa74>
 8003fee:	bf00      	nop
 8003ff0:	20012e20 	.word	0x20012e20
 8003ff4:	0801eff9 	.word	0x0801eff9
 8003ff8:	0801e790 	.word	0x0801e790
 8003ffc:	20012e14 	.word	0x20012e14
 8004000:	20012e18 	.word	0x20012e18
 8004004:	ff003366 	.word	0xff003366
 8004008:	ff0099cc 	.word	0xff0099cc
 800400c:	ff006699 	.word	0xff006699
 8004010:	2125      	movs	r1, #37	; 0x25
 8004012:	ee19 0a10 	vmov	r0, s18
 8004016:	f7fe fdb6 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800401a:	ee19 0a10 	vmov	r0, s18
 800401e:	4629      	mov	r1, r5
 8004020:	f007 facf 	bl	800b5c2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004024:	2036      	movs	r0, #54	; 0x36
 8004026:	9000      	str	r0, [sp, #0]
 8004028:	2372      	movs	r3, #114	; 0x72
 800402a:	462a      	mov	r2, r5
 800402c:	4629      	mov	r1, r5
 800402e:	f604 40e4 	addw	r0, r4, #3300	; 0xce4
 8004032:	f7fe fda8 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonClear.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8004036:	4ba3      	ldr	r3, [pc, #652]	; (80042c4 <_ZN15Screen4ViewBaseC1Ev+0xd28>)
 8004038:	4aa3      	ldr	r2, [pc, #652]	; (80042c8 <_ZN15Screen4ViewBaseC1Ev+0xd2c>)
 800403a:	49a4      	ldr	r1, [pc, #656]	; (80042cc <_ZN15Screen4ViewBaseC1Ev+0xd30>)
 800403c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800403e:	f8a4 8d14 	strh.w	r8, [r4, #3348]	; 0xd14
 8004042:	f8cd a000 	str.w	sl, [sp]
 8004046:	f7ff fa9d 	bl	8003584 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonClear.setPosition(120, 6, 114, 54);
 800404a:	2036      	movs	r0, #54	; 0x36
 800404c:	2372      	movs	r3, #114	; 0x72
 800404e:	2206      	movs	r2, #6
 8004050:	9000      	str	r0, [sp, #0]
 8004052:	2178      	movs	r1, #120	; 0x78
 8004054:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004056:	f7fe fd96 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_TRASH_32_ID));
 800405a:	a81c      	add	r0, sp, #112	; 0x70
 800405c:	f04f 0c0e 	mov.w	ip, #14
 8004060:	4601      	mov	r1, r0
 8004062:	f8c4 7ce0 	str.w	r7, [r4, #3296]	; 0xce0
 8004066:	ee19 0a90 	vmov	r0, s19
 800406a:	f8ad c070 	strh.w	ip, [sp, #112]	; 0x70
 800406e:	f008 fa30 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setPosition(157, 13, 40, 40);
 8004072:	2028      	movs	r0, #40	; 0x28
 8004074:	4603      	mov	r3, r0
 8004076:	220d      	movs	r2, #13
 8004078:	9000      	str	r0, [sp, #0]
 800407a:	219d      	movs	r1, #157	; 0x9d
 800407c:	ee19 0a90 	vmov	r0, s19
 8004080:	f7fe fd81 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004084:	ee19 0a90 	vmov	r0, s19
 8004088:	4629      	mov	r1, r5
 800408a:	f007 fa9a 	bl	800b5c2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    calculation_text_area_2.setPosition(134, 71, 102, 31);
 800408e:	201f      	movs	r0, #31
 8004090:	9000      	str	r0, [sp, #0]
 8004092:	2366      	movs	r3, #102	; 0x66
 8004094:	2247      	movs	r2, #71	; 0x47
 8004096:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004098:	2186      	movs	r1, #134	; 0x86
 800409a:	f7fe fd74 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800409e:	4a8c      	ldr	r2, [pc, #560]	; (80042d0 <_ZN15Screen4ViewBaseC1Ev+0xd34>)
        this->color = color;
 80040a0:	f8c4 9d84 	str.w	r9, [r4, #3460]	; 0xd84
 80040a4:	6813      	ldr	r3, [r2, #0]
        linespace = space;
 80040a6:	f8a4 5d88 	strh.w	r5, [r4, #3464]	; 0xd88
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID28).getText());
 80040aa:	f504 6761 	add.w	r7, r4, #3600	; 0xe10
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	f43f add1 	beq.w	8003c56 <_ZN15Screen4ViewBaseC1Ev+0x6ba>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80040b4:	4987      	ldr	r1, [pc, #540]	; (80042d4 <_ZN15Screen4ViewBaseC1Ev+0xd38>)
 80040b6:	880b      	ldrh	r3, [r1, #0]
 80040b8:	2b1b      	cmp	r3, #27
 80040ba:	f67f add6 	bls.w	8003c6a <_ZN15Screen4ViewBaseC1Ev+0x6ce>
        return texts->getText(typedTextId);
 80040be:	4b86      	ldr	r3, [pc, #536]	; (80042d8 <_ZN15Screen4ViewBaseC1Ev+0xd3c>)
 80040c0:	211b      	movs	r1, #27
 80040c2:	6818      	ldr	r0, [r3, #0]
 80040c4:	f000 fae4 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 80040c8:	4a84      	ldr	r2, [pc, #528]	; (80042dc <_ZN15Screen4ViewBaseC1Ev+0xd40>)
 80040ca:	4603      	mov	r3, r0
 80040cc:	210a      	movs	r1, #10
 80040ce:	4638      	mov	r0, r7
 80040d0:	f00c fe96 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    calculation_text_area_2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));
 80040d4:	a81c      	add	r0, sp, #112	; 0x70
        : typedTextId(id)
 80040d6:	231a      	movs	r3, #26
 80040d8:	4601      	mov	r1, r0
 80040da:	f8c4 7d90 	str.w	r7, [r4, #3472]	; 0xd90
 80040de:	9819      	ldr	r0, [sp, #100]	; 0x64
 80040e0:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 80040e4:	961c      	str	r6, [sp, #112]	; 0x70
 80040e6:	f007 fe8d 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    sign_text_area.setPosition(111, 78, 32, 24);
 80040ea:	2018      	movs	r0, #24
 80040ec:	9000      	str	r0, [sp, #0]
 80040ee:	2320      	movs	r3, #32
 80040f0:	224e      	movs	r2, #78	; 0x4e
 80040f2:	981a      	ldr	r0, [sp, #104]	; 0x68
 80040f4:	216f      	movs	r1, #111	; 0x6f
 80040f6:	f7fe fd46 	bl	8002b86 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040fa:	4a75      	ldr	r2, [pc, #468]	; (80042d0 <_ZN15Screen4ViewBaseC1Ev+0xd34>)
 80040fc:	f8a4 5dc8 	strh.w	r5, [r4, #3528]	; 0xdc8
 8004100:	6813      	ldr	r3, [r2, #0]
        this->color = color;
 8004102:	f8c4 9dc4 	str.w	r9, [r4, #3524]	; 0xdc4
    Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID30).getText());
 8004106:	f604 6524 	addw	r5, r4, #3620	; 0xe24
 800410a:	2b00      	cmp	r3, #0
 800410c:	f43f ada3 	beq.w	8003c56 <_ZN15Screen4ViewBaseC1Ev+0x6ba>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004110:	4970      	ldr	r1, [pc, #448]	; (80042d4 <_ZN15Screen4ViewBaseC1Ev+0xd38>)
 8004112:	880b      	ldrh	r3, [r1, #0]
 8004114:	2b1d      	cmp	r3, #29
 8004116:	f67f ada8 	bls.w	8003c6a <_ZN15Screen4ViewBaseC1Ev+0x6ce>
        return texts->getText(typedTextId);
 800411a:	4b6f      	ldr	r3, [pc, #444]	; (80042d8 <_ZN15Screen4ViewBaseC1Ev+0xd3c>)
 800411c:	211d      	movs	r1, #29
 800411e:	6818      	ldr	r0, [r3, #0]
 8004120:	f000 fab6 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 8004124:	4a6d      	ldr	r2, [pc, #436]	; (80042dc <_ZN15Screen4ViewBaseC1Ev+0xd40>)
 8004126:	4603      	mov	r3, r0
 8004128:	4641      	mov	r1, r8
 800412a:	4628      	mov	r0, r5
 800412c:	f00c fe68 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004130:	231c      	movs	r3, #28
    sign_text_area.setTypedText(touchgfx::TypedText(T_SINGLEUSEID29));
 8004132:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004134:	f8c4 5dd0 	str.w	r5, [r4, #3536]	; 0xdd0
 8004138:	a91c      	add	r1, sp, #112	; 0x70
 800413a:	1d25      	adds	r5, r4, #4
 800413c:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
 8004140:	961c      	str	r6, [sp, #112]	; 0x70
 8004142:	f007 fe5f 	bl	800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004146:	ee18 1a10 	vmov	r1, s16
 800414a:	4628      	mov	r0, r5
 800414c:	f006 f93c 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004150:	4659      	mov	r1, fp
 8004152:	4628      	mov	r0, r5
 8004154:	f006 f938 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004158:	ee1a 1a10 	vmov	r1, s20
 800415c:	4628      	mov	r0, r5
 800415e:	f006 f933 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004162:	ee1a 1a90 	vmov	r1, s21
 8004166:	4628      	mov	r0, r5
 8004168:	f006 f92e 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800416c:	ee1b 1a10 	vmov	r1, s22
 8004170:	4628      	mov	r0, r5
 8004172:	f006 f929 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004176:	ee1b 1a90 	vmov	r1, s23
 800417a:	4628      	mov	r0, r5
 800417c:	f006 f924 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004180:	ee1c 1a10 	vmov	r1, s24
 8004184:	4628      	mov	r0, r5
 8004186:	f006 f91f 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800418a:	ee1c 1a90 	vmov	r1, s25
 800418e:	4628      	mov	r0, r5
 8004190:	f006 f91a 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004194:	ee1d 1a10 	vmov	r1, s26
 8004198:	4628      	mov	r0, r5
 800419a:	f006 f915 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800419e:	ee1d 1a90 	vmov	r1, s27
 80041a2:	4628      	mov	r0, r5
 80041a4:	f006 f910 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041a8:	ee1e 1a10 	vmov	r1, s28
 80041ac:	4628      	mov	r0, r5
 80041ae:	f006 f90b 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041b2:	ee1e 1a90 	vmov	r1, s29
 80041b6:	4628      	mov	r0, r5
 80041b8:	f006 f906 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041bc:	ee1f 1a10 	vmov	r1, s30
 80041c0:	4628      	mov	r0, r5
 80041c2:	f006 f901 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041c6:	ee1f 1a90 	vmov	r1, s31
 80041ca:	4628      	mov	r0, r5
 80041cc:	f006 f8fc 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041d0:	9902      	ldr	r1, [sp, #8]
 80041d2:	4628      	mov	r0, r5
 80041d4:	f006 f8f8 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041d8:	9903      	ldr	r1, [sp, #12]
 80041da:	4628      	mov	r0, r5
 80041dc:	f006 f8f4 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041e0:	9904      	ldr	r1, [sp, #16]
 80041e2:	4628      	mov	r0, r5
 80041e4:	f006 f8f0 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041e8:	ee18 1a90 	vmov	r1, s17
 80041ec:	4628      	mov	r0, r5
 80041ee:	f006 f8eb 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041f2:	9905      	ldr	r1, [sp, #20]
 80041f4:	4628      	mov	r0, r5
 80041f6:	f006 f8e7 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041fa:	9906      	ldr	r1, [sp, #24]
 80041fc:	4628      	mov	r0, r5
 80041fe:	f006 f8e3 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004202:	9907      	ldr	r1, [sp, #28]
 8004204:	4628      	mov	r0, r5
 8004206:	f006 f8df 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800420a:	9908      	ldr	r1, [sp, #32]
 800420c:	4628      	mov	r0, r5
 800420e:	f006 f8db 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004212:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004214:	4628      	mov	r0, r5
 8004216:	f006 f8d7 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800421a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800421c:	4628      	mov	r0, r5
 800421e:	f006 f8d3 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004222:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004224:	4628      	mov	r0, r5
 8004226:	f006 f8cf 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800422a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800422c:	4628      	mov	r0, r5
 800422e:	f006 f8cb 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004232:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004234:	4628      	mov	r0, r5
 8004236:	f006 f8c7 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800423a:	990e      	ldr	r1, [sp, #56]	; 0x38
 800423c:	4628      	mov	r0, r5
 800423e:	f006 f8c3 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004242:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004244:	4628      	mov	r0, r5
 8004246:	f006 f8bf 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800424a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800424c:	4628      	mov	r0, r5
 800424e:	f006 f8bb 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004252:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004254:	4628      	mov	r0, r5
 8004256:	f006 f8b7 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800425a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800425c:	4628      	mov	r0, r5
 800425e:	f006 f8b3 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004262:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004264:	4628      	mov	r0, r5
 8004266:	f006 f8af 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800426a:	9914      	ldr	r1, [sp, #80]	; 0x50
 800426c:	4628      	mov	r0, r5
 800426e:	f006 f8ab 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004272:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004274:	4628      	mov	r0, r5
 8004276:	f006 f8a7 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800427a:	9916      	ldr	r1, [sp, #88]	; 0x58
 800427c:	4628      	mov	r0, r5
 800427e:	f006 f8a3 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004282:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8004284:	4628      	mov	r0, r5
 8004286:	f006 f89f 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800428a:	ee19 1a10 	vmov	r1, s18
 800428e:	4628      	mov	r0, r5
 8004290:	f006 f89a 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004294:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004296:	4628      	mov	r0, r5
 8004298:	f006 f896 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800429c:	ee19 1a90 	vmov	r1, s19
 80042a0:	4628      	mov	r0, r5
 80042a2:	f006 f891 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80042a6:	9919      	ldr	r1, [sp, #100]	; 0x64
 80042a8:	4628      	mov	r0, r5
 80042aa:	f006 f88d 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80042ae:	4628      	mov	r0, r5
 80042b0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80042b2:	f006 f889 	bl	800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80042b6:	4620      	mov	r0, r4
 80042b8:	b01f      	add	sp, #124	; 0x7c
 80042ba:	ecbd 8b10 	vpop	{d8-d15}
 80042be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042c2:	bf00      	nop
 80042c4:	ff003366 	.word	0xff003366
 80042c8:	ff0099cc 	.word	0xff0099cc
 80042cc:	ff006699 	.word	0xff006699
 80042d0:	20012e14 	.word	0x20012e14
 80042d4:	20012e18 	.word	0x20012e18
 80042d8:	20012e20 	.word	0x20012e20
 80042dc:	0801eff9 	.word	0x0801eff9

080042e0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ariblk_15_4bpp();

touchgfx::GeneratedFont& getFont_ariblk_15_4bpp()
{
    static touchgfx::GeneratedFont ariblk_15_4bpp(glyphs_ariblk_15_4bpp, 95, 15, 3, 4, 1, 1, 1, unicodes_ariblk_15_4bpp, kerning_ariblk_15_4bpp, 63, 0, 0, 0);
 80042e0:	4770      	bx	lr
	...

080042e4 <_Z22getFont_ariblk_15_4bppv>:
{
 80042e4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ariblk_15_4bpp(glyphs_ariblk_15_4bpp, 95, 15, 3, 4, 1, 1, 1, unicodes_ariblk_15_4bpp, kerning_ariblk_15_4bpp, 63, 0, 0, 0);
 80042e6:	4d16      	ldr	r5, [pc, #88]	; (8004340 <_Z22getFont_ariblk_15_4bppv+0x5c>)
 80042e8:	782c      	ldrb	r4, [r5, #0]
 80042ea:	f3bf 8f5b 	dmb	ish
 80042ee:	f014 0401 	ands.w	r4, r4, #1
{
 80042f2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ariblk_15_4bpp(glyphs_ariblk_15_4bpp, 95, 15, 3, 4, 1, 1, 1, unicodes_ariblk_15_4bpp, kerning_ariblk_15_4bpp, 63, 0, 0, 0);
 80042f4:	d120      	bne.n	8004338 <_Z22getFont_ariblk_15_4bppv+0x54>
 80042f6:	4628      	mov	r0, r5
 80042f8:	f018 fd22 	bl	801cd40 <__cxa_guard_acquire>
 80042fc:	b1e0      	cbz	r0, 8004338 <_Z22getFont_ariblk_15_4bppv+0x54>
 80042fe:	233f      	movs	r3, #63	; 0x3f
 8004300:	9307      	str	r3, [sp, #28]
 8004302:	4b10      	ldr	r3, [pc, #64]	; (8004344 <_Z22getFont_ariblk_15_4bppv+0x60>)
 8004304:	9306      	str	r3, [sp, #24]
 8004306:	4b10      	ldr	r3, [pc, #64]	; (8004348 <_Z22getFont_ariblk_15_4bppv+0x64>)
 8004308:	9305      	str	r3, [sp, #20]
 800430a:	2301      	movs	r3, #1
 800430c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8004310:	9302      	str	r3, [sp, #8]
 8004312:	2204      	movs	r2, #4
 8004314:	2303      	movs	r3, #3
 8004316:	e9cd 3200 	strd	r3, r2, [sp]
 800431a:	490c      	ldr	r1, [pc, #48]	; (800434c <_Z22getFont_ariblk_15_4bppv+0x68>)
 800431c:	480c      	ldr	r0, [pc, #48]	; (8004350 <_Z22getFont_ariblk_15_4bppv+0x6c>)
 800431e:	9408      	str	r4, [sp, #32]
 8004320:	230f      	movs	r3, #15
 8004322:	225f      	movs	r2, #95	; 0x5f
 8004324:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004328:	f7fe f96e 	bl	8002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800432c:	4628      	mov	r0, r5
 800432e:	f018 fd13 	bl	801cd58 <__cxa_guard_release>
 8004332:	4808      	ldr	r0, [pc, #32]	; (8004354 <_Z22getFont_ariblk_15_4bppv+0x70>)
 8004334:	f018 fd4e 	bl	801cdd4 <atexit>
    return ariblk_15_4bpp;
}
 8004338:	4805      	ldr	r0, [pc, #20]	; (8004350 <_Z22getFont_ariblk_15_4bppv+0x6c>)
 800433a:	b00d      	add	sp, #52	; 0x34
 800433c:	bd30      	pop	{r4, r5, pc}
 800433e:	bf00      	nop
 8004340:	20001ee0 	.word	0x20001ee0
 8004344:	08025d58 	.word	0x08025d58
 8004348:	0801f268 	.word	0x0801f268
 800434c:	08025228 	.word	0x08025228
 8004350:	20001ee4 	.word	0x20001ee4
 8004354:	080042e1 	.word	0x080042e1

08004358 <__tcf_0>:

touchgfx::GeneratedFont& getFont_ariblk_25_4bpp();

touchgfx::GeneratedFont& getFont_ariblk_25_4bpp()
{
    static touchgfx::GeneratedFont ariblk_25_4bpp(glyphs_ariblk_25_4bpp, 12, 25, 5, 4, 1, 0, 0, unicodes_ariblk_25_4bpp, kerning_ariblk_25_4bpp, 63, 0, 0, 0);
 8004358:	4770      	bx	lr
	...

0800435c <_Z22getFont_ariblk_25_4bppv>:
{
 800435c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont ariblk_25_4bpp(glyphs_ariblk_25_4bpp, 12, 25, 5, 4, 1, 0, 0, unicodes_ariblk_25_4bpp, kerning_ariblk_25_4bpp, 63, 0, 0, 0);
 800435e:	4d16      	ldr	r5, [pc, #88]	; (80043b8 <_Z22getFont_ariblk_25_4bppv+0x5c>)
 8004360:	782c      	ldrb	r4, [r5, #0]
 8004362:	f3bf 8f5b 	dmb	ish
 8004366:	f014 0401 	ands.w	r4, r4, #1
{
 800436a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont ariblk_25_4bpp(glyphs_ariblk_25_4bpp, 12, 25, 5, 4, 1, 0, 0, unicodes_ariblk_25_4bpp, kerning_ariblk_25_4bpp, 63, 0, 0, 0);
 800436c:	d120      	bne.n	80043b0 <_Z22getFont_ariblk_25_4bppv+0x54>
 800436e:	4628      	mov	r0, r5
 8004370:	f018 fce6 	bl	801cd40 <__cxa_guard_acquire>
 8004374:	b1e0      	cbz	r0, 80043b0 <_Z22getFont_ariblk_25_4bppv+0x54>
 8004376:	233f      	movs	r3, #63	; 0x3f
 8004378:	9307      	str	r3, [sp, #28]
 800437a:	4b10      	ldr	r3, [pc, #64]	; (80043bc <_Z22getFont_ariblk_25_4bppv+0x60>)
 800437c:	9306      	str	r3, [sp, #24]
 800437e:	4b10      	ldr	r3, [pc, #64]	; (80043c0 <_Z22getFont_ariblk_25_4bppv+0x64>)
 8004380:	4910      	ldr	r1, [pc, #64]	; (80043c4 <_Z22getFont_ariblk_25_4bppv+0x68>)
 8004382:	4811      	ldr	r0, [pc, #68]	; (80043c8 <_Z22getFont_ariblk_25_4bppv+0x6c>)
 8004384:	9408      	str	r4, [sp, #32]
 8004386:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800438a:	2201      	movs	r2, #1
 800438c:	2304      	movs	r3, #4
 800438e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004392:	2305      	movs	r3, #5
 8004394:	9300      	str	r3, [sp, #0]
 8004396:	220c      	movs	r2, #12
 8004398:	2319      	movs	r3, #25
 800439a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800439e:	9403      	str	r4, [sp, #12]
 80043a0:	f7fe f932 	bl	8002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80043a4:	4628      	mov	r0, r5
 80043a6:	f018 fcd7 	bl	801cd58 <__cxa_guard_release>
 80043aa:	4808      	ldr	r0, [pc, #32]	; (80043cc <_Z22getFont_ariblk_25_4bppv+0x70>)
 80043ac:	f018 fd12 	bl	801cdd4 <atexit>
    return ariblk_25_4bpp;
}
 80043b0:	4805      	ldr	r0, [pc, #20]	; (80043c8 <_Z22getFont_ariblk_25_4bppv+0x6c>)
 80043b2:	b00d      	add	sp, #52	; 0x34
 80043b4:	bd30      	pop	{r4, r5, pc}
 80043b6:	bf00      	nop
 80043b8:	20001f0c 	.word	0x20001f0c
 80043bc:	08025e20 	.word	0x08025e20
 80043c0:	0801f26c 	.word	0x0801f26c
 80043c4:	0802575c 	.word	0x0802575c
 80043c8:	20001f10 	.word	0x20001f10
 80043cc:	08004359 	.word	0x08004359

080043d0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80043d0:	4770      	bx	lr
	...

080043d4 <_Z23getFont_verdana_10_4bppv>:
{
 80043d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80043d6:	4d15      	ldr	r5, [pc, #84]	; (800442c <_Z23getFont_verdana_10_4bppv+0x58>)
 80043d8:	782c      	ldrb	r4, [r5, #0]
 80043da:	f3bf 8f5b 	dmb	ish
 80043de:	f014 0401 	ands.w	r4, r4, #1
{
 80043e2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80043e4:	d11e      	bne.n	8004424 <_Z23getFont_verdana_10_4bppv+0x50>
 80043e6:	4628      	mov	r0, r5
 80043e8:	f018 fcaa 	bl	801cd40 <__cxa_guard_acquire>
 80043ec:	b1d0      	cbz	r0, 8004424 <_Z23getFont_verdana_10_4bppv+0x50>
 80043ee:	233f      	movs	r3, #63	; 0x3f
 80043f0:	9307      	str	r3, [sp, #28]
 80043f2:	4b0f      	ldr	r3, [pc, #60]	; (8004430 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80043f4:	9306      	str	r3, [sp, #24]
 80043f6:	4b0f      	ldr	r3, [pc, #60]	; (8004434 <_Z23getFont_verdana_10_4bppv+0x60>)
 80043f8:	490f      	ldr	r1, [pc, #60]	; (8004438 <_Z23getFont_verdana_10_4bppv+0x64>)
 80043fa:	4810      	ldr	r0, [pc, #64]	; (800443c <_Z23getFont_verdana_10_4bppv+0x68>)
 80043fc:	9408      	str	r4, [sp, #32]
 80043fe:	2201      	movs	r2, #1
 8004400:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004404:	2304      	movs	r3, #4
 8004406:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800440a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800440e:	230a      	movs	r3, #10
 8004410:	9403      	str	r4, [sp, #12]
 8004412:	9400      	str	r4, [sp, #0]
 8004414:	f7fe f8f8 	bl	8002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004418:	4628      	mov	r0, r5
 800441a:	f018 fc9d 	bl	801cd58 <__cxa_guard_release>
 800441e:	4808      	ldr	r0, [pc, #32]	; (8004440 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004420:	f018 fcd8 	bl	801cdd4 <atexit>
    return verdana_10_4bpp;
}
 8004424:	4805      	ldr	r0, [pc, #20]	; (800443c <_Z23getFont_verdana_10_4bppv+0x68>)
 8004426:	b00d      	add	sp, #52	; 0x34
 8004428:	bd30      	pop	{r4, r5, pc}
 800442a:	bf00      	nop
 800442c:	20001f38 	.word	0x20001f38
 8004430:	08025e24 	.word	0x08025e24
 8004434:	0801f270 	.word	0x0801f270
 8004438:	08025804 	.word	0x08025804
 800443c:	20001f3c 	.word	0x20001f3c
 8004440:	080043d1 	.word	0x080043d1

08004444 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004444:	4770      	bx	lr
	...

08004448 <_Z23getFont_verdana_20_4bppv>:
{
 8004448:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800444a:	4d15      	ldr	r5, [pc, #84]	; (80044a0 <_Z23getFont_verdana_20_4bppv+0x58>)
 800444c:	782c      	ldrb	r4, [r5, #0]
 800444e:	f3bf 8f5b 	dmb	ish
 8004452:	f014 0401 	ands.w	r4, r4, #1
{
 8004456:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 95, 20, 4, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004458:	d11f      	bne.n	800449a <_Z23getFont_verdana_20_4bppv+0x52>
 800445a:	4628      	mov	r0, r5
 800445c:	f018 fc70 	bl	801cd40 <__cxa_guard_acquire>
 8004460:	b1d8      	cbz	r0, 800449a <_Z23getFont_verdana_20_4bppv+0x52>
 8004462:	233f      	movs	r3, #63	; 0x3f
 8004464:	9307      	str	r3, [sp, #28]
 8004466:	4b0f      	ldr	r3, [pc, #60]	; (80044a4 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8004468:	9306      	str	r3, [sp, #24]
 800446a:	4b0f      	ldr	r3, [pc, #60]	; (80044a8 <_Z23getFont_verdana_20_4bppv+0x60>)
 800446c:	9305      	str	r3, [sp, #20]
 800446e:	2301      	movs	r3, #1
 8004470:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8004474:	9302      	str	r3, [sp, #8]
 8004476:	2304      	movs	r3, #4
 8004478:	e9cd 3300 	strd	r3, r3, [sp]
 800447c:	490b      	ldr	r1, [pc, #44]	; (80044ac <_Z23getFont_verdana_20_4bppv+0x64>)
 800447e:	480c      	ldr	r0, [pc, #48]	; (80044b0 <_Z23getFont_verdana_20_4bppv+0x68>)
 8004480:	9408      	str	r4, [sp, #32]
 8004482:	2314      	movs	r3, #20
 8004484:	225f      	movs	r2, #95	; 0x5f
 8004486:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800448a:	f7fe f8bd 	bl	8002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800448e:	4628      	mov	r0, r5
 8004490:	f018 fc62 	bl	801cd58 <__cxa_guard_release>
 8004494:	4807      	ldr	r0, [pc, #28]	; (80044b4 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8004496:	f018 fc9d 	bl	801cdd4 <atexit>
    return verdana_20_4bpp;
}
 800449a:	4805      	ldr	r0, [pc, #20]	; (80044b0 <_Z23getFont_verdana_20_4bppv+0x68>)
 800449c:	b00d      	add	sp, #52	; 0x34
 800449e:	bd30      	pop	{r4, r5, pc}
 80044a0:	20001f64 	.word	0x20001f64
 80044a4:	08025e28 	.word	0x08025e28
 80044a8:	0801f274 	.word	0x0801f274
 80044ac:	08025814 	.word	0x08025814
 80044b0:	20001f68 	.word	0x20001f68
 80044b4:	08004445 	.word	0x08004445

080044b8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80044b8:	4770      	bx	lr
	...

080044bc <_Z23getFont_verdana_40_4bppv>:
{
 80044bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80044be:	4d15      	ldr	r5, [pc, #84]	; (8004514 <_Z23getFont_verdana_40_4bppv+0x58>)
 80044c0:	782c      	ldrb	r4, [r5, #0]
 80044c2:	f3bf 8f5b 	dmb	ish
 80044c6:	f014 0401 	ands.w	r4, r4, #1
{
 80044ca:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80044cc:	d11e      	bne.n	800450c <_Z23getFont_verdana_40_4bppv+0x50>
 80044ce:	4628      	mov	r0, r5
 80044d0:	f018 fc36 	bl	801cd40 <__cxa_guard_acquire>
 80044d4:	b1d0      	cbz	r0, 800450c <_Z23getFont_verdana_40_4bppv+0x50>
 80044d6:	233f      	movs	r3, #63	; 0x3f
 80044d8:	9307      	str	r3, [sp, #28]
 80044da:	4b0f      	ldr	r3, [pc, #60]	; (8004518 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80044dc:	9306      	str	r3, [sp, #24]
 80044de:	4b0f      	ldr	r3, [pc, #60]	; (800451c <_Z23getFont_verdana_40_4bppv+0x60>)
 80044e0:	490f      	ldr	r1, [pc, #60]	; (8004520 <_Z23getFont_verdana_40_4bppv+0x64>)
 80044e2:	4810      	ldr	r0, [pc, #64]	; (8004524 <_Z23getFont_verdana_40_4bppv+0x68>)
 80044e4:	9408      	str	r4, [sp, #32]
 80044e6:	2201      	movs	r2, #1
 80044e8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80044ec:	2304      	movs	r3, #4
 80044ee:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80044f2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80044f6:	2328      	movs	r3, #40	; 0x28
 80044f8:	9403      	str	r4, [sp, #12]
 80044fa:	9400      	str	r4, [sp, #0]
 80044fc:	f7fe f884 	bl	8002608 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004500:	4628      	mov	r0, r5
 8004502:	f018 fc29 	bl	801cd58 <__cxa_guard_release>
 8004506:	4808      	ldr	r0, [pc, #32]	; (8004528 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004508:	f018 fc64 	bl	801cdd4 <atexit>
    return verdana_40_4bpp;
}
 800450c:	4805      	ldr	r0, [pc, #20]	; (8004524 <_Z23getFont_verdana_40_4bppv+0x68>)
 800450e:	b00d      	add	sp, #52	; 0x34
 8004510:	bd30      	pop	{r4, r5, pc}
 8004512:	bf00      	nop
 8004514:	20001f90 	.word	0x20001f90
 8004518:	08025fcc 	.word	0x08025fcc
 800451c:	0801f278 	.word	0x0801f278
 8004520:	08025d48 	.word	0x08025d48
 8004524:	20001f94 	.word	0x20001f94
 8004528:	080044b9 	.word	0x080044b9

0800452c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800452c:	2000      	movs	r0, #0
 800452e:	4770      	bx	lr

08004530 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004530:	2000      	movs	r0, #0
 8004532:	4770      	bx	lr

08004534 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004534:	b40e      	push	{r1, r2, r3}
 8004536:	b503      	push	{r0, r1, lr}
 8004538:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800453a:	2100      	movs	r1, #0
{
 800453c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004540:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004542:	f00a fb3f 	bl	800ebc4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004546:	b002      	add	sp, #8
 8004548:	f85d eb04 	ldr.w	lr, [sp], #4
 800454c:	b003      	add	sp, #12
 800454e:	4770      	bx	lr

08004550 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004550:	b40c      	push	{r2, r3}
 8004552:	b507      	push	{r0, r1, r2, lr}
 8004554:	ab04      	add	r3, sp, #16
 8004556:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800455a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800455c:	f00a fb32 	bl	800ebc4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004560:	b003      	add	sp, #12
 8004562:	f85d eb04 	ldr.w	lr, [sp], #4
 8004566:	b002      	add	sp, #8
 8004568:	4770      	bx	lr
	...

0800456c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800456c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800456e:	b510      	push	{r4, lr}
 8004570:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004572:	b373      	cbz	r3, 80045d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004574:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8004576:	b92b      	cbnz	r3, 8004584 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004578:	4b18      	ldr	r3, [pc, #96]	; (80045dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800457a:	4a19      	ldr	r2, [pc, #100]	; (80045e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800457c:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800457e:	4819      	ldr	r0, [pc, #100]	; (80045e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004580:	f018 fc0a 	bl	801cd98 <__assert_func>
            return buffer[pos];
 8004584:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8004586:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800458a:	8b5b      	ldrh	r3, [r3, #26]
 800458c:	b30b      	cbz	r3, 80045d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800458e:	f00b fe7d 	bl	801028c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004592:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8004594:	2b01      	cmp	r3, #1
 8004596:	d803      	bhi.n	80045a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004598:	4b13      	ldr	r3, [pc, #76]	; (80045e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800459a:	4a14      	ldr	r2, [pc, #80]	; (80045ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800459c:	21c4      	movs	r1, #196	; 0xc4
 800459e:	e7ee      	b.n	800457e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80045a0:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80045a2:	1c53      	adds	r3, r2, #1
 80045a4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80045a6:	2b09      	cmp	r3, #9
 80045a8:	4619      	mov	r1, r3
 80045aa:	bf88      	it	hi
 80045ac:	f1a3 010a 	subhi.w	r1, r3, #10
 80045b0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80045b4:	f640 103f 	movw	r0, #2367	; 0x93f
 80045b8:	8b49      	ldrh	r1, [r1, #26]
 80045ba:	4281      	cmp	r1, r0
 80045bc:	d109      	bne.n	80045d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80045be:	2b0a      	cmp	r3, #10
 80045c0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80045c4:	bf28      	it	cs
 80045c6:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80045c8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80045cc:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80045ce:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80045d0:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80045d2:	4620      	mov	r0, r4
}
 80045d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80045d8:	f00b bd3c 	b.w	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80045dc:	0801f27c 	.word	0x0801f27c
 80045e0:	0801f285 	.word	0x0801f285
 80045e4:	0801f330 	.word	0x0801f330
 80045e8:	0801f37a 	.word	0x0801f37a
 80045ec:	0801f388 	.word	0x0801f388

080045f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80045f0:	f00b bcea 	b.w	800ffc8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080045f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80045f4:	b510      	push	{r4, lr}
 80045f6:	b086      	sub	sp, #24
 80045f8:	ac02      	add	r4, sp, #8
 80045fa:	e884 0006 	stmia.w	r4, {r1, r2}
 80045fe:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004600:	ab0a      	add	r3, sp, #40	; 0x28
 8004602:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004604:	9301      	str	r3, [sp, #4]
 8004606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004608:	9300      	str	r3, [sp, #0]
 800460a:	4621      	mov	r1, r4
 800460c:	9b08      	ldr	r3, [sp, #32]
 800460e:	f008 ffea 	bl	800d5e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004612:	b006      	add	sp, #24
 8004614:	bd10      	pop	{r4, pc}
	...

08004618 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004618:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800461a:	bb18      	cbnz	r0, 8004664 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800461c:	4b12      	ldr	r3, [pc, #72]	; (8004668 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800461e:	4813      	ldr	r0, [pc, #76]	; (800466c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4913      	ldr	r1, [pc, #76]	; (8004670 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004624:	b1b3      	cbz	r3, 8004654 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004626:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004628:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800462a:	441a      	add	r2, r3
 800462c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800462e:	685a      	ldr	r2, [r3, #4]
 8004630:	441a      	add	r2, r3
 8004632:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004634:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004636:	4b0f      	ldr	r3, [pc, #60]	; (8004674 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004638:	2200      	movs	r2, #0
 800463a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800463c:	f000 f838 	bl	80046b0 <_ZN17TypedTextDatabase8getFontsEv>
 8004640:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004642:	f000 f833 	bl	80046ac <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004646:	4b0c      	ldr	r3, [pc, #48]	; (8004678 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004648:	601c      	str	r4, [r3, #0]
        fonts = f;
 800464a:	4b0c      	ldr	r3, [pc, #48]	; (800467c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800464c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800464e:	4b0c      	ldr	r3, [pc, #48]	; (8004680 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004650:	8018      	strh	r0, [r3, #0]
    }
}
 8004652:	e007      	b.n	8004664 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004654:	4b0b      	ldr	r3, [pc, #44]	; (8004684 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004656:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004658:	4b0b      	ldr	r3, [pc, #44]	; (8004688 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800465a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800465c:	4b0b      	ldr	r3, [pc, #44]	; (800468c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800465e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004660:	2c00      	cmp	r4, #0
 8004662:	d1e8      	bne.n	8004636 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004664:	bd38      	pop	{r3, r4, r5, pc}
 8004666:	bf00      	nop
 8004668:	20001fbc 	.word	0x20001fbc
 800466c:	20001fc0 	.word	0x20001fc0
 8004670:	20001fc4 	.word	0x20001fc4
 8004674:	20001fc8 	.word	0x20001fc8
 8004678:	20012e14 	.word	0x20012e14
 800467c:	20012e1c 	.word	0x20012e1c
 8004680:	20012e18 	.word	0x20012e18
 8004684:	08026048 	.word	0x08026048
 8004688:	08025fd0 	.word	0x08025fd0
 800468c:	08026124 	.word	0x08026124

08004690 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004690:	4b04      	ldr	r3, [pc, #16]	; (80046a4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004692:	681b      	ldr	r3, [r3, #0]
 8004694:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004698:	4b03      	ldr	r3, [pc, #12]	; (80046a8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800469a:	681b      	ldr	r3, [r3, #0]
}
 800469c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80046a0:	4770      	bx	lr
 80046a2:	bf00      	nop
 80046a4:	20001fc4 	.word	0x20001fc4
 80046a8:	20001fc0 	.word	0x20001fc0

080046ac <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80046ac:	201e      	movs	r0, #30
 80046ae:	4770      	bx	lr

080046b0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80046b0:	4800      	ldr	r0, [pc, #0]	; (80046b4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80046b2:	4770      	bx	lr
 80046b4:	20001fcc 	.word	0x20001fcc

080046b8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_ariblk_15_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80046b8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80046ba:	f7ff fec5 	bl	8004448 <_Z23getFont_verdana_20_4bppv>
};
 80046be:	4c07      	ldr	r4, [pc, #28]	; (80046dc <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 80046c0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80046c2:	f7ff fefb 	bl	80044bc <_Z23getFont_verdana_40_4bppv>
};
 80046c6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80046c8:	f7ff fe84 	bl	80043d4 <_Z23getFont_verdana_10_4bppv>
};
 80046cc:	60a0      	str	r0, [r4, #8]
    &(getFont_ariblk_25_4bpp()),
 80046ce:	f7ff fe45 	bl	800435c <_Z22getFont_ariblk_25_4bppv>
};
 80046d2:	60e0      	str	r0, [r4, #12]
    &(getFont_ariblk_15_4bpp())
 80046d4:	f7ff fe06 	bl	80042e4 <_Z22getFont_ariblk_15_4bppv>
};
 80046d8:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 80046da:	bd10      	pop	{r4, pc}
 80046dc:	20001fcc 	.word	0x20001fcc

080046e0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80046e0:	4770      	bx	lr

080046e2 <_ZN19FrontendApplicationD0Ev>:
 80046e2:	b510      	push	{r4, lr}
 80046e4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80046e8:	4604      	mov	r4, r0
 80046ea:	f018 fb27 	bl	801cd3c <_ZdlPvj>
 80046ee:	4620      	mov	r0, r4
 80046f0:	bd10      	pop	{r4, pc}

080046f2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80046f2:	b510      	push	{r4, lr}
 80046f4:	4604      	mov	r4, r0
    {
        model.tick();
 80046f6:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80046fa:	f000 f815 	bl	8004728 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80046fe:	4620      	mov	r0, r4
    }
 8004700:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004704:	f009 bae0 	b.w	800dcc8 <_ZN8touchgfx11Application15handleTickEventEv>

08004708 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004708:	b510      	push	{r4, lr}
 800470a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800470c:	f7fd fc0c 	bl	8001f28 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004710:	4b01      	ldr	r3, [pc, #4]	; (8004718 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004712:	6023      	str	r3, [r4, #0]
{

}
 8004714:	4620      	mov	r0, r4
 8004716:	bd10      	pop	{r4, pc}
 8004718:	0801f464 	.word	0x0801f464

0800471c <_ZN5ModelC1Ev>:





Model::Model() : modelListener(0), Button_State (false), ADC_VAL(50)
 800471c:	2200      	movs	r2, #0
 800471e:	6002      	str	r2, [r0, #0]
 8004720:	7102      	strb	r2, [r0, #4]
 8004722:	2232      	movs	r2, #50	; 0x32
 8004724:	6082      	str	r2, [r0, #8]
{

}
 8004726:	4770      	bx	lr

08004728 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004728:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR
	if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0))
 800472a:	2101      	movs	r1, #1
{
 800472c:	4604      	mov	r4, r0
	if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0))
 800472e:	4813      	ldr	r0, [pc, #76]	; (800477c <_ZN5Model4tickEv+0x54>)
	{
		Button_State = true;
	}
	else Button_State = false;

	HAL_ADC_Start (&hadc1);
 8004730:	4e13      	ldr	r6, [pc, #76]	; (8004780 <_ZN5Model4tickEv+0x58>)
	if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0))
 8004732:	f001 fc79 	bl	8006028 <HAL_GPIO_ReadPin>
 8004736:	3800      	subs	r0, #0
 8004738:	bf18      	it	ne
 800473a:	2001      	movne	r0, #1
 800473c:	7120      	strb	r0, [r4, #4]
	HAL_ADC_Start (&hadc1);
 800473e:	4630      	mov	r0, r6
 8004740:	f001 f89c 	bl	800587c <HAL_ADC_Start>
	HAL_ADC_PollForConversion (&hadc1,10);
 8004744:	210a      	movs	r1, #10
 8004746:	4630      	mov	r0, r6
 8004748:	f001 f937 	bl	80059ba <HAL_ADC_PollForConversion>
	uint16_t value = HAL_ADC_GetValue (&hadc1);
 800474c:	4630      	mov	r0, r6
 800474e:	f001 f987 	bl	8005a60 <HAL_ADC_GetValue>
 8004752:	4605      	mov	r5, r0
	HAL_ADC_Stop (&hadc1);
 8004754:	4630      	mov	r0, r6
 8004756:	f001 f915 	bl	8005984 <HAL_ADC_Stop>
	ADC_VAL = map(value, 0, 4095, 0 , 100);
 800475a:	b2ad      	uxth	r5, r5
		return  (input - in_min) * (out_max - out_min + 1) / (in_max - in_min + 1) + out_min;
 800475c:	2365      	movs	r3, #101	; 0x65

#endif

	modelListener->setLight (Button_State);
 800475e:	6820      	ldr	r0, [r4, #0]
 8004760:	7921      	ldrb	r1, [r4, #4]
		return  (input - in_min) * (out_max - out_min + 1) / (in_max - in_min + 1) + out_min;
 8004762:	436b      	muls	r3, r5
 8004764:	131b      	asrs	r3, r3, #12
	ADC_VAL = map(value, 0, 4095, 0 , 100);
 8004766:	60a3      	str	r3, [r4, #8]
	modelListener->setLight (Button_State);
 8004768:	6803      	ldr	r3, [r0, #0]
 800476a:	689b      	ldr	r3, [r3, #8]
 800476c:	4798      	blx	r3
	modelListener->setADC (ADC_VAL);
 800476e:	6820      	ldr	r0, [r4, #0]
 8004770:	68a1      	ldr	r1, [r4, #8]
 8004772:	6803      	ldr	r3, [r0, #0]
}
 8004774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modelListener->setADC (ADC_VAL);
 8004778:	68db      	ldr	r3, [r3, #12]
 800477a:	4718      	bx	r3
 800477c:	40020000 	.word	0x40020000
 8004780:	200131c0 	.word	0x200131c0

08004784 <_ZN13ModelListener8setLightEb>:
    }

    virtual void setLight (bool state) {};
 8004784:	4770      	bx	lr

08004786 <_ZN13ModelListener6setADCEi>:
    virtual void setADC (int val) {};
 8004786:	4770      	bx	lr

08004788 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004788:	4770      	bx	lr

0800478a <_ZThn4_N16Screen1PresenterD1Ev>:
 800478a:	3804      	subs	r0, #4
 800478c:	4770      	bx	lr

0800478e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800478e:	4770      	bx	lr

08004790 <_ZN16Screen1PresenterD0Ev>:
 8004790:	b510      	push	{r4, lr}
 8004792:	2110      	movs	r1, #16
 8004794:	4604      	mov	r4, r0
 8004796:	f018 fad1 	bl	801cd3c <_ZdlPvj>
 800479a:	4620      	mov	r0, r4
 800479c:	bd10      	pop	{r4, pc}

0800479e <_ZThn4_N16Screen1PresenterD0Ev>:
 800479e:	f1a0 0004 	sub.w	r0, r0, #4
 80047a2:	e7f5      	b.n	8004790 <_ZN16Screen1PresenterD0Ev>

080047a4 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80047a4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80047a6:	2200      	movs	r2, #0
 80047a8:	6082      	str	r2, [r0, #8]
    : view(v)
 80047aa:	4a04      	ldr	r2, [pc, #16]	; (80047bc <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80047ac:	60c1      	str	r1, [r0, #12]
 80047ae:	f102 0408 	add.w	r4, r2, #8
 80047b2:	3220      	adds	r2, #32
 80047b4:	6004      	str	r4, [r0, #0]
 80047b6:	6042      	str	r2, [r0, #4]
}
 80047b8:	bd10      	pop	{r4, pc}
 80047ba:	bf00      	nop
 80047bc:	0801f4a0 	.word	0x0801f4a0

080047c0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80047c0:	4770      	bx	lr

080047c2 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 80047c2:	4770      	bx	lr

080047c4 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 80047c4:	f7fd bf7f 	b.w	80026c6 <_ZN15Screen1ViewBase11setupScreenEv>

080047c8 <_ZN11Screen1ViewD0Ev>:
 80047c8:	b510      	push	{r4, lr}
 80047ca:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80047ce:	4604      	mov	r4, r0
 80047d0:	f018 fab4 	bl	801cd3c <_ZdlPvj>
 80047d4:	4620      	mov	r0, r4
 80047d6:	bd10      	pop	{r4, pc}

080047d8 <_ZNK8touchgfx6Bitmap5getIdEv.isra.0.part.0>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 80047d8:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 80047da:	4a03      	ldr	r2, [pc, #12]	; (80047e8 <_ZNK8touchgfx6Bitmap5getIdEv.isra.0.part.0+0x10>)
 80047dc:	4b03      	ldr	r3, [pc, #12]	; (80047ec <_ZNK8touchgfx6Bitmap5getIdEv.isra.0.part.0+0x14>)
 80047de:	4804      	ldr	r0, [pc, #16]	; (80047f0 <_ZNK8touchgfx6Bitmap5getIdEv.isra.0.part.0+0x18>)
 80047e0:	2187      	movs	r1, #135	; 0x87
 80047e2:	f018 fad9 	bl	801cd98 <__assert_func>
 80047e6:	bf00      	nop
 80047e8:	0801f50c 	.word	0x0801f50c
 80047ec:	0801f4d0 	.word	0x0801f4d0
 80047f0:	0801f53f 	.word	0x0801f53f

080047f4 <_ZNK8touchgfx12ToggleButton8getStateEv>:
     * Gets the state of the ToggleButton as set with forceState.
     *
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
 80047f4:	b508      	push	{r3, lr}
 80047f6:	4b05      	ldr	r3, [pc, #20]	; (800480c <_ZNK8touchgfx12ToggleButton8getStateEv+0x18>)
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	b90b      	cbnz	r3, 8004800 <_ZNK8touchgfx12ToggleButton8getStateEv+0xc>
 80047fc:	f7ff ffec 	bl	80047d8 <_ZNK8touchgfx6Bitmap5getIdEv.isra.0.part.0>
    {
        return up.getId() == originalPressed.getId();
 8004800:	8e82      	ldrh	r2, [r0, #52]	; 0x34
 8004802:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
    }
 8004804:	1a13      	subs	r3, r2, r0
 8004806:	4258      	negs	r0, r3
 8004808:	4158      	adcs	r0, r3
 800480a:	bd08      	pop	{r3, pc}
 800480c:	20012e4c 	.word	0x20012e4c

08004810 <_ZN11Screen1View9ToggleLEDEv>:


void Screen1View::ToggleLED()
{
 8004810:	b508      	push	{r3, lr}
	if (toggleButton1.getState()) HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_SET);
 8004812:	3098      	adds	r0, #152	; 0x98
 8004814:	f7ff ffee 	bl	80047f4 <_ZNK8touchgfx12ToggleButton8getStateEv>
 8004818:	4602      	mov	r2, r0
 800481a:	b100      	cbz	r0, 800481e <_ZN11Screen1View9ToggleLEDEv+0xe>
 800481c:	2201      	movs	r2, #1
	else HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
}
 800481e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	else HAL_GPIO_WritePin(GPIOG, GPIO_PIN_13, GPIO_PIN_RESET);
 8004822:	4802      	ldr	r0, [pc, #8]	; (800482c <_ZN11Screen1View9ToggleLEDEv+0x1c>)
 8004824:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004828:	f001 bc04 	b.w	8006034 <HAL_GPIO_WritePin>
 800482c:	40021800 	.word	0x40021800

08004830 <_ZN11Screen1View10ToggleLED2Ev>:

void Screen1View::ToggleLED2()
{
 8004830:	b508      	push	{r3, lr}
	if (toggleButton2.getState()) HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_SET);
 8004832:	30d0      	adds	r0, #208	; 0xd0
 8004834:	f7ff ffde 	bl	80047f4 <_ZNK8touchgfx12ToggleButton8getStateEv>
 8004838:	4602      	mov	r2, r0
 800483a:	b100      	cbz	r0, 800483e <_ZN11Screen1View10ToggleLED2Ev+0xe>
 800483c:	2201      	movs	r2, #1
	else HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_RESET);
}
 800483e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	else HAL_GPIO_WritePin(GPIOG, GPIO_PIN_14, GPIO_PIN_RESET);
 8004842:	4802      	ldr	r0, [pc, #8]	; (800484c <_ZN11Screen1View10ToggleLED2Ev+0x1c>)
 8004844:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004848:	f001 bbf4 	b.w	8006034 <HAL_GPIO_WritePin>
 800484c:	40021800 	.word	0x40021800

08004850 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004850:	b510      	push	{r4, lr}
 8004852:	4604      	mov	r4, r0
 8004854:	f7fd ffc8 	bl	80027e8 <_ZN15Screen1ViewBaseC1Ev>
 8004858:	4b01      	ldr	r3, [pc, #4]	; (8004860 <_ZN11Screen1ViewC1Ev+0x10>)
 800485a:	6023      	str	r3, [r4, #0]
}
 800485c:	4620      	mov	r0, r4
 800485e:	bd10      	pop	{r4, pc}
 8004860:	0801f58c 	.word	0x0801f58c

08004864 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 8004864:	4770      	bx	lr

08004866 <_ZThn4_N16Screen2PresenterD1Ev>:
 8004866:	3804      	subs	r0, #4
 8004868:	4770      	bx	lr

0800486a <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 800486a:	4770      	bx	lr

0800486c <_ZN16Screen2PresenterD0Ev>:
 800486c:	b510      	push	{r4, lr}
 800486e:	2110      	movs	r1, #16
 8004870:	4604      	mov	r4, r0
 8004872:	f018 fa63 	bl	801cd3c <_ZdlPvj>
 8004876:	4620      	mov	r0, r4
 8004878:	bd10      	pop	{r4, pc}

0800487a <_ZThn4_N16Screen2PresenterD0Ev>:
 800487a:	f1a0 0004 	sub.w	r0, r0, #4
 800487e:	e7f5      	b.n	800486c <_ZN16Screen2PresenterD0Ev>

08004880 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8004880:	b510      	push	{r4, lr}
 8004882:	2200      	movs	r2, #0
 8004884:	6082      	str	r2, [r0, #8]
    : view(v)
 8004886:	4a04      	ldr	r2, [pc, #16]	; (8004898 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8004888:	60c1      	str	r1, [r0, #12]
 800488a:	f102 0408 	add.w	r4, r2, #8
 800488e:	3220      	adds	r2, #32
 8004890:	6004      	str	r4, [r0, #0]
 8004892:	6042      	str	r2, [r0, #4]
}
 8004894:	bd10      	pop	{r4, pc}
 8004896:	bf00      	nop
 8004898:	0801f5c0 	.word	0x0801f5c0

0800489c <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800489c:	4770      	bx	lr

0800489e <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800489e:	4770      	bx	lr

080048a0 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 80048a0:	f7fe b8dd 	b.w	8002a5e <_ZN15Screen2ViewBase11setupScreenEv>

080048a4 <_ZN11Screen2View11downclickedEv>:


void Screen2View::downclicked()
{

	 if (counter>0) counter--;
 80048a4:	f9b0 32a8 	ldrsh.w	r3, [r0, #680]	; 0x2a8
	 Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 80048a8:	4a0a      	ldr	r2, [pc, #40]	; (80048d4 <_ZN11Screen2View11downclickedEv+0x30>)
{
 80048aa:	b510      	push	{r4, lr}
	 if (counter>0) counter--;
 80048ac:	2b00      	cmp	r3, #0
 80048ae:	bfc4      	itt	gt
 80048b0:	f103 33ff 	addgt.w	r3, r3, #4294967295
 80048b4:	f8a0 32a8 	strhgt.w	r3, [r0, #680]	; 0x2a8
{
 80048b8:	4604      	mov	r4, r0
	 Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 80048ba:	f9b0 32a8 	ldrsh.w	r3, [r0, #680]	; 0x2a8
 80048be:	2105      	movs	r1, #5
 80048c0:	f500 701f 	add.w	r0, r0, #636	; 0x27c
 80048c4:	f00c fa9c 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 textArea1.invalidate();
 80048c8:	f104 0098 	add.w	r0, r4, #152	; 0x98
}
 80048cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	 textArea1.invalidate();
 80048d0:	f00a ba99 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 80048d4:	0801f5f0 	.word	0x0801f5f0

080048d8 <_ZN11Screen2View9upclickedEv>:

void Screen2View::upclicked()
{
 80048d8:	b510      	push	{r4, lr}
	 counter++;
 80048da:	f8b0 32a8 	ldrh.w	r3, [r0, #680]	; 0x2a8
	 Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 80048de:	4a08      	ldr	r2, [pc, #32]	; (8004900 <_ZN11Screen2View9upclickedEv+0x28>)
	 counter++;
 80048e0:	3301      	adds	r3, #1
 80048e2:	b21b      	sxth	r3, r3
{
 80048e4:	4604      	mov	r4, r0
	 counter++;
 80048e6:	f8a0 32a8 	strh.w	r3, [r0, #680]	; 0x2a8
	 Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 80048ea:	2105      	movs	r1, #5
 80048ec:	f500 701f 	add.w	r0, r0, #636	; 0x27c
 80048f0:	f00c fa86 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 textArea1.invalidate();
 80048f4:	f104 0098 	add.w	r0, r4, #152	; 0x98
}
 80048f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	 textArea1.invalidate();
 80048fc:	f00a ba83 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004900:	0801f5f0 	.word	0x0801f5f0

08004904 <_ZN11Screen2ViewD0Ev>:
 8004904:	b510      	push	{r4, lr}
 8004906:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 800490a:	4604      	mov	r4, r0
 800490c:	f018 fa16 	bl	801cd3c <_ZdlPvj>
 8004910:	4620      	mov	r0, r4
 8004912:	bd10      	pop	{r4, pc}

08004914 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8004914:	b510      	push	{r4, lr}
 8004916:	4604      	mov	r4, r0
 8004918:	f7fe f9a4 	bl	8002c64 <_ZN15Screen2ViewBaseC1Ev>
 800491c:	4b03      	ldr	r3, [pc, #12]	; (800492c <_ZN11Screen2ViewC1Ev+0x18>)
 800491e:	6023      	str	r3, [r4, #0]
 8004920:	2300      	movs	r3, #0
 8004922:	f8a4 32a8 	strh.w	r3, [r4, #680]	; 0x2a8
}
 8004926:	4620      	mov	r0, r4
 8004928:	bd10      	pop	{r4, pc}
 800492a:	bf00      	nop
 800492c:	0801f5fc 	.word	0x0801f5fc

08004930 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {};
 8004930:	4770      	bx	lr

08004932 <_ZThn4_N16Screen3PresenterD1Ev>:
 8004932:	3804      	subs	r0, #4
 8004934:	4770      	bx	lr

08004936 <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 8004936:	4770      	bx	lr

08004938 <_ZN16Screen3Presenter8setLightEb>:

}

void Screen3Presenter::setLight (bool state)
{
	view.setLight (state);
 8004938:	68c0      	ldr	r0, [r0, #12]
 800493a:	6803      	ldr	r3, [r0, #0]
 800493c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800493e:	4718      	bx	r3

08004940 <_ZThn4_N16Screen3Presenter8setLightEb>:

    virtual void setLight (bool state);
 8004940:	f1a0 0004 	sub.w	r0, r0, #4
 8004944:	f7ff bff8 	b.w	8004938 <_ZN16Screen3Presenter8setLightEb>

08004948 <_ZN16Screen3Presenter6setADCEi>:
}

void Screen3Presenter::setADC (int val)
{
	view.setADC (val);
 8004948:	68c0      	ldr	r0, [r0, #12]
 800494a:	6803      	ldr	r3, [r0, #0]
 800494c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800494e:	4718      	bx	r3

08004950 <_ZThn4_N16Screen3Presenter6setADCEi>:
    virtual void setADC (int val);
 8004950:	f1a0 0004 	sub.w	r0, r0, #4
 8004954:	f7ff bff8 	b.w	8004948 <_ZN16Screen3Presenter6setADCEi>

08004958 <_ZN16Screen3PresenterD0Ev>:
    virtual ~Screen3Presenter() {};
 8004958:	b510      	push	{r4, lr}
 800495a:	2110      	movs	r1, #16
 800495c:	4604      	mov	r4, r0
 800495e:	f018 f9ed 	bl	801cd3c <_ZdlPvj>
 8004962:	4620      	mov	r0, r4
 8004964:	bd10      	pop	{r4, pc}

08004966 <_ZThn4_N16Screen3PresenterD0Ev>:
 8004966:	f1a0 0004 	sub.w	r0, r0, #4
 800496a:	e7f5      	b.n	8004958 <_ZN16Screen3PresenterD0Ev>

0800496c <_ZN16Screen3PresenterC1ER11Screen3View>:
Screen3Presenter::Screen3Presenter(Screen3View& v)
 800496c:	b510      	push	{r4, lr}
 800496e:	2200      	movs	r2, #0
 8004970:	6082      	str	r2, [r0, #8]
    : view(v)
 8004972:	4a04      	ldr	r2, [pc, #16]	; (8004984 <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 8004974:	60c1      	str	r1, [r0, #12]
 8004976:	f102 0408 	add.w	r4, r2, #8
 800497a:	3228      	adds	r2, #40	; 0x28
 800497c:	6004      	str	r4, [r0, #0]
 800497e:	6042      	str	r2, [r0, #4]
}
 8004980:	bd10      	pop	{r4, pc}
 8004982:	bf00      	nop
 8004984:	0801f630 	.word	0x0801f630

08004988 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8004988:	4770      	bx	lr

0800498a <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 800498a:	4770      	bx	lr

0800498c <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 800498c:	f7fe bb0d 	b.w	8002faa <_ZN15Screen3ViewBase11setupScreenEv>

08004990 <_ZN11Screen3View8setLightEb>:
        visible = vis;
 8004990:	f880 10e9 	strb.w	r1, [r0, #233]	; 0xe9


void Screen3View::setLight (bool state)
{
	LightON.setVisible(state);
	LightON.invalidate();
 8004994:	30c4      	adds	r0, #196	; 0xc4
 8004996:	f00a ba36 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	...

0800499c <_ZN11Screen3View6setADCEi>:
}

void Screen3View::setADC (int val)
{
 800499c:	b510      	push	{r4, lr}
 800499e:	460b      	mov	r3, r1
 80049a0:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", val);
 80049a2:	4a06      	ldr	r2, [pc, #24]	; (80049bc <_ZN11Screen3View6setADCEi+0x20>)
 80049a4:	2104      	movs	r1, #4
 80049a6:	f500 70d4 	add.w	r0, r0, #424	; 0x1a8
 80049aa:	f00c fa29 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 80049ae:	f104 00f0 	add.w	r0, r4, #240	; 0xf0
}
 80049b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 80049b6:	f00a ba26 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 80049ba:	bf00      	nop
 80049bc:	0801f5f0 	.word	0x0801f5f0

080049c0 <_ZN11Screen3ViewD0Ev>:
 80049c0:	b510      	push	{r4, lr}
 80049c2:	f44f 71e0 	mov.w	r1, #448	; 0x1c0
 80049c6:	4604      	mov	r4, r0
 80049c8:	f018 f9b8 	bl	801cd3c <_ZdlPvj>
 80049cc:	4620      	mov	r0, r4
 80049ce:	bd10      	pop	{r4, pc}

080049d0 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 80049d0:	b510      	push	{r4, lr}
 80049d2:	4604      	mov	r4, r0
 80049d4:	f7fe fb46 	bl	8003064 <_ZN15Screen3ViewBaseC1Ev>
 80049d8:	4b01      	ldr	r3, [pc, #4]	; (80049e0 <_ZN11Screen3ViewC1Ev+0x10>)
 80049da:	6023      	str	r3, [r4, #0]
}
 80049dc:	4620      	mov	r0, r4
 80049de:	bd10      	pop	{r4, pc}
 80049e0:	0801f670 	.word	0x0801f670

080049e4 <_ZN16Screen4PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen4Presenter() {};
 80049e4:	4770      	bx	lr

080049e6 <_ZThn4_N16Screen4PresenterD1Ev>:
 80049e6:	3804      	subs	r0, #4
 80049e8:	4770      	bx	lr

080049ea <_ZN16Screen4Presenter10deactivateEv>:
}

void Screen4Presenter::activate()
{

}
 80049ea:	4770      	bx	lr

080049ec <_ZN16Screen4PresenterD0Ev>:
 80049ec:	b510      	push	{r4, lr}
 80049ee:	2110      	movs	r1, #16
 80049f0:	4604      	mov	r4, r0
 80049f2:	f018 f9a3 	bl	801cd3c <_ZdlPvj>
 80049f6:	4620      	mov	r0, r4
 80049f8:	bd10      	pop	{r4, pc}

080049fa <_ZThn4_N16Screen4PresenterD0Ev>:
 80049fa:	f1a0 0004 	sub.w	r0, r0, #4
 80049fe:	e7f5      	b.n	80049ec <_ZN16Screen4PresenterD0Ev>

08004a00 <_ZN16Screen4PresenterC1ER11Screen4View>:
Screen4Presenter::Screen4Presenter(Screen4View& v)
 8004a00:	b510      	push	{r4, lr}
 8004a02:	2200      	movs	r2, #0
 8004a04:	6082      	str	r2, [r0, #8]
    : view(v)
 8004a06:	4a04      	ldr	r2, [pc, #16]	; (8004a18 <_ZN16Screen4PresenterC1ER11Screen4View+0x18>)
 8004a08:	60c1      	str	r1, [r0, #12]
 8004a0a:	f102 0408 	add.w	r4, r2, #8
 8004a0e:	3220      	adds	r2, #32
 8004a10:	6004      	str	r4, [r0, #0]
 8004a12:	6042      	str	r2, [r0, #4]
}
 8004a14:	bd10      	pop	{r4, pc}
 8004a16:	bf00      	nop
 8004a18:	0801f6a4 	.word	0x0801f6a4

08004a1c <_ZN11Screen4ViewD1Ev>:

class Screen4View : public Screen4ViewBase
{
public:
    Screen4View();
    virtual ~Screen4View() {}
 8004a1c:	4770      	bx	lr

08004a1e <_ZN11Screen4View14tearDownScreenEv>:
}

void Screen4View::tearDownScreen()
{
    Screen4ViewBase::tearDownScreen();
}
 8004a1e:	4770      	bx	lr

08004a20 <_ZN11Screen4View11setupScreenEv>:
    Screen4ViewBase::setupScreen();
 8004a20:	f7fe bc97 	b.w	8003352 <_ZN15Screen4ViewBase11setupScreenEv>

08004a24 <_ZN11Screen4View11clicked_addEv>:


}

void Screen4View::clicked_add()
{
 8004a24:	b510      	push	{r4, lr}
	value = 1;
 8004a26:	f240 1301 	movw	r3, #257	; 0x101
 8004a2a:	f8a0 3e64 	strh.w	r3, [r0, #3684]	; 0xe64
	add_v = 1;
	sign = '+';
 8004a2e:	232b      	movs	r3, #43	; 0x2b
{
 8004a30:	4604      	mov	r4, r0
	sign = '+';
 8004a32:	f880 3e69 	strb.w	r3, [r0, #3689]	; 0xe69
	Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%c", sign);
 8004a36:	4a06      	ldr	r2, [pc, #24]	; (8004a50 <_ZN11Screen4View11clicked_addEv+0x2c>)
 8004a38:	2105      	movs	r1, #5
 8004a3a:	f600 6024 	addw	r0, r0, #3620	; 0xe24
 8004a3e:	f00c f9df 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sign_text_area.invalidate();
 8004a42:	f604 5094 	addw	r0, r4, #3476	; 0xd94
}
 8004a46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sign_text_area.invalidate();
 8004a4a:	f00a b9dc 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004a4e:	bf00      	nop
 8004a50:	0801f6d4 	.word	0x0801f6d4

08004a54 <_ZN11Screen4View11clicked_subEv>:

void Screen4View::clicked_sub()
{
 8004a54:	b510      	push	{r4, lr}
	value = 1;
 8004a56:	2301      	movs	r3, #1
 8004a58:	f880 3e64 	strb.w	r3, [r0, #3684]	; 0xe64
	sub = 1;
 8004a5c:	f880 3e66 	strb.w	r3, [r0, #3686]	; 0xe66

	sign = '-';
 8004a60:	232d      	movs	r3, #45	; 0x2d
{
 8004a62:	4604      	mov	r4, r0
	sign = '-';
 8004a64:	f880 3e69 	strb.w	r3, [r0, #3689]	; 0xe69
	Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%c", sign);
 8004a68:	4a05      	ldr	r2, [pc, #20]	; (8004a80 <_ZN11Screen4View11clicked_subEv+0x2c>)
 8004a6a:	2105      	movs	r1, #5
 8004a6c:	f600 6024 	addw	r0, r0, #3620	; 0xe24
 8004a70:	f00c f9c6 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sign_text_area.invalidate();
 8004a74:	f604 5094 	addw	r0, r4, #3476	; 0xd94
}
 8004a78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sign_text_area.invalidate();
 8004a7c:	f00a b9c3 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004a80:	0801f6d4 	.word	0x0801f6d4

08004a84 <_ZN11Screen4View11clicked_divEv>:

void Screen4View::clicked_div()
{
 8004a84:	b510      	push	{r4, lr}
	value = 1;
 8004a86:	2301      	movs	r3, #1
 8004a88:	f880 3e64 	strb.w	r3, [r0, #3684]	; 0xe64
	div = 1;
 8004a8c:	f880 3e67 	strb.w	r3, [r0, #3687]	; 0xe67

	sign = ':';
 8004a90:	233a      	movs	r3, #58	; 0x3a
{
 8004a92:	4604      	mov	r4, r0
	sign = ':';
 8004a94:	f880 3e69 	strb.w	r3, [r0, #3689]	; 0xe69
	Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%c", sign);
 8004a98:	4a05      	ldr	r2, [pc, #20]	; (8004ab0 <_ZN11Screen4View11clicked_divEv+0x2c>)
 8004a9a:	2105      	movs	r1, #5
 8004a9c:	f600 6024 	addw	r0, r0, #3620	; 0xe24
 8004aa0:	f00c f9ae 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sign_text_area.invalidate();
 8004aa4:	f604 5094 	addw	r0, r4, #3476	; 0xd94
}
 8004aa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sign_text_area.invalidate();
 8004aac:	f00a b9ab 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ab0:	0801f6d4 	.word	0x0801f6d4

08004ab4 <_ZN11Screen4View11clicked_mulEv>:

void Screen4View::clicked_mul()
{
 8004ab4:	b510      	push	{r4, lr}
	value = 1;
 8004ab6:	2301      	movs	r3, #1
 8004ab8:	f880 3e64 	strb.w	r3, [r0, #3684]	; 0xe64
	mul = 1;
 8004abc:	f647 0301 	movw	r3, #30721	; 0x7801
{
 8004ac0:	4604      	mov	r4, r0
	mul = 1;
 8004ac2:	f8a0 3e68 	strh.w	r3, [r0, #3688]	; 0xe68

	sign = 'x';
	Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%c", sign);
 8004ac6:	4a06      	ldr	r2, [pc, #24]	; (8004ae0 <_ZN11Screen4View11clicked_mulEv+0x2c>)
 8004ac8:	2378      	movs	r3, #120	; 0x78
 8004aca:	2105      	movs	r1, #5
 8004acc:	f600 6024 	addw	r0, r0, #3620	; 0xe24
 8004ad0:	f00c f996 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sign_text_area.invalidate();
 8004ad4:	f604 5094 	addw	r0, r4, #3476	; 0xd94

}
 8004ad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	sign_text_area.invalidate();
 8004adc:	f00a b993 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004ae0:	0801f6d4 	.word	0x0801f6d4

08004ae4 <_ZN11Screen4View10clicked_eqEv>:

void Screen4View::clicked_eq()
{
	if(add_v==1&&value==1)
 8004ae4:	f890 3e65 	ldrb.w	r3, [r0, #3685]	; 0xe65
{
 8004ae8:	b510      	push	{r4, lr}
 8004aea:	4604      	mov	r4, r0
	if(add_v==1&&value==1)
 8004aec:	b1bb      	cbz	r3, 8004b1e <_ZN11Screen4View10clicked_eqEv+0x3a>
 8004aee:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
 8004af2:	b1a3      	cbz	r3, 8004b1e <_ZN11Screen4View10clicked_eqEv+0x3a>
	{
		result = value1 + value2;
 8004af4:	f8d0 3e54 	ldr.w	r3, [r0, #3668]	; 0xe54
 8004af8:	f8d0 2e58 	ldr.w	r2, [r0, #3672]	; 0xe58
 8004afc:	4413      	add	r3, r2
	{
		result = value1 / value2;
	}
	else if (mul == 1 && value == 1)
	{
		result = value1 * value2;
 8004afe:	f8c4 3e60 	str.w	r3, [r4, #3680]	; 0xe60
	}

	Unicode::snprintf(result_text_areaBuffer, RESULT_TEXT_AREA_SIZE, "%d",result);
 8004b02:	f8d4 3e60 	ldr.w	r3, [r4, #3680]	; 0xe60
 8004b06:	4a19      	ldr	r2, [pc, #100]	; (8004b6c <_ZN11Screen4View10clicked_eqEv+0x88>)
 8004b08:	f604 50e8 	addw	r0, r4, #3560	; 0xde8
 8004b0c:	2114      	movs	r1, #20
 8004b0e:	f00c f977 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	result_text_area.invalidate();
 8004b12:	f604 0048 	addw	r0, r4, #2120	; 0x848


}
 8004b16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	result_text_area.invalidate();
 8004b1a:	f00a b974 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (sub == 1 && value == 1)
 8004b1e:	f894 3e66 	ldrb.w	r3, [r4, #3686]	; 0xe66
 8004b22:	b143      	cbz	r3, 8004b36 <_ZN11Screen4View10clicked_eqEv+0x52>
 8004b24:	f894 3e64 	ldrb.w	r3, [r4, #3684]	; 0xe64
 8004b28:	b12b      	cbz	r3, 8004b36 <_ZN11Screen4View10clicked_eqEv+0x52>
		result = value1 - value2;
 8004b2a:	f8d4 3e54 	ldr.w	r3, [r4, #3668]	; 0xe54
 8004b2e:	f8d4 2e58 	ldr.w	r2, [r4, #3672]	; 0xe58
 8004b32:	1a9b      	subs	r3, r3, r2
 8004b34:	e7e3      	b.n	8004afe <_ZN11Screen4View10clicked_eqEv+0x1a>
	else if (div == 1 && value == 1)
 8004b36:	f894 3e67 	ldrb.w	r3, [r4, #3687]	; 0xe67
 8004b3a:	b14b      	cbz	r3, 8004b50 <_ZN11Screen4View10clicked_eqEv+0x6c>
 8004b3c:	f894 3e64 	ldrb.w	r3, [r4, #3684]	; 0xe64
 8004b40:	b133      	cbz	r3, 8004b50 <_ZN11Screen4View10clicked_eqEv+0x6c>
		result = value1 / value2;
 8004b42:	f8d4 3e54 	ldr.w	r3, [r4, #3668]	; 0xe54
 8004b46:	f8d4 2e58 	ldr.w	r2, [r4, #3672]	; 0xe58
 8004b4a:	fb93 f3f2 	sdiv	r3, r3, r2
 8004b4e:	e7d6      	b.n	8004afe <_ZN11Screen4View10clicked_eqEv+0x1a>
	else if (mul == 1 && value == 1)
 8004b50:	f894 3e68 	ldrb.w	r3, [r4, #3688]	; 0xe68
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d0d4      	beq.n	8004b02 <_ZN11Screen4View10clicked_eqEv+0x1e>
 8004b58:	f894 3e64 	ldrb.w	r3, [r4, #3684]	; 0xe64
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d0d0      	beq.n	8004b02 <_ZN11Screen4View10clicked_eqEv+0x1e>
		result = value1 * value2;
 8004b60:	f8d4 2e54 	ldr.w	r2, [r4, #3668]	; 0xe54
 8004b64:	f8d4 3e58 	ldr.w	r3, [r4, #3672]	; 0xe58
 8004b68:	4353      	muls	r3, r2
 8004b6a:	e7c8      	b.n	8004afe <_ZN11Screen4View10clicked_eqEv+0x1a>
 8004b6c:	0801f5f0 	.word	0x0801f5f0

08004b70 <_ZN11Screen4View13clicked_clearEv>:


void Screen4View::clicked_clear()
{
 8004b70:	b510      	push	{r4, lr}
	sub = 0;
	mul = 0;
	div = 0;
	i_text_buffer1 = 0;
	i_text_buffer2 = 0;
	value1 = 0;
 8004b72:	2300      	movs	r3, #0
{
 8004b74:	4604      	mov	r4, r0
	mul = 0;
 8004b76:	f44f 5200 	mov.w	r2, #8192	; 0x2000
	value1 = 0;
 8004b7a:	f8c0 3e54 	str.w	r3, [r0, #3668]	; 0xe54
	value2 = 0;
 8004b7e:	f8c0 3e58 	str.w	r3, [r0, #3672]	; 0xe58
	i_text_buffer1 = 0;
 8004b82:	f8a0 3e5c 	strh.w	r3, [r0, #3676]	; 0xe5c
	result = 0;
 8004b86:	f8c0 3e60 	str.w	r3, [r0, #3680]	; 0xe60
	value = 0;
 8004b8a:	f8c0 3e64 	str.w	r3, [r0, #3684]	; 0xe64
	mul = 0;
 8004b8e:	f8a0 2e68 	strh.w	r2, [r0, #3688]	; 0xe68
	sign = ' ';
	memset(text_buffer1, 0, sizeof(text_buffer1));
 8004b92:	f8c0 3e40 	str.w	r3, [r0, #3648]	; 0xe40
 8004b96:	f8c0 3e44 	str.w	r3, [r0, #3652]	; 0xe44
 8004b9a:	f8a0 3e48 	strh.w	r3, [r0, #3656]	; 0xe48
	memset(text_buffer2, 0, sizeof(text_buffer2));
 8004b9e:	f8c0 3e4a 	str.w	r3, [r0, #3658]	; 0xe4a
 8004ba2:	f8c0 3e4e 	str.w	r3, [r0, #3662]	; 0xe4e
 8004ba6:	f8a0 3e52 	strh.w	r3, [r0, #3666]	; 0xe52
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004baa:	4a18      	ldr	r2, [pc, #96]	; (8004c0c <_ZN11Screen4View13clicked_clearEv+0x9c>)
 8004bac:	210a      	movs	r1, #10
 8004bae:	f600 50d4 	addw	r0, r0, #3540	; 0xdd4
 8004bb2:	f00c f925 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004bb6:	f8d4 3e58 	ldr.w	r3, [r4, #3672]	; 0xe58
 8004bba:	4a14      	ldr	r2, [pc, #80]	; (8004c0c <_ZN11Screen4View13clicked_clearEv+0x9c>)
 8004bbc:	210a      	movs	r1, #10
 8004bbe:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004bc2:	f00c f91d 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(result_text_areaBuffer, RESULT_TEXT_AREA_SIZE, "%d",result);
 8004bc6:	f8d4 3e60 	ldr.w	r3, [r4, #3680]	; 0xe60
 8004bca:	4a10      	ldr	r2, [pc, #64]	; (8004c0c <_ZN11Screen4View13clicked_clearEv+0x9c>)
 8004bcc:	2114      	movs	r1, #20
 8004bce:	f604 50e8 	addw	r0, r4, #3560	; 0xde8
 8004bd2:	f00c f915 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(sign_text_areaBuffer, SIGN_TEXT_AREA_SIZE, "%c", sign);
 8004bd6:	f894 3e69 	ldrb.w	r3, [r4, #3689]	; 0xe69
 8004bda:	4a0d      	ldr	r2, [pc, #52]	; (8004c10 <_ZN11Screen4View13clicked_clearEv+0xa0>)
 8004bdc:	2105      	movs	r1, #5
 8004bde:	f604 6024 	addw	r0, r4, #3620	; 0xe24
 8004be2:	f00c f90d 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	sign_text_area.invalidate();
 8004be6:	f604 5094 	addw	r0, r4, #3476	; 0xd94
 8004bea:	f00a f90c 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	calculation_text_area.invalidate();
 8004bee:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004bf2:	f00a f908 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	calculation_text_area_2.invalidate();
 8004bf6:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004bfa:	f00a f904 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	result_text_area.invalidate();
 8004bfe:	f604 0048 	addw	r0, r4, #2120	; 0x848


}
 8004c02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	result_text_area.invalidate();
 8004c06:	f00a b8fe 	b.w	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
 8004c0a:	bf00      	nop
 8004c0c:	0801f5f0 	.word	0x0801f5f0
 8004c10:	0801f6d4 	.word	0x0801f6d4

08004c14 <_ZN11Screen4ViewD0Ev>:
 8004c14:	b510      	push	{r4, lr}
 8004c16:	f640 616c 	movw	r1, #3692	; 0xe6c
 8004c1a:	4604      	mov	r4, r0
 8004c1c:	f018 f88e 	bl	801cd3c <_ZdlPvj>
 8004c20:	4620      	mov	r0, r4
 8004c22:	bd10      	pop	{r4, pc}

08004c24 <_ZN11Screen4View11clicked_oneEv>:
	if(value == 0)
 8004c24:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004c28:	b510      	push	{r4, lr}
 8004c2a:	2231      	movs	r2, #49	; 0x31
 8004c2c:	4604      	mov	r4, r0
	if(value == 0)
 8004c2e:	b9db      	cbnz	r3, 8004c68 <_ZN11Screen4View11clicked_oneEv+0x44>
	text_buffer1[i_text_buffer1] = '1';
 8004c30:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004c34:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004c36:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '1';
 8004c3a:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004c3e:	f018 f8cf 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004c42:	4a17      	ldr	r2, [pc, #92]	; (8004ca0 <_ZN11Screen4View11clicked_oneEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004c44:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004c48:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004c4a:	210a      	movs	r1, #10
 8004c4c:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004c50:	f00c f8d6 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004c54:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004c58:	f00a f8d5 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004c5c:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004c60:	3301      	adds	r3, #1
 8004c62:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004c66:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '1';
 8004c68:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004c6c:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004c6e:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '1';
 8004c72:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004c76:	f018 f8b3 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004c7a:	4a09      	ldr	r2, [pc, #36]	; (8004ca0 <_ZN11Screen4View11clicked_oneEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004c7c:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004c80:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004c82:	210a      	movs	r1, #10
 8004c84:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004c88:	f00c f8ba 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004c8c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004c90:	f00a f8b9 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004c94:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004c98:	3301      	adds	r3, #1
 8004c9a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004c9e:	e7e2      	b.n	8004c66 <_ZN11Screen4View11clicked_oneEv+0x42>
 8004ca0:	0801f5f0 	.word	0x0801f5f0

08004ca4 <_ZN11Screen4View11clicked_twoEv>:
	if(value == 0)
 8004ca4:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004ca8:	b510      	push	{r4, lr}
 8004caa:	2232      	movs	r2, #50	; 0x32
 8004cac:	4604      	mov	r4, r0
	if(value == 0)
 8004cae:	b9db      	cbnz	r3, 8004ce8 <_ZN11Screen4View11clicked_twoEv+0x44>
	text_buffer1[i_text_buffer1] = '2';
 8004cb0:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004cb4:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004cb6:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '2';
 8004cba:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004cbe:	f018 f88f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004cc2:	4a17      	ldr	r2, [pc, #92]	; (8004d20 <_ZN11Screen4View11clicked_twoEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004cc4:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004cc8:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004cca:	210a      	movs	r1, #10
 8004ccc:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004cd0:	f00c f896 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004cd4:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004cd8:	f00a f895 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004cdc:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004ce0:	3301      	adds	r3, #1
 8004ce2:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004ce6:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '2';
 8004ce8:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004cec:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004cee:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '2';
 8004cf2:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004cf6:	f018 f873 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004cfa:	4a09      	ldr	r2, [pc, #36]	; (8004d20 <_ZN11Screen4View11clicked_twoEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004cfc:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004d00:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004d02:	210a      	movs	r1, #10
 8004d04:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004d08:	f00c f87a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004d0c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004d10:	f00a f879 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004d14:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004d18:	3301      	adds	r3, #1
 8004d1a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004d1e:	e7e2      	b.n	8004ce6 <_ZN11Screen4View11clicked_twoEv+0x42>
 8004d20:	0801f5f0 	.word	0x0801f5f0

08004d24 <_ZN11Screen4View13clicked_threeEv>:
	if(value == 0)
 8004d24:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004d28:	b510      	push	{r4, lr}
 8004d2a:	2233      	movs	r2, #51	; 0x33
 8004d2c:	4604      	mov	r4, r0
	if(value == 0)
 8004d2e:	b9db      	cbnz	r3, 8004d68 <_ZN11Screen4View13clicked_threeEv+0x44>
	text_buffer1[i_text_buffer1] = '3';
 8004d30:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004d34:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004d36:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '3';
 8004d3a:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004d3e:	f018 f84f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004d42:	4a17      	ldr	r2, [pc, #92]	; (8004da0 <_ZN11Screen4View13clicked_threeEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004d44:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004d48:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004d4a:	210a      	movs	r1, #10
 8004d4c:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004d50:	f00c f856 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004d54:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004d58:	f00a f855 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004d5c:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004d60:	3301      	adds	r3, #1
 8004d62:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004d66:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '3';
 8004d68:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004d6c:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004d6e:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '3';
 8004d72:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004d76:	f018 f833 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004d7a:	4a09      	ldr	r2, [pc, #36]	; (8004da0 <_ZN11Screen4View13clicked_threeEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004d7c:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004d80:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004d82:	210a      	movs	r1, #10
 8004d84:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004d88:	f00c f83a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004d8c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004d90:	f00a f839 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004d94:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004d98:	3301      	adds	r3, #1
 8004d9a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004d9e:	e7e2      	b.n	8004d66 <_ZN11Screen4View13clicked_threeEv+0x42>
 8004da0:	0801f5f0 	.word	0x0801f5f0

08004da4 <_ZN11Screen4View12clicked_fourEv>:
	if(value == 0)
 8004da4:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004da8:	b510      	push	{r4, lr}
 8004daa:	2234      	movs	r2, #52	; 0x34
 8004dac:	4604      	mov	r4, r0
	if(value == 0)
 8004dae:	b9db      	cbnz	r3, 8004de8 <_ZN11Screen4View12clicked_fourEv+0x44>
	text_buffer1[i_text_buffer1] = '4';
 8004db0:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004db4:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004db6:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '4';
 8004dba:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004dbe:	f018 f80f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004dc2:	4a17      	ldr	r2, [pc, #92]	; (8004e20 <_ZN11Screen4View12clicked_fourEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004dc4:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004dc8:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004dca:	210a      	movs	r1, #10
 8004dcc:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004dd0:	f00c f816 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004dd4:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004dd8:	f00a f815 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004ddc:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004de0:	3301      	adds	r3, #1
 8004de2:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004de6:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '4';
 8004de8:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004dec:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004dee:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '4';
 8004df2:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004df6:	f017 fff3 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004dfa:	4a09      	ldr	r2, [pc, #36]	; (8004e20 <_ZN11Screen4View12clicked_fourEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004dfc:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004e00:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004e02:	210a      	movs	r1, #10
 8004e04:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004e08:	f00b fffa 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004e0c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004e10:	f009 fff9 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004e14:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004e18:	3301      	adds	r3, #1
 8004e1a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004e1e:	e7e2      	b.n	8004de6 <_ZN11Screen4View12clicked_fourEv+0x42>
 8004e20:	0801f5f0 	.word	0x0801f5f0

08004e24 <_ZN11Screen4View12clicked_fiveEv>:
	if(value == 0)
 8004e24:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004e28:	b510      	push	{r4, lr}
 8004e2a:	2235      	movs	r2, #53	; 0x35
 8004e2c:	4604      	mov	r4, r0
	if(value == 0)
 8004e2e:	b9db      	cbnz	r3, 8004e68 <_ZN11Screen4View12clicked_fiveEv+0x44>
	text_buffer1[i_text_buffer1] = '5';
 8004e30:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004e34:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004e36:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '5';
 8004e3a:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004e3e:	f017 ffcf 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004e42:	4a17      	ldr	r2, [pc, #92]	; (8004ea0 <_ZN11Screen4View12clicked_fiveEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004e44:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004e48:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004e4a:	210a      	movs	r1, #10
 8004e4c:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004e50:	f00b ffd6 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004e54:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004e58:	f009 ffd5 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004e5c:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004e60:	3301      	adds	r3, #1
 8004e62:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004e66:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '5';
 8004e68:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004e6c:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004e6e:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '5';
 8004e72:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004e76:	f017 ffb3 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004e7a:	4a09      	ldr	r2, [pc, #36]	; (8004ea0 <_ZN11Screen4View12clicked_fiveEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004e7c:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004e80:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004e82:	210a      	movs	r1, #10
 8004e84:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004e88:	f00b ffba 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004e8c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004e90:	f009 ffb9 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004e94:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004e98:	3301      	adds	r3, #1
 8004e9a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004e9e:	e7e2      	b.n	8004e66 <_ZN11Screen4View12clicked_fiveEv+0x42>
 8004ea0:	0801f5f0 	.word	0x0801f5f0

08004ea4 <_ZN11Screen4View11clicked_sixEv>:
	if(value == 0)
 8004ea4:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004ea8:	b510      	push	{r4, lr}
 8004eaa:	2236      	movs	r2, #54	; 0x36
 8004eac:	4604      	mov	r4, r0
	if(value == 0)
 8004eae:	b9db      	cbnz	r3, 8004ee8 <_ZN11Screen4View11clicked_sixEv+0x44>
	text_buffer1[i_text_buffer1] = '6';
 8004eb0:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004eb4:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004eb6:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '6';
 8004eba:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004ebe:	f017 ff8f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004ec2:	4a17      	ldr	r2, [pc, #92]	; (8004f20 <_ZN11Screen4View11clicked_sixEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004ec4:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004ec8:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004eca:	210a      	movs	r1, #10
 8004ecc:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004ed0:	f00b ff96 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004ed4:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004ed8:	f009 ff95 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004edc:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004ee0:	3301      	adds	r3, #1
 8004ee2:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004ee6:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '6';
 8004ee8:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004eec:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004eee:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '6';
 8004ef2:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004ef6:	f017 ff73 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004efa:	4a09      	ldr	r2, [pc, #36]	; (8004f20 <_ZN11Screen4View11clicked_sixEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004efc:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004f00:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004f02:	210a      	movs	r1, #10
 8004f04:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004f08:	f00b ff7a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004f0c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004f10:	f009 ff79 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004f14:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004f18:	3301      	adds	r3, #1
 8004f1a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004f1e:	e7e2      	b.n	8004ee6 <_ZN11Screen4View11clicked_sixEv+0x42>
 8004f20:	0801f5f0 	.word	0x0801f5f0

08004f24 <_ZN11Screen4View13clicked_sevenEv>:
	if(value == 0)
 8004f24:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004f28:	b510      	push	{r4, lr}
 8004f2a:	2237      	movs	r2, #55	; 0x37
 8004f2c:	4604      	mov	r4, r0
	if(value == 0)
 8004f2e:	b9db      	cbnz	r3, 8004f68 <_ZN11Screen4View13clicked_sevenEv+0x44>
	text_buffer1[i_text_buffer1] = '7';
 8004f30:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004f34:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004f36:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '7';
 8004f3a:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004f3e:	f017 ff4f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004f42:	4a17      	ldr	r2, [pc, #92]	; (8004fa0 <_ZN11Screen4View13clicked_sevenEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004f44:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004f48:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004f4a:	210a      	movs	r1, #10
 8004f4c:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004f50:	f00b ff56 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004f54:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004f58:	f009 ff55 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004f5c:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004f60:	3301      	adds	r3, #1
 8004f62:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004f66:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '7';
 8004f68:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004f6c:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004f6e:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '7';
 8004f72:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004f76:	f017 ff33 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004f7a:	4a09      	ldr	r2, [pc, #36]	; (8004fa0 <_ZN11Screen4View13clicked_sevenEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004f7c:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8004f80:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004f82:	210a      	movs	r1, #10
 8004f84:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8004f88:	f00b ff3a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 8004f8c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8004f90:	f009 ff39 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8004f94:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8004f98:	3301      	adds	r3, #1
 8004f9a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 8004f9e:	e7e2      	b.n	8004f66 <_ZN11Screen4View13clicked_sevenEv+0x42>
 8004fa0:	0801f5f0 	.word	0x0801f5f0

08004fa4 <_ZN11Screen4View13clicked_eightEv>:
	if(value == 0)
 8004fa4:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8004fa8:	b510      	push	{r4, lr}
 8004faa:	2238      	movs	r2, #56	; 0x38
 8004fac:	4604      	mov	r4, r0
	if(value == 0)
 8004fae:	b9db      	cbnz	r3, 8004fe8 <_ZN11Screen4View13clicked_eightEv+0x44>
	text_buffer1[i_text_buffer1] = '8';
 8004fb0:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8004fb4:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8004fb6:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '8';
 8004fba:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 8004fbe:	f017 ff0f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004fc2:	4a17      	ldr	r2, [pc, #92]	; (8005020 <_ZN11Screen4View13clicked_eightEv+0x7c>)
	value1 = atoi(text_buffer1);
 8004fc4:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8004fc8:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8004fca:	210a      	movs	r1, #10
 8004fcc:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8004fd0:	f00b ff16 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8004fd4:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8004fd8:	f009 ff15 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 8004fdc:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8004fe0:	3301      	adds	r3, #1
 8004fe2:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8004fe6:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '8';
 8004fe8:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 8004fec:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 8004fee:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '8';
 8004ff2:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8004ff6:	f017 fef3 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8004ffa:	4a09      	ldr	r2, [pc, #36]	; (8005020 <_ZN11Screen4View13clicked_eightEv+0x7c>)
	value2 = atoi(text_buffer2);
 8004ffc:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8005000:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8005002:	210a      	movs	r1, #10
 8005004:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8005008:	f00b fefa 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 800500c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8005010:	f009 fef9 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8005014:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8005018:	3301      	adds	r3, #1
 800501a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 800501e:	e7e2      	b.n	8004fe6 <_ZN11Screen4View13clicked_eightEv+0x42>
 8005020:	0801f5f0 	.word	0x0801f5f0

08005024 <_ZN11Screen4View12clicked_nineEv>:
	if(value == 0)
 8005024:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 8005028:	b510      	push	{r4, lr}
 800502a:	2239      	movs	r2, #57	; 0x39
 800502c:	4604      	mov	r4, r0
	if(value == 0)
 800502e:	b9db      	cbnz	r3, 8005068 <_ZN11Screen4View12clicked_nineEv+0x44>
	text_buffer1[i_text_buffer1] = '9';
 8005030:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 8005034:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 8005036:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '9';
 800503a:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 800503e:	f017 fecf 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 8005042:	4a17      	ldr	r2, [pc, #92]	; (80050a0 <_ZN11Screen4View12clicked_nineEv+0x7c>)
	value1 = atoi(text_buffer1);
 8005044:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 8005048:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 800504a:	210a      	movs	r1, #10
 800504c:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 8005050:	f00b fed6 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 8005054:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 8005058:	f009 fed5 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 800505c:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 8005060:	3301      	adds	r3, #1
 8005062:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 8005066:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '9';
 8005068:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 800506c:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 800506e:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '9';
 8005072:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 8005076:	f017 feb3 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 800507a:	4a09      	ldr	r2, [pc, #36]	; (80050a0 <_ZN11Screen4View12clicked_nineEv+0x7c>)
	value2 = atoi(text_buffer2);
 800507c:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8005080:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8005082:	210a      	movs	r1, #10
 8005084:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8005088:	f00b feba 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 800508c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8005090:	f009 feb9 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8005094:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8005098:	3301      	adds	r3, #1
 800509a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 800509e:	e7e2      	b.n	8005066 <_ZN11Screen4View12clicked_nineEv+0x42>
 80050a0:	0801f5f0 	.word	0x0801f5f0

080050a4 <_ZN11Screen4View12clicked_zeroEv>:
	if(value == 0)
 80050a4:	f890 3e64 	ldrb.w	r3, [r0, #3684]	; 0xe64
{
 80050a8:	b510      	push	{r4, lr}
 80050aa:	2230      	movs	r2, #48	; 0x30
 80050ac:	4604      	mov	r4, r0
	if(value == 0)
 80050ae:	b9db      	cbnz	r3, 80050e8 <_ZN11Screen4View12clicked_zeroEv+0x44>
	text_buffer1[i_text_buffer1] = '0';
 80050b0:	f890 3e5c 	ldrb.w	r3, [r0, #3676]	; 0xe5c
 80050b4:	4403      	add	r3, r0
	value1 = atoi(text_buffer1);
 80050b6:	f500 6064 	add.w	r0, r0, #3648	; 0xe40
	text_buffer1[i_text_buffer1] = '0';
 80050ba:	f883 2e40 	strb.w	r2, [r3, #3648]	; 0xe40
	value1 = atoi(text_buffer1);
 80050be:	f017 fe8f 	bl	801cde0 <atoi>
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 80050c2:	4a17      	ldr	r2, [pc, #92]	; (8005120 <_ZN11Screen4View12clicked_zeroEv+0x7c>)
	value1 = atoi(text_buffer1);
 80050c4:	f8c4 0e54 	str.w	r0, [r4, #3668]	; 0xe54
 80050c8:	4603      	mov	r3, r0
	Unicode::snprintf(calculation_text_areaBuffer, CALCULATION_TEXT_AREA_SIZE, "%d", value1);
 80050ca:	210a      	movs	r1, #10
 80050cc:	f604 50d4 	addw	r0, r4, #3540	; 0xdd4
 80050d0:	f00b fe96 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area.invalidate();
 80050d4:	f204 70cc 	addw	r0, r4, #1996	; 0x7cc
 80050d8:	f009 fe95 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer1++;
 80050dc:	f894 3e5c 	ldrb.w	r3, [r4, #3676]	; 0xe5c
 80050e0:	3301      	adds	r3, #1
 80050e2:	f884 3e5c 	strb.w	r3, [r4, #3676]	; 0xe5c
}
 80050e6:	bd10      	pop	{r4, pc}
	text_buffer2[i_text_buffer2] = '0';
 80050e8:	f890 3e5d 	ldrb.w	r3, [r0, #3677]	; 0xe5d
 80050ec:	4403      	add	r3, r0
	value2 = atoi(text_buffer2);
 80050ee:	f600 604a 	addw	r0, r0, #3658	; 0xe4a
	text_buffer2[i_text_buffer2] = '0';
 80050f2:	f883 2e4a 	strb.w	r2, [r3, #3658]	; 0xe4a
	value2 = atoi(text_buffer2);
 80050f6:	f017 fe73 	bl	801cde0 <atoi>
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 80050fa:	4a09      	ldr	r2, [pc, #36]	; (8005120 <_ZN11Screen4View12clicked_zeroEv+0x7c>)
	value2 = atoi(text_buffer2);
 80050fc:	f8c4 0e58 	str.w	r0, [r4, #3672]	; 0xe58
 8005100:	4603      	mov	r3, r0
    Unicode::snprintf(calculation_text_area_2Buffer, CALCULATION_TEXT_AREA_2_SIZE, "%d", value2);
 8005102:	210a      	movs	r1, #10
 8005104:	f504 6061 	add.w	r0, r4, #3600	; 0xe10
 8005108:	f00b fe7a 	bl	8010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	calculation_text_area_2.invalidate();
 800510c:	f604 5054 	addw	r0, r4, #3412	; 0xd54
 8005110:	f009 fe79 	bl	800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>
	i_text_buffer2++;
 8005114:	f894 3e5d 	ldrb.w	r3, [r4, #3677]	; 0xe5d
 8005118:	3301      	adds	r3, #1
 800511a:	f884 3e5d 	strb.w	r3, [r4, #3677]	; 0xe5d
}
 800511e:	e7e2      	b.n	80050e6 <_ZN11Screen4View12clicked_zeroEv+0x42>
 8005120:	0801f5f0 	.word	0x0801f5f0

08005124 <_ZN11Screen4ViewC1Ev>:
Screen4View::Screen4View()
 8005124:	b510      	push	{r4, lr}
 8005126:	4604      	mov	r4, r0
 8005128:	f7fe fa38 	bl	800359c <_ZN15Screen4ViewBaseC1Ev>
 800512c:	4b08      	ldr	r3, [pc, #32]	; (8005150 <_ZN11Screen4ViewC1Ev+0x2c>)
 800512e:	6023      	str	r3, [r4, #0]
 8005130:	2300      	movs	r3, #0
 8005132:	f8c4 3e54 	str.w	r3, [r4, #3668]	; 0xe54
 8005136:	f8c4 3e58 	str.w	r3, [r4, #3672]	; 0xe58
 800513a:	f8a4 3e5c 	strh.w	r3, [r4, #3676]	; 0xe5c
 800513e:	f8c4 3e64 	str.w	r3, [r4, #3684]	; 0xe64
 8005142:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005146:	f8a4 3e68 	strh.w	r3, [r4, #3688]	; 0xe68
}
 800514a:	4620      	mov	r0, r4
 800514c:	bd10      	pop	{r4, pc}
 800514e:	bf00      	nop
 8005150:	0801f6e0 	.word	0x0801f6e0

08005154 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005154:	20f0      	movs	r0, #240	; 0xf0
 8005156:	4770      	bx	lr

08005158 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005158:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800515c:	4770      	bx	lr

0800515e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800515e:	2029      	movs	r0, #41	; 0x29
 8005160:	f7fc bac4 	b.w	80016ec <LCD_IO_WriteReg>

08005164 <ili9341_DisplayOff>:
 8005164:	2028      	movs	r0, #40	; 0x28
 8005166:	f7fc bac1 	b.w	80016ec <LCD_IO_WriteReg>

0800516a <ili9341_Init>:
{
 800516a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800516c:	f7fc fa92 	bl	8001694 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005170:	20ca      	movs	r0, #202	; 0xca
 8005172:	f7fc fabb 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005176:	20c3      	movs	r0, #195	; 0xc3
 8005178:	f7fc fa9c 	bl	80016b4 <LCD_IO_WriteData>
 800517c:	2008      	movs	r0, #8
 800517e:	f7fc fa99 	bl	80016b4 <LCD_IO_WriteData>
 8005182:	2050      	movs	r0, #80	; 0x50
 8005184:	f7fc fa96 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005188:	20cf      	movs	r0, #207	; 0xcf
 800518a:	f7fc faaf 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800518e:	2000      	movs	r0, #0
 8005190:	f7fc fa90 	bl	80016b4 <LCD_IO_WriteData>
 8005194:	20c1      	movs	r0, #193	; 0xc1
 8005196:	f7fc fa8d 	bl	80016b4 <LCD_IO_WriteData>
 800519a:	2030      	movs	r0, #48	; 0x30
 800519c:	f7fc fa8a 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80051a0:	20ed      	movs	r0, #237	; 0xed
 80051a2:	f7fc faa3 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80051a6:	2064      	movs	r0, #100	; 0x64
 80051a8:	f7fc fa84 	bl	80016b4 <LCD_IO_WriteData>
 80051ac:	2003      	movs	r0, #3
 80051ae:	f7fc fa81 	bl	80016b4 <LCD_IO_WriteData>
 80051b2:	2012      	movs	r0, #18
 80051b4:	f7fc fa7e 	bl	80016b4 <LCD_IO_WriteData>
 80051b8:	2081      	movs	r0, #129	; 0x81
 80051ba:	f7fc fa7b 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80051be:	20e8      	movs	r0, #232	; 0xe8
 80051c0:	f7fc fa94 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80051c4:	2085      	movs	r0, #133	; 0x85
 80051c6:	f7fc fa75 	bl	80016b4 <LCD_IO_WriteData>
 80051ca:	2000      	movs	r0, #0
 80051cc:	f7fc fa72 	bl	80016b4 <LCD_IO_WriteData>
 80051d0:	2078      	movs	r0, #120	; 0x78
 80051d2:	f7fc fa6f 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80051d6:	20cb      	movs	r0, #203	; 0xcb
 80051d8:	f7fc fa88 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80051dc:	2039      	movs	r0, #57	; 0x39
 80051de:	f7fc fa69 	bl	80016b4 <LCD_IO_WriteData>
 80051e2:	202c      	movs	r0, #44	; 0x2c
 80051e4:	f7fc fa66 	bl	80016b4 <LCD_IO_WriteData>
 80051e8:	2000      	movs	r0, #0
 80051ea:	f7fc fa63 	bl	80016b4 <LCD_IO_WriteData>
 80051ee:	2034      	movs	r0, #52	; 0x34
 80051f0:	f7fc fa60 	bl	80016b4 <LCD_IO_WriteData>
 80051f4:	2002      	movs	r0, #2
 80051f6:	f7fc fa5d 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80051fa:	20f7      	movs	r0, #247	; 0xf7
 80051fc:	f7fc fa76 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005200:	2020      	movs	r0, #32
 8005202:	f7fc fa57 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005206:	20ea      	movs	r0, #234	; 0xea
 8005208:	f7fc fa70 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800520c:	2000      	movs	r0, #0
 800520e:	f7fc fa51 	bl	80016b4 <LCD_IO_WriteData>
 8005212:	2000      	movs	r0, #0
 8005214:	f7fc fa4e 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005218:	20b1      	movs	r0, #177	; 0xb1
 800521a:	f7fc fa67 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800521e:	2000      	movs	r0, #0
 8005220:	f7fc fa48 	bl	80016b4 <LCD_IO_WriteData>
 8005224:	201b      	movs	r0, #27
 8005226:	f7fc fa45 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800522a:	20b6      	movs	r0, #182	; 0xb6
 800522c:	f7fc fa5e 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005230:	200a      	movs	r0, #10
 8005232:	f7fc fa3f 	bl	80016b4 <LCD_IO_WriteData>
 8005236:	20a2      	movs	r0, #162	; 0xa2
 8005238:	f7fc fa3c 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800523c:	20c0      	movs	r0, #192	; 0xc0
 800523e:	f7fc fa55 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005242:	2010      	movs	r0, #16
 8005244:	f7fc fa36 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005248:	20c1      	movs	r0, #193	; 0xc1
 800524a:	f7fc fa4f 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800524e:	2010      	movs	r0, #16
 8005250:	f7fc fa30 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005254:	20c5      	movs	r0, #197	; 0xc5
 8005256:	f7fc fa49 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800525a:	2045      	movs	r0, #69	; 0x45
 800525c:	f7fc fa2a 	bl	80016b4 <LCD_IO_WriteData>
 8005260:	2015      	movs	r0, #21
 8005262:	f7fc fa27 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005266:	20c7      	movs	r0, #199	; 0xc7
 8005268:	f7fc fa40 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800526c:	2090      	movs	r0, #144	; 0x90
 800526e:	f7fc fa21 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005272:	2036      	movs	r0, #54	; 0x36
 8005274:	f7fc fa3a 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005278:	20c8      	movs	r0, #200	; 0xc8
 800527a:	f7fc fa1b 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800527e:	20f2      	movs	r0, #242	; 0xf2
 8005280:	f7fc fa34 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005284:	2000      	movs	r0, #0
 8005286:	f7fc fa15 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800528a:	20b0      	movs	r0, #176	; 0xb0
 800528c:	f7fc fa2e 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005290:	20c2      	movs	r0, #194	; 0xc2
 8005292:	f7fc fa0f 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005296:	20b6      	movs	r0, #182	; 0xb6
 8005298:	f7fc fa28 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800529c:	200a      	movs	r0, #10
 800529e:	f7fc fa09 	bl	80016b4 <LCD_IO_WriteData>
 80052a2:	20a7      	movs	r0, #167	; 0xa7
 80052a4:	f7fc fa06 	bl	80016b4 <LCD_IO_WriteData>
 80052a8:	2027      	movs	r0, #39	; 0x27
 80052aa:	f7fc fa03 	bl	80016b4 <LCD_IO_WriteData>
 80052ae:	2004      	movs	r0, #4
 80052b0:	f7fc fa00 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80052b4:	202a      	movs	r0, #42	; 0x2a
 80052b6:	f7fc fa19 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80052ba:	2000      	movs	r0, #0
 80052bc:	f7fc f9fa 	bl	80016b4 <LCD_IO_WriteData>
 80052c0:	2000      	movs	r0, #0
 80052c2:	f7fc f9f7 	bl	80016b4 <LCD_IO_WriteData>
 80052c6:	2000      	movs	r0, #0
 80052c8:	f7fc f9f4 	bl	80016b4 <LCD_IO_WriteData>
 80052cc:	20ef      	movs	r0, #239	; 0xef
 80052ce:	f7fc f9f1 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80052d2:	202b      	movs	r0, #43	; 0x2b
 80052d4:	f7fc fa0a 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80052d8:	2000      	movs	r0, #0
 80052da:	f7fc f9eb 	bl	80016b4 <LCD_IO_WriteData>
 80052de:	2000      	movs	r0, #0
 80052e0:	f7fc f9e8 	bl	80016b4 <LCD_IO_WriteData>
 80052e4:	2001      	movs	r0, #1
 80052e6:	f7fc f9e5 	bl	80016b4 <LCD_IO_WriteData>
 80052ea:	203f      	movs	r0, #63	; 0x3f
 80052ec:	f7fc f9e2 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80052f0:	20f6      	movs	r0, #246	; 0xf6
 80052f2:	f7fc f9fb 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80052f6:	2001      	movs	r0, #1
 80052f8:	f7fc f9dc 	bl	80016b4 <LCD_IO_WriteData>
 80052fc:	2000      	movs	r0, #0
 80052fe:	f7fc f9d9 	bl	80016b4 <LCD_IO_WriteData>
 8005302:	2006      	movs	r0, #6
 8005304:	f7fc f9d6 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005308:	202c      	movs	r0, #44	; 0x2c
 800530a:	f7fc f9ef 	bl	80016ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 800530e:	20c8      	movs	r0, #200	; 0xc8
 8005310:	f7fc fa3a 	bl	8001788 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005314:	2026      	movs	r0, #38	; 0x26
 8005316:	f7fc f9e9 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800531a:	2001      	movs	r0, #1
 800531c:	f7fc f9ca 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005320:	20e0      	movs	r0, #224	; 0xe0
 8005322:	f7fc f9e3 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005326:	200f      	movs	r0, #15
 8005328:	f7fc f9c4 	bl	80016b4 <LCD_IO_WriteData>
 800532c:	2029      	movs	r0, #41	; 0x29
 800532e:	f7fc f9c1 	bl	80016b4 <LCD_IO_WriteData>
 8005332:	2024      	movs	r0, #36	; 0x24
 8005334:	f7fc f9be 	bl	80016b4 <LCD_IO_WriteData>
 8005338:	200c      	movs	r0, #12
 800533a:	f7fc f9bb 	bl	80016b4 <LCD_IO_WriteData>
 800533e:	200e      	movs	r0, #14
 8005340:	f7fc f9b8 	bl	80016b4 <LCD_IO_WriteData>
 8005344:	2009      	movs	r0, #9
 8005346:	f7fc f9b5 	bl	80016b4 <LCD_IO_WriteData>
 800534a:	204e      	movs	r0, #78	; 0x4e
 800534c:	f7fc f9b2 	bl	80016b4 <LCD_IO_WriteData>
 8005350:	2078      	movs	r0, #120	; 0x78
 8005352:	f7fc f9af 	bl	80016b4 <LCD_IO_WriteData>
 8005356:	203c      	movs	r0, #60	; 0x3c
 8005358:	f7fc f9ac 	bl	80016b4 <LCD_IO_WriteData>
 800535c:	2009      	movs	r0, #9
 800535e:	f7fc f9a9 	bl	80016b4 <LCD_IO_WriteData>
 8005362:	2013      	movs	r0, #19
 8005364:	f7fc f9a6 	bl	80016b4 <LCD_IO_WriteData>
 8005368:	2005      	movs	r0, #5
 800536a:	f7fc f9a3 	bl	80016b4 <LCD_IO_WriteData>
 800536e:	2017      	movs	r0, #23
 8005370:	f7fc f9a0 	bl	80016b4 <LCD_IO_WriteData>
 8005374:	2011      	movs	r0, #17
 8005376:	f7fc f99d 	bl	80016b4 <LCD_IO_WriteData>
 800537a:	2000      	movs	r0, #0
 800537c:	f7fc f99a 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005380:	20e1      	movs	r0, #225	; 0xe1
 8005382:	f7fc f9b3 	bl	80016ec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005386:	2000      	movs	r0, #0
 8005388:	f7fc f994 	bl	80016b4 <LCD_IO_WriteData>
 800538c:	2016      	movs	r0, #22
 800538e:	f7fc f991 	bl	80016b4 <LCD_IO_WriteData>
 8005392:	201b      	movs	r0, #27
 8005394:	f7fc f98e 	bl	80016b4 <LCD_IO_WriteData>
 8005398:	2004      	movs	r0, #4
 800539a:	f7fc f98b 	bl	80016b4 <LCD_IO_WriteData>
 800539e:	2011      	movs	r0, #17
 80053a0:	f7fc f988 	bl	80016b4 <LCD_IO_WriteData>
 80053a4:	2007      	movs	r0, #7
 80053a6:	f7fc f985 	bl	80016b4 <LCD_IO_WriteData>
 80053aa:	2031      	movs	r0, #49	; 0x31
 80053ac:	f7fc f982 	bl	80016b4 <LCD_IO_WriteData>
 80053b0:	2033      	movs	r0, #51	; 0x33
 80053b2:	f7fc f97f 	bl	80016b4 <LCD_IO_WriteData>
 80053b6:	2042      	movs	r0, #66	; 0x42
 80053b8:	f7fc f97c 	bl	80016b4 <LCD_IO_WriteData>
 80053bc:	2005      	movs	r0, #5
 80053be:	f7fc f979 	bl	80016b4 <LCD_IO_WriteData>
 80053c2:	200c      	movs	r0, #12
 80053c4:	f7fc f976 	bl	80016b4 <LCD_IO_WriteData>
 80053c8:	200a      	movs	r0, #10
 80053ca:	f7fc f973 	bl	80016b4 <LCD_IO_WriteData>
 80053ce:	2028      	movs	r0, #40	; 0x28
 80053d0:	f7fc f970 	bl	80016b4 <LCD_IO_WriteData>
 80053d4:	202f      	movs	r0, #47	; 0x2f
 80053d6:	f7fc f96d 	bl	80016b4 <LCD_IO_WriteData>
 80053da:	200f      	movs	r0, #15
 80053dc:	f7fc f96a 	bl	80016b4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80053e0:	2011      	movs	r0, #17
 80053e2:	f7fc f983 	bl	80016ec <LCD_IO_WriteReg>
  LCD_Delay(200);
 80053e6:	20c8      	movs	r0, #200	; 0xc8
 80053e8:	f7fc f9ce 	bl	8001788 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80053ec:	2029      	movs	r0, #41	; 0x29
 80053ee:	f7fc f97d 	bl	80016ec <LCD_IO_WriteReg>
}
 80053f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80053f6:	202c      	movs	r0, #44	; 0x2c
 80053f8:	f7fc b978 	b.w	80016ec <LCD_IO_WriteReg>

080053fc <ili9341_ReadID>:
{
 80053fc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80053fe:	f7fc f949 	bl	8001694 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005402:	2103      	movs	r1, #3
 8005404:	20d3      	movs	r0, #211	; 0xd3
 8005406:	f7fc f98d 	bl	8001724 <LCD_IO_ReadData>
}
 800540a:	b280      	uxth	r0, r0
 800540c:	bd08      	pop	{r3, pc}

0800540e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800540e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005410:	b2c4      	uxtb	r4, r0
 8005412:	2202      	movs	r2, #2
 8005414:	2103      	movs	r1, #3
 8005416:	4620      	mov	r0, r4
 8005418:	f7fc f8f2 	bl	8001600 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 800541c:	200a      	movs	r0, #10
 800541e:	f7fc f937 	bl	8001690 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005422:	4620      	mov	r0, r4
 8005424:	2200      	movs	r2, #0
 8005426:	2103      	movs	r1, #3
 8005428:	f7fc f8ea 	bl	8001600 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 800542c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005430:	2002      	movs	r0, #2
 8005432:	f7fc b92d 	b.w	8001690 <IOE_Delay>

08005436 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005436:	b538      	push	{r3, r4, r5, lr}
 8005438:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800543a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 800543c:	f7fc f8de 	bl	80015fc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005440:	2100      	movs	r1, #0
 8005442:	4620      	mov	r0, r4
 8005444:	f7fc f8f4 	bl	8001630 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005448:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800544a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800544c:	4620      	mov	r0, r4
 800544e:	f7fc f8ef 	bl	8001630 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005452:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005456:	b280      	uxth	r0, r0
 8005458:	bd38      	pop	{r3, r4, r5, pc}

0800545a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800545a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800545c:	b2c4      	uxtb	r4, r0
 800545e:	2140      	movs	r1, #64	; 0x40
 8005460:	4620      	mov	r0, r4
 8005462:	f7fc f8e5 	bl	8001630 <IOE_Read>
  
  if(state > 0)
 8005466:	0603      	lsls	r3, r0, #24
 8005468:	d507      	bpl.n	800547a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800546a:	214c      	movs	r1, #76	; 0x4c
 800546c:	4620      	mov	r0, r4
 800546e:	f7fc f8df 	bl	8001630 <IOE_Read>
    {
      ret = 1;
 8005472:	3800      	subs	r0, #0
 8005474:	bf18      	it	ne
 8005476:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005478:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800547a:	2201      	movs	r2, #1
 800547c:	214b      	movs	r1, #75	; 0x4b
 800547e:	4620      	mov	r0, r4
 8005480:	f7fc f8be 	bl	8001600 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005484:	4620      	mov	r0, r4
 8005486:	2200      	movs	r2, #0
 8005488:	214b      	movs	r1, #75	; 0x4b
 800548a:	f7fc f8b9 	bl	8001600 <IOE_Write>
  uint8_t ret = 0;
 800548e:	2000      	movs	r0, #0
 8005490:	e7f2      	b.n	8005478 <stmpe811_TS_DetectTouch+0x1e>

08005492 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005492:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005494:	2304      	movs	r3, #4
 8005496:	b2c4      	uxtb	r4, r0
{
 8005498:	460e      	mov	r6, r1
 800549a:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800549c:	21d7      	movs	r1, #215	; 0xd7
 800549e:	eb0d 0203 	add.w	r2, sp, r3
 80054a2:	4620      	mov	r0, r4
 80054a4:	f7fc f8de 	bl	8001664 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80054a8:	9b01      	ldr	r3, [sp, #4]
 80054aa:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80054ac:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80054ae:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80054b2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80054b4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80054b6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80054b8:	2201      	movs	r2, #1
 80054ba:	214b      	movs	r1, #75	; 0x4b
 80054bc:	f7fc f8a0 	bl	8001600 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80054c0:	2200      	movs	r2, #0
 80054c2:	214b      	movs	r1, #75	; 0x4b
 80054c4:	4620      	mov	r0, r4
 80054c6:	f7fc f89b 	bl	8001600 <IOE_Write>
}
 80054ca:	b002      	add	sp, #8
 80054cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080054d0 <stmpe811_Init>:
{
 80054d0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80054d2:	4b0a      	ldr	r3, [pc, #40]	; (80054fc <stmpe811_Init+0x2c>)
 80054d4:	781a      	ldrb	r2, [r3, #0]
 80054d6:	4290      	cmp	r0, r2
{
 80054d8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80054da:	d00d      	beq.n	80054f8 <stmpe811_Init+0x28>
 80054dc:	7859      	ldrb	r1, [r3, #1]
 80054de:	4288      	cmp	r0, r1
 80054e0:	d00a      	beq.n	80054f8 <stmpe811_Init+0x28>
 80054e2:	b10a      	cbz	r2, 80054e8 <stmpe811_Init+0x18>
 80054e4:	b941      	cbnz	r1, 80054f8 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80054e6:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 80054e8:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 80054ea:	f7fc f887 	bl	80015fc <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80054ee:	4620      	mov	r0, r4
}
 80054f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80054f4:	f7ff bf8b 	b.w	800540e <stmpe811_Reset>
}
 80054f8:	bd10      	pop	{r4, pc}
 80054fa:	bf00      	nop
 80054fc:	20001fe0 	.word	0x20001fe0

08005500 <stmpe811_EnableGlobalIT>:
{
 8005500:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005502:	b2c4      	uxtb	r4, r0
 8005504:	2109      	movs	r1, #9
 8005506:	4620      	mov	r0, r4
 8005508:	f7fc f892 	bl	8001630 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800550c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005510:	b2c2      	uxtb	r2, r0
 8005512:	2109      	movs	r1, #9
 8005514:	4620      	mov	r0, r4
}
 8005516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800551a:	f7fc b871 	b.w	8001600 <IOE_Write>

0800551e <stmpe811_DisableGlobalIT>:
{
 800551e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005520:	b2c4      	uxtb	r4, r0
 8005522:	2109      	movs	r1, #9
 8005524:	4620      	mov	r0, r4
 8005526:	f7fc f883 	bl	8001630 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800552a:	2109      	movs	r1, #9
 800552c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005530:	4620      	mov	r0, r4
}
 8005532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005536:	f7fc b863 	b.w	8001600 <IOE_Write>

0800553a <stmpe811_EnableITSource>:
{
 800553a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800553c:	b2c4      	uxtb	r4, r0
{
 800553e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005540:	4620      	mov	r0, r4
 8005542:	210a      	movs	r1, #10
 8005544:	f7fc f874 	bl	8001630 <IOE_Read>
  tmp |= Source; 
 8005548:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800554c:	b2d2      	uxtb	r2, r2
 800554e:	4620      	mov	r0, r4
 8005550:	210a      	movs	r1, #10
}
 8005552:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005556:	f7fc b853 	b.w	8001600 <IOE_Write>

0800555a <stmpe811_TS_EnableIT>:
{
 800555a:	b507      	push	{r0, r1, r2, lr}
 800555c:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 800555e:	f7fc f84e 	bl	80015fe <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005562:	9801      	ldr	r0, [sp, #4]
 8005564:	211f      	movs	r1, #31
 8005566:	f7ff ffe8 	bl	800553a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800556a:	9801      	ldr	r0, [sp, #4]
}
 800556c:	b003      	add	sp, #12
 800556e:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005572:	f7ff bfc5 	b.w	8005500 <stmpe811_EnableGlobalIT>

08005576 <stmpe811_DisableITSource>:
{
 8005576:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005578:	b2c4      	uxtb	r4, r0
{
 800557a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800557c:	4620      	mov	r0, r4
 800557e:	210a      	movs	r1, #10
 8005580:	f7fc f856 	bl	8001630 <IOE_Read>
  tmp &= ~Source; 
 8005584:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005588:	b2d2      	uxtb	r2, r2
 800558a:	4620      	mov	r0, r4
 800558c:	210a      	movs	r1, #10
}
 800558e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005592:	f7fc b835 	b.w	8001600 <IOE_Write>

08005596 <stmpe811_TS_DisableIT>:
{
 8005596:	b510      	push	{r4, lr}
 8005598:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800559a:	f7ff ffc0 	bl	800551e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800559e:	4620      	mov	r0, r4
 80055a0:	211f      	movs	r1, #31
}
 80055a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80055a6:	f7ff bfe6 	b.w	8005576 <stmpe811_DisableITSource>

080055aa <stmpe811_ReadGITStatus>:
{
 80055aa:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80055ac:	b2c0      	uxtb	r0, r0
{
 80055ae:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80055b0:	210b      	movs	r1, #11
 80055b2:	f7fc f83d 	bl	8001630 <IOE_Read>
}
 80055b6:	4020      	ands	r0, r4
 80055b8:	bd10      	pop	{r4, pc}

080055ba <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80055ba:	211f      	movs	r1, #31
 80055bc:	f7ff bff5 	b.w	80055aa <stmpe811_ReadGITStatus>

080055c0 <stmpe811_ClearGlobalIT>:
{
 80055c0:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80055c2:	b2c0      	uxtb	r0, r0
 80055c4:	210b      	movs	r1, #11
 80055c6:	f7fc b81b 	b.w	8001600 <IOE_Write>

080055ca <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80055ca:	211f      	movs	r1, #31
 80055cc:	f7ff bff8 	b.w	80055c0 <stmpe811_ClearGlobalIT>

080055d0 <stmpe811_IO_EnableAF>:
{
 80055d0:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80055d2:	b2c4      	uxtb	r4, r0
{
 80055d4:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80055d6:	4620      	mov	r0, r4
 80055d8:	2117      	movs	r1, #23
 80055da:	f7fc f829 	bl	8001630 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80055de:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80055e2:	b2d2      	uxtb	r2, r2
 80055e4:	4620      	mov	r0, r4
 80055e6:	2117      	movs	r1, #23
}
 80055e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80055ec:	f7fc b808 	b.w	8001600 <IOE_Write>

080055f0 <stmpe811_TS_Start>:
{
 80055f0:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80055f2:	b2c4      	uxtb	r4, r0
{
 80055f4:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80055f6:	2104      	movs	r1, #4
 80055f8:	4620      	mov	r0, r4
 80055fa:	f7fc f819 	bl	8001630 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80055fe:	2104      	movs	r1, #4
 8005600:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005604:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005606:	4620      	mov	r0, r4
 8005608:	f7fb fffa 	bl	8001600 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800560c:	4630      	mov	r0, r6
 800560e:	21f0      	movs	r1, #240	; 0xf0
 8005610:	f7ff ffde 	bl	80055d0 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005614:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005618:	4620      	mov	r0, r4
 800561a:	2104      	movs	r1, #4
 800561c:	f7fb fff0 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005620:	2249      	movs	r2, #73	; 0x49
 8005622:	2120      	movs	r1, #32
 8005624:	4620      	mov	r0, r4
 8005626:	f7fb ffeb 	bl	8001600 <IOE_Write>
  IOE_Delay(2); 
 800562a:	2002      	movs	r0, #2
 800562c:	f7fc f830 	bl	8001690 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005630:	4620      	mov	r0, r4
 8005632:	2201      	movs	r2, #1
 8005634:	2121      	movs	r1, #33	; 0x21
 8005636:	f7fb ffe3 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800563a:	4620      	mov	r0, r4
 800563c:	229a      	movs	r2, #154	; 0x9a
 800563e:	2141      	movs	r1, #65	; 0x41
 8005640:	f7fb ffde 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005644:	4620      	mov	r0, r4
 8005646:	2201      	movs	r2, #1
 8005648:	214a      	movs	r1, #74	; 0x4a
 800564a:	f7fb ffd9 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800564e:	4620      	mov	r0, r4
 8005650:	2201      	movs	r2, #1
 8005652:	214b      	movs	r1, #75	; 0x4b
 8005654:	f7fb ffd4 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005658:	4620      	mov	r0, r4
 800565a:	2200      	movs	r2, #0
 800565c:	214b      	movs	r1, #75	; 0x4b
 800565e:	f7fb ffcf 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005662:	4620      	mov	r0, r4
 8005664:	2201      	movs	r2, #1
 8005666:	2156      	movs	r1, #86	; 0x56
 8005668:	f7fb ffca 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800566c:	4620      	mov	r0, r4
 800566e:	2201      	movs	r2, #1
 8005670:	2158      	movs	r1, #88	; 0x58
 8005672:	f7fb ffc5 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005676:	4620      	mov	r0, r4
 8005678:	2201      	movs	r2, #1
 800567a:	2140      	movs	r1, #64	; 0x40
 800567c:	f7fb ffc0 	bl	8001600 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005680:	4620      	mov	r0, r4
 8005682:	22ff      	movs	r2, #255	; 0xff
 8005684:	210b      	movs	r1, #11
 8005686:	f7fb ffbb 	bl	8001600 <IOE_Write>
}
 800568a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 800568e:	2002      	movs	r0, #2
 8005690:	f7fb bffe 	b.w	8001690 <IOE_Delay>

08005694 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005694:	4b05      	ldr	r3, [pc, #20]	; (80056ac <SystemInit+0x18>)
 8005696:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800569a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800569e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80056a2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80056a6:	609a      	str	r2, [r3, #8]
#endif
}
 80056a8:	4770      	bx	lr
 80056aa:	bf00      	nop
 80056ac:	e000ed00 	.word	0xe000ed00

080056b0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80056b0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80056b2:	4b0b      	ldr	r3, [pc, #44]	; (80056e0 <HAL_Init+0x30>)
 80056b4:	681a      	ldr	r2, [r3, #0]
 80056b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80056ba:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80056bc:	681a      	ldr	r2, [r3, #0]
 80056be:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80056c2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80056c4:	681a      	ldr	r2, [r3, #0]
 80056c6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80056ca:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80056cc:	2003      	movs	r0, #3
 80056ce:	f000 fa67 	bl	8005ba0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80056d2:	2000      	movs	r0, #0
 80056d4:	f7fc face 	bl	8001c74 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80056d8:	f7fc f864 	bl	80017a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80056dc:	2000      	movs	r0, #0
 80056de:	bd08      	pop	{r3, pc}
 80056e0:	40023c00 	.word	0x40023c00

080056e4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80056e4:	4a03      	ldr	r2, [pc, #12]	; (80056f4 <HAL_IncTick+0x10>)
 80056e6:	4b04      	ldr	r3, [pc, #16]	; (80056f8 <HAL_IncTick+0x14>)
 80056e8:	6811      	ldr	r1, [r2, #0]
 80056ea:	781b      	ldrb	r3, [r3, #0]
 80056ec:	440b      	add	r3, r1
 80056ee:	6013      	str	r3, [r2, #0]
}
 80056f0:	4770      	bx	lr
 80056f2:	bf00      	nop
 80056f4:	200132c8 	.word	0x200132c8
 80056f8:	20000078 	.word	0x20000078

080056fc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80056fc:	4b01      	ldr	r3, [pc, #4]	; (8005704 <HAL_GetTick+0x8>)
 80056fe:	6818      	ldr	r0, [r3, #0]
}
 8005700:	4770      	bx	lr
 8005702:	bf00      	nop
 8005704:	200132c8 	.word	0x200132c8

08005708 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005708:	b538      	push	{r3, r4, r5, lr}
 800570a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800570c:	f7ff fff6 	bl	80056fc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005710:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005712:	bf1c      	itt	ne
 8005714:	4b05      	ldrne	r3, [pc, #20]	; (800572c <HAL_Delay+0x24>)
 8005716:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005718:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800571a:	bf18      	it	ne
 800571c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800571e:	f7ff ffed 	bl	80056fc <HAL_GetTick>
 8005722:	1b43      	subs	r3, r0, r5
 8005724:	42a3      	cmp	r3, r4
 8005726:	d3fa      	bcc.n	800571e <HAL_Delay+0x16>
  {
  }
}
 8005728:	bd38      	pop	{r3, r4, r5, pc}
 800572a:	bf00      	nop
 800572c:	20000078 	.word	0x20000078

08005730 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005730:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005732:	4604      	mov	r4, r0
 8005734:	2800      	cmp	r0, #0
 8005736:	f000 809b 	beq.w	8005870 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 800573a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800573c:	b925      	cbnz	r5, 8005748 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800573e:	f7fc f851 	bl	80017e4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005742:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005744:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005748:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800574a:	06db      	lsls	r3, r3, #27
 800574c:	f100 808e 	bmi.w	800586c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005750:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005752:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005756:	f023 0302 	bic.w	r3, r3, #2
 800575a:	f043 0302 	orr.w	r3, r3, #2
 800575e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005760:	4b44      	ldr	r3, [pc, #272]	; (8005874 <HAL_ADC_Init+0x144>)
 8005762:	685a      	ldr	r2, [r3, #4]
 8005764:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005768:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800576a:	685a      	ldr	r2, [r3, #4]
 800576c:	6861      	ldr	r1, [r4, #4]
 800576e:	430a      	orrs	r2, r1
 8005770:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005772:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005774:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005776:	685a      	ldr	r2, [r3, #4]
 8005778:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800577c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800577e:	685a      	ldr	r2, [r3, #4]
 8005780:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005784:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005786:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005788:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800578a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800578e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005790:	685a      	ldr	r2, [r3, #4]
 8005792:	430a      	orrs	r2, r1
 8005794:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005796:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005798:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 800579a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800579e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80057a0:	689a      	ldr	r2, [r3, #8]
 80057a2:	430a      	orrs	r2, r1
 80057a4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80057a6:	4934      	ldr	r1, [pc, #208]	; (8005878 <HAL_ADC_Init+0x148>)
 80057a8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80057aa:	428a      	cmp	r2, r1
 80057ac:	d052      	beq.n	8005854 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80057ae:	6899      	ldr	r1, [r3, #8]
 80057b0:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 80057b4:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80057b6:	6899      	ldr	r1, [r3, #8]
 80057b8:	430a      	orrs	r2, r1
 80057ba:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80057bc:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80057be:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80057c0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80057c4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80057c6:	689a      	ldr	r2, [r3, #8]
 80057c8:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80057ca:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80057cc:	689a      	ldr	r2, [r3, #8]
 80057ce:	f022 0202 	bic.w	r2, r2, #2
 80057d2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80057d4:	689a      	ldr	r2, [r3, #8]
 80057d6:	7e21      	ldrb	r1, [r4, #24]
 80057d8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80057dc:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 80057de:	f894 2020 	ldrb.w	r2, [r4, #32]
 80057e2:	2a00      	cmp	r2, #0
 80057e4:	d03e      	beq.n	8005864 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80057e6:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80057e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80057ea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80057ee:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80057f0:	685a      	ldr	r2, [r3, #4]
 80057f2:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 80057f6:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80057f8:	685a      	ldr	r2, [r3, #4]
 80057fa:	3901      	subs	r1, #1
 80057fc:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005800:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005802:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005804:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005806:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800580a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 800580c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800580e:	3901      	subs	r1, #1
 8005810:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005814:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005816:	689a      	ldr	r2, [r3, #8]
 8005818:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800581c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800581e:	689a      	ldr	r2, [r3, #8]
 8005820:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005824:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005828:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800582a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800582c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 800582e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005832:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005834:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005836:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005838:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 800583c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 800583e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005840:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005842:	f023 0303 	bic.w	r3, r3, #3
 8005846:	f043 0301 	orr.w	r3, r3, #1
 800584a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 800584c:	2300      	movs	r3, #0
 800584e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005852:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005854:	689a      	ldr	r2, [r3, #8]
 8005856:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 800585a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800585c:	689a      	ldr	r2, [r3, #8]
 800585e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005862:	e7b2      	b.n	80057ca <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005864:	685a      	ldr	r2, [r3, #4]
 8005866:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800586a:	e7c9      	b.n	8005800 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 800586c:	2001      	movs	r0, #1
 800586e:	e7ed      	b.n	800584c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005870:	2001      	movs	r0, #1
 8005872:	e7ee      	b.n	8005852 <HAL_ADC_Init+0x122>
 8005874:	40012300 	.word	0x40012300
 8005878:	0f000001 	.word	0x0f000001

0800587c <HAL_ADC_Start>:
{
 800587c:	b513      	push	{r0, r1, r4, lr}
  __IO uint32_t counter = 0U;
 800587e:	2300      	movs	r3, #0
 8005880:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005882:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005886:	2b01      	cmp	r3, #1
 8005888:	d06c      	beq.n	8005964 <HAL_ADC_Start+0xe8>
 800588a:	2301      	movs	r3, #1
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 800588c:	6802      	ldr	r2, [r0, #0]
  __HAL_LOCK(hadc);
 800588e:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005892:	6893      	ldr	r3, [r2, #8]
 8005894:	07d9      	lsls	r1, r3, #31
 8005896:	d50c      	bpl.n	80058b2 <HAL_ADC_Start+0x36>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005898:	6893      	ldr	r3, [r2, #8]
 800589a:	f013 0301 	ands.w	r3, r3, #1
 800589e:	d11a      	bne.n	80058d6 <HAL_ADC_Start+0x5a>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80058a0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80058a2:	f042 0210 	orr.w	r2, r2, #16
 80058a6:	6402      	str	r2, [r0, #64]	; 0x40
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80058a8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80058aa:	f042 0201 	orr.w	r2, r2, #1
 80058ae:	6442      	str	r2, [r0, #68]	; 0x44
 80058b0:	e056      	b.n	8005960 <HAL_ADC_Start+0xe4>
    __HAL_ADC_ENABLE(hadc);
 80058b2:	6893      	ldr	r3, [r2, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80058b4:	492d      	ldr	r1, [pc, #180]	; (800596c <HAL_ADC_Start+0xf0>)
    __HAL_ADC_ENABLE(hadc);
 80058b6:	f043 0301 	orr.w	r3, r3, #1
 80058ba:	6093      	str	r3, [r2, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80058bc:	4b2c      	ldr	r3, [pc, #176]	; (8005970 <HAL_ADC_Start+0xf4>)
 80058be:	681b      	ldr	r3, [r3, #0]
 80058c0:	fbb3 f3f1 	udiv	r3, r3, r1
 80058c4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
      counter--;
 80058c8:	9301      	str	r3, [sp, #4]
    while(counter != 0U)
 80058ca:	9b01      	ldr	r3, [sp, #4]
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d0e3      	beq.n	8005898 <HAL_ADC_Start+0x1c>
      counter--;
 80058d0:	9b01      	ldr	r3, [sp, #4]
 80058d2:	3b01      	subs	r3, #1
 80058d4:	e7f8      	b.n	80058c8 <HAL_ADC_Start+0x4c>
    ADC_STATE_CLR_SET(hadc->State,
 80058d6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80058d8:	4c26      	ldr	r4, [pc, #152]	; (8005974 <HAL_ADC_Start+0xf8>)
 80058da:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80058de:	f023 0301 	bic.w	r3, r3, #1
 80058e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80058e6:	6403      	str	r3, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80058e8:	6853      	ldr	r3, [r2, #4]
 80058ea:	055b      	lsls	r3, r3, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80058ec:	bf41      	itttt	mi
 80058ee:	6c03      	ldrmi	r3, [r0, #64]	; 0x40
 80058f0:	f423 5340 	bicmi.w	r3, r3, #12288	; 0x3000
 80058f4:	f443 5380 	orrmi.w	r3, r3, #4096	; 0x1000
 80058f8:	6403      	strmi	r3, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80058fa:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80058fc:	f413 5380 	ands.w	r3, r3, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005900:	bf1c      	itt	ne
 8005902:	6c43      	ldrne	r3, [r0, #68]	; 0x44
 8005904:	f023 0306 	bicne.w	r3, r3, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005908:	6443      	str	r3, [r0, #68]	; 0x44
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 800590a:	f06f 0122 	mvn.w	r1, #34	; 0x22
    __HAL_UNLOCK(hadc);
 800590e:	2300      	movs	r3, #0
 8005910:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005914:	6011      	str	r1, [r2, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005916:	4918      	ldr	r1, [pc, #96]	; (8005978 <HAL_ADC_Start+0xfc>)
 8005918:	6848      	ldr	r0, [r1, #4]
 800591a:	f010 001f 	ands.w	r0, r0, #31
 800591e:	d119      	bne.n	8005954 <HAL_ADC_Start+0xd8>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005920:	42a2      	cmp	r2, r4
 8005922:	d006      	beq.n	8005932 <HAL_ADC_Start+0xb6>
 8005924:	4b15      	ldr	r3, [pc, #84]	; (800597c <HAL_ADC_Start+0x100>)
 8005926:	429a      	cmp	r2, r3
 8005928:	d10d      	bne.n	8005946 <HAL_ADC_Start+0xca>
 800592a:	684b      	ldr	r3, [r1, #4]
 800592c:	f013 0f1f 	tst.w	r3, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005930:	d107      	bne.n	8005942 <HAL_ADC_Start+0xc6>
        if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 8005932:	6890      	ldr	r0, [r2, #8]
 8005934:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005938:	d116      	bne.n	8005968 <HAL_ADC_Start+0xec>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800593a:	6893      	ldr	r3, [r2, #8]
 800593c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8005940:	6093      	str	r3, [r2, #8]
}
 8005942:	b002      	add	sp, #8
 8005944:	bd10      	pop	{r4, pc}
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005946:	4b0e      	ldr	r3, [pc, #56]	; (8005980 <HAL_ADC_Start+0x104>)
 8005948:	429a      	cmp	r2, r3
 800594a:	d1fa      	bne.n	8005942 <HAL_ADC_Start+0xc6>
 800594c:	684b      	ldr	r3, [r1, #4]
 800594e:	f013 0f10 	tst.w	r3, #16
 8005952:	e7ed      	b.n	8005930 <HAL_ADC_Start+0xb4>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005954:	42a2      	cmp	r2, r4
 8005956:	d107      	bne.n	8005968 <HAL_ADC_Start+0xec>
 8005958:	6890      	ldr	r0, [r2, #8]
 800595a:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800595e:	d0ec      	beq.n	800593a <HAL_ADC_Start+0xbe>
  return HAL_OK;
 8005960:	4618      	mov	r0, r3
 8005962:	e7ee      	b.n	8005942 <HAL_ADC_Start+0xc6>
  __HAL_LOCK(hadc);
 8005964:	2002      	movs	r0, #2
 8005966:	e7ec      	b.n	8005942 <HAL_ADC_Start+0xc6>
  return HAL_OK;
 8005968:	2000      	movs	r0, #0
 800596a:	e7ea      	b.n	8005942 <HAL_ADC_Start+0xc6>
 800596c:	000f4240 	.word	0x000f4240
 8005970:	20000074 	.word	0x20000074
 8005974:	40012000 	.word	0x40012000
 8005978:	40012300 	.word	0x40012300
 800597c:	40012100 	.word	0x40012100
 8005980:	40012200 	.word	0x40012200

08005984 <HAL_ADC_Stop>:
  __HAL_LOCK(hadc);
 8005984:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005988:	2b01      	cmp	r3, #1
 800598a:	d014      	beq.n	80059b6 <HAL_ADC_Stop+0x32>
  __HAL_ADC_DISABLE(hadc);
 800598c:	6803      	ldr	r3, [r0, #0]
 800598e:	689a      	ldr	r2, [r3, #8]
 8005990:	f022 0201 	bic.w	r2, r2, #1
 8005994:	609a      	str	r2, [r3, #8]
  if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 8005996:	689b      	ldr	r3, [r3, #8]
 8005998:	07db      	lsls	r3, r3, #31
 800599a:	d407      	bmi.n	80059ac <HAL_ADC_Stop+0x28>
    ADC_STATE_CLR_SET(hadc->State,
 800599c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800599e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80059a2:	f023 0301 	bic.w	r3, r3, #1
 80059a6:	f043 0301 	orr.w	r3, r3, #1
 80059aa:	6403      	str	r3, [r0, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 80059ac:	2300      	movs	r3, #0
 80059ae:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80059b2:	4618      	mov	r0, r3
 80059b4:	4770      	bx	lr
  __HAL_LOCK(hadc);
 80059b6:	2002      	movs	r0, #2
}
 80059b8:	4770      	bx	lr

080059ba <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80059ba:	6803      	ldr	r3, [r0, #0]
 80059bc:	689a      	ldr	r2, [r3, #8]
 80059be:	0552      	lsls	r2, r2, #21
{
 80059c0:	b570      	push	{r4, r5, r6, lr}
 80059c2:	4604      	mov	r4, r0
 80059c4:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80059c6:	d50b      	bpl.n	80059e0 <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 80059c8:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 80059ca:	05de      	lsls	r6, r3, #23
 80059cc:	d508      	bpl.n	80059e0 <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80059ce:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80059d0:	f043 0320 	orr.w	r3, r3, #32
 80059d4:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 80059d6:	2300      	movs	r3, #0
 80059d8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 80059dc:	2001      	movs	r0, #1
}
 80059de:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 80059e0:	f7ff fe8c 	bl	80056fc <HAL_GetTick>
 80059e4:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80059e6:	6823      	ldr	r3, [r4, #0]
 80059e8:	681a      	ldr	r2, [r3, #0]
 80059ea:	0791      	lsls	r1, r2, #30
 80059ec:	d50c      	bpl.n	8005a08 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80059ee:	f06f 0212 	mvn.w	r2, #18
 80059f2:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80059f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80059f6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80059fa:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80059fc:	689a      	ldr	r2, [r3, #8]
 80059fe:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 8005a02:	d017      	beq.n	8005a34 <HAL_ADC_PollForConversion+0x7a>
  return HAL_OK;
 8005a04:	2000      	movs	r0, #0
 8005a06:	e7ea      	b.n	80059de <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 8005a08:	1c68      	adds	r0, r5, #1
 8005a0a:	d0ed      	beq.n	80059e8 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005a0c:	b965      	cbnz	r5, 8005a28 <HAL_ADC_PollForConversion+0x6e>
        if(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 8005a0e:	6823      	ldr	r3, [r4, #0]
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	f013 0302 	ands.w	r3, r3, #2
 8005a16:	d1e6      	bne.n	80059e6 <HAL_ADC_PollForConversion+0x2c>
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8005a18:	6c22      	ldr	r2, [r4, #64]	; 0x40
          __HAL_UNLOCK(hadc);
 8005a1a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
          SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 8005a1e:	f042 0204 	orr.w	r2, r2, #4
 8005a22:	6422      	str	r2, [r4, #64]	; 0x40
          return HAL_TIMEOUT;
 8005a24:	2003      	movs	r0, #3
 8005a26:	e7da      	b.n	80059de <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 8005a28:	f7ff fe68 	bl	80056fc <HAL_GetTick>
 8005a2c:	1b80      	subs	r0, r0, r6
 8005a2e:	42a8      	cmp	r0, r5
 8005a30:	d8ed      	bhi.n	8005a0e <HAL_ADC_PollForConversion+0x54>
 8005a32:	e7d8      	b.n	80059e6 <HAL_ADC_PollForConversion+0x2c>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005a34:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8005a36:	2800      	cmp	r0, #0
 8005a38:	d1e4      	bne.n	8005a04 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005a3a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8005a3c:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 8005a40:	d002      	beq.n	8005a48 <HAL_ADC_PollForConversion+0x8e>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 8005a42:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8005a44:	055a      	lsls	r2, r3, #21
 8005a46:	d4dd      	bmi.n	8005a04 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 8005a48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005a4e:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005a50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a52:	04db      	lsls	r3, r3, #19
 8005a54:	d4d6      	bmi.n	8005a04 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8005a56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a58:	f043 0301 	orr.w	r3, r3, #1
 8005a5c:	6423      	str	r3, [r4, #64]	; 0x40
 8005a5e:	e7be      	b.n	80059de <HAL_ADC_PollForConversion+0x24>

08005a60 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005a60:	6803      	ldr	r3, [r0, #0]
 8005a62:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005a64:	4770      	bx	lr
	...

08005a68 <HAL_ADC_ConfigChannel>:
{
 8005a68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005a6a:	2300      	movs	r3, #0
 8005a6c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005a6e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005a72:	2b01      	cmp	r3, #1
 8005a74:	d069      	beq.n	8005b4a <HAL_ADC_ConfigChannel+0xe2>
 8005a76:	2301      	movs	r3, #1
 8005a78:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005a7c:	680d      	ldr	r5, [r1, #0]
 8005a7e:	6803      	ldr	r3, [r0, #0]
 8005a80:	688e      	ldr	r6, [r1, #8]
 8005a82:	2d09      	cmp	r5, #9
 8005a84:	b2ac      	uxth	r4, r5
 8005a86:	d934      	bls.n	8005af2 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005a88:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005a8c:	68df      	ldr	r7, [r3, #12]
 8005a8e:	3a1e      	subs	r2, #30
 8005a90:	f04f 0c07 	mov.w	ip, #7
 8005a94:	fa0c fc02 	lsl.w	ip, ip, r2
 8005a98:	ea27 070c 	bic.w	r7, r7, ip
 8005a9c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005a9e:	68df      	ldr	r7, [r3, #12]
 8005aa0:	fa06 f202 	lsl.w	r2, r6, r2
 8005aa4:	433a      	orrs	r2, r7
 8005aa6:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005aa8:	6849      	ldr	r1, [r1, #4]
 8005aaa:	2906      	cmp	r1, #6
 8005aac:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8005ab0:	d82f      	bhi.n	8005b12 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005ab2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005ab4:	3a05      	subs	r2, #5
 8005ab6:	261f      	movs	r6, #31
 8005ab8:	4096      	lsls	r6, r2
 8005aba:	ea21 0106 	bic.w	r1, r1, r6
 8005abe:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005ac0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005ac2:	fa04 f202 	lsl.w	r2, r4, r2
 8005ac6:	430a      	orrs	r2, r1
 8005ac8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005aca:	4a30      	ldr	r2, [pc, #192]	; (8005b8c <HAL_ADC_ConfigChannel+0x124>)
 8005acc:	4293      	cmp	r3, r2
 8005ace:	d10a      	bne.n	8005ae6 <HAL_ADC_ConfigChannel+0x7e>
 8005ad0:	2d12      	cmp	r5, #18
 8005ad2:	d13c      	bne.n	8005b4e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005ad4:	4b2e      	ldr	r3, [pc, #184]	; (8005b90 <HAL_ADC_ConfigChannel+0x128>)
 8005ad6:	685a      	ldr	r2, [r3, #4]
 8005ad8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005adc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005ade:	685a      	ldr	r2, [r3, #4]
 8005ae0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005ae4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005ae6:	2300      	movs	r3, #0
 8005ae8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005aec:	4618      	mov	r0, r3
}
 8005aee:	b003      	add	sp, #12
 8005af0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005af2:	691f      	ldr	r7, [r3, #16]
 8005af4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005af8:	f04f 0c07 	mov.w	ip, #7
 8005afc:	fa0c fc02 	lsl.w	ip, ip, r2
 8005b00:	ea27 070c 	bic.w	r7, r7, ip
 8005b04:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005b06:	691f      	ldr	r7, [r3, #16]
 8005b08:	fa06 f202 	lsl.w	r2, r6, r2
 8005b0c:	433a      	orrs	r2, r7
 8005b0e:	611a      	str	r2, [r3, #16]
 8005b10:	e7ca      	b.n	8005aa8 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005b12:	290c      	cmp	r1, #12
 8005b14:	f04f 011f 	mov.w	r1, #31
 8005b18:	d80b      	bhi.n	8005b32 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005b1a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005b1c:	3a23      	subs	r2, #35	; 0x23
 8005b1e:	4091      	lsls	r1, r2
 8005b20:	ea26 0101 	bic.w	r1, r6, r1
 8005b24:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8005b26:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005b28:	fa04 f202 	lsl.w	r2, r4, r2
 8005b2c:	430a      	orrs	r2, r1
 8005b2e:	631a      	str	r2, [r3, #48]	; 0x30
 8005b30:	e7cb      	b.n	8005aca <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8005b32:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005b34:	3a41      	subs	r2, #65	; 0x41
 8005b36:	4091      	lsls	r1, r2
 8005b38:	ea26 0101 	bic.w	r1, r6, r1
 8005b3c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8005b3e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005b40:	fa04 f202 	lsl.w	r2, r4, r2
 8005b44:	430a      	orrs	r2, r1
 8005b46:	62da      	str	r2, [r3, #44]	; 0x2c
 8005b48:	e7bf      	b.n	8005aca <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 8005b4a:	2002      	movs	r0, #2
 8005b4c:	e7cf      	b.n	8005aee <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8005b4e:	4b11      	ldr	r3, [pc, #68]	; (8005b94 <HAL_ADC_ConfigChannel+0x12c>)
 8005b50:	429d      	cmp	r5, r3
 8005b52:	d001      	beq.n	8005b58 <HAL_ADC_ConfigChannel+0xf0>
 8005b54:	2d11      	cmp	r5, #17
 8005b56:	d1c6      	bne.n	8005ae6 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8005b58:	4b0d      	ldr	r3, [pc, #52]	; (8005b90 <HAL_ADC_ConfigChannel+0x128>)
 8005b5a:	685a      	ldr	r2, [r3, #4]
 8005b5c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8005b60:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8005b62:	685a      	ldr	r2, [r3, #4]
 8005b64:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8005b68:	605a      	str	r2, [r3, #4]
    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8005b6a:	4b0a      	ldr	r3, [pc, #40]	; (8005b94 <HAL_ADC_ConfigChannel+0x12c>)
 8005b6c:	429d      	cmp	r5, r3
 8005b6e:	d1ba      	bne.n	8005ae6 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8005b70:	4b09      	ldr	r3, [pc, #36]	; (8005b98 <HAL_ADC_ConfigChannel+0x130>)
 8005b72:	4a0a      	ldr	r2, [pc, #40]	; (8005b9c <HAL_ADC_ConfigChannel+0x134>)
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	fbb3 f2f2 	udiv	r2, r3, r2
 8005b7a:	230a      	movs	r3, #10
 8005b7c:	4353      	muls	r3, r2
        counter--;
 8005b7e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8005b80:	9b01      	ldr	r3, [sp, #4]
 8005b82:	2b00      	cmp	r3, #0
 8005b84:	d0af      	beq.n	8005ae6 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8005b86:	9b01      	ldr	r3, [sp, #4]
 8005b88:	3b01      	subs	r3, #1
 8005b8a:	e7f8      	b.n	8005b7e <HAL_ADC_ConfigChannel+0x116>
 8005b8c:	40012000 	.word	0x40012000
 8005b90:	40012300 	.word	0x40012300
 8005b94:	10000012 	.word	0x10000012
 8005b98:	20000074 	.word	0x20000074
 8005b9c:	000f4240 	.word	0x000f4240

08005ba0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8005ba0:	4907      	ldr	r1, [pc, #28]	; (8005bc0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8005ba2:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005ba4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005ba8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005baa:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8005bac:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8005bb0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8005bb2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8005bb4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005bb8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8005bbc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8005bbe:	4770      	bx	lr
 8005bc0:	e000ed00 	.word	0xe000ed00

08005bc4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8005bc4:	4b16      	ldr	r3, [pc, #88]	; (8005c20 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8005bc6:	b530      	push	{r4, r5, lr}
 8005bc8:	68dc      	ldr	r4, [r3, #12]
 8005bca:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005bce:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005bd2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8005bd4:	2d04      	cmp	r5, #4
 8005bd6:	bf28      	it	cs
 8005bd8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005bda:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005bdc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8005be0:	bf8c      	ite	hi
 8005be2:	3c03      	subhi	r4, #3
 8005be4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005be6:	fa03 f505 	lsl.w	r5, r3, r5
 8005bea:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8005bee:	40a3      	lsls	r3, r4
 8005bf0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005bf4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8005bf6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005bf8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005bfc:	bfac      	ite	ge
 8005bfe:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c02:	4a08      	ldrlt	r2, [pc, #32]	; (8005c24 <HAL_NVIC_SetPriority+0x60>)
 8005c04:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8005c08:	bfb8      	it	lt
 8005c0a:	f000 000f 	andlt.w	r0, r0, #15
 8005c0e:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c10:	bfaa      	itet	ge
 8005c12:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c16:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005c18:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005c1c:	bd30      	pop	{r4, r5, pc}
 8005c1e:	bf00      	nop
 8005c20:	e000ed00 	.word	0xe000ed00
 8005c24:	e000ed14 	.word	0xe000ed14

08005c28 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005c28:	2800      	cmp	r0, #0
 8005c2a:	db08      	blt.n	8005c3e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005c2c:	0942      	lsrs	r2, r0, #5
 8005c2e:	2301      	movs	r3, #1
 8005c30:	f000 001f 	and.w	r0, r0, #31
 8005c34:	fa03 f000 	lsl.w	r0, r3, r0
 8005c38:	4b01      	ldr	r3, [pc, #4]	; (8005c40 <HAL_NVIC_EnableIRQ+0x18>)
 8005c3a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005c3e:	4770      	bx	lr
 8005c40:	e000e100 	.word	0xe000e100

08005c44 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005c44:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005c46:	4604      	mov	r4, r0
 8005c48:	b150      	cbz	r0, 8005c60 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8005c4a:	7943      	ldrb	r3, [r0, #5]
 8005c4c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005c50:	b913      	cbnz	r3, 8005c58 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005c52:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005c54:	f7fb fdf8 	bl	8001848 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8005c58:	2301      	movs	r3, #1
 8005c5a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8005c5c:	2000      	movs	r0, #0
}
 8005c5e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005c60:	2001      	movs	r0, #1
 8005c62:	e7fc      	b.n	8005c5e <HAL_CRC_Init+0x1a>

08005c64 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005c64:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8005c66:	4604      	mov	r4, r0
 8005c68:	b330      	cbz	r0, 8005cb8 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005c6a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005c6e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005c72:	b91b      	cbnz	r3, 8005c7c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8005c74:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8005c78:	f7fb fdfe 	bl	8001878 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005c7c:	6822      	ldr	r2, [r4, #0]
 8005c7e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005c80:	2302      	movs	r3, #2
 8005c82:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005c86:	6813      	ldr	r3, [r2, #0]
 8005c88:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005c8c:	430b      	orrs	r3, r1
 8005c8e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8005c90:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8005c92:	68a1      	ldr	r1, [r4, #8]
 8005c94:	f023 0307 	bic.w	r3, r3, #7
 8005c98:	430b      	orrs	r3, r1
 8005c9a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005c9c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005c9e:	68e1      	ldr	r1, [r4, #12]
 8005ca0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005ca4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005ca8:	430b      	orrs	r3, r1
 8005caa:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005cac:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005cae:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005cb0:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005cb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8005cb6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cb8:	2001      	movs	r0, #1
 8005cba:	e7fc      	b.n	8005cb6 <HAL_DMA2D_Init+0x52>

08005cbc <HAL_DMA2D_LineEventCallback>:
 8005cbc:	4770      	bx	lr

08005cbe <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8005cbe:	4770      	bx	lr

08005cc0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005cc0:	6803      	ldr	r3, [r0, #0]
{
 8005cc2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005cc4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005cc6:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005cc8:	07f2      	lsls	r2, r6, #31
{
 8005cca:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005ccc:	d514      	bpl.n	8005cf8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8005cce:	05e9      	lsls	r1, r5, #23
 8005cd0:	d512      	bpl.n	8005cf8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005cd2:	681a      	ldr	r2, [r3, #0]
 8005cd4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005cd8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005cda:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8005cdc:	f042 0201 	orr.w	r2, r2, #1
 8005ce0:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005ce2:	2201      	movs	r2, #1
 8005ce4:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005ce6:	2304      	movs	r3, #4
 8005ce8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005cec:	2300      	movs	r3, #0
 8005cee:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005cf2:	6943      	ldr	r3, [r0, #20]
 8005cf4:	b103      	cbz	r3, 8005cf8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005cf6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005cf8:	06b2      	lsls	r2, r6, #26
 8005cfa:	d516      	bpl.n	8005d2a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005cfc:	04ab      	lsls	r3, r5, #18
 8005cfe:	d514      	bpl.n	8005d2a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005d00:	6823      	ldr	r3, [r4, #0]
 8005d02:	681a      	ldr	r2, [r3, #0]
 8005d04:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005d08:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8005d0a:	2220      	movs	r2, #32
 8005d0c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8005d0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005d10:	f043 0302 	orr.w	r3, r3, #2
 8005d14:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005d16:	2304      	movs	r3, #4
 8005d18:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005d1c:	2300      	movs	r3, #0
 8005d1e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005d22:	6963      	ldr	r3, [r4, #20]
 8005d24:	b10b      	cbz	r3, 8005d2a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005d26:	4620      	mov	r0, r4
 8005d28:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8005d2a:	0730      	lsls	r0, r6, #28
 8005d2c:	d516      	bpl.n	8005d5c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8005d2e:	0529      	lsls	r1, r5, #20
 8005d30:	d514      	bpl.n	8005d5c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005d32:	6823      	ldr	r3, [r4, #0]
 8005d34:	681a      	ldr	r2, [r3, #0]
 8005d36:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d3a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005d3c:	2208      	movs	r2, #8
 8005d3e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005d40:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005d42:	f043 0304 	orr.w	r3, r3, #4
 8005d46:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005d48:	2304      	movs	r3, #4
 8005d4a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005d4e:	2300      	movs	r3, #0
 8005d50:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8005d54:	6963      	ldr	r3, [r4, #20]
 8005d56:	b10b      	cbz	r3, 8005d5c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005d58:	4620      	mov	r0, r4
 8005d5a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8005d5c:	0772      	lsls	r2, r6, #29
 8005d5e:	d50b      	bpl.n	8005d78 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005d60:	056b      	lsls	r3, r5, #21
 8005d62:	d509      	bpl.n	8005d78 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005d64:	6823      	ldr	r3, [r4, #0]
 8005d66:	681a      	ldr	r2, [r3, #0]
 8005d68:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005d6c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005d6e:	2204      	movs	r2, #4
 8005d70:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005d72:	4620      	mov	r0, r4
 8005d74:	f7ff ffa2 	bl	8005cbc <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8005d78:	07b0      	lsls	r0, r6, #30
 8005d7a:	d514      	bpl.n	8005da6 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005d7c:	05a9      	lsls	r1, r5, #22
 8005d7e:	d512      	bpl.n	8005da6 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005d80:	6823      	ldr	r3, [r4, #0]
 8005d82:	681a      	ldr	r2, [r3, #0]
 8005d84:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005d88:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005d8a:	2202      	movs	r2, #2
 8005d8c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005d8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005d90:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005d92:	2301      	movs	r3, #1
 8005d94:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005d98:	2300      	movs	r3, #0
 8005d9a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8005d9e:	6923      	ldr	r3, [r4, #16]
 8005da0:	b10b      	cbz	r3, 8005da6 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8005da2:	4620      	mov	r0, r4
 8005da4:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005da6:	06f2      	lsls	r2, r6, #27
 8005da8:	d513      	bpl.n	8005dd2 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005daa:	04eb      	lsls	r3, r5, #19
 8005dac:	d511      	bpl.n	8005dd2 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005dae:	6823      	ldr	r3, [r4, #0]
 8005db0:	681a      	ldr	r2, [r3, #0]
 8005db2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005db6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005db8:	2210      	movs	r2, #16
 8005dba:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005dbc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005dbe:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005dc0:	2301      	movs	r3, #1
 8005dc2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005dcc:	4620      	mov	r0, r4
 8005dce:	f7ff ff76 	bl	8005cbe <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8005dd2:	bd70      	pop	{r4, r5, r6, pc}

08005dd4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8005dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8005dd6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8005dda:	2b01      	cmp	r3, #1
 8005ddc:	f04f 0302 	mov.w	r3, #2
 8005de0:	d02b      	beq.n	8005e3a <HAL_DMA2D_ConfigLayer+0x66>
 8005de2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005de4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8005de8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005dec:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8005df0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8005df4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8005df6:	4f18      	ldr	r7, [pc, #96]	; (8005e58 <HAL_DMA2D_ConfigLayer+0x84>)
 8005df8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005dfc:	3c09      	subs	r4, #9
 8005dfe:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005e00:	bf9c      	itt	ls
 8005e02:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8005e06:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005e08:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8005e0c:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005e0e:	bf88      	it	hi
 8005e10:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005e14:	b999      	cbnz	r1, 8005e3e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005e16:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005e18:	4039      	ands	r1, r7
 8005e1a:	430a      	orrs	r2, r1
 8005e1c:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005e1e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005e20:	6982      	ldr	r2, [r0, #24]
 8005e22:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005e24:	d803      	bhi.n	8005e2e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8005e26:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005e28:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005e2c:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005e2e:	2301      	movs	r3, #1
 8005e30:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005e34:	2300      	movs	r3, #0
 8005e36:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005e3a:	4618      	mov	r0, r3

  return HAL_OK;
}
 8005e3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005e3e:	69d9      	ldr	r1, [r3, #28]
 8005e40:	4039      	ands	r1, r7
 8005e42:	430a      	orrs	r2, r1
 8005e44:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005e46:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005e48:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005e4a:	6992      	ldr	r2, [r2, #24]
 8005e4c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8005e4e:	bf9c      	itt	ls
 8005e50:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8005e54:	621d      	strls	r5, [r3, #32]
 8005e56:	e7ea      	b.n	8005e2e <HAL_DMA2D_ConfigLayer+0x5a>
 8005e58:	00fcfff0 	.word	0x00fcfff0

08005e5c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005e5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005e60:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006024 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005e64:	4a6d      	ldr	r2, [pc, #436]	; (800601c <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005e66:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005e68:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8005e6a:	2401      	movs	r4, #1
 8005e6c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8005e6e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8005e72:	43ac      	bics	r4, r5
 8005e74:	f040 80b9 	bne.w	8005fea <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8005e78:	684d      	ldr	r5, [r1, #4]
 8005e7a:	f005 0403 	and.w	r4, r5, #3
 8005e7e:	ea4f 0843 	mov.w	r8, r3, lsl #1
 8005e82:	2603      	movs	r6, #3
 8005e84:	1e67      	subs	r7, r4, #1
 8005e86:	fa06 f608 	lsl.w	r6, r6, r8
 8005e8a:	2f01      	cmp	r7, #1
 8005e8c:	ea6f 0606 	mvn.w	r6, r6
 8005e90:	d834      	bhi.n	8005efc <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8005e92:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005e94:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8005e98:	68cf      	ldr	r7, [r1, #12]
 8005e9a:	fa07 f708 	lsl.w	r7, r7, r8
 8005e9e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8005ea2:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8005ea4:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005ea6:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005eaa:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8005eae:	409f      	lsls	r7, r3
 8005eb0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8005eb4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8005eb6:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005eb8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005ebc:	688f      	ldr	r7, [r1, #8]
 8005ebe:	fa07 f708 	lsl.w	r7, r7, r8
 8005ec2:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005ec6:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8005ec8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005eca:	d119      	bne.n	8005f00 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8005ecc:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005ed0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005ed4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005ed8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005edc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005ee0:	f04f 0e0f 	mov.w	lr, #15
 8005ee4:	fa0e fe0b 	lsl.w	lr, lr, fp
 8005ee8:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005eec:	690f      	ldr	r7, [r1, #16]
 8005eee:	fa07 f70b 	lsl.w	r7, r7, fp
 8005ef2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8005ef6:	f8ca 7020 	str.w	r7, [sl, #32]
 8005efa:	e001      	b.n	8005f00 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005efc:	2c03      	cmp	r4, #3
 8005efe:	d1da      	bne.n	8005eb6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8005f00:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005f02:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005f06:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005f08:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005f0a:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8005f0e:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8005f10:	d06b      	beq.n	8005fea <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005f12:	f04f 0a00 	mov.w	sl, #0
 8005f16:	f8cd a004 	str.w	sl, [sp, #4]
 8005f1a:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005f1e:	4c40      	ldr	r4, [pc, #256]	; (8006020 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005f20:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8005f24:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8005f28:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8005f2c:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8005f30:	9601      	str	r6, [sp, #4]
 8005f32:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005f34:	f023 0603 	bic.w	r6, r3, #3
 8005f38:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8005f3c:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005f40:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005f44:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005f48:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005f4c:	270f      	movs	r7, #15
 8005f4e:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005f52:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005f54:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005f58:	d04e      	beq.n	8005ff8 <HAL_GPIO_Init+0x19c>
 8005f5a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f5e:	42a0      	cmp	r0, r4
 8005f60:	d04c      	beq.n	8005ffc <HAL_GPIO_Init+0x1a0>
 8005f62:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f66:	42a0      	cmp	r0, r4
 8005f68:	d04a      	beq.n	8006000 <HAL_GPIO_Init+0x1a4>
 8005f6a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f6e:	42a0      	cmp	r0, r4
 8005f70:	d048      	beq.n	8006004 <HAL_GPIO_Init+0x1a8>
 8005f72:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f76:	42a0      	cmp	r0, r4
 8005f78:	d046      	beq.n	8006008 <HAL_GPIO_Init+0x1ac>
 8005f7a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f7e:	42a0      	cmp	r0, r4
 8005f80:	d044      	beq.n	800600c <HAL_GPIO_Init+0x1b0>
 8005f82:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f86:	42a0      	cmp	r0, r4
 8005f88:	d042      	beq.n	8006010 <HAL_GPIO_Init+0x1b4>
 8005f8a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f8e:	42a0      	cmp	r0, r4
 8005f90:	d040      	beq.n	8006014 <HAL_GPIO_Init+0x1b8>
 8005f92:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f96:	42a0      	cmp	r0, r4
 8005f98:	d03e      	beq.n	8006018 <HAL_GPIO_Init+0x1bc>
 8005f9a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8005f9e:	42a0      	cmp	r0, r4
 8005fa0:	bf0c      	ite	eq
 8005fa2:	2409      	moveq	r4, #9
 8005fa4:	240a      	movne	r4, #10
 8005fa6:	fa04 f40e 	lsl.w	r4, r4, lr
 8005faa:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005fac:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 8005fae:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8005fb0:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005fb4:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8005fb6:	bf54      	ite	pl
 8005fb8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005fba:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8005fbe:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 8005fc0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005fc2:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8005fc4:	bf54      	ite	pl
 8005fc6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005fc8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8005fcc:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005fce:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8005fd0:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8005fd2:	bf54      	ite	pl
 8005fd4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005fd6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8005fda:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8005fdc:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005fde:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8005fe0:	bf54      	ite	pl
 8005fe2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8005fe4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8005fe8:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8005fea:	3301      	adds	r3, #1
 8005fec:	2b10      	cmp	r3, #16
 8005fee:	f47f af3b 	bne.w	8005e68 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8005ff2:	b003      	add	sp, #12
 8005ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005ff8:	4654      	mov	r4, sl
 8005ffa:	e7d4      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8005ffc:	2401      	movs	r4, #1
 8005ffe:	e7d2      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006000:	2402      	movs	r4, #2
 8006002:	e7d0      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006004:	2403      	movs	r4, #3
 8006006:	e7ce      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006008:	2404      	movs	r4, #4
 800600a:	e7cc      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 800600c:	2405      	movs	r4, #5
 800600e:	e7ca      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006010:	2406      	movs	r4, #6
 8006012:	e7c8      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006014:	2407      	movs	r4, #7
 8006016:	e7c6      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 8006018:	2408      	movs	r4, #8
 800601a:	e7c4      	b.n	8005fa6 <HAL_GPIO_Init+0x14a>
 800601c:	40013c00 	.word	0x40013c00
 8006020:	40020000 	.word	0x40020000
 8006024:	40023800 	.word	0x40023800

08006028 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8006028:	6903      	ldr	r3, [r0, #16]
 800602a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800602c:	bf14      	ite	ne
 800602e:	2001      	movne	r0, #1
 8006030:	2000      	moveq	r0, #0
 8006032:	4770      	bx	lr

08006034 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006034:	b10a      	cbz	r2, 800603a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006036:	6181      	str	r1, [r0, #24]
  }
}
 8006038:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800603a:	0409      	lsls	r1, r1, #16
 800603c:	e7fb      	b.n	8006036 <HAL_GPIO_WritePin+0x2>

0800603e <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800603e:	6801      	ldr	r1, [r0, #0]
 8006040:	694b      	ldr	r3, [r1, #20]
 8006042:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006046:	f04f 0200 	mov.w	r2, #0
 800604a:	d010      	beq.n	800606e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800604c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006050:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006052:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006054:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006056:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800605a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800605e:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006060:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006064:	f043 0304 	orr.w	r3, r3, #4
 8006068:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800606a:	2001      	movs	r0, #1
 800606c:	4770      	bx	lr
  }
  return HAL_OK;
 800606e:	4618      	mov	r0, r3
}
 8006070:	4770      	bx	lr

08006072 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006076:	4604      	mov	r4, r0
 8006078:	460f      	mov	r7, r1
 800607a:	4616      	mov	r6, r2
 800607c:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800607e:	6825      	ldr	r5, [r4, #0]
 8006080:	6968      	ldr	r0, [r5, #20]
 8006082:	ea27 0000 	bic.w	r0, r7, r0
 8006086:	b280      	uxth	r0, r0
 8006088:	b1b8      	cbz	r0, 80060ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800608a:	696b      	ldr	r3, [r5, #20]
 800608c:	055a      	lsls	r2, r3, #21
 800608e:	d516      	bpl.n	80060be <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006090:	682b      	ldr	r3, [r5, #0]
 8006092:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006096:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006098:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800609c:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800609e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80060a0:	2300      	movs	r3, #0
 80060a2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80060a4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80060a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80060ac:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80060ae:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80060b2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80060b4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80060b8:	2001      	movs	r0, #1
}
 80060ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80060be:	1c73      	adds	r3, r6, #1
 80060c0:	d0de      	beq.n	8006080 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80060c2:	f7ff fb1b 	bl	80056fc <HAL_GetTick>
 80060c6:	eba0 0008 	sub.w	r0, r0, r8
 80060ca:	42b0      	cmp	r0, r6
 80060cc:	d801      	bhi.n	80060d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80060ce:	2e00      	cmp	r6, #0
 80060d0:	d1d5      	bne.n	800607e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80060d2:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80060d4:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80060d6:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80060d8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80060dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80060e0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80060e2:	f042 0220 	orr.w	r2, r2, #32
 80060e6:	e7e4      	b.n	80060b2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080060e8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80060e8:	b570      	push	{r4, r5, r6, lr}
 80060ea:	4604      	mov	r4, r0
 80060ec:	460d      	mov	r5, r1
 80060ee:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80060f0:	6823      	ldr	r3, [r4, #0]
 80060f2:	695b      	ldr	r3, [r3, #20]
 80060f4:	075b      	lsls	r3, r3, #29
 80060f6:	d501      	bpl.n	80060fc <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80060f8:	2000      	movs	r0, #0
}
 80060fa:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80060fc:	4620      	mov	r0, r4
 80060fe:	f7ff ff9e 	bl	800603e <I2C_IsAcknowledgeFailed>
 8006102:	b9a8      	cbnz	r0, 8006130 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006104:	1c6a      	adds	r2, r5, #1
 8006106:	d0f3      	beq.n	80060f0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006108:	f7ff faf8 	bl	80056fc <HAL_GetTick>
 800610c:	1b80      	subs	r0, r0, r6
 800610e:	42a8      	cmp	r0, r5
 8006110:	d801      	bhi.n	8006116 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006112:	2d00      	cmp	r5, #0
 8006114:	d1ec      	bne.n	80060f0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006116:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006118:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800611a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800611c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006120:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006124:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006126:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800612a:	f042 0220 	orr.w	r2, r2, #32
 800612e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006130:	2001      	movs	r0, #1
 8006132:	e7e2      	b.n	80060fa <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006134 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006134:	b570      	push	{r4, r5, r6, lr}
 8006136:	4604      	mov	r4, r0
 8006138:	460d      	mov	r5, r1
 800613a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800613c:	6821      	ldr	r1, [r4, #0]
 800613e:	694b      	ldr	r3, [r1, #20]
 8006140:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006144:	d001      	beq.n	800614a <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006146:	2000      	movs	r0, #0
 8006148:	e010      	b.n	800616c <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800614a:	694a      	ldr	r2, [r1, #20]
 800614c:	06d2      	lsls	r2, r2, #27
 800614e:	d50e      	bpl.n	800616e <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006150:	f06f 0210 	mvn.w	r2, #16
 8006154:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006156:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006158:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800615a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800615e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006162:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006164:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006166:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800616a:	2001      	movs	r0, #1
}
 800616c:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800616e:	f7ff fac5 	bl	80056fc <HAL_GetTick>
 8006172:	1b80      	subs	r0, r0, r6
 8006174:	42a8      	cmp	r0, r5
 8006176:	d801      	bhi.n	800617c <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006178:	2d00      	cmp	r5, #0
 800617a:	d1df      	bne.n	800613c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800617c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800617e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006180:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006182:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006186:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800618a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800618c:	f042 0220 	orr.w	r2, r2, #32
 8006190:	e7e8      	b.n	8006164 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006192 <I2C_WaitOnFlagUntilTimeout>:
{
 8006192:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006196:	4606      	mov	r6, r0
 8006198:	460f      	mov	r7, r1
 800619a:	4691      	mov	r9, r2
 800619c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800619e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80061a2:	6833      	ldr	r3, [r6, #0]
 80061a4:	f1ba 0f01 	cmp.w	sl, #1
 80061a8:	bf0c      	ite	eq
 80061aa:	695c      	ldreq	r4, [r3, #20]
 80061ac:	699c      	ldrne	r4, [r3, #24]
 80061ae:	ea27 0404 	bic.w	r4, r7, r4
 80061b2:	b2a4      	uxth	r4, r4
 80061b4:	fab4 f484 	clz	r4, r4
 80061b8:	0964      	lsrs	r4, r4, #5
 80061ba:	45a1      	cmp	r9, r4
 80061bc:	d001      	beq.n	80061c2 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80061be:	2000      	movs	r0, #0
 80061c0:	e017      	b.n	80061f2 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80061c2:	1c6a      	adds	r2, r5, #1
 80061c4:	d0ee      	beq.n	80061a4 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80061c6:	f7ff fa99 	bl	80056fc <HAL_GetTick>
 80061ca:	9b08      	ldr	r3, [sp, #32]
 80061cc:	1ac0      	subs	r0, r0, r3
 80061ce:	42a8      	cmp	r0, r5
 80061d0:	d801      	bhi.n	80061d6 <I2C_WaitOnFlagUntilTimeout+0x44>
 80061d2:	2d00      	cmp	r5, #0
 80061d4:	d1e5      	bne.n	80061a2 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80061d6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80061d8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80061da:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80061dc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80061e0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80061e4:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80061e6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80061ea:	f042 0220 	orr.w	r2, r2, #32
 80061ee:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80061f0:	2001      	movs	r0, #1
}
 80061f2:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080061f6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80061f6:	b570      	push	{r4, r5, r6, lr}
 80061f8:	4604      	mov	r4, r0
 80061fa:	460d      	mov	r5, r1
 80061fc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80061fe:	6823      	ldr	r3, [r4, #0]
 8006200:	695b      	ldr	r3, [r3, #20]
 8006202:	061b      	lsls	r3, r3, #24
 8006204:	d501      	bpl.n	800620a <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006206:	2000      	movs	r0, #0
}
 8006208:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800620a:	4620      	mov	r0, r4
 800620c:	f7ff ff17 	bl	800603e <I2C_IsAcknowledgeFailed>
 8006210:	b9a8      	cbnz	r0, 800623e <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006212:	1c6a      	adds	r2, r5, #1
 8006214:	d0f3      	beq.n	80061fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006216:	f7ff fa71 	bl	80056fc <HAL_GetTick>
 800621a:	1b80      	subs	r0, r0, r6
 800621c:	42a8      	cmp	r0, r5
 800621e:	d801      	bhi.n	8006224 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006220:	2d00      	cmp	r5, #0
 8006222:	d1ec      	bne.n	80061fe <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006224:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006226:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006228:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800622a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800622e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006232:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006234:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006238:	f042 0220 	orr.w	r2, r2, #32
 800623c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800623e:	2001      	movs	r0, #1
 8006240:	e7e2      	b.n	8006208 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006244 <I2C_RequestMemoryWrite>:
{
 8006244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006248:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800624a:	6802      	ldr	r2, [r0, #0]
{
 800624c:	b085      	sub	sp, #20
 800624e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006252:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006254:	6813      	ldr	r3, [r2, #0]
 8006256:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800625a:	6013      	str	r3, [r2, #0]
{
 800625c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800625e:	463b      	mov	r3, r7
 8006260:	f8cd 8000 	str.w	r8, [sp]
 8006264:	2200      	movs	r2, #0
 8006266:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800626a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800626c:	f7ff ff91 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 8006270:	6823      	ldr	r3, [r4, #0]
 8006272:	b138      	cbz	r0, 8006284 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	05db      	lsls	r3, r3, #23
 8006278:	d502      	bpl.n	8006280 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800627a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800627e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006280:	2003      	movs	r0, #3
 8006282:	e00a      	b.n	800629a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006284:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006288:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800628a:	4919      	ldr	r1, [pc, #100]	; (80062f0 <I2C_RequestMemoryWrite+0xac>)
 800628c:	4643      	mov	r3, r8
 800628e:	463a      	mov	r2, r7
 8006290:	4620      	mov	r0, r4
 8006292:	f7ff feee 	bl	8006072 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006296:	b118      	cbz	r0, 80062a0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006298:	2001      	movs	r0, #1
}
 800629a:	b005      	add	sp, #20
 800629c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80062a0:	6823      	ldr	r3, [r4, #0]
 80062a2:	9003      	str	r0, [sp, #12]
 80062a4:	695a      	ldr	r2, [r3, #20]
 80062a6:	9203      	str	r2, [sp, #12]
 80062a8:	699b      	ldr	r3, [r3, #24]
 80062aa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062ac:	4642      	mov	r2, r8
 80062ae:	4639      	mov	r1, r7
 80062b0:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80062b2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062b4:	f7ff ff9f 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80062b8:	b140      	cbz	r0, 80062cc <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80062ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80062bc:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80062be:	bf01      	itttt	eq
 80062c0:	6822      	ldreq	r2, [r4, #0]
 80062c2:	6813      	ldreq	r3, [r2, #0]
 80062c4:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80062c8:	6013      	streq	r3, [r2, #0]
 80062ca:	e7e5      	b.n	8006298 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80062cc:	f1b9 0f01 	cmp.w	r9, #1
 80062d0:	6823      	ldr	r3, [r4, #0]
 80062d2:	d102      	bne.n	80062da <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80062d4:	b2ed      	uxtb	r5, r5
 80062d6:	611d      	str	r5, [r3, #16]
 80062d8:	e7df      	b.n	800629a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80062da:	0a2a      	lsrs	r2, r5, #8
 80062dc:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80062de:	4639      	mov	r1, r7
 80062e0:	4642      	mov	r2, r8
 80062e2:	4620      	mov	r0, r4
 80062e4:	f7ff ff87 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80062e8:	2800      	cmp	r0, #0
 80062ea:	d1e6      	bne.n	80062ba <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80062ec:	6823      	ldr	r3, [r4, #0]
 80062ee:	e7f1      	b.n	80062d4 <I2C_RequestMemoryWrite+0x90>
 80062f0:	00010002 	.word	0x00010002

080062f4 <I2C_RequestMemoryRead>:
{
 80062f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80062f8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80062fa:	6803      	ldr	r3, [r0, #0]
{
 80062fc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80062fe:	681a      	ldr	r2, [r3, #0]
 8006300:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006304:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006306:	681a      	ldr	r2, [r3, #0]
{
 8006308:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800630c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006310:	601a      	str	r2, [r3, #0]
{
 8006312:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006314:	463b      	mov	r3, r7
 8006316:	f8cd 8000 	str.w	r8, [sp]
 800631a:	2200      	movs	r2, #0
 800631c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006320:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006322:	f7ff ff36 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 8006326:	6823      	ldr	r3, [r4, #0]
 8006328:	b148      	cbz	r0, 800633e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800632a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800632c:	05db      	lsls	r3, r3, #23
 800632e:	d502      	bpl.n	8006336 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006330:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006334:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006336:	2003      	movs	r0, #3
}
 8006338:	b004      	add	sp, #16
 800633a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800633e:	fa5f f986 	uxtb.w	r9, r6
 8006342:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006346:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006348:	492a      	ldr	r1, [pc, #168]	; (80063f4 <I2C_RequestMemoryRead+0x100>)
 800634a:	4643      	mov	r3, r8
 800634c:	463a      	mov	r2, r7
 800634e:	4620      	mov	r0, r4
 8006350:	f7ff fe8f 	bl	8006072 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006354:	b108      	cbz	r0, 800635a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006356:	2001      	movs	r0, #1
 8006358:	e7ee      	b.n	8006338 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800635a:	6823      	ldr	r3, [r4, #0]
 800635c:	9003      	str	r0, [sp, #12]
 800635e:	695a      	ldr	r2, [r3, #20]
 8006360:	9203      	str	r2, [sp, #12]
 8006362:	699b      	ldr	r3, [r3, #24]
 8006364:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006366:	4642      	mov	r2, r8
 8006368:	4639      	mov	r1, r7
 800636a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800636c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800636e:	f7ff ff42 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006372:	b140      	cbz	r0, 8006386 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006374:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006376:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006378:	bf01      	itttt	eq
 800637a:	6822      	ldreq	r2, [r4, #0]
 800637c:	6813      	ldreq	r3, [r2, #0]
 800637e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006382:	6013      	streq	r3, [r2, #0]
 8006384:	e7e7      	b.n	8006356 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006386:	f1ba 0f01 	cmp.w	sl, #1
 800638a:	6823      	ldr	r3, [r4, #0]
 800638c:	d11a      	bne.n	80063c4 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800638e:	b2ed      	uxtb	r5, r5
 8006390:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006392:	4642      	mov	r2, r8
 8006394:	4639      	mov	r1, r7
 8006396:	4620      	mov	r0, r4
 8006398:	f7ff ff2d 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 800639c:	2800      	cmp	r0, #0
 800639e:	d1e9      	bne.n	8006374 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80063a0:	6822      	ldr	r2, [r4, #0]
 80063a2:	6813      	ldr	r3, [r2, #0]
 80063a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80063a8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80063aa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80063ae:	4602      	mov	r2, r0
 80063b0:	f8cd 8000 	str.w	r8, [sp]
 80063b4:	463b      	mov	r3, r7
 80063b6:	4620      	mov	r0, r4
 80063b8:	f7ff feeb 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 80063bc:	6822      	ldr	r2, [r4, #0]
 80063be:	b160      	cbz	r0, 80063da <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80063c0:	6813      	ldr	r3, [r2, #0]
 80063c2:	e7b3      	b.n	800632c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80063c4:	0a2a      	lsrs	r2, r5, #8
 80063c6:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80063c8:	4639      	mov	r1, r7
 80063ca:	4642      	mov	r2, r8
 80063cc:	4620      	mov	r0, r4
 80063ce:	f7ff ff12 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80063d2:	2800      	cmp	r0, #0
 80063d4:	d1ce      	bne.n	8006374 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80063d6:	6823      	ldr	r3, [r4, #0]
 80063d8:	e7d9      	b.n	800638e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80063da:	f049 0301 	orr.w	r3, r9, #1
 80063de:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80063e0:	4904      	ldr	r1, [pc, #16]	; (80063f4 <I2C_RequestMemoryRead+0x100>)
 80063e2:	4643      	mov	r3, r8
 80063e4:	463a      	mov	r2, r7
 80063e6:	4620      	mov	r0, r4
 80063e8:	f7ff fe43 	bl	8006072 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80063ec:	3800      	subs	r0, #0
 80063ee:	bf18      	it	ne
 80063f0:	2001      	movne	r0, #1
 80063f2:	e7a1      	b.n	8006338 <I2C_RequestMemoryRead+0x44>
 80063f4:	00010002 	.word	0x00010002

080063f8 <HAL_I2C_Init>:
{
 80063f8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80063fa:	4604      	mov	r4, r0
 80063fc:	b908      	cbnz	r0, 8006402 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80063fe:	2001      	movs	r0, #1
}
 8006400:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006402:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006406:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800640a:	b91b      	cbnz	r3, 8006414 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800640c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006410:	f7fb fa54 	bl	80018bc <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006414:	2324      	movs	r3, #36	; 0x24
 8006416:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800641a:	6823      	ldr	r3, [r4, #0]
 800641c:	681a      	ldr	r2, [r3, #0]
 800641e:	f022 0201 	bic.w	r2, r2, #1
 8006422:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006424:	681a      	ldr	r2, [r3, #0]
 8006426:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800642a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800642c:	681a      	ldr	r2, [r3, #0]
 800642e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006432:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006434:	f000 fe70 	bl	8007118 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006438:	4a3f      	ldr	r2, [pc, #252]	; (8006538 <HAL_I2C_Init+0x140>)
 800643a:	6863      	ldr	r3, [r4, #4]
 800643c:	4293      	cmp	r3, r2
 800643e:	bf94      	ite	ls
 8006440:	4a3e      	ldrls	r2, [pc, #248]	; (800653c <HAL_I2C_Init+0x144>)
 8006442:	4a3f      	ldrhi	r2, [pc, #252]	; (8006540 <HAL_I2C_Init+0x148>)
 8006444:	4290      	cmp	r0, r2
 8006446:	bf8c      	ite	hi
 8006448:	2200      	movhi	r2, #0
 800644a:	2201      	movls	r2, #1
 800644c:	2a00      	cmp	r2, #0
 800644e:	d1d6      	bne.n	80063fe <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006450:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8006452:	4e3c      	ldr	r6, [pc, #240]	; (8006544 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006454:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006456:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800645a:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800645e:	4332      	orrs	r2, r6
 8006460:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006462:	4a35      	ldr	r2, [pc, #212]	; (8006538 <HAL_I2C_Init+0x140>)
 8006464:	6a0d      	ldr	r5, [r1, #32]
 8006466:	4293      	cmp	r3, r2
 8006468:	bf84      	itt	hi
 800646a:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 800646e:	4372      	mulhi	r2, r6
 8006470:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8006474:	bf91      	iteee	ls
 8006476:	1c72      	addls	r2, r6, #1
 8006478:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800647c:	fbb2 f2f6 	udivhi	r2, r2, r6
 8006480:	3201      	addhi	r2, #1
 8006482:	432a      	orrs	r2, r5
 8006484:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006486:	69cd      	ldr	r5, [r1, #28]
 8006488:	1e42      	subs	r2, r0, #1
 800648a:	482b      	ldr	r0, [pc, #172]	; (8006538 <HAL_I2C_Init+0x140>)
 800648c:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8006490:	4283      	cmp	r3, r0
 8006492:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006496:	d832      	bhi.n	80064fe <HAL_I2C_Init+0x106>
 8006498:	005b      	lsls	r3, r3, #1
 800649a:	fbb2 f3f3 	udiv	r3, r2, r3
 800649e:	f640 72fc 	movw	r2, #4092	; 0xffc
 80064a2:	3301      	adds	r3, #1
 80064a4:	4213      	tst	r3, r2
 80064a6:	d042      	beq.n	800652e <HAL_I2C_Init+0x136>
 80064a8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80064ac:	432b      	orrs	r3, r5
 80064ae:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80064b0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80064b4:	680a      	ldr	r2, [r1, #0]
 80064b6:	4303      	orrs	r3, r0
 80064b8:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 80064bc:	4313      	orrs	r3, r2
 80064be:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80064c0:	688a      	ldr	r2, [r1, #8]
 80064c2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80064c6:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 80064ca:	4303      	orrs	r3, r0
 80064cc:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80064d0:	4313      	orrs	r3, r2
 80064d2:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80064d4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80064d8:	68ca      	ldr	r2, [r1, #12]
 80064da:	4303      	orrs	r3, r0
 80064dc:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80064e0:	4313      	orrs	r3, r2
 80064e2:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 80064e4:	680b      	ldr	r3, [r1, #0]
 80064e6:	f043 0301 	orr.w	r3, r3, #1
 80064ea:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80064ec:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80064ee:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80064f0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80064f2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80064f6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80064f8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80064fc:	e780      	b.n	8006400 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80064fe:	68a0      	ldr	r0, [r4, #8]
 8006500:	b950      	cbnz	r0, 8006518 <HAL_I2C_Init+0x120>
 8006502:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8006506:	fbb2 f3f3 	udiv	r3, r2, r3
 800650a:	3301      	adds	r3, #1
 800650c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006510:	b17b      	cbz	r3, 8006532 <HAL_I2C_Init+0x13a>
 8006512:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006516:	e7c9      	b.n	80064ac <HAL_I2C_Init+0xb4>
 8006518:	2019      	movs	r0, #25
 800651a:	4343      	muls	r3, r0
 800651c:	fbb2 f3f3 	udiv	r3, r2, r3
 8006520:	3301      	adds	r3, #1
 8006522:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006526:	b123      	cbz	r3, 8006532 <HAL_I2C_Init+0x13a>
 8006528:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800652c:	e7be      	b.n	80064ac <HAL_I2C_Init+0xb4>
 800652e:	2304      	movs	r3, #4
 8006530:	e7bc      	b.n	80064ac <HAL_I2C_Init+0xb4>
 8006532:	2301      	movs	r3, #1
 8006534:	e7ba      	b.n	80064ac <HAL_I2C_Init+0xb4>
 8006536:	bf00      	nop
 8006538:	000186a0 	.word	0x000186a0
 800653c:	001e847f 	.word	0x001e847f
 8006540:	003d08ff 	.word	0x003d08ff
 8006544:	000f4240 	.word	0x000f4240

08006548 <HAL_I2C_Mem_Write>:
{
 8006548:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800654c:	4604      	mov	r4, r0
 800654e:	4699      	mov	r9, r3
 8006550:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006552:	460f      	mov	r7, r1
 8006554:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006556:	f7ff f8d1 	bl	80056fc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800655a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800655e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006560:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006562:	d003      	beq.n	800656c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006564:	2002      	movs	r0, #2
}
 8006566:	b003      	add	sp, #12
 8006568:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800656c:	9000      	str	r0, [sp, #0]
 800656e:	493c      	ldr	r1, [pc, #240]	; (8006660 <HAL_I2C_Mem_Write+0x118>)
 8006570:	2319      	movs	r3, #25
 8006572:	2201      	movs	r2, #1
 8006574:	4620      	mov	r0, r4
 8006576:	f7ff fe0c 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 800657a:	2800      	cmp	r0, #0
 800657c:	d1f2      	bne.n	8006564 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800657e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006582:	2b01      	cmp	r3, #1
 8006584:	d0ee      	beq.n	8006564 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006586:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006588:	2301      	movs	r3, #1
 800658a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800658e:	6803      	ldr	r3, [r0, #0]
 8006590:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006592:	bf5e      	ittt	pl
 8006594:	6803      	ldrpl	r3, [r0, #0]
 8006596:	f043 0301 	orrpl.w	r3, r3, #1
 800659a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800659c:	6803      	ldr	r3, [r0, #0]
 800659e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80065a2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80065a4:	2321      	movs	r3, #33	; 0x21
 80065a6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80065aa:	2340      	movs	r3, #64	; 0x40
 80065ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80065b0:	2300      	movs	r3, #0
 80065b2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80065b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80065b6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80065b8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80065bc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80065be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80065c0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80065c2:	4b28      	ldr	r3, [pc, #160]	; (8006664 <HAL_I2C_Mem_Write+0x11c>)
 80065c4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80065c6:	e9cd 6500 	strd	r6, r5, [sp]
 80065ca:	464b      	mov	r3, r9
 80065cc:	4642      	mov	r2, r8
 80065ce:	4639      	mov	r1, r7
 80065d0:	4620      	mov	r0, r4
 80065d2:	f7ff fe37 	bl	8006244 <I2C_RequestMemoryWrite>
 80065d6:	2800      	cmp	r0, #0
 80065d8:	d02a      	beq.n	8006630 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80065da:	2001      	movs	r0, #1
 80065dc:	e7c3      	b.n	8006566 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80065de:	f7ff fe0a 	bl	80061f6 <I2C_WaitOnTXEFlagUntilTimeout>
 80065e2:	b140      	cbz	r0, 80065f6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80065e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80065e6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80065e8:	bf01      	itttt	eq
 80065ea:	6822      	ldreq	r2, [r4, #0]
 80065ec:	6813      	ldreq	r3, [r2, #0]
 80065ee:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80065f2:	6013      	streq	r3, [r2, #0]
 80065f4:	e7f1      	b.n	80065da <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80065f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80065f8:	6827      	ldr	r7, [r4, #0]
 80065fa:	461a      	mov	r2, r3
 80065fc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006600:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006602:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006604:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006606:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006608:	3a01      	subs	r2, #1
 800660a:	b292      	uxth	r2, r2
 800660c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800660e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006610:	1e48      	subs	r0, r1, #1
 8006612:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006614:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006616:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006618:	d50a      	bpl.n	8006630 <HAL_I2C_Mem_Write+0xe8>
 800661a:	b148      	cbz	r0, 8006630 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800661c:	785a      	ldrb	r2, [r3, #1]
 800661e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006620:	3302      	adds	r3, #2
 8006622:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006624:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006626:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006628:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800662a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800662c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800662e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006630:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006632:	462a      	mov	r2, r5
 8006634:	4631      	mov	r1, r6
 8006636:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006638:	2b00      	cmp	r3, #0
 800663a:	d1d0      	bne.n	80065de <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800663c:	f7ff fd54 	bl	80060e8 <I2C_WaitOnBTFFlagUntilTimeout>
 8006640:	2800      	cmp	r0, #0
 8006642:	d1cf      	bne.n	80065e4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006644:	6822      	ldr	r2, [r4, #0]
 8006646:	6813      	ldr	r3, [r2, #0]
 8006648:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800664c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800664e:	2320      	movs	r3, #32
 8006650:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006654:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006658:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800665c:	e783      	b.n	8006566 <HAL_I2C_Mem_Write+0x1e>
 800665e:	bf00      	nop
 8006660:	00100002 	.word	0x00100002
 8006664:	ffff0000 	.word	0xffff0000

08006668 <HAL_I2C_Mem_Read>:
{
 8006668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800666c:	4604      	mov	r4, r0
 800666e:	b087      	sub	sp, #28
 8006670:	4699      	mov	r9, r3
 8006672:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006674:	460d      	mov	r5, r1
 8006676:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006678:	f7ff f840 	bl	80056fc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800667c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006680:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006682:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006684:	d004      	beq.n	8006690 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006686:	2502      	movs	r5, #2
}
 8006688:	4628      	mov	r0, r5
 800668a:	b007      	add	sp, #28
 800668c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006690:	9000      	str	r0, [sp, #0]
 8006692:	4976      	ldr	r1, [pc, #472]	; (800686c <HAL_I2C_Mem_Read+0x204>)
 8006694:	2319      	movs	r3, #25
 8006696:	2201      	movs	r2, #1
 8006698:	4620      	mov	r0, r4
 800669a:	f7ff fd7a 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 800669e:	2800      	cmp	r0, #0
 80066a0:	d1f1      	bne.n	8006686 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80066a2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80066a6:	2b01      	cmp	r3, #1
 80066a8:	d0ed      	beq.n	8006686 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80066aa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80066ac:	2301      	movs	r3, #1
 80066ae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80066b2:	6803      	ldr	r3, [r0, #0]
 80066b4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80066b6:	bf5e      	ittt	pl
 80066b8:	6803      	ldrpl	r3, [r0, #0]
 80066ba:	f043 0301 	orrpl.w	r3, r3, #1
 80066be:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80066c0:	6803      	ldr	r3, [r0, #0]
 80066c2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80066c6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80066c8:	2322      	movs	r3, #34	; 0x22
 80066ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80066ce:	2340      	movs	r3, #64	; 0x40
 80066d0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80066d4:	2300      	movs	r3, #0
 80066d6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80066d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80066da:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80066dc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80066e0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80066e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80066e4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80066e6:	4b62      	ldr	r3, [pc, #392]	; (8006870 <HAL_I2C_Mem_Read+0x208>)
 80066e8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80066ea:	4629      	mov	r1, r5
 80066ec:	e9cd 7600 	strd	r7, r6, [sp]
 80066f0:	464b      	mov	r3, r9
 80066f2:	4642      	mov	r2, r8
 80066f4:	4620      	mov	r0, r4
 80066f6:	f7ff fdfd 	bl	80062f4 <I2C_RequestMemoryRead>
 80066fa:	4605      	mov	r5, r0
 80066fc:	b108      	cbz	r0, 8006702 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80066fe:	2501      	movs	r5, #1
 8006700:	e7c2      	b.n	8006688 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006702:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8006704:	6823      	ldr	r3, [r4, #0]
 8006706:	b9b2      	cbnz	r2, 8006736 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006708:	9002      	str	r0, [sp, #8]
 800670a:	695a      	ldr	r2, [r3, #20]
 800670c:	9202      	str	r2, [sp, #8]
 800670e:	699a      	ldr	r2, [r3, #24]
 8006710:	9202      	str	r2, [sp, #8]
 8006712:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006714:	681a      	ldr	r2, [r3, #0]
 8006716:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800671a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800671c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006874 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006720:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006722:	2b00      	cmp	r3, #0
 8006724:	d12c      	bne.n	8006780 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006726:	2220      	movs	r2, #32
 8006728:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800672c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006730:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006734:	e7a8      	b.n	8006688 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006736:	2a01      	cmp	r2, #1
 8006738:	d10a      	bne.n	8006750 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800673a:	681a      	ldr	r2, [r3, #0]
 800673c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006740:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006742:	9003      	str	r0, [sp, #12]
 8006744:	695a      	ldr	r2, [r3, #20]
 8006746:	9203      	str	r2, [sp, #12]
 8006748:	699a      	ldr	r2, [r3, #24]
 800674a:	9203      	str	r2, [sp, #12]
 800674c:	9a03      	ldr	r2, [sp, #12]
 800674e:	e7e1      	b.n	8006714 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006750:	2a02      	cmp	r2, #2
 8006752:	d10e      	bne.n	8006772 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006754:	681a      	ldr	r2, [r3, #0]
 8006756:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800675a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800675c:	681a      	ldr	r2, [r3, #0]
 800675e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006762:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006764:	9004      	str	r0, [sp, #16]
 8006766:	695a      	ldr	r2, [r3, #20]
 8006768:	9204      	str	r2, [sp, #16]
 800676a:	699b      	ldr	r3, [r3, #24]
 800676c:	9304      	str	r3, [sp, #16]
 800676e:	9b04      	ldr	r3, [sp, #16]
 8006770:	e7d4      	b.n	800671c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006772:	9005      	str	r0, [sp, #20]
 8006774:	695a      	ldr	r2, [r3, #20]
 8006776:	9205      	str	r2, [sp, #20]
 8006778:	699b      	ldr	r3, [r3, #24]
 800677a:	9305      	str	r3, [sp, #20]
 800677c:	9b05      	ldr	r3, [sp, #20]
 800677e:	e7cd      	b.n	800671c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006780:	2b03      	cmp	r3, #3
 8006782:	d856      	bhi.n	8006832 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006784:	2b01      	cmp	r3, #1
 8006786:	d115      	bne.n	80067b4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006788:	4632      	mov	r2, r6
 800678a:	4639      	mov	r1, r7
 800678c:	4620      	mov	r0, r4
 800678e:	f7ff fcd1 	bl	8006134 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006792:	2800      	cmp	r0, #0
 8006794:	d1b3      	bne.n	80066fe <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006796:	6823      	ldr	r3, [r4, #0]
 8006798:	691a      	ldr	r2, [r3, #16]
 800679a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800679c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800679e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80067a0:	3301      	adds	r3, #1
 80067a2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80067a4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80067a6:	3b01      	subs	r3, #1
 80067a8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80067aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80067ac:	3b01      	subs	r3, #1
 80067ae:	b29b      	uxth	r3, r3
 80067b0:	8563      	strh	r3, [r4, #42]	; 0x2a
 80067b2:	e7b5      	b.n	8006720 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80067b4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80067b6:	9600      	str	r6, [sp, #0]
 80067b8:	463b      	mov	r3, r7
 80067ba:	f04f 0200 	mov.w	r2, #0
 80067be:	4641      	mov	r1, r8
 80067c0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80067c2:	d119      	bne.n	80067f8 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80067c4:	f7ff fce5 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 80067c8:	2800      	cmp	r0, #0
 80067ca:	d198      	bne.n	80066fe <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80067cc:	6823      	ldr	r3, [r4, #0]
 80067ce:	681a      	ldr	r2, [r3, #0]
 80067d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80067d4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80067d6:	691a      	ldr	r2, [r3, #16]
 80067d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80067da:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80067dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80067de:	1c53      	adds	r3, r2, #1
 80067e0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80067e2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80067e4:	3b01      	subs	r3, #1
 80067e6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80067e8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80067ea:	3b01      	subs	r3, #1
 80067ec:	b29b      	uxth	r3, r3
 80067ee:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80067f0:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80067f2:	691b      	ldr	r3, [r3, #16]
 80067f4:	7053      	strb	r3, [r2, #1]
 80067f6:	e7d2      	b.n	800679e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80067f8:	f7ff fccb 	bl	8006192 <I2C_WaitOnFlagUntilTimeout>
 80067fc:	2800      	cmp	r0, #0
 80067fe:	f47f af7e 	bne.w	80066fe <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006802:	6823      	ldr	r3, [r4, #0]
 8006804:	681a      	ldr	r2, [r3, #0]
 8006806:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800680a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800680c:	691a      	ldr	r2, [r3, #16]
 800680e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006810:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006812:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006814:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006816:	3301      	adds	r3, #1
 8006818:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800681a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800681c:	3b01      	subs	r3, #1
 800681e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006820:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006822:	3b01      	subs	r3, #1
 8006824:	b29b      	uxth	r3, r3
 8006826:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006828:	4602      	mov	r2, r0
 800682a:	463b      	mov	r3, r7
 800682c:	4641      	mov	r1, r8
 800682e:	4620      	mov	r0, r4
 8006830:	e7c8      	b.n	80067c4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006832:	4632      	mov	r2, r6
 8006834:	4639      	mov	r1, r7
 8006836:	4620      	mov	r0, r4
 8006838:	f7ff fc7c 	bl	8006134 <I2C_WaitOnRXNEFlagUntilTimeout>
 800683c:	2800      	cmp	r0, #0
 800683e:	f47f af5e 	bne.w	80066fe <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006842:	6823      	ldr	r3, [r4, #0]
 8006844:	691a      	ldr	r2, [r3, #16]
 8006846:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006848:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800684a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800684c:	1c53      	adds	r3, r2, #1
 800684e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006850:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006852:	3b01      	subs	r3, #1
 8006854:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006856:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006858:	3b01      	subs	r3, #1
 800685a:	b29b      	uxth	r3, r3
 800685c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800685e:	6823      	ldr	r3, [r4, #0]
 8006860:	6959      	ldr	r1, [r3, #20]
 8006862:	0749      	lsls	r1, r1, #29
 8006864:	f57f af5c 	bpl.w	8006720 <HAL_I2C_Mem_Read+0xb8>
 8006868:	e7c3      	b.n	80067f2 <HAL_I2C_Mem_Read+0x18a>
 800686a:	bf00      	nop
 800686c:	00100002 	.word	0x00100002
 8006870:	ffff0000 	.word	0xffff0000
 8006874:	00010004 	.word	0x00010004

08006878 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006878:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800687a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800687e:	2b20      	cmp	r3, #32
 8006880:	b2dc      	uxtb	r4, r3
 8006882:	d116      	bne.n	80068b2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006884:	2324      	movs	r3, #36	; 0x24
 8006886:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800688a:	6803      	ldr	r3, [r0, #0]
 800688c:	681a      	ldr	r2, [r3, #0]
 800688e:	f022 0201 	bic.w	r2, r2, #1
 8006892:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006894:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006896:	f022 0210 	bic.w	r2, r2, #16
 800689a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 800689c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800689e:	4311      	orrs	r1, r2
 80068a0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80068a2:	681a      	ldr	r2, [r3, #0]
 80068a4:	f042 0201 	orr.w	r2, r2, #1
 80068a8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80068aa:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80068ae:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80068b0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80068b2:	2002      	movs	r0, #2
 80068b4:	e7fc      	b.n	80068b0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080068b6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80068b6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80068b8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80068bc:	2b20      	cmp	r3, #32
 80068be:	b2dc      	uxtb	r4, r3
 80068c0:	d116      	bne.n	80068f0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80068c2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80068c4:	2324      	movs	r3, #36	; 0x24
 80068c6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80068ca:	6813      	ldr	r3, [r2, #0]
 80068cc:	f023 0301 	bic.w	r3, r3, #1
 80068d0:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80068d2:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80068d4:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80068d8:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80068da:	4319      	orrs	r1, r3

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80068dc:	b289      	uxth	r1, r1
 80068de:	6251      	str	r1, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80068e0:	6813      	ldr	r3, [r2, #0]
 80068e2:	f043 0301 	orr.w	r3, r3, #1
 80068e6:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80068e8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80068ec:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80068ee:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80068f0:	2002      	movs	r0, #2
 80068f2:	e7fc      	b.n	80068ee <HAL_I2CEx_ConfigDigitalFilter+0x38>

080068f4 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80068f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80068f8:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80068fa:	6804      	ldr	r4, [r0, #0]
 80068fc:	684f      	ldr	r7, [r1, #4]
 80068fe:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006900:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006904:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006908:	3284      	adds	r2, #132	; 0x84
 800690a:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800690c:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006910:	6858      	ldr	r0, [r3, #4]
 8006912:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8006916:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006918:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800691a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800691e:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8006922:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006924:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006926:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800692a:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800692c:	68e0      	ldr	r0, [r4, #12]
 800692e:	68cd      	ldr	r5, [r1, #12]
 8006930:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8006934:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006936:	6898      	ldr	r0, [r3, #8]
 8006938:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800693c:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800693e:	68e6      	ldr	r6, [r4, #12]
 8006940:	6888      	ldr	r0, [r1, #8]
 8006942:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8006946:	3001      	adds	r0, #1
 8006948:	4430      	add	r0, r6
 800694a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800694e:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006950:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006952:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006954:	f020 0007 	bic.w	r0, r0, #7
 8006958:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800695a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800695e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006960:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006962:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006966:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800696a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800696e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006972:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006976:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800697a:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800697e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006980:	6958      	ldr	r0, [r3, #20]
 8006982:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8006986:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006988:	6948      	ldr	r0, [r1, #20]
 800698a:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800698c:	69d8      	ldr	r0, [r3, #28]
 800698e:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 8006992:	f020 0007 	bic.w	r0, r0, #7
 8006996:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006998:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800699c:	4305      	orrs	r5, r0
 800699e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80069a0:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80069a2:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80069a4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80069a8:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80069aa:	b31e      	cbz	r6, 80069f4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80069ac:	2e01      	cmp	r6, #1
 80069ae:	d023      	beq.n	80069f8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80069b0:	1eb0      	subs	r0, r6, #2
 80069b2:	2802      	cmp	r0, #2
 80069b4:	d922      	bls.n	80069fc <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80069b6:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80069b8:	bf0c      	ite	eq
 80069ba:	2002      	moveq	r0, #2
 80069bc:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80069be:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80069c0:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80069c4:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80069c6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80069c8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80069ca:	eba7 070c 	sub.w	r7, r7, ip
 80069ce:	4345      	muls	r5, r0
 80069d0:	4378      	muls	r0, r7
 80069d2:	3003      	adds	r0, #3
 80069d4:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80069d8:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80069da:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80069dc:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80069e0:	f020 0007 	bic.w	r0, r0, #7
 80069e4:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80069e6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80069e8:	58a3      	ldr	r3, [r4, r2]
 80069ea:	f043 0301 	orr.w	r3, r3, #1
 80069ee:	50a3      	str	r3, [r4, r2]
}
 80069f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80069f4:	2004      	movs	r0, #4
 80069f6:	e7e2      	b.n	80069be <LTDC_SetConfig+0xca>
    tmp = 3U;
 80069f8:	2003      	movs	r0, #3
 80069fa:	e7e0      	b.n	80069be <LTDC_SetConfig+0xca>
    tmp = 2U;
 80069fc:	2002      	movs	r0, #2
 80069fe:	e7de      	b.n	80069be <LTDC_SetConfig+0xca>

08006a00 <HAL_LTDC_Init>:
{
 8006a00:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006a02:	4604      	mov	r4, r0
 8006a04:	2800      	cmp	r0, #0
 8006a06:	d063      	beq.n	8006ad0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006a08:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006a0c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a10:	b91b      	cbnz	r3, 8006a1a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006a12:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006a16:	f7fa ffad 	bl	8001974 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006a1a:	2302      	movs	r3, #2
 8006a1c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006a20:	6823      	ldr	r3, [r4, #0]
 8006a22:	699a      	ldr	r2, [r3, #24]
 8006a24:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006a28:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006a2a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006a2e:	4302      	orrs	r2, r0
 8006a30:	68e0      	ldr	r0, [r4, #12]
 8006a32:	6999      	ldr	r1, [r3, #24]
 8006a34:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006a36:	6920      	ldr	r0, [r4, #16]
 8006a38:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006a3a:	430a      	orrs	r2, r1
 8006a3c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006a3e:	689a      	ldr	r2, [r3, #8]
 8006a40:	4924      	ldr	r1, [pc, #144]	; (8006ad4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006a42:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006a44:	400a      	ands	r2, r1
 8006a46:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006a48:	689a      	ldr	r2, [r3, #8]
 8006a4a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006a4e:	69a0      	ldr	r0, [r4, #24]
 8006a50:	4302      	orrs	r2, r0
 8006a52:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006a54:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006a56:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006a58:	400a      	ands	r2, r1
 8006a5a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006a5c:	68da      	ldr	r2, [r3, #12]
 8006a5e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006a62:	6a20      	ldr	r0, [r4, #32]
 8006a64:	4302      	orrs	r2, r0
 8006a66:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006a68:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006a6a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006a6c:	400a      	ands	r2, r1
 8006a6e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006a70:	691a      	ldr	r2, [r3, #16]
 8006a72:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006a76:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006a78:	4302      	orrs	r2, r0
 8006a7a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006a7c:	695a      	ldr	r2, [r3, #20]
 8006a7e:	4011      	ands	r1, r2
 8006a80:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006a82:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006a84:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006a86:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006a8a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006a8c:	430a      	orrs	r2, r1
 8006a8e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006a90:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006a92:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006a96:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006a9a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8006a9e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006aa0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006aa2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006aa6:	430a      	orrs	r2, r1
 8006aa8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006aac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006ab0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006ab2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006ab4:	f042 0206 	orr.w	r2, r2, #6
 8006ab8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006aba:	699a      	ldr	r2, [r3, #24]
 8006abc:	f042 0201 	orr.w	r2, r2, #1
 8006ac0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006ac2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006ac4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006ac6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8006aca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8006ace:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006ad0:	2001      	movs	r0, #1
 8006ad2:	e7fc      	b.n	8006ace <HAL_LTDC_Init+0xce>
 8006ad4:	f000f800 	.word	0xf000f800

08006ad8 <HAL_LTDC_ErrorCallback>:
 8006ad8:	4770      	bx	lr

08006ada <HAL_LTDC_ReloadEventCallback>:
 8006ada:	4770      	bx	lr

08006adc <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006adc:	6803      	ldr	r3, [r0, #0]
{
 8006ade:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006ae0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006ae2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006ae4:	0772      	lsls	r2, r6, #29
{
 8006ae6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006ae8:	d514      	bpl.n	8006b14 <HAL_LTDC_IRQHandler+0x38>
 8006aea:	0769      	lsls	r1, r5, #29
 8006aec:	d512      	bpl.n	8006b14 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006aee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006af0:	f022 0204 	bic.w	r2, r2, #4
 8006af4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8006af6:	2204      	movs	r2, #4
 8006af8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006afa:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8006afe:	f043 0301 	orr.w	r3, r3, #1
 8006b02:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8006b06:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006b08:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006b0c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006b10:	f7ff ffe2 	bl	8006ad8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8006b14:	07b2      	lsls	r2, r6, #30
 8006b16:	d516      	bpl.n	8006b46 <HAL_LTDC_IRQHandler+0x6a>
 8006b18:	07ab      	lsls	r3, r5, #30
 8006b1a:	d514      	bpl.n	8006b46 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006b1c:	6823      	ldr	r3, [r4, #0]
 8006b1e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006b20:	f022 0202 	bic.w	r2, r2, #2
 8006b24:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8006b26:	2202      	movs	r2, #2
 8006b28:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006b2a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8006b2e:	4313      	orrs	r3, r2
 8006b30:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006b34:	2304      	movs	r3, #4
 8006b36:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006b3a:	2300      	movs	r3, #0
 8006b3c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006b40:	4620      	mov	r0, r4
 8006b42:	f7ff ffc9 	bl	8006ad8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8006b46:	07f0      	lsls	r0, r6, #31
 8006b48:	d510      	bpl.n	8006b6c <HAL_LTDC_IRQHandler+0x90>
 8006b4a:	07e9      	lsls	r1, r5, #31
 8006b4c:	d50e      	bpl.n	8006b6c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006b4e:	6823      	ldr	r3, [r4, #0]
 8006b50:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006b52:	f022 0201 	bic.w	r2, r2, #1
 8006b56:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8006b58:	2201      	movs	r2, #1
 8006b5a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8006b5c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8006b5e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006b62:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8006b66:	4620      	mov	r0, r4
 8006b68:	f7fa fac0 	bl	80010ec <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8006b6c:	0732      	lsls	r2, r6, #28
 8006b6e:	d511      	bpl.n	8006b94 <HAL_LTDC_IRQHandler+0xb8>
 8006b70:	072b      	lsls	r3, r5, #28
 8006b72:	d50f      	bpl.n	8006b94 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8006b74:	6823      	ldr	r3, [r4, #0]
 8006b76:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006b78:	f022 0208 	bic.w	r2, r2, #8
 8006b7c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006b7e:	2208      	movs	r2, #8
 8006b80:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8006b82:	2301      	movs	r3, #1
 8006b84:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006b88:	2300      	movs	r3, #0
 8006b8a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006b8e:	4620      	mov	r0, r4
 8006b90:	f7ff ffa3 	bl	8006ada <HAL_LTDC_ReloadEventCallback>
}
 8006b94:	bd70      	pop	{r4, r5, r6, pc}

08006b96 <HAL_LTDC_ConfigLayer>:
{
 8006b96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8006b9a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006b9e:	2b01      	cmp	r3, #1
{
 8006ba0:	4606      	mov	r6, r0
 8006ba2:	460f      	mov	r7, r1
 8006ba4:	4694      	mov	ip, r2
 8006ba6:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8006baa:	d01f      	beq.n	8006bec <HAL_LTDC_ConfigLayer+0x56>
 8006bac:	f04f 0801 	mov.w	r8, #1
 8006bb0:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006bb4:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006bb8:	2434      	movs	r4, #52	; 0x34
 8006bba:	460d      	mov	r5, r1
 8006bbc:	fb04 6402 	mla	r4, r4, r2, r6
 8006bc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006bc2:	3438      	adds	r4, #56	; 0x38
 8006bc4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006bc6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006bc8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006bca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006bcc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006bce:	682b      	ldr	r3, [r5, #0]
 8006bd0:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006bd2:	4630      	mov	r0, r6
 8006bd4:	4662      	mov	r2, ip
 8006bd6:	4639      	mov	r1, r7
 8006bd8:	f7ff fe8c 	bl	80068f4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006bdc:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006bde:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006be0:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006be4:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006be8:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006bec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006bf0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8006bf0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8006bf4:	2b01      	cmp	r3, #1
 8006bf6:	f04f 0302 	mov.w	r3, #2
 8006bfa:	d012      	beq.n	8006c22 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006bfc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006c00:	6803      	ldr	r3, [r0, #0]
 8006c02:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006c04:	f022 0201 	bic.w	r2, r2, #1
 8006c08:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8006c0a:	4a07      	ldr	r2, [pc, #28]	; (8006c28 <HAL_LTDC_ProgramLineEvent+0x38>)
 8006c0c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006c0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006c10:	f042 0201 	orr.w	r2, r2, #1
 8006c14:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8006c16:	2301      	movs	r3, #1
 8006c18:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8006c1c:	2300      	movs	r3, #0
 8006c1e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8006c22:	4618      	mov	r0, r3
}
 8006c24:	4770      	bx	lr
 8006c26:	bf00      	nop
 8006c28:	40016800 	.word	0x40016800

08006c2c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006c2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006c30:	4604      	mov	r4, r0
 8006c32:	b340      	cbz	r0, 8006c86 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006c34:	6803      	ldr	r3, [r0, #0]
 8006c36:	07dd      	lsls	r5, r3, #31
 8006c38:	d410      	bmi.n	8006c5c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006c3a:	6823      	ldr	r3, [r4, #0]
 8006c3c:	0798      	lsls	r0, r3, #30
 8006c3e:	d45e      	bmi.n	8006cfe <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006c40:	6823      	ldr	r3, [r4, #0]
 8006c42:	071a      	lsls	r2, r3, #28
 8006c44:	f100 80a0 	bmi.w	8006d88 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006c48:	6823      	ldr	r3, [r4, #0]
 8006c4a:	075b      	lsls	r3, r3, #29
 8006c4c:	f100 80be 	bmi.w	8006dcc <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006c50:	69a0      	ldr	r0, [r4, #24]
 8006c52:	2800      	cmp	r0, #0
 8006c54:	f040 811f 	bne.w	8006e96 <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006c58:	2000      	movs	r0, #0
 8006c5a:	e02b      	b.n	8006cb4 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006c5c:	4ba6      	ldr	r3, [pc, #664]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006c5e:	689a      	ldr	r2, [r3, #8]
 8006c60:	f002 020c 	and.w	r2, r2, #12
 8006c64:	2a04      	cmp	r2, #4
 8006c66:	d007      	beq.n	8006c78 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006c68:	689a      	ldr	r2, [r3, #8]
 8006c6a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8006c6e:	2a08      	cmp	r2, #8
 8006c70:	d10b      	bne.n	8006c8a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006c72:	685a      	ldr	r2, [r3, #4]
 8006c74:	0251      	lsls	r1, r2, #9
 8006c76:	d508      	bpl.n	8006c8a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006c78:	4b9f      	ldr	r3, [pc, #636]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	039a      	lsls	r2, r3, #14
 8006c7e:	d5dc      	bpl.n	8006c3a <HAL_RCC_OscConfig+0xe>
 8006c80:	6863      	ldr	r3, [r4, #4]
 8006c82:	2b00      	cmp	r3, #0
 8006c84:	d1d9      	bne.n	8006c3a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8006c86:	2001      	movs	r0, #1
 8006c88:	e014      	b.n	8006cb4 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006c8a:	6862      	ldr	r2, [r4, #4]
 8006c8c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006c90:	d113      	bne.n	8006cba <HAL_RCC_OscConfig+0x8e>
 8006c92:	681a      	ldr	r2, [r3, #0]
 8006c94:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006c98:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006c9a:	f7fe fd2f 	bl	80056fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006c9e:	4e96      	ldr	r6, [pc, #600]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8006ca0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006ca2:	6833      	ldr	r3, [r6, #0]
 8006ca4:	039b      	lsls	r3, r3, #14
 8006ca6:	d4c8      	bmi.n	8006c3a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006ca8:	f7fe fd28 	bl	80056fc <HAL_GetTick>
 8006cac:	1b40      	subs	r0, r0, r5
 8006cae:	2864      	cmp	r0, #100	; 0x64
 8006cb0:	d9f7      	bls.n	8006ca2 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006cb2:	2003      	movs	r0, #3
}
 8006cb4:	b002      	add	sp, #8
 8006cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006cba:	4d8f      	ldr	r5, [pc, #572]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006cbc:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006cc0:	682b      	ldr	r3, [r5, #0]
 8006cc2:	d107      	bne.n	8006cd4 <HAL_RCC_OscConfig+0xa8>
 8006cc4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006cc8:	602b      	str	r3, [r5, #0]
 8006cca:	682b      	ldr	r3, [r5, #0]
 8006ccc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006cd0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006cd2:	e7e2      	b.n	8006c9a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006cd4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006cd8:	602b      	str	r3, [r5, #0]
 8006cda:	682b      	ldr	r3, [r5, #0]
 8006cdc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006ce0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006ce2:	2a00      	cmp	r2, #0
 8006ce4:	d1d9      	bne.n	8006c9a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006ce6:	f7fe fd09 	bl	80056fc <HAL_GetTick>
 8006cea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006cec:	682b      	ldr	r3, [r5, #0]
 8006cee:	039f      	lsls	r7, r3, #14
 8006cf0:	d5a3      	bpl.n	8006c3a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006cf2:	f7fe fd03 	bl	80056fc <HAL_GetTick>
 8006cf6:	1b80      	subs	r0, r0, r6
 8006cf8:	2864      	cmp	r0, #100	; 0x64
 8006cfa:	d9f7      	bls.n	8006cec <HAL_RCC_OscConfig+0xc0>
 8006cfc:	e7d9      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006cfe:	4b7e      	ldr	r3, [pc, #504]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006d00:	689a      	ldr	r2, [r3, #8]
 8006d02:	f012 0f0c 	tst.w	r2, #12
 8006d06:	d007      	beq.n	8006d18 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006d08:	689a      	ldr	r2, [r3, #8]
 8006d0a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8006d0e:	2a08      	cmp	r2, #8
 8006d10:	d111      	bne.n	8006d36 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006d12:	685b      	ldr	r3, [r3, #4]
 8006d14:	025e      	lsls	r6, r3, #9
 8006d16:	d40e      	bmi.n	8006d36 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006d18:	4b77      	ldr	r3, [pc, #476]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006d1a:	681a      	ldr	r2, [r3, #0]
 8006d1c:	0795      	lsls	r5, r2, #30
 8006d1e:	d502      	bpl.n	8006d26 <HAL_RCC_OscConfig+0xfa>
 8006d20:	68e2      	ldr	r2, [r4, #12]
 8006d22:	2a01      	cmp	r2, #1
 8006d24:	d1af      	bne.n	8006c86 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006d26:	681a      	ldr	r2, [r3, #0]
 8006d28:	6921      	ldr	r1, [r4, #16]
 8006d2a:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8006d2e:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8006d32:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006d34:	e784      	b.n	8006c40 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006d36:	68e2      	ldr	r2, [r4, #12]
 8006d38:	4b70      	ldr	r3, [pc, #448]	; (8006efc <HAL_RCC_OscConfig+0x2d0>)
 8006d3a:	b1b2      	cbz	r2, 8006d6a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006d3c:	2201      	movs	r2, #1
 8006d3e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006d40:	f7fe fcdc 	bl	80056fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006d44:	4d6c      	ldr	r5, [pc, #432]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8006d46:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006d48:	682b      	ldr	r3, [r5, #0]
 8006d4a:	0798      	lsls	r0, r3, #30
 8006d4c:	d507      	bpl.n	8006d5e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006d4e:	682b      	ldr	r3, [r5, #0]
 8006d50:	6922      	ldr	r2, [r4, #16]
 8006d52:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006d56:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006d5a:	602b      	str	r3, [r5, #0]
 8006d5c:	e770      	b.n	8006c40 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006d5e:	f7fe fccd 	bl	80056fc <HAL_GetTick>
 8006d62:	1b80      	subs	r0, r0, r6
 8006d64:	2802      	cmp	r0, #2
 8006d66:	d9ef      	bls.n	8006d48 <HAL_RCC_OscConfig+0x11c>
 8006d68:	e7a3      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006d6a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006d6c:	f7fe fcc6 	bl	80056fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006d70:	4e61      	ldr	r6, [pc, #388]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8006d72:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006d74:	6833      	ldr	r3, [r6, #0]
 8006d76:	0799      	lsls	r1, r3, #30
 8006d78:	f57f af62 	bpl.w	8006c40 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006d7c:	f7fe fcbe 	bl	80056fc <HAL_GetTick>
 8006d80:	1b40      	subs	r0, r0, r5
 8006d82:	2802      	cmp	r0, #2
 8006d84:	d9f6      	bls.n	8006d74 <HAL_RCC_OscConfig+0x148>
 8006d86:	e794      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006d88:	6962      	ldr	r2, [r4, #20]
 8006d8a:	4b5d      	ldr	r3, [pc, #372]	; (8006f00 <HAL_RCC_OscConfig+0x2d4>)
 8006d8c:	b17a      	cbz	r2, 8006dae <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006d8e:	2201      	movs	r2, #1
 8006d90:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006d92:	f7fe fcb3 	bl	80056fc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006d96:	4e58      	ldr	r6, [pc, #352]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8006d98:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006d9a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006d9c:	079f      	lsls	r7, r3, #30
 8006d9e:	f53f af53 	bmi.w	8006c48 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006da2:	f7fe fcab 	bl	80056fc <HAL_GetTick>
 8006da6:	1b40      	subs	r0, r0, r5
 8006da8:	2802      	cmp	r0, #2
 8006daa:	d9f6      	bls.n	8006d9a <HAL_RCC_OscConfig+0x16e>
 8006dac:	e781      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006dae:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8006db0:	f7fe fca4 	bl	80056fc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006db4:	4e50      	ldr	r6, [pc, #320]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8006db6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006db8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006dba:	0798      	lsls	r0, r3, #30
 8006dbc:	f57f af44 	bpl.w	8006c48 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006dc0:	f7fe fc9c 	bl	80056fc <HAL_GetTick>
 8006dc4:	1b40      	subs	r0, r0, r5
 8006dc6:	2802      	cmp	r0, #2
 8006dc8:	d9f6      	bls.n	8006db8 <HAL_RCC_OscConfig+0x18c>
 8006dca:	e772      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006dcc:	4b4a      	ldr	r3, [pc, #296]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006dce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006dd0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006dd4:	d128      	bne.n	8006e28 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006dd6:	9201      	str	r2, [sp, #4]
 8006dd8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006dda:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006dde:	641a      	str	r2, [r3, #64]	; 0x40
 8006de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006de2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006de6:	9301      	str	r3, [sp, #4]
 8006de8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006dea:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006dec:	4d45      	ldr	r5, [pc, #276]	; (8006f04 <HAL_RCC_OscConfig+0x2d8>)
 8006dee:	682b      	ldr	r3, [r5, #0]
 8006df0:	05d9      	lsls	r1, r3, #23
 8006df2:	d51b      	bpl.n	8006e2c <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006df4:	68a3      	ldr	r3, [r4, #8]
 8006df6:	4d40      	ldr	r5, [pc, #256]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006df8:	2b01      	cmp	r3, #1
 8006dfa:	d127      	bne.n	8006e4c <HAL_RCC_OscConfig+0x220>
 8006dfc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006dfe:	f043 0301 	orr.w	r3, r3, #1
 8006e02:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006e04:	f7fe fc7a 	bl	80056fc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006e08:	4e3b      	ldr	r6, [pc, #236]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
      tickstart = HAL_GetTick();
 8006e0a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e0c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006e10:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006e12:	079b      	lsls	r3, r3, #30
 8006e14:	d539      	bpl.n	8006e8a <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 8006e16:	2f00      	cmp	r7, #0
 8006e18:	f43f af1a 	beq.w	8006c50 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006e1c:	4a36      	ldr	r2, [pc, #216]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006e1e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006e20:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006e24:	6413      	str	r3, [r2, #64]	; 0x40
 8006e26:	e713      	b.n	8006c50 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006e28:	2700      	movs	r7, #0
 8006e2a:	e7df      	b.n	8006dec <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006e2c:	682b      	ldr	r3, [r5, #0]
 8006e2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e32:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006e34:	f7fe fc62 	bl	80056fc <HAL_GetTick>
 8006e38:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006e3a:	682b      	ldr	r3, [r5, #0]
 8006e3c:	05da      	lsls	r2, r3, #23
 8006e3e:	d4d9      	bmi.n	8006df4 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006e40:	f7fe fc5c 	bl	80056fc <HAL_GetTick>
 8006e44:	1b80      	subs	r0, r0, r6
 8006e46:	2802      	cmp	r0, #2
 8006e48:	d9f7      	bls.n	8006e3a <HAL_RCC_OscConfig+0x20e>
 8006e4a:	e732      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006e4c:	2b05      	cmp	r3, #5
 8006e4e:	d104      	bne.n	8006e5a <HAL_RCC_OscConfig+0x22e>
 8006e50:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e52:	f043 0304 	orr.w	r3, r3, #4
 8006e56:	672b      	str	r3, [r5, #112]	; 0x70
 8006e58:	e7d0      	b.n	8006dfc <HAL_RCC_OscConfig+0x1d0>
 8006e5a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006e5c:	f022 0201 	bic.w	r2, r2, #1
 8006e60:	672a      	str	r2, [r5, #112]	; 0x70
 8006e62:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006e64:	f022 0204 	bic.w	r2, r2, #4
 8006e68:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d1ca      	bne.n	8006e04 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 8006e6e:	f7fe fc45 	bl	80056fc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e72:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006e76:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006e78:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006e7a:	0798      	lsls	r0, r3, #30
 8006e7c:	d5cb      	bpl.n	8006e16 <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e7e:	f7fe fc3d 	bl	80056fc <HAL_GetTick>
 8006e82:	1b80      	subs	r0, r0, r6
 8006e84:	4540      	cmp	r0, r8
 8006e86:	d9f7      	bls.n	8006e78 <HAL_RCC_OscConfig+0x24c>
 8006e88:	e713      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006e8a:	f7fe fc37 	bl	80056fc <HAL_GetTick>
 8006e8e:	1b40      	subs	r0, r0, r5
 8006e90:	4540      	cmp	r0, r8
 8006e92:	d9bd      	bls.n	8006e10 <HAL_RCC_OscConfig+0x1e4>
 8006e94:	e70d      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006e96:	4d18      	ldr	r5, [pc, #96]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
 8006e98:	68ab      	ldr	r3, [r5, #8]
 8006e9a:	f003 030c 	and.w	r3, r3, #12
 8006e9e:	2b08      	cmp	r3, #8
 8006ea0:	d047      	beq.n	8006f32 <HAL_RCC_OscConfig+0x306>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006ea2:	4e19      	ldr	r6, [pc, #100]	; (8006f08 <HAL_RCC_OscConfig+0x2dc>)
 8006ea4:	2300      	movs	r3, #0
 8006ea6:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006ea8:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006eaa:	d135      	bne.n	8006f18 <HAL_RCC_OscConfig+0x2ec>
        tickstart = HAL_GetTick();
 8006eac:	f7fe fc26 	bl	80056fc <HAL_GetTick>
 8006eb0:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006eb2:	682b      	ldr	r3, [r5, #0]
 8006eb4:	0199      	lsls	r1, r3, #6
 8006eb6:	d429      	bmi.n	8006f0c <HAL_RCC_OscConfig+0x2e0>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006eb8:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006ebc:	4313      	orrs	r3, r2
 8006ebe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006ec0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006ec4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006ec6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006eca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006ecc:	0852      	lsrs	r2, r2, #1
 8006ece:	3a01      	subs	r2, #1
 8006ed0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006ed4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006ed6:	2301      	movs	r3, #1
 8006ed8:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 8006eda:	f7fe fc0f 	bl	80056fc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ede:	4d06      	ldr	r5, [pc, #24]	; (8006ef8 <HAL_RCC_OscConfig+0x2cc>)
        tickstart = HAL_GetTick();
 8006ee0:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006ee2:	682b      	ldr	r3, [r5, #0]
 8006ee4:	019a      	lsls	r2, r3, #6
 8006ee6:	f53f aeb7 	bmi.w	8006c58 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006eea:	f7fe fc07 	bl	80056fc <HAL_GetTick>
 8006eee:	1b00      	subs	r0, r0, r4
 8006ef0:	2802      	cmp	r0, #2
 8006ef2:	d9f6      	bls.n	8006ee2 <HAL_RCC_OscConfig+0x2b6>
 8006ef4:	e6dd      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
 8006ef6:	bf00      	nop
 8006ef8:	40023800 	.word	0x40023800
 8006efc:	42470000 	.word	0x42470000
 8006f00:	42470e80 	.word	0x42470e80
 8006f04:	40007000 	.word	0x40007000
 8006f08:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006f0c:	f7fe fbf6 	bl	80056fc <HAL_GetTick>
 8006f10:	1bc0      	subs	r0, r0, r7
 8006f12:	2802      	cmp	r0, #2
 8006f14:	d9cd      	bls.n	8006eb2 <HAL_RCC_OscConfig+0x286>
 8006f16:	e6cc      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006f18:	f7fe fbf0 	bl	80056fc <HAL_GetTick>
 8006f1c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006f1e:	682b      	ldr	r3, [r5, #0]
 8006f20:	019b      	lsls	r3, r3, #6
 8006f22:	f57f ae99 	bpl.w	8006c58 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006f26:	f7fe fbe9 	bl	80056fc <HAL_GetTick>
 8006f2a:	1b00      	subs	r0, r0, r4
 8006f2c:	2802      	cmp	r0, #2
 8006f2e:	d9f6      	bls.n	8006f1e <HAL_RCC_OscConfig+0x2f2>
 8006f30:	e6bf      	b.n	8006cb2 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006f32:	2801      	cmp	r0, #1
 8006f34:	f43f aebe 	beq.w	8006cb4 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006f38:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006f3a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006f3c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006f40:	4291      	cmp	r1, r2
 8006f42:	f47f aea0 	bne.w	8006c86 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006f46:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006f48:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006f4c:	428a      	cmp	r2, r1
 8006f4e:	f47f ae9a 	bne.w	8006c86 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006f52:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006f54:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006f58:	401a      	ands	r2, r3
 8006f5a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8006f5e:	f47f ae92 	bne.w	8006c86 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006f62:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006f64:	0852      	lsrs	r2, r2, #1
 8006f66:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006f6a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006f6c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006f70:	f47f ae89 	bne.w	8006c86 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006f74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006f76:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006f7a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8006f7e:	f43f ae6b 	beq.w	8006c58 <HAL_RCC_OscConfig+0x2c>
 8006f82:	e680      	b.n	8006c86 <HAL_RCC_OscConfig+0x5a>

08006f84 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006f84:	4913      	ldr	r1, [pc, #76]	; (8006fd4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006f86:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006f88:	688b      	ldr	r3, [r1, #8]
 8006f8a:	f003 030c 	and.w	r3, r3, #12
 8006f8e:	2b04      	cmp	r3, #4
 8006f90:	d01c      	beq.n	8006fcc <HAL_RCC_GetSysClockFreq+0x48>
 8006f92:	2b08      	cmp	r3, #8
 8006f94:	d11c      	bne.n	8006fd0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006f96:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006f98:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006f9a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006f9c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fa0:	bf14      	ite	ne
 8006fa2:	480d      	ldrne	r0, [pc, #52]	; (8006fd8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fa4:	480d      	ldreq	r0, [pc, #52]	; (8006fdc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fa6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006faa:	bf18      	it	ne
 8006fac:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006fae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006fb2:	fba1 0100 	umull	r0, r1, r1, r0
 8006fb6:	f7f9 f96b 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006fba:	4b06      	ldr	r3, [pc, #24]	; (8006fd4 <HAL_RCC_GetSysClockFreq+0x50>)
 8006fbc:	685b      	ldr	r3, [r3, #4]
 8006fbe:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006fc2:	3301      	adds	r3, #1
 8006fc4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006fc6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006fca:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006fcc:	4802      	ldr	r0, [pc, #8]	; (8006fd8 <HAL_RCC_GetSysClockFreq+0x54>)
 8006fce:	e7fc      	b.n	8006fca <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006fd0:	4802      	ldr	r0, [pc, #8]	; (8006fdc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006fd2:	e7fa      	b.n	8006fca <HAL_RCC_GetSysClockFreq+0x46>
 8006fd4:	40023800 	.word	0x40023800
 8006fd8:	007a1200 	.word	0x007a1200
 8006fdc:	00f42400 	.word	0x00f42400

08006fe0 <HAL_RCC_ClockConfig>:
{
 8006fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006fe4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006fe6:	4604      	mov	r4, r0
 8006fe8:	b910      	cbnz	r0, 8006ff0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006fea:	2001      	movs	r0, #1
}
 8006fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006ff0:	4b44      	ldr	r3, [pc, #272]	; (8007104 <HAL_RCC_ClockConfig+0x124>)
 8006ff2:	681a      	ldr	r2, [r3, #0]
 8006ff4:	f002 020f 	and.w	r2, r2, #15
 8006ff8:	428a      	cmp	r2, r1
 8006ffa:	d328      	bcc.n	800704e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006ffc:	6822      	ldr	r2, [r4, #0]
 8006ffe:	0797      	lsls	r7, r2, #30
 8007000:	d42d      	bmi.n	800705e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007002:	07d0      	lsls	r0, r2, #31
 8007004:	d441      	bmi.n	800708a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007006:	4b3f      	ldr	r3, [pc, #252]	; (8007104 <HAL_RCC_ClockConfig+0x124>)
 8007008:	681a      	ldr	r2, [r3, #0]
 800700a:	f002 020f 	and.w	r2, r2, #15
 800700e:	42aa      	cmp	r2, r5
 8007010:	d866      	bhi.n	80070e0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007012:	6822      	ldr	r2, [r4, #0]
 8007014:	0751      	lsls	r1, r2, #29
 8007016:	d46c      	bmi.n	80070f2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007018:	0713      	lsls	r3, r2, #28
 800701a:	d507      	bpl.n	800702c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800701c:	4a3a      	ldr	r2, [pc, #232]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 800701e:	6921      	ldr	r1, [r4, #16]
 8007020:	6893      	ldr	r3, [r2, #8]
 8007022:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007026:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800702a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800702c:	f7ff ffaa 	bl	8006f84 <HAL_RCC_GetSysClockFreq>
 8007030:	4b35      	ldr	r3, [pc, #212]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 8007032:	4a36      	ldr	r2, [pc, #216]	; (800710c <HAL_RCC_ClockConfig+0x12c>)
 8007034:	689b      	ldr	r3, [r3, #8]
 8007036:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800703a:	5cd3      	ldrb	r3, [r2, r3]
 800703c:	40d8      	lsrs	r0, r3
 800703e:	4b34      	ldr	r3, [pc, #208]	; (8007110 <HAL_RCC_ClockConfig+0x130>)
 8007040:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007042:	4b34      	ldr	r3, [pc, #208]	; (8007114 <HAL_RCC_ClockConfig+0x134>)
 8007044:	6818      	ldr	r0, [r3, #0]
 8007046:	f7fa fe15 	bl	8001c74 <HAL_InitTick>
  return HAL_OK;
 800704a:	2000      	movs	r0, #0
 800704c:	e7ce      	b.n	8006fec <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800704e:	b2ca      	uxtb	r2, r1
 8007050:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	f003 030f 	and.w	r3, r3, #15
 8007058:	428b      	cmp	r3, r1
 800705a:	d1c6      	bne.n	8006fea <HAL_RCC_ClockConfig+0xa>
 800705c:	e7ce      	b.n	8006ffc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800705e:	4b2a      	ldr	r3, [pc, #168]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 8007060:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007064:	bf1e      	ittt	ne
 8007066:	6899      	ldrne	r1, [r3, #8]
 8007068:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800706c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800706e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007070:	bf42      	ittt	mi
 8007072:	6899      	ldrmi	r1, [r3, #8]
 8007074:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007078:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800707a:	4923      	ldr	r1, [pc, #140]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 800707c:	68a0      	ldr	r0, [r4, #8]
 800707e:	688b      	ldr	r3, [r1, #8]
 8007080:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007084:	4303      	orrs	r3, r0
 8007086:	608b      	str	r3, [r1, #8]
 8007088:	e7bb      	b.n	8007002 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800708a:	6862      	ldr	r2, [r4, #4]
 800708c:	4b1e      	ldr	r3, [pc, #120]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 800708e:	2a01      	cmp	r2, #1
 8007090:	d11c      	bne.n	80070cc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007098:	d0a7      	beq.n	8006fea <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800709a:	4e1b      	ldr	r6, [pc, #108]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 800709c:	68b3      	ldr	r3, [r6, #8]
 800709e:	f023 0303 	bic.w	r3, r3, #3
 80070a2:	4313      	orrs	r3, r2
 80070a4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80070a6:	f7fe fb29 	bl	80056fc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80070aa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80070ae:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80070b0:	68b3      	ldr	r3, [r6, #8]
 80070b2:	6862      	ldr	r2, [r4, #4]
 80070b4:	f003 030c 	and.w	r3, r3, #12
 80070b8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80070bc:	d0a3      	beq.n	8007006 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80070be:	f7fe fb1d 	bl	80056fc <HAL_GetTick>
 80070c2:	1bc0      	subs	r0, r0, r7
 80070c4:	4540      	cmp	r0, r8
 80070c6:	d9f3      	bls.n	80070b0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80070c8:	2003      	movs	r0, #3
 80070ca:	e78f      	b.n	8006fec <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80070cc:	1e91      	subs	r1, r2, #2
 80070ce:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80070d0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80070d2:	d802      	bhi.n	80070da <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80070d4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80070d8:	e7de      	b.n	8007098 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80070da:	f013 0f02 	tst.w	r3, #2
 80070de:	e7db      	b.n	8007098 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80070e0:	b2ea      	uxtb	r2, r5
 80070e2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	f003 030f 	and.w	r3, r3, #15
 80070ea:	42ab      	cmp	r3, r5
 80070ec:	f47f af7d 	bne.w	8006fea <HAL_RCC_ClockConfig+0xa>
 80070f0:	e78f      	b.n	8007012 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80070f2:	4905      	ldr	r1, [pc, #20]	; (8007108 <HAL_RCC_ClockConfig+0x128>)
 80070f4:	68e0      	ldr	r0, [r4, #12]
 80070f6:	688b      	ldr	r3, [r1, #8]
 80070f8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80070fc:	4303      	orrs	r3, r0
 80070fe:	608b      	str	r3, [r1, #8]
 8007100:	e78a      	b.n	8007018 <HAL_RCC_ClockConfig+0x38>
 8007102:	bf00      	nop
 8007104:	40023c00 	.word	0x40023c00
 8007108:	40023800 	.word	0x40023800
 800710c:	0801f74c 	.word	0x0801f74c
 8007110:	20000074 	.word	0x20000074
 8007114:	2000007c 	.word	0x2000007c

08007118 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007118:	4b04      	ldr	r3, [pc, #16]	; (800712c <HAL_RCC_GetPCLK1Freq+0x14>)
 800711a:	4a05      	ldr	r2, [pc, #20]	; (8007130 <HAL_RCC_GetPCLK1Freq+0x18>)
 800711c:	689b      	ldr	r3, [r3, #8]
 800711e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007122:	5cd3      	ldrb	r3, [r2, r3]
 8007124:	4a03      	ldr	r2, [pc, #12]	; (8007134 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007126:	6810      	ldr	r0, [r2, #0]
}
 8007128:	40d8      	lsrs	r0, r3
 800712a:	4770      	bx	lr
 800712c:	40023800 	.word	0x40023800
 8007130:	0801f75c 	.word	0x0801f75c
 8007134:	20000074 	.word	0x20000074

08007138 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007138:	230f      	movs	r3, #15
 800713a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800713c:	4b0b      	ldr	r3, [pc, #44]	; (800716c <HAL_RCC_GetClockConfig+0x34>)
 800713e:	689a      	ldr	r2, [r3, #8]
 8007140:	f002 0203 	and.w	r2, r2, #3
 8007144:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007146:	689a      	ldr	r2, [r3, #8]
 8007148:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800714c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800714e:	689a      	ldr	r2, [r3, #8]
 8007150:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007154:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007156:	689b      	ldr	r3, [r3, #8]
 8007158:	08db      	lsrs	r3, r3, #3
 800715a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800715e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007160:	4b03      	ldr	r3, [pc, #12]	; (8007170 <HAL_RCC_GetClockConfig+0x38>)
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	f003 030f 	and.w	r3, r3, #15
 8007168:	600b      	str	r3, [r1, #0]
}
 800716a:	4770      	bx	lr
 800716c:	40023800 	.word	0x40023800
 8007170:	40023c00 	.word	0x40023c00

08007174 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007174:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007176:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800717a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800717c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800717e:	f040 808a 	bne.w	8007296 <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007182:	6823      	ldr	r3, [r4, #0]
 8007184:	f013 0f0c 	tst.w	r3, #12
 8007188:	d044      	beq.n	8007214 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800718a:	4d89      	ldr	r5, [pc, #548]	; (80073b0 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800718c:	4e89      	ldr	r6, [pc, #548]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 800718e:	2300      	movs	r3, #0
 8007190:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8007192:	f7fe fab3 	bl	80056fc <HAL_GetTick>
 8007196:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007198:	6833      	ldr	r3, [r6, #0]
 800719a:	009b      	lsls	r3, r3, #2
 800719c:	f100 80cc 	bmi.w	8007338 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80071a0:	6821      	ldr	r1, [r4, #0]
 80071a2:	074f      	lsls	r7, r1, #29
 80071a4:	d515      	bpl.n	80071d2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80071a6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80071aa:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80071ae:	061b      	lsls	r3, r3, #24
 80071b0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80071b4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80071b8:	4313      	orrs	r3, r2
 80071ba:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80071be:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 80071c2:	6a22      	ldr	r2, [r4, #32]
 80071c4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80071c8:	3a01      	subs	r2, #1
 80071ca:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80071ce:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80071d2:	070e      	lsls	r6, r1, #28
 80071d4:	d514      	bpl.n	8007200 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80071d6:	4a77      	ldr	r2, [pc, #476]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80071d8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80071da:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80071de:	6920      	ldr	r0, [r4, #16]
 80071e0:	071b      	lsls	r3, r3, #28
 80071e2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80071e6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80071ea:	430b      	orrs	r3, r1
 80071ec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80071f0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80071f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80071f6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80071fa:	430b      	orrs	r3, r1
 80071fc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007200:	2301      	movs	r3, #1
 8007202:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8007204:	f7fe fa7a 	bl	80056fc <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007208:	4e6a      	ldr	r6, [pc, #424]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 800720a:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800720c:	6833      	ldr	r3, [r6, #0]
 800720e:	0098      	lsls	r0, r3, #2
 8007210:	f140 8099 	bpl.w	8007346 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007214:	6823      	ldr	r3, [r4, #0]
 8007216:	069a      	lsls	r2, r3, #26
 8007218:	d533      	bpl.n	8007282 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800721a:	2300      	movs	r3, #0
 800721c:	9301      	str	r3, [sp, #4]
 800721e:	4b65      	ldr	r3, [pc, #404]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007220:	4d65      	ldr	r5, [pc, #404]	; (80073b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007222:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007224:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007228:	641a      	str	r2, [r3, #64]	; 0x40
 800722a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800722c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007230:	9301      	str	r3, [sp, #4]
 8007232:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007234:	682b      	ldr	r3, [r5, #0]
 8007236:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800723a:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800723c:	f7fe fa5e 	bl	80056fc <HAL_GetTick>
 8007240:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007242:	682b      	ldr	r3, [r5, #0]
 8007244:	05d9      	lsls	r1, r3, #23
 8007246:	f140 8085 	bpl.w	8007354 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800724a:	4d5a      	ldr	r5, [pc, #360]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 800724c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800724e:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007252:	f040 8086 	bne.w	8007362 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007256:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007258:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800725c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007260:	4a54      	ldr	r2, [pc, #336]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8007262:	f040 80a0 	bne.w	80073a6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 8007266:	6891      	ldr	r1, [r2, #8]
 8007268:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800726c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007270:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007274:	4301      	orrs	r1, r0
 8007276:	6091      	str	r1, [r2, #8]
 8007278:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800727a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800727e:	430b      	orrs	r3, r1
 8007280:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007282:	6820      	ldr	r0, [r4, #0]
 8007284:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007288:	bf1f      	itttt	ne
 800728a:	4b4c      	ldrne	r3, [pc, #304]	; (80073bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800728c:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007290:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 8007292:	2000      	movne	r0, #0
 8007294:	e04e      	b.n	8007334 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 8007296:	4d4a      	ldr	r5, [pc, #296]	; (80073c0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007298:	4f46      	ldr	r7, [pc, #280]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 800729a:	2300      	movs	r3, #0
 800729c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800729e:	f7fe fa2d 	bl	80056fc <HAL_GetTick>
 80072a2:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80072a4:	683b      	ldr	r3, [r7, #0]
 80072a6:	011a      	lsls	r2, r3, #4
 80072a8:	d43e      	bmi.n	8007328 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80072aa:	6821      	ldr	r1, [r4, #0]
 80072ac:	07cb      	lsls	r3, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80072ae:	bf41      	itttt	mi
 80072b0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80072b4:	071b      	lslmi	r3, r3, #28
 80072b6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80072ba:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80072be:	078e      	lsls	r6, r1, #30
 80072c0:	d515      	bpl.n	80072ee <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80072c2:	4a3c      	ldr	r2, [pc, #240]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80072c4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80072c6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80072ca:	6866      	ldr	r6, [r4, #4]
 80072cc:	061b      	lsls	r3, r3, #24
 80072ce:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80072d2:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80072d6:	4303      	orrs	r3, r0
 80072d8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80072dc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80072e0:	69e3      	ldr	r3, [r4, #28]
 80072e2:	f020 001f 	bic.w	r0, r0, #31
 80072e6:	3b01      	subs	r3, #1
 80072e8:	4303      	orrs	r3, r0
 80072ea:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80072ee:	0648      	lsls	r0, r1, #25
 80072f0:	d50a      	bpl.n	8007308 <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80072f2:	68e3      	ldr	r3, [r4, #12]
 80072f4:	6862      	ldr	r2, [r4, #4]
 80072f6:	061b      	lsls	r3, r3, #24
 80072f8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80072fc:	68a2      	ldr	r2, [r4, #8]
 80072fe:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007302:	4a2c      	ldr	r2, [pc, #176]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8007304:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007308:	2301      	movs	r3, #1
 800730a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800730c:	f7fe f9f6 	bl	80056fc <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007310:	4e28      	ldr	r6, [pc, #160]	; (80073b4 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8007312:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007314:	6833      	ldr	r3, [r6, #0]
 8007316:	0119      	lsls	r1, r3, #4
 8007318:	f53f af33 	bmi.w	8007182 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800731c:	f7fe f9ee 	bl	80056fc <HAL_GetTick>
 8007320:	1b40      	subs	r0, r0, r5
 8007322:	2802      	cmp	r0, #2
 8007324:	d9f6      	bls.n	8007314 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8007326:	e004      	b.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007328:	f7fe f9e8 	bl	80056fc <HAL_GetTick>
 800732c:	1b80      	subs	r0, r0, r6
 800732e:	2802      	cmp	r0, #2
 8007330:	d9b8      	bls.n	80072a4 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 8007332:	2003      	movs	r0, #3
}
 8007334:	b003      	add	sp, #12
 8007336:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007338:	f7fe f9e0 	bl	80056fc <HAL_GetTick>
 800733c:	1bc0      	subs	r0, r0, r7
 800733e:	2802      	cmp	r0, #2
 8007340:	f67f af2a 	bls.w	8007198 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007344:	e7f5      	b.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007346:	f7fe f9d9 	bl	80056fc <HAL_GetTick>
 800734a:	1b40      	subs	r0, r0, r5
 800734c:	2802      	cmp	r0, #2
 800734e:	f67f af5d 	bls.w	800720c <HAL_RCCEx_PeriphCLKConfig+0x98>
 8007352:	e7ee      	b.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007354:	f7fe f9d2 	bl	80056fc <HAL_GetTick>
 8007358:	1b80      	subs	r0, r0, r6
 800735a:	2802      	cmp	r0, #2
 800735c:	f67f af71 	bls.w	8007242 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8007360:	e7e7      	b.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007362:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007364:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007368:	4293      	cmp	r3, r2
 800736a:	f43f af74 	beq.w	8007256 <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800736e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007370:	4a14      	ldr	r2, [pc, #80]	; (80073c4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007372:	2101      	movs	r1, #1
 8007374:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007376:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800737a:	2100      	movs	r1, #0
 800737c:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800737e:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007380:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007382:	07da      	lsls	r2, r3, #31
 8007384:	f57f af67 	bpl.w	8007256 <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8007388:	f7fe f9b8 	bl	80056fc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800738c:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007390:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007392:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007394:	079b      	lsls	r3, r3, #30
 8007396:	f53f af5e 	bmi.w	8007256 <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800739a:	f7fe f9af 	bl	80056fc <HAL_GetTick>
 800739e:	1b80      	subs	r0, r0, r6
 80073a0:	42b8      	cmp	r0, r7
 80073a2:	d9f6      	bls.n	8007392 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 80073a4:	e7c5      	b.n	8007332 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80073a6:	6891      	ldr	r1, [r2, #8]
 80073a8:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80073ac:	e763      	b.n	8007276 <HAL_RCCEx_PeriphCLKConfig+0x102>
 80073ae:	bf00      	nop
 80073b0:	42470070 	.word	0x42470070
 80073b4:	40023800 	.word	0x40023800
 80073b8:	40007000 	.word	0x40007000
 80073bc:	424711e0 	.word	0x424711e0
 80073c0:	42470068 	.word	0x42470068
 80073c4:	42470e40 	.word	0x42470e40

080073c8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80073c8:	b538      	push	{r3, r4, r5, lr}
 80073ca:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80073cc:	4604      	mov	r4, r0
 80073ce:	b1c8      	cbz	r0, 8007404 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80073d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80073d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80073d8:	b91b      	cbnz	r3, 80073e2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80073da:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80073de:	f7fa fbdd 	bl	8001b9c <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80073e2:	2302      	movs	r3, #2
 80073e4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80073e8:	1d21      	adds	r1, r4, #4
 80073ea:	6820      	ldr	r0, [r4, #0]
 80073ec:	f000 fcea 	bl	8007dc4 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80073f0:	6862      	ldr	r2, [r4, #4]
 80073f2:	6820      	ldr	r0, [r4, #0]
 80073f4:	4629      	mov	r1, r5
 80073f6:	f000 fd1b 	bl	8007e30 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80073fa:	2301      	movs	r3, #1
 80073fc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007400:	2000      	movs	r0, #0
}
 8007402:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007404:	2001      	movs	r0, #1
 8007406:	e7fc      	b.n	8007402 <HAL_SDRAM_Init+0x3a>

08007408 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007408:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800740a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800740e:	2b02      	cmp	r3, #2
{
 8007410:	4604      	mov	r4, r0
 8007412:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007414:	b2d8      	uxtb	r0, r3
 8007416:	d00d      	beq.n	8007434 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007418:	2302      	movs	r3, #2
 800741a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800741e:	6820      	ldr	r0, [r4, #0]
 8007420:	f000 fd42 	bl	8007ea8 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007424:	682b      	ldr	r3, [r5, #0]
 8007426:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007428:	bf0c      	ite	eq
 800742a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800742c:	2301      	movne	r3, #1
 800742e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007432:	2000      	movs	r0, #0
}
 8007434:	bd38      	pop	{r3, r4, r5, pc}

08007436 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007436:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007438:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800743c:	2b02      	cmp	r3, #2
{
 800743e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007440:	b2d8      	uxtb	r0, r3
 8007442:	d009      	beq.n	8007458 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007444:	2302      	movs	r3, #2
 8007446:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800744a:	6820      	ldr	r0, [r4, #0]
 800744c:	f000 fd53 	bl	8007ef6 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007450:	2301      	movs	r3, #1
 8007452:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007456:	2000      	movs	r0, #0
}
 8007458:	bd10      	pop	{r4, pc}
	...

0800745c <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800745c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007460:	461d      	mov	r5, r3
 8007462:	4617      	mov	r7, r2
 8007464:	4688      	mov	r8, r1
 8007466:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007468:	f7fe f948 	bl	80056fc <HAL_GetTick>
 800746c:	443d      	add	r5, r7
 800746e:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 8007470:	f7fe f944 	bl	80056fc <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007474:	4b22      	ldr	r3, [pc, #136]	; (8007500 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 800747c:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800747e:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007480:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if(count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 8007482:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007484:	6893      	ldr	r3, [r2, #8]
 8007486:	ea38 0303 	bics.w	r3, r8, r3
 800748a:	d001      	beq.n	8007490 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 800748c:	2000      	movs	r0, #0
 800748e:	e02d      	b.n	80074ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 8007490:	1c7b      	adds	r3, r7, #1
 8007492:	d0f7      	beq.n	8007484 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007494:	f7fe f932 	bl	80056fc <HAL_GetTick>
 8007498:	1b40      	subs	r0, r0, r5
 800749a:	42a0      	cmp	r0, r4
 800749c:	d329      	bcc.n	80074f2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800749e:	6833      	ldr	r3, [r6, #0]
 80074a0:	685a      	ldr	r2, [r3, #4]
 80074a2:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80074a6:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80074a8:	6872      	ldr	r2, [r6, #4]
 80074aa:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80074ae:	d10a      	bne.n	80074c6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 80074b0:	68b2      	ldr	r2, [r6, #8]
 80074b2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80074b6:	d002      	beq.n	80074be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80074b8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80074bc:	d103      	bne.n	80074c6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 80074be:	681a      	ldr	r2, [r3, #0]
 80074c0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80074c4:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80074c6:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 80074c8:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80074cc:	d107      	bne.n	80074de <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 80074ce:	681a      	ldr	r2, [r3, #0]
 80074d0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80074d4:	601a      	str	r2, [r3, #0]
 80074d6:	681a      	ldr	r2, [r3, #0]
 80074d8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80074dc:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80074de:	2301      	movs	r3, #1
 80074e0:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80074e4:	2300      	movs	r3, #0
 80074e6:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
 80074ea:	2003      	movs	r0, #3
}
 80074ec:	b002      	add	sp, #8
 80074ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(count == 0U)
 80074f2:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 80074f4:	2b00      	cmp	r3, #0
      count--;
 80074f6:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 80074f8:	bf08      	it	eq
 80074fa:	2400      	moveq	r4, #0
      count--;
 80074fc:	3b01      	subs	r3, #1
 80074fe:	e7bf      	b.n	8007480 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8007500:	20000074 	.word	0x20000074

08007504 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007504:	b538      	push	{r3, r4, r5, lr}
 8007506:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007508:	6842      	ldr	r2, [r0, #4]
 800750a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800750e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007510:	d11f      	bne.n	8007552 <SPI_EndRxTransaction+0x4e>
 8007512:	6882      	ldr	r2, [r0, #8]
 8007514:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007518:	d002      	beq.n	8007520 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800751a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800751e:	d107      	bne.n	8007530 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007520:	6825      	ldr	r5, [r4, #0]
 8007522:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007524:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007528:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800752c:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800752e:	d007      	beq.n	8007540 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007530:	460a      	mov	r2, r1
 8007532:	2180      	movs	r1, #128	; 0x80
 8007534:	4620      	mov	r0, r4
 8007536:	f7ff ff91 	bl	800745c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800753a:	b920      	cbnz	r0, 8007546 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800753c:	2000      	movs	r0, #0
}
 800753e:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007540:	460a      	mov	r2, r1
 8007542:	2101      	movs	r1, #1
 8007544:	e7f6      	b.n	8007534 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007546:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007548:	f043 0320 	orr.w	r3, r3, #32
 800754c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800754e:	2003      	movs	r0, #3
 8007550:	e7f5      	b.n	800753e <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007552:	460a      	mov	r2, r1
 8007554:	2101      	movs	r1, #1
 8007556:	e7ee      	b.n	8007536 <SPI_EndRxTransaction+0x32>

08007558 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007558:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800755a:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800755c:	4a12      	ldr	r2, [pc, #72]	; (80075a8 <SPI_EndRxTxTransaction+0x50>)
 800755e:	4d13      	ldr	r5, [pc, #76]	; (80075ac <SPI_EndRxTxTransaction+0x54>)
 8007560:	6812      	ldr	r2, [r2, #0]
 8007562:	fbb2 f5f5 	udiv	r5, r2, r5
 8007566:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800756a:	436a      	muls	r2, r5
 800756c:	9201      	str	r2, [sp, #4]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800756e:	6842      	ldr	r2, [r0, #4]
 8007570:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007574:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007576:	d10b      	bne.n	8007590 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007578:	460a      	mov	r2, r1
 800757a:	2180      	movs	r1, #128	; 0x80
 800757c:	f7ff ff6e 	bl	800745c <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007580:	b178      	cbz	r0, 80075a2 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007582:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007584:	f043 0320 	orr.w	r3, r3, #32
 8007588:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800758a:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 800758c:	b003      	add	sp, #12
 800758e:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007590:	9b01      	ldr	r3, [sp, #4]
 8007592:	b133      	cbz	r3, 80075a2 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007594:	9b01      	ldr	r3, [sp, #4]
 8007596:	3b01      	subs	r3, #1
 8007598:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800759a:	6823      	ldr	r3, [r4, #0]
 800759c:	689b      	ldr	r3, [r3, #8]
 800759e:	061b      	lsls	r3, r3, #24
 80075a0:	d4f6      	bmi.n	8007590 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 80075a2:	2000      	movs	r0, #0
 80075a4:	e7f2      	b.n	800758c <SPI_EndRxTxTransaction+0x34>
 80075a6:	bf00      	nop
 80075a8:	20000074 	.word	0x20000074
 80075ac:	016e3600 	.word	0x016e3600

080075b0 <HAL_SPI_Init>:
{
 80075b0:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80075b2:	4604      	mov	r4, r0
 80075b4:	2800      	cmp	r0, #0
 80075b6:	d055      	beq.n	8007664 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80075b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80075ba:	2b00      	cmp	r3, #0
 80075bc:	d14e      	bne.n	800765c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80075be:	6842      	ldr	r2, [r0, #4]
 80075c0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80075c4:	d000      	beq.n	80075c8 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80075c6:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80075c8:	2300      	movs	r3, #0
 80075ca:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80075cc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80075d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80075d4:	b923      	cbnz	r3, 80075e0 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80075d6:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80075da:	4620      	mov	r0, r4
 80075dc:	f7fa faa6 	bl	8001b2c <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80075e0:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80075e2:	68a0      	ldr	r0, [r4, #8]
 80075e4:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80075e6:	2302      	movs	r3, #2
 80075e8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80075ec:	680b      	ldr	r3, [r1, #0]
 80075ee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80075f2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80075f4:	6863      	ldr	r3, [r4, #4]
 80075f6:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 80075fa:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80075fe:	4303      	orrs	r3, r0
 8007600:	68e0      	ldr	r0, [r4, #12]
 8007602:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 8007606:	4303      	orrs	r3, r0
 8007608:	6920      	ldr	r0, [r4, #16]
 800760a:	f000 0002 	and.w	r0, r0, #2
 800760e:	4303      	orrs	r3, r0
 8007610:	6960      	ldr	r0, [r4, #20]
 8007612:	f000 0001 	and.w	r0, r0, #1
 8007616:	4303      	orrs	r3, r0
 8007618:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800761c:	4303      	orrs	r3, r0
 800761e:	69e0      	ldr	r0, [r4, #28]
 8007620:	f000 0038 	and.w	r0, r0, #56	; 0x38
 8007624:	4303      	orrs	r3, r0
 8007626:	6a20      	ldr	r0, [r4, #32]
 8007628:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800762c:	4303      	orrs	r3, r0
 800762e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007630:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 8007634:	4303      	orrs	r3, r0
 8007636:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8007638:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800763a:	0c12      	lsrs	r2, r2, #16
 800763c:	f003 0310 	and.w	r3, r3, #16
 8007640:	f002 0204 	and.w	r2, r2, #4
 8007644:	431a      	orrs	r2, r3
 8007646:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007648:	69cb      	ldr	r3, [r1, #28]
 800764a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800764e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007650:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007652:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007654:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007656:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800765a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800765c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800765e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007662:	e7b1      	b.n	80075c8 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8007664:	2001      	movs	r0, #1
 8007666:	e7f8      	b.n	800765a <HAL_SPI_Init+0xaa>

08007668 <HAL_SPI_Transmit>:
{
 8007668:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800766c:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 800766e:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007672:	2b01      	cmp	r3, #1
{
 8007674:	4604      	mov	r4, r0
 8007676:	460d      	mov	r5, r1
 8007678:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 800767a:	f000 80a0 	beq.w	80077be <HAL_SPI_Transmit+0x156>
 800767e:	2301      	movs	r3, #1
 8007680:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007684:	f7fe f83a 	bl	80056fc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007688:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800768c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800768e:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007690:	b2d8      	uxtb	r0, r3
 8007692:	f040 8092 	bne.w	80077ba <HAL_SPI_Transmit+0x152>
  if ((pData == NULL) || (Size == 0U))
 8007696:	2d00      	cmp	r5, #0
 8007698:	d061      	beq.n	800775e <HAL_SPI_Transmit+0xf6>
 800769a:	f1b8 0f00 	cmp.w	r8, #0
 800769e:	d05e      	beq.n	800775e <HAL_SPI_Transmit+0xf6>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80076a0:	2303      	movs	r3, #3
 80076a2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80076a6:	2300      	movs	r3, #0
 80076a8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80076aa:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 80076ae:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80076b2:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80076b4:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80076b6:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80076b8:	68a3      	ldr	r3, [r4, #8]
 80076ba:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80076bc:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80076be:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  hspi->TxXferSize  = Size;
 80076c2:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80076c6:	d107      	bne.n	80076d8 <HAL_SPI_Transmit+0x70>
    __HAL_SPI_DISABLE(hspi);
 80076c8:	6833      	ldr	r3, [r6, #0]
 80076ca:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80076ce:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 80076d0:	6833      	ldr	r3, [r6, #0]
 80076d2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80076d6:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80076d8:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80076da:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80076dc:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 80076de:	bf5e      	ittt	pl
 80076e0:	6833      	ldrpl	r3, [r6, #0]
 80076e2:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 80076e6:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80076e8:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 80076ec:	6863      	ldr	r3, [r4, #4]
 80076ee:	d13f      	bne.n	8007770 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80076f0:	b113      	cbz	r3, 80076f8 <HAL_SPI_Transmit+0x90>
 80076f2:	f1b8 0f01 	cmp.w	r8, #1
 80076f6:	d107      	bne.n	8007708 <HAL_SPI_Transmit+0xa0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80076f8:	f835 3b02 	ldrh.w	r3, [r5], #2
 80076fc:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80076fe:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007700:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007702:	3b01      	subs	r3, #1
 8007704:	b29b      	uxth	r3, r3
 8007706:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007708:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800770a:	b29b      	uxth	r3, r3
 800770c:	b9a3      	cbnz	r3, 8007738 <HAL_SPI_Transmit+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800770e:	464a      	mov	r2, r9
 8007710:	4639      	mov	r1, r7
 8007712:	4620      	mov	r0, r4
 8007714:	f7ff ff20 	bl	8007558 <SPI_EndRxTxTransaction>
 8007718:	2800      	cmp	r0, #0
 800771a:	d14b      	bne.n	80077b4 <HAL_SPI_Transmit+0x14c>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800771c:	68a3      	ldr	r3, [r4, #8]
 800771e:	b933      	cbnz	r3, 800772e <HAL_SPI_Transmit+0xc6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007720:	9301      	str	r3, [sp, #4]
 8007722:	6823      	ldr	r3, [r4, #0]
 8007724:	68da      	ldr	r2, [r3, #12]
 8007726:	9201      	str	r2, [sp, #4]
 8007728:	689b      	ldr	r3, [r3, #8]
 800772a:	9301      	str	r3, [sp, #4]
 800772c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800772e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007730:	3800      	subs	r0, #0
 8007732:	bf18      	it	ne
 8007734:	2001      	movne	r0, #1
error:
 8007736:	e012      	b.n	800775e <HAL_SPI_Transmit+0xf6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007738:	6822      	ldr	r2, [r4, #0]
 800773a:	6893      	ldr	r3, [r2, #8]
 800773c:	0798      	lsls	r0, r3, #30
 800773e:	d505      	bpl.n	800774c <HAL_SPI_Transmit+0xe4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007740:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007742:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007746:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007748:	6323      	str	r3, [r4, #48]	; 0x30
 800774a:	e7d9      	b.n	8007700 <HAL_SPI_Transmit+0x98>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800774c:	f7fd ffd6 	bl	80056fc <HAL_GetTick>
 8007750:	eba0 0009 	sub.w	r0, r0, r9
 8007754:	42b8      	cmp	r0, r7
 8007756:	d3d7      	bcc.n	8007708 <HAL_SPI_Transmit+0xa0>
 8007758:	1c79      	adds	r1, r7, #1
 800775a:	d0d5      	beq.n	8007708 <HAL_SPI_Transmit+0xa0>
          errorcode = HAL_TIMEOUT;
 800775c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800775e:	2301      	movs	r3, #1
 8007760:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007764:	2300      	movs	r3, #0
 8007766:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800776a:	b003      	add	sp, #12
 800776c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007770:	b113      	cbz	r3, 8007778 <HAL_SPI_Transmit+0x110>
 8007772:	f1b8 0f01 	cmp.w	r8, #1
 8007776:	d108      	bne.n	800778a <HAL_SPI_Transmit+0x122>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007778:	782b      	ldrb	r3, [r5, #0]
 800777a:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800777c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800777e:	3301      	adds	r3, #1
 8007780:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007782:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007784:	3b01      	subs	r3, #1
 8007786:	b29b      	uxth	r3, r3
 8007788:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800778a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800778c:	b29b      	uxth	r3, r3
 800778e:	2b00      	cmp	r3, #0
 8007790:	d0bd      	beq.n	800770e <HAL_SPI_Transmit+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007792:	6823      	ldr	r3, [r4, #0]
 8007794:	689a      	ldr	r2, [r3, #8]
 8007796:	0792      	lsls	r2, r2, #30
 8007798:	d503      	bpl.n	80077a2 <HAL_SPI_Transmit+0x13a>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800779a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800779c:	7812      	ldrb	r2, [r2, #0]
 800779e:	731a      	strb	r2, [r3, #12]
 80077a0:	e7ec      	b.n	800777c <HAL_SPI_Transmit+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80077a2:	f7fd ffab 	bl	80056fc <HAL_GetTick>
 80077a6:	eba0 0009 	sub.w	r0, r0, r9
 80077aa:	42b8      	cmp	r0, r7
 80077ac:	d3ed      	bcc.n	800778a <HAL_SPI_Transmit+0x122>
 80077ae:	1c7b      	adds	r3, r7, #1
 80077b0:	d0eb      	beq.n	800778a <HAL_SPI_Transmit+0x122>
 80077b2:	e7d3      	b.n	800775c <HAL_SPI_Transmit+0xf4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80077b4:	2320      	movs	r3, #32
 80077b6:	6563      	str	r3, [r4, #84]	; 0x54
 80077b8:	e7b0      	b.n	800771c <HAL_SPI_Transmit+0xb4>
    errorcode = HAL_BUSY;
 80077ba:	2002      	movs	r0, #2
 80077bc:	e7cf      	b.n	800775e <HAL_SPI_Transmit+0xf6>
  __HAL_LOCK(hspi);
 80077be:	2002      	movs	r0, #2
 80077c0:	e7d3      	b.n	800776a <HAL_SPI_Transmit+0x102>

080077c2 <HAL_SPI_TransmitReceive>:
{
 80077c2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80077c6:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80077c8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 80077cc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 80077d0:	2b01      	cmp	r3, #1
{
 80077d2:	4604      	mov	r4, r0
 80077d4:	460d      	mov	r5, r1
 80077d6:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 80077d8:	f000 80e0 	beq.w	800799c <HAL_SPI_TransmitReceive+0x1da>
 80077dc:	2301      	movs	r3, #1
 80077de:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80077e2:	f7fd ff8b 	bl	80056fc <HAL_GetTick>
  tmp_state           = hspi->State;
 80077e6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 80077ea:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80077ec:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80077ee:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 80077f0:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80077f2:	d00a      	beq.n	800780a <HAL_SPI_TransmitReceive+0x48>
 80077f4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80077f8:	f040 80ce 	bne.w	8007998 <HAL_SPI_TransmitReceive+0x1d6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80077fc:	68a3      	ldr	r3, [r4, #8]
 80077fe:	2b00      	cmp	r3, #0
 8007800:	f040 80ca 	bne.w	8007998 <HAL_SPI_TransmitReceive+0x1d6>
 8007804:	2904      	cmp	r1, #4
 8007806:	f040 80c7 	bne.w	8007998 <HAL_SPI_TransmitReceive+0x1d6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800780a:	2d00      	cmp	r5, #0
 800780c:	d03f      	beq.n	800788e <HAL_SPI_TransmitReceive+0xcc>
 800780e:	f1b9 0f00 	cmp.w	r9, #0
 8007812:	d03c      	beq.n	800788e <HAL_SPI_TransmitReceive+0xcc>
 8007814:	2e00      	cmp	r6, #0
 8007816:	d03a      	beq.n	800788e <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007818:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800781c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007820:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007822:	bf1c      	itt	ne
 8007824:	2305      	movne	r3, #5
 8007826:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800782a:	2300      	movs	r3, #0
 800782c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800782e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007832:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007834:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007836:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007838:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800783a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800783c:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800783e:	bf58      	it	pl
 8007840:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007842:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007844:	bf58      	it	pl
 8007846:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800784a:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800784c:	bf58      	it	pl
 800784e:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007850:	68e1      	ldr	r1, [r4, #12]
 8007852:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007856:	d151      	bne.n	80078fc <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007858:	b10a      	cbz	r2, 800785e <HAL_SPI_TransmitReceive+0x9c>
 800785a:	2e01      	cmp	r6, #1
 800785c:	d107      	bne.n	800786e <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800785e:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007862:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007864:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007866:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007868:	3b01      	subs	r3, #1
 800786a:	b29b      	uxth	r3, r3
 800786c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800786e:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007870:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007872:	b29b      	uxth	r3, r3
 8007874:	b96b      	cbnz	r3, 8007892 <HAL_SPI_TransmitReceive+0xd0>
 8007876:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007878:	b29b      	uxth	r3, r3
 800787a:	b953      	cbnz	r3, 8007892 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800787c:	463a      	mov	r2, r7
 800787e:	4641      	mov	r1, r8
 8007880:	4620      	mov	r0, r4
 8007882:	f7ff fe69 	bl	8007558 <SPI_EndRxTxTransaction>
 8007886:	2800      	cmp	r0, #0
 8007888:	d07b      	beq.n	8007982 <HAL_SPI_TransmitReceive+0x1c0>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800788a:	2320      	movs	r3, #32
 800788c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800788e:	2001      	movs	r0, #1
 8007890:	e02b      	b.n	80078ea <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007892:	6821      	ldr	r1, [r4, #0]
 8007894:	688b      	ldr	r3, [r1, #8]
 8007896:	079a      	lsls	r2, r3, #30
 8007898:	d50d      	bpl.n	80078b6 <HAL_SPI_TransmitReceive+0xf4>
 800789a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800789c:	b29b      	uxth	r3, r3
 800789e:	b153      	cbz	r3, 80078b6 <HAL_SPI_TransmitReceive+0xf4>
 80078a0:	b14d      	cbz	r5, 80078b6 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80078a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80078a4:	f833 2b02 	ldrh.w	r2, [r3], #2
 80078a8:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80078aa:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80078ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80078ae:	3b01      	subs	r3, #1
 80078b0:	b29b      	uxth	r3, r3
 80078b2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80078b4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80078b6:	688a      	ldr	r2, [r1, #8]
 80078b8:	f012 0201 	ands.w	r2, r2, #1
 80078bc:	d00c      	beq.n	80078d8 <HAL_SPI_TransmitReceive+0x116>
 80078be:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80078c0:	b29b      	uxth	r3, r3
 80078c2:	b14b      	cbz	r3, 80078d8 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80078c4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80078c6:	68c9      	ldr	r1, [r1, #12]
 80078c8:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80078cc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80078ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80078d0:	3b01      	subs	r3, #1
 80078d2:	b29b      	uxth	r3, r3
 80078d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80078d6:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80078d8:	f7fd ff10 	bl	80056fc <HAL_GetTick>
 80078dc:	1bc0      	subs	r0, r0, r7
 80078de:	4540      	cmp	r0, r8
 80078e0:	d3c6      	bcc.n	8007870 <HAL_SPI_TransmitReceive+0xae>
 80078e2:	f1b8 3fff 	cmp.w	r8, #4294967295
 80078e6:	d0c3      	beq.n	8007870 <HAL_SPI_TransmitReceive+0xae>
        errorcode = HAL_TIMEOUT;
 80078e8:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80078ea:	2301      	movs	r3, #1
 80078ec:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80078f0:	2300      	movs	r3, #0
 80078f2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80078f6:	b003      	add	sp, #12
 80078f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80078fc:	b10a      	cbz	r2, 8007902 <HAL_SPI_TransmitReceive+0x140>
 80078fe:	2e01      	cmp	r6, #1
 8007900:	d108      	bne.n	8007914 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007902:	782a      	ldrb	r2, [r5, #0]
 8007904:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007906:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007908:	3301      	adds	r3, #1
 800790a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800790c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800790e:	3b01      	subs	r3, #1
 8007910:	b29b      	uxth	r3, r3
 8007912:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007914:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007916:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007918:	b29b      	uxth	r3, r3
 800791a:	b91b      	cbnz	r3, 8007924 <HAL_SPI_TransmitReceive+0x162>
 800791c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800791e:	b29b      	uxth	r3, r3
 8007920:	2b00      	cmp	r3, #0
 8007922:	d0ab      	beq.n	800787c <HAL_SPI_TransmitReceive+0xba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007924:	6822      	ldr	r2, [r4, #0]
 8007926:	6893      	ldr	r3, [r2, #8]
 8007928:	079b      	lsls	r3, r3, #30
 800792a:	d50e      	bpl.n	800794a <HAL_SPI_TransmitReceive+0x188>
 800792c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800792e:	b29b      	uxth	r3, r3
 8007930:	b15b      	cbz	r3, 800794a <HAL_SPI_TransmitReceive+0x188>
 8007932:	b155      	cbz	r5, 800794a <HAL_SPI_TransmitReceive+0x188>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007934:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007936:	781b      	ldrb	r3, [r3, #0]
 8007938:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800793a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800793c:	3301      	adds	r3, #1
 800793e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007940:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007942:	3b01      	subs	r3, #1
 8007944:	b29b      	uxth	r3, r3
 8007946:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007948:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800794a:	6822      	ldr	r2, [r4, #0]
 800794c:	6891      	ldr	r1, [r2, #8]
 800794e:	f011 0101 	ands.w	r1, r1, #1
 8007952:	d00d      	beq.n	8007970 <HAL_SPI_TransmitReceive+0x1ae>
 8007954:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007956:	b29b      	uxth	r3, r3
 8007958:	b153      	cbz	r3, 8007970 <HAL_SPI_TransmitReceive+0x1ae>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800795a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800795c:	68d2      	ldr	r2, [r2, #12]
 800795e:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007960:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007962:	3301      	adds	r3, #1
 8007964:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007966:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007968:	3b01      	subs	r3, #1
 800796a:	b29b      	uxth	r3, r3
 800796c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800796e:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007970:	f7fd fec4 	bl	80056fc <HAL_GetTick>
 8007974:	1bc0      	subs	r0, r0, r7
 8007976:	4540      	cmp	r0, r8
 8007978:	d3cd      	bcc.n	8007916 <HAL_SPI_TransmitReceive+0x154>
 800797a:	f1b8 3fff 	cmp.w	r8, #4294967295
 800797e:	d0ca      	beq.n	8007916 <HAL_SPI_TransmitReceive+0x154>
 8007980:	e7b2      	b.n	80078e8 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007982:	68a3      	ldr	r3, [r4, #8]
 8007984:	2b00      	cmp	r3, #0
 8007986:	d1b0      	bne.n	80078ea <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007988:	6823      	ldr	r3, [r4, #0]
 800798a:	9001      	str	r0, [sp, #4]
 800798c:	68da      	ldr	r2, [r3, #12]
 800798e:	9201      	str	r2, [sp, #4]
 8007990:	689b      	ldr	r3, [r3, #8]
 8007992:	9301      	str	r3, [sp, #4]
 8007994:	9b01      	ldr	r3, [sp, #4]
 8007996:	e7a8      	b.n	80078ea <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007998:	2002      	movs	r0, #2
 800799a:	e7a6      	b.n	80078ea <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800799c:	2002      	movs	r0, #2
 800799e:	e7aa      	b.n	80078f6 <HAL_SPI_TransmitReceive+0x134>

080079a0 <HAL_SPI_Receive>:
{
 80079a0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80079a4:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80079a6:	6843      	ldr	r3, [r0, #4]
 80079a8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 80079ac:	4604      	mov	r4, r0
 80079ae:	4688      	mov	r8, r1
 80079b0:	4616      	mov	r6, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80079b2:	d10c      	bne.n	80079ce <HAL_SPI_Receive+0x2e>
 80079b4:	6883      	ldr	r3, [r0, #8]
 80079b6:	b953      	cbnz	r3, 80079ce <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80079b8:	2304      	movs	r3, #4
 80079ba:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80079be:	4613      	mov	r3, r2
 80079c0:	9500      	str	r5, [sp, #0]
 80079c2:	460a      	mov	r2, r1
 80079c4:	f7ff fefd 	bl	80077c2 <HAL_SPI_TransmitReceive>
}
 80079c8:	b002      	add	sp, #8
 80079ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 80079ce:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 80079d2:	2b01      	cmp	r3, #1
 80079d4:	d07e      	beq.n	8007ad4 <HAL_SPI_Receive+0x134>
 80079d6:	2301      	movs	r3, #1
 80079d8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 80079dc:	f7fd fe8e 	bl	80056fc <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80079e0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80079e4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80079e6:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80079e8:	b2d8      	uxtb	r0, r3
 80079ea:	d171      	bne.n	8007ad0 <HAL_SPI_Receive+0x130>
  if ((pData == NULL) || (Size == 0U))
 80079ec:	f1b8 0f00 	cmp.w	r8, #0
 80079f0:	d05c      	beq.n	8007aac <HAL_SPI_Receive+0x10c>
 80079f2:	2e00      	cmp	r6, #0
 80079f4:	d05a      	beq.n	8007aac <HAL_SPI_Receive+0x10c>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80079f6:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80079f8:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80079fc:	2304      	movs	r3, #4
 80079fe:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a02:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007a06:	f04f 0300 	mov.w	r3, #0
 8007a0a:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007a0c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->RxXferCount = Size;
 8007a10:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007a12:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8007a14:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8007a16:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->RxXferSize  = Size;
 8007a18:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a1a:	6823      	ldr	r3, [r4, #0]
 8007a1c:	d107      	bne.n	8007a2e <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 8007a1e:	681a      	ldr	r2, [r3, #0]
 8007a20:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007a24:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8007a26:	681a      	ldr	r2, [r3, #0]
 8007a28:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8007a2c:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007a2e:	681a      	ldr	r2, [r3, #0]
 8007a30:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007a32:	bf5e      	ittt	pl
 8007a34:	681a      	ldrpl	r2, [r3, #0]
 8007a36:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007a3a:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007a3c:	68e3      	ldr	r3, [r4, #12]
 8007a3e:	b1f3      	cbz	r3, 8007a7e <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8007a40:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007a42:	b29b      	uxth	r3, r3
 8007a44:	b1fb      	cbz	r3, 8007a86 <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007a46:	6823      	ldr	r3, [r4, #0]
 8007a48:	689a      	ldr	r2, [r3, #8]
 8007a4a:	07d2      	lsls	r2, r2, #31
 8007a4c:	d535      	bpl.n	8007aba <HAL_SPI_Receive+0x11a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007a4e:	68da      	ldr	r2, [r3, #12]
 8007a50:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007a52:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007a56:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007a58:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007a5a:	3b01      	subs	r3, #1
 8007a5c:	b29b      	uxth	r3, r3
 8007a5e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007a60:	e7ee      	b.n	8007a40 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007a62:	6823      	ldr	r3, [r4, #0]
 8007a64:	689a      	ldr	r2, [r3, #8]
 8007a66:	07d0      	lsls	r0, r2, #31
 8007a68:	d518      	bpl.n	8007a9c <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007a6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007a6c:	7b1b      	ldrb	r3, [r3, #12]
 8007a6e:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007a70:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007a72:	3301      	adds	r3, #1
 8007a74:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007a76:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007a78:	3b01      	subs	r3, #1
 8007a7a:	b29b      	uxth	r3, r3
 8007a7c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007a7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007a80:	b29b      	uxth	r3, r3
 8007a82:	2b00      	cmp	r3, #0
 8007a84:	d1ed      	bne.n	8007a62 <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007a86:	463a      	mov	r2, r7
 8007a88:	4629      	mov	r1, r5
 8007a8a:	4620      	mov	r0, r4
 8007a8c:	f7ff fd3a 	bl	8007504 <SPI_EndRxTransaction>
 8007a90:	b9d8      	cbnz	r0, 8007aca <HAL_SPI_Receive+0x12a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007a92:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007a94:	3800      	subs	r0, #0
 8007a96:	bf18      	it	ne
 8007a98:	2001      	movne	r0, #1
error :
 8007a9a:	e007      	b.n	8007aac <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007a9c:	f7fd fe2e 	bl	80056fc <HAL_GetTick>
 8007aa0:	1bc0      	subs	r0, r0, r7
 8007aa2:	42a8      	cmp	r0, r5
 8007aa4:	d3eb      	bcc.n	8007a7e <HAL_SPI_Receive+0xde>
 8007aa6:	1c69      	adds	r1, r5, #1
 8007aa8:	d0e9      	beq.n	8007a7e <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 8007aaa:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007aac:	2301      	movs	r3, #1
 8007aae:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007ab2:	2300      	movs	r3, #0
 8007ab4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8007ab8:	e786      	b.n	80079c8 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007aba:	f7fd fe1f 	bl	80056fc <HAL_GetTick>
 8007abe:	1bc0      	subs	r0, r0, r7
 8007ac0:	42a8      	cmp	r0, r5
 8007ac2:	d3bd      	bcc.n	8007a40 <HAL_SPI_Receive+0xa0>
 8007ac4:	1c6b      	adds	r3, r5, #1
 8007ac6:	d0bb      	beq.n	8007a40 <HAL_SPI_Receive+0xa0>
 8007ac8:	e7ef      	b.n	8007aaa <HAL_SPI_Receive+0x10a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007aca:	2320      	movs	r3, #32
 8007acc:	6563      	str	r3, [r4, #84]	; 0x54
 8007ace:	e7e0      	b.n	8007a92 <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8007ad0:	2002      	movs	r0, #2
 8007ad2:	e7eb      	b.n	8007aac <HAL_SPI_Receive+0x10c>
  __HAL_LOCK(hspi);
 8007ad4:	2002      	movs	r0, #2
 8007ad6:	e777      	b.n	80079c8 <HAL_SPI_Receive+0x28>

08007ad8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8007ad8:	4770      	bx	lr
	...

08007adc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007adc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007ae0:	2b01      	cmp	r3, #1
 8007ae2:	d130      	bne.n	8007b46 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007ae4:	2302      	movs	r3, #2
 8007ae6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8007aea:	6803      	ldr	r3, [r0, #0]
 8007aec:	68da      	ldr	r2, [r3, #12]
 8007aee:	f042 0201 	orr.w	r2, r2, #1
 8007af2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007af4:	4a15      	ldr	r2, [pc, #84]	; (8007b4c <HAL_TIM_Base_Start_IT+0x70>)
 8007af6:	4293      	cmp	r3, r2
 8007af8:	d01a      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007afa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007afe:	d017      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b00:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007b04:	4293      	cmp	r3, r2
 8007b06:	d013      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b08:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007b0c:	4293      	cmp	r3, r2
 8007b0e:	d00f      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b10:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007b14:	4293      	cmp	r3, r2
 8007b16:	d00b      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b18:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007b1c:	4293      	cmp	r3, r2
 8007b1e:	d007      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b20:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8007b24:	4293      	cmp	r3, r2
 8007b26:	d003      	beq.n	8007b30 <HAL_TIM_Base_Start_IT+0x54>
 8007b28:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8007b2c:	4293      	cmp	r3, r2
 8007b2e:	d104      	bne.n	8007b3a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007b30:	689a      	ldr	r2, [r3, #8]
 8007b32:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007b36:	2a06      	cmp	r2, #6
 8007b38:	d003      	beq.n	8007b42 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007b3a:	681a      	ldr	r2, [r3, #0]
 8007b3c:	f042 0201 	orr.w	r2, r2, #1
 8007b40:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007b42:	2000      	movs	r0, #0
}
 8007b44:	4770      	bx	lr
    return HAL_ERROR;
 8007b46:	2001      	movs	r0, #1
 8007b48:	4770      	bx	lr
 8007b4a:	bf00      	nop
 8007b4c:	40010000 	.word	0x40010000

08007b50 <HAL_TIM_OC_DelayElapsedCallback>:
 8007b50:	4770      	bx	lr

08007b52 <HAL_TIM_IC_CaptureCallback>:
 8007b52:	4770      	bx	lr

08007b54 <HAL_TIM_PWM_PulseFinishedCallback>:
 8007b54:	4770      	bx	lr

08007b56 <HAL_TIM_TriggerCallback>:
 8007b56:	4770      	bx	lr

08007b58 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007b58:	6803      	ldr	r3, [r0, #0]
 8007b5a:	691a      	ldr	r2, [r3, #16]
 8007b5c:	0791      	lsls	r1, r2, #30
{
 8007b5e:	b510      	push	{r4, lr}
 8007b60:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8007b62:	d50e      	bpl.n	8007b82 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8007b64:	68da      	ldr	r2, [r3, #12]
 8007b66:	0792      	lsls	r2, r2, #30
 8007b68:	d50b      	bpl.n	8007b82 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8007b6a:	f06f 0202 	mvn.w	r2, #2
 8007b6e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007b70:	2201      	movs	r2, #1
 8007b72:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007b74:	699b      	ldr	r3, [r3, #24]
 8007b76:	079b      	lsls	r3, r3, #30
 8007b78:	d077      	beq.n	8007c6a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007b7a:	f7ff ffea 	bl	8007b52 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007b7e:	2300      	movs	r3, #0
 8007b80:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8007b82:	6823      	ldr	r3, [r4, #0]
 8007b84:	691a      	ldr	r2, [r3, #16]
 8007b86:	0750      	lsls	r0, r2, #29
 8007b88:	d510      	bpl.n	8007bac <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007b8a:	68da      	ldr	r2, [r3, #12]
 8007b8c:	0751      	lsls	r1, r2, #29
 8007b8e:	d50d      	bpl.n	8007bac <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8007b90:	f06f 0204 	mvn.w	r2, #4
 8007b94:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007b96:	2202      	movs	r2, #2
 8007b98:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007b9a:	699b      	ldr	r3, [r3, #24]
 8007b9c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007ba0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007ba2:	d068      	beq.n	8007c76 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007ba4:	f7ff ffd5 	bl	8007b52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007ba8:	2300      	movs	r3, #0
 8007baa:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007bac:	6823      	ldr	r3, [r4, #0]
 8007bae:	691a      	ldr	r2, [r3, #16]
 8007bb0:	0712      	lsls	r2, r2, #28
 8007bb2:	d50f      	bpl.n	8007bd4 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007bb4:	68da      	ldr	r2, [r3, #12]
 8007bb6:	0710      	lsls	r0, r2, #28
 8007bb8:	d50c      	bpl.n	8007bd4 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007bba:	f06f 0208 	mvn.w	r2, #8
 8007bbe:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007bc0:	2204      	movs	r2, #4
 8007bc2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007bc4:	69db      	ldr	r3, [r3, #28]
 8007bc6:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007bc8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007bca:	d05a      	beq.n	8007c82 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007bcc:	f7ff ffc1 	bl	8007b52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007bd0:	2300      	movs	r3, #0
 8007bd2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007bd4:	6823      	ldr	r3, [r4, #0]
 8007bd6:	691a      	ldr	r2, [r3, #16]
 8007bd8:	06d2      	lsls	r2, r2, #27
 8007bda:	d510      	bpl.n	8007bfe <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007bdc:	68da      	ldr	r2, [r3, #12]
 8007bde:	06d0      	lsls	r0, r2, #27
 8007be0:	d50d      	bpl.n	8007bfe <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8007be2:	f06f 0210 	mvn.w	r2, #16
 8007be6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007be8:	2208      	movs	r2, #8
 8007bea:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007bec:	69db      	ldr	r3, [r3, #28]
 8007bee:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007bf2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007bf4:	d04b      	beq.n	8007c8e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007bf6:	f7ff ffac 	bl	8007b52 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007bfa:	2300      	movs	r3, #0
 8007bfc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8007bfe:	6823      	ldr	r3, [r4, #0]
 8007c00:	691a      	ldr	r2, [r3, #16]
 8007c02:	07d1      	lsls	r1, r2, #31
 8007c04:	d508      	bpl.n	8007c18 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007c06:	68da      	ldr	r2, [r3, #12]
 8007c08:	07d2      	lsls	r2, r2, #31
 8007c0a:	d505      	bpl.n	8007c18 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007c0c:	f06f 0201 	mvn.w	r2, #1
 8007c10:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007c12:	4620      	mov	r0, r4
 8007c14:	f7f9 fdba 	bl	800178c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8007c18:	6823      	ldr	r3, [r4, #0]
 8007c1a:	691a      	ldr	r2, [r3, #16]
 8007c1c:	0610      	lsls	r0, r2, #24
 8007c1e:	d508      	bpl.n	8007c32 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8007c20:	68da      	ldr	r2, [r3, #12]
 8007c22:	0611      	lsls	r1, r2, #24
 8007c24:	d505      	bpl.n	8007c32 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8007c26:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8007c2a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8007c2c:	4620      	mov	r0, r4
 8007c2e:	f000 f8c8 	bl	8007dc2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8007c32:	6823      	ldr	r3, [r4, #0]
 8007c34:	691a      	ldr	r2, [r3, #16]
 8007c36:	0652      	lsls	r2, r2, #25
 8007c38:	d508      	bpl.n	8007c4c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8007c3a:	68da      	ldr	r2, [r3, #12]
 8007c3c:	0650      	lsls	r0, r2, #25
 8007c3e:	d505      	bpl.n	8007c4c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8007c40:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007c44:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007c46:	4620      	mov	r0, r4
 8007c48:	f7ff ff85 	bl	8007b56 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8007c4c:	6823      	ldr	r3, [r4, #0]
 8007c4e:	691a      	ldr	r2, [r3, #16]
 8007c50:	0691      	lsls	r1, r2, #26
 8007c52:	d522      	bpl.n	8007c9a <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8007c54:	68da      	ldr	r2, [r3, #12]
 8007c56:	0692      	lsls	r2, r2, #26
 8007c58:	d51f      	bpl.n	8007c9a <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007c5a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007c5e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8007c60:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007c62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8007c66:	f000 b8ab 	b.w	8007dc0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8007c6a:	f7ff ff71 	bl	8007b50 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007c6e:	4620      	mov	r0, r4
 8007c70:	f7ff ff70 	bl	8007b54 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c74:	e783      	b.n	8007b7e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007c76:	f7ff ff6b 	bl	8007b50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007c7a:	4620      	mov	r0, r4
 8007c7c:	f7ff ff6a 	bl	8007b54 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c80:	e792      	b.n	8007ba8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007c82:	f7ff ff65 	bl	8007b50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007c86:	4620      	mov	r0, r4
 8007c88:	f7ff ff64 	bl	8007b54 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c8c:	e7a0      	b.n	8007bd0 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007c8e:	f7ff ff5f 	bl	8007b50 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007c92:	4620      	mov	r0, r4
 8007c94:	f7ff ff5e 	bl	8007b54 <HAL_TIM_PWM_PulseFinishedCallback>
 8007c98:	e7af      	b.n	8007bfa <HAL_TIM_IRQHandler+0xa2>
}
 8007c9a:	bd10      	pop	{r4, pc}

08007c9c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007c9c:	4a30      	ldr	r2, [pc, #192]	; (8007d60 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8007c9e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007ca0:	4290      	cmp	r0, r2
 8007ca2:	d012      	beq.n	8007cca <TIM_Base_SetConfig+0x2e>
 8007ca4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007ca8:	d00f      	beq.n	8007cca <TIM_Base_SetConfig+0x2e>
 8007caa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007cae:	4290      	cmp	r0, r2
 8007cb0:	d00b      	beq.n	8007cca <TIM_Base_SetConfig+0x2e>
 8007cb2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007cb6:	4290      	cmp	r0, r2
 8007cb8:	d007      	beq.n	8007cca <TIM_Base_SetConfig+0x2e>
 8007cba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007cbe:	4290      	cmp	r0, r2
 8007cc0:	d003      	beq.n	8007cca <TIM_Base_SetConfig+0x2e>
 8007cc2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007cc6:	4290      	cmp	r0, r2
 8007cc8:	d119      	bne.n	8007cfe <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007cca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007ccc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8007cd0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007cd2:	4a23      	ldr	r2, [pc, #140]	; (8007d60 <TIM_Base_SetConfig+0xc4>)
 8007cd4:	4290      	cmp	r0, r2
 8007cd6:	d029      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007cd8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007cdc:	d026      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007cde:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8007ce2:	4290      	cmp	r0, r2
 8007ce4:	d022      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007ce6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007cea:	4290      	cmp	r0, r2
 8007cec:	d01e      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007cee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007cf2:	4290      	cmp	r0, r2
 8007cf4:	d01a      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007cf6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007cfa:	4290      	cmp	r0, r2
 8007cfc:	d016      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007cfe:	4a19      	ldr	r2, [pc, #100]	; (8007d64 <TIM_Base_SetConfig+0xc8>)
 8007d00:	4290      	cmp	r0, r2
 8007d02:	d013      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007d04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d08:	4290      	cmp	r0, r2
 8007d0a:	d00f      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007d0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d10:	4290      	cmp	r0, r2
 8007d12:	d00b      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007d14:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8007d18:	4290      	cmp	r0, r2
 8007d1a:	d007      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007d1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d20:	4290      	cmp	r0, r2
 8007d22:	d003      	beq.n	8007d2c <TIM_Base_SetConfig+0x90>
 8007d24:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007d28:	4290      	cmp	r0, r2
 8007d2a:	d103      	bne.n	8007d34 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007d2c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8007d2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007d32:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007d34:	694a      	ldr	r2, [r1, #20]
 8007d36:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007d3a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8007d3c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007d3e:	688b      	ldr	r3, [r1, #8]
 8007d40:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007d42:	680b      	ldr	r3, [r1, #0]
 8007d44:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007d46:	4b06      	ldr	r3, [pc, #24]	; (8007d60 <TIM_Base_SetConfig+0xc4>)
 8007d48:	4298      	cmp	r0, r3
 8007d4a:	d003      	beq.n	8007d54 <TIM_Base_SetConfig+0xb8>
 8007d4c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007d50:	4298      	cmp	r0, r3
 8007d52:	d101      	bne.n	8007d58 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007d54:	690b      	ldr	r3, [r1, #16]
 8007d56:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007d58:	2301      	movs	r3, #1
 8007d5a:	6143      	str	r3, [r0, #20]
}
 8007d5c:	4770      	bx	lr
 8007d5e:	bf00      	nop
 8007d60:	40010000 	.word	0x40010000
 8007d64:	40014000 	.word	0x40014000

08007d68 <HAL_TIM_Base_Init>:
{
 8007d68:	b510      	push	{r4, lr}
  if (htim == NULL)
 8007d6a:	4604      	mov	r4, r0
 8007d6c:	b330      	cbz	r0, 8007dbc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8007d6e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007d72:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d76:	b91b      	cbnz	r3, 8007d80 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007d78:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007d7c:	f7ff feac 	bl	8007ad8 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8007d80:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007d82:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007d84:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007d88:	1d21      	adds	r1, r4, #4
 8007d8a:	f7ff ff87 	bl	8007c9c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007d8e:	2301      	movs	r3, #1
 8007d90:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8007d94:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007d96:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8007d9a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8007d9e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8007da2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007da6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8007daa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8007dae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8007db2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8007db6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8007dba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007dbc:	2001      	movs	r0, #1
 8007dbe:	e7fc      	b.n	8007dba <HAL_TIM_Base_Init+0x52>

08007dc0 <HAL_TIMEx_CommutCallback>:
 8007dc0:	4770      	bx	lr

08007dc2 <HAL_TIMEx_BreakCallback>:
 8007dc2:	4770      	bx	lr

08007dc4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007dc8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8007dca:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8007dce:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8007dd2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8007dd6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007dda:	6809      	ldr	r1, [r1, #0]
 8007ddc:	2901      	cmp	r1, #1
 8007dde:	ea43 0304 	orr.w	r3, r3, r4
 8007de2:	4912      	ldr	r1, [pc, #72]	; (8007e2c <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8007de4:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007de6:	d00f      	beq.n	8007e08 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007de8:	431a      	orrs	r2, r3
 8007dea:	432a      	orrs	r2, r5
 8007dec:	ea42 0308 	orr.w	r3, r2, r8
 8007df0:	ea43 030e 	orr.w	r3, r3, lr
 8007df4:	ea43 030c 	orr.w	r3, r3, ip
 8007df8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007dfa:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007dfc:	4333      	orrs	r3, r6
 8007dfe:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007e00:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8007e02:	2000      	movs	r0, #0
 8007e04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007e08:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007e0a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007e0c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007e0e:	ea45 0208 	orr.w	r2, r5, r8
 8007e12:	ea42 020e 	orr.w	r2, r2, lr
 8007e16:	ea42 020c 	orr.w	r2, r2, ip
 8007e1a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007e1c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007e20:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007e22:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007e24:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007e26:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007e28:	6042      	str	r2, [r0, #4]
 8007e2a:	e7ea      	b.n	8007e02 <FMC_SDRAM_Init+0x3e>
 8007e2c:	ffff8000 	.word	0xffff8000

08007e30 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 8007e30:	68cb      	ldr	r3, [r1, #12]
{
 8007e32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e34:	680c      	ldr	r4, [r1, #0]
 8007e36:	688e      	ldr	r6, [r1, #8]
 8007e38:	690d      	ldr	r5, [r1, #16]
 8007e3a:	1e5f      	subs	r7, r3, #1
 8007e3c:	694b      	ldr	r3, [r1, #20]
 8007e3e:	f104 3cff 	add.w	ip, r4, #4294967295
 8007e42:	684c      	ldr	r4, [r1, #4]
 8007e44:	6989      	ldr	r1, [r1, #24]
 8007e46:	3b01      	subs	r3, #1
 8007e48:	051b      	lsls	r3, r3, #20
 8007e4a:	3c01      	subs	r4, #1
 8007e4c:	3e01      	subs	r6, #1
 8007e4e:	3d01      	subs	r5, #1
 8007e50:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8007e52:	2a01      	cmp	r2, #1
 8007e54:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8007e58:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8007e5c:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8007e60:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8007e64:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8007e68:	d00c      	beq.n	8007e84 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007e6a:	ea43 030c 	orr.w	r3, r3, ip
 8007e6e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007e70:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007e72:	4333      	orrs	r3, r6
 8007e74:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007e76:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8007e7a:	430b      	orrs	r3, r1
 8007e7c:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007e7e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8007e80:	2000      	movs	r0, #0
 8007e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8007e84:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8007e86:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8007e8a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007e8e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007e90:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007e92:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8007e96:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007e98:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007e9a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007e9c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007ea0:	430a      	orrs	r2, r1
 8007ea2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8007ea4:	60c2      	str	r2, [r0, #12]
 8007ea6:	e7eb      	b.n	8007e80 <FMC_SDRAM_Timing_Init+0x50>

08007ea8 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007ea8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8007eaa:	2300      	movs	r3, #0
 8007eac:	9301      	str	r3, [sp, #4]
{
 8007eae:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007eb0:	e9d1 3200 	ldrd	r3, r2, [r1]
 8007eb4:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8007eb6:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007eb8:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007ebc:	688a      	ldr	r2, [r1, #8]
 8007ebe:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007ec0:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8007ec4:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8007ec6:	9b01      	ldr	r3, [sp, #4]
 8007ec8:	6103      	str	r3, [r0, #16]
{
 8007eca:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007ecc:	f7fd fc16 	bl	80056fc <HAL_GetTick>
 8007ed0:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007ed2:	69a3      	ldr	r3, [r4, #24]
 8007ed4:	f013 0320 	ands.w	r3, r3, #32
 8007ed8:	d101      	bne.n	8007ede <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007eda:	4618      	mov	r0, r3
 8007edc:	e003      	b.n	8007ee6 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8007ede:	1c6b      	adds	r3, r5, #1
 8007ee0:	d0f7      	beq.n	8007ed2 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007ee2:	b915      	cbnz	r5, 8007eea <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8007ee4:	2003      	movs	r0, #3
}
 8007ee6:	b002      	add	sp, #8
 8007ee8:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007eea:	f7fd fc07 	bl	80056fc <HAL_GetTick>
 8007eee:	1b80      	subs	r0, r0, r6
 8007ef0:	42a8      	cmp	r0, r5
 8007ef2:	d9ee      	bls.n	8007ed2 <FMC_SDRAM_SendCommand+0x2a>
 8007ef4:	e7f6      	b.n	8007ee4 <FMC_SDRAM_SendCommand+0x3c>

08007ef6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8007ef6:	6943      	ldr	r3, [r0, #20]
 8007ef8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007efc:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8007efe:	2000      	movs	r0, #0
 8007f00:	4770      	bx	lr
	...

08007f04 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8007f04:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8007f06:	4b05      	ldr	r3, [pc, #20]	; (8007f1c <SysTick_Handler+0x18>)
 8007f08:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8007f0a:	f001 fe51 	bl	8009bb0 <xTaskGetSchedulerState>
 8007f0e:	2801      	cmp	r0, #1
 8007f10:	d003      	beq.n	8007f1a <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8007f12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8007f16:	f000 bbed 	b.w	80086f4 <xPortSysTickHandler>
}
 8007f1a:	bd08      	pop	{r3, pc}
 8007f1c:	e000e010 	.word	0xe000e010

08007f20 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007f20:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8007f24:	b92b      	cbnz	r3, 8007f32 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8007f26:	4b06      	ldr	r3, [pc, #24]	; (8007f40 <osKernelInitialize+0x20>)
 8007f28:	6818      	ldr	r0, [r3, #0]
 8007f2a:	b928      	cbnz	r0, 8007f38 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8007f2c:	2201      	movs	r2, #1
 8007f2e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8007f30:	4770      	bx	lr
    stat = osErrorISR;
 8007f32:	f06f 0005 	mvn.w	r0, #5
 8007f36:	4770      	bx	lr
    } else {
      stat = osError;
 8007f38:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8007f3c:	4770      	bx	lr
 8007f3e:	bf00      	nop
 8007f40:	200022a4 	.word	0x200022a4

08007f44 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8007f44:	b510      	push	{r4, lr}
 8007f46:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8007f4a:	b95c      	cbnz	r4, 8007f64 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8007f4c:	4b08      	ldr	r3, [pc, #32]	; (8007f70 <osKernelStart+0x2c>)
 8007f4e:	681a      	ldr	r2, [r3, #0]
 8007f50:	2a01      	cmp	r2, #1
 8007f52:	d10a      	bne.n	8007f6a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007f54:	4a07      	ldr	r2, [pc, #28]	; (8007f74 <osKernelStart+0x30>)
 8007f56:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8007f58:	2202      	movs	r2, #2
 8007f5a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8007f5c:	f001 fb94 	bl	8009688 <vTaskStartScheduler>
      stat = osOK;
 8007f60:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8007f62:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8007f64:	f06f 0005 	mvn.w	r0, #5
 8007f68:	e7fb      	b.n	8007f62 <osKernelStart+0x1e>
      stat = osError;
 8007f6a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8007f6e:	e7f8      	b.n	8007f62 <osKernelStart+0x1e>
 8007f70:	200022a4 	.word	0x200022a4
 8007f74:	e000ed00 	.word	0xe000ed00

08007f78 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007f7a:	b087      	sub	sp, #28
 8007f7c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007f7e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007f80:	460b      	mov	r3, r1
  hTask = NULL;
 8007f82:	9205      	str	r2, [sp, #20]
 8007f84:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8007f88:	b9d2      	cbnz	r2, 8007fc0 <osThreadNew+0x48>
 8007f8a:	b1c8      	cbz	r0, 8007fc0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007f8c:	2c00      	cmp	r4, #0
 8007f8e:	d02f      	beq.n	8007ff0 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007f90:	69a5      	ldr	r5, [r4, #24]
 8007f92:	2d00      	cmp	r5, #0
 8007f94:	bf08      	it	eq
 8007f96:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007f98:	1e69      	subs	r1, r5, #1
 8007f9a:	2937      	cmp	r1, #55	; 0x37
 8007f9c:	46ac      	mov	ip, r5
 8007f9e:	d82b      	bhi.n	8007ff8 <osThreadNew+0x80>
 8007fa0:	6861      	ldr	r1, [r4, #4]
 8007fa2:	07c9      	lsls	r1, r1, #31
 8007fa4:	d428      	bmi.n	8007ff8 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8007fa6:	6966      	ldr	r6, [r4, #20]
 8007fa8:	b16e      	cbz	r6, 8007fc6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007faa:	08b2      	lsrs	r2, r6, #2
 8007fac:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007fb0:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007fb2:	b157      	cbz	r7, 8007fca <osThreadNew+0x52>
 8007fb4:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8007fb8:	d902      	bls.n	8007fc0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007fba:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007fbc:	b104      	cbz	r4, 8007fc0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007fbe:	b9ee      	cbnz	r6, 8007ffc <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007fc0:	9805      	ldr	r0, [sp, #20]
}
 8007fc2:	b007      	add	sp, #28
 8007fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8007fc6:	2280      	movs	r2, #128	; 0x80
 8007fc8:	e7f0      	b.n	8007fac <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007fca:	f1be 0f00 	cmp.w	lr, #0
 8007fce:	d1f7      	bne.n	8007fc0 <osThreadNew+0x48>
      if (mem == 0) {
 8007fd0:	6924      	ldr	r4, [r4, #16]
 8007fd2:	2c00      	cmp	r4, #0
 8007fd4:	d1f4      	bne.n	8007fc0 <osThreadNew+0x48>
 8007fd6:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007fd8:	a905      	add	r1, sp, #20
 8007fda:	e9cd c100 	strd	ip, r1, [sp]
 8007fde:	b292      	uxth	r2, r2
 8007fe0:	4621      	mov	r1, r4
 8007fe2:	f001 fb23 	bl	800962c <xTaskCreate>
 8007fe6:	2801      	cmp	r0, #1
            hTask = NULL;
 8007fe8:	bf1c      	itt	ne
 8007fea:	2300      	movne	r3, #0
 8007fec:	9305      	strne	r3, [sp, #20]
 8007fee:	e7e7      	b.n	8007fc0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8007ff0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8007ff4:	2280      	movs	r2, #128	; 0x80
 8007ff6:	e7ef      	b.n	8007fd8 <osThreadNew+0x60>
        return (NULL);
 8007ff8:	4610      	mov	r0, r2
 8007ffa:	e7e2      	b.n	8007fc2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007ffc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008000:	9500      	str	r5, [sp, #0]
 8008002:	f001 fadb 	bl	80095bc <xTaskCreateStatic>
 8008006:	9005      	str	r0, [sp, #20]
 8008008:	e7da      	b.n	8007fc0 <osThreadNew+0x48>
	...

0800800c <osThreadYield>:
 800800c:	f3ef 8005 	mrs	r0, IPSR
}

osStatus_t osThreadYield (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008010:	b940      	cbnz	r0, 8008024 <osThreadYield+0x18>
    stat = osErrorISR;
  } else {
    stat = osOK;
    taskYIELD();
 8008012:	4b06      	ldr	r3, [pc, #24]	; (800802c <osThreadYield+0x20>)
 8008014:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008018:	601a      	str	r2, [r3, #0]
 800801a:	f3bf 8f4f 	dsb	sy
 800801e:	f3bf 8f6f 	isb	sy
 8008022:	4770      	bx	lr
    stat = osErrorISR;
 8008024:	f06f 0005 	mvn.w	r0, #5
  }

  return (stat);
}
 8008028:	4770      	bx	lr
 800802a:	bf00      	nop
 800802c:	e000ed04 	.word	0xe000ed04

08008030 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008030:	b510      	push	{r4, lr}
 8008032:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008036:	b924      	cbnz	r4, 8008042 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008038:	b110      	cbz	r0, 8008040 <osDelay+0x10>
      vTaskDelay(ticks);
 800803a:	f001 fc89 	bl	8009950 <vTaskDelay>
    stat = osOK;
 800803e:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8008040:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008042:	f06f 0005 	mvn.w	r0, #5
 8008046:	e7fb      	b.n	8008040 <osDelay+0x10>

08008048 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008048:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800804a:	4604      	mov	r4, r0
 800804c:	460e      	mov	r6, r1
 800804e:	4615      	mov	r5, r2
 8008050:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008054:	b11a      	cbz	r2, 800805e <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008056:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008058:	4620      	mov	r0, r4
 800805a:	b003      	add	sp, #12
 800805c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800805e:	2800      	cmp	r0, #0
 8008060:	d0f9      	beq.n	8008056 <osSemaphoreNew+0xe>
 8008062:	4288      	cmp	r0, r1
 8008064:	d3f7      	bcc.n	8008056 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8008066:	b1e5      	cbz	r5, 80080a2 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008068:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800806c:	b1bb      	cbz	r3, 800809e <osSemaphoreNew+0x56>
 800806e:	2f4f      	cmp	r7, #79	; 0x4f
 8008070:	d9f1      	bls.n	8008056 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008072:	2801      	cmp	r0, #1
 8008074:	d12a      	bne.n	80080cc <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008076:	2103      	movs	r1, #3
 8008078:	9100      	str	r1, [sp, #0]
 800807a:	4611      	mov	r1, r2
 800807c:	f000 fcea 	bl	8008a54 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008080:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008082:	2800      	cmp	r0, #0
 8008084:	d0e7      	beq.n	8008056 <osSemaphoreNew+0xe>
 8008086:	b1de      	cbz	r6, 80080c0 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008088:	2300      	movs	r3, #0
 800808a:	461a      	mov	r2, r3
 800808c:	4619      	mov	r1, r3
 800808e:	f000 fd97 	bl	8008bc0 <xQueueGenericSend>
 8008092:	2801      	cmp	r0, #1
 8008094:	d014      	beq.n	80080c0 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8008096:	4620      	mov	r0, r4
 8008098:	f001 f8d8 	bl	800924c <vQueueDelete>
 800809c:	e7db      	b.n	8008056 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800809e:	2f00      	cmp	r7, #0
 80080a0:	d1d9      	bne.n	8008056 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80080a2:	2c01      	cmp	r4, #1
 80080a4:	d105      	bne.n	80080b2 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80080a6:	2203      	movs	r2, #3
 80080a8:	2100      	movs	r1, #0
 80080aa:	4620      	mov	r0, r4
 80080ac:	f000 fd20 	bl	8008af0 <xQueueGenericCreate>
 80080b0:	e7e6      	b.n	8008080 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80080b2:	4620      	mov	r0, r4
 80080b4:	4631      	mov	r1, r6
 80080b6:	f000 fd64 	bl	8008b82 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80080ba:	4604      	mov	r4, r0
 80080bc:	2800      	cmp	r0, #0
 80080be:	d0ca      	beq.n	8008056 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80080c0:	b955      	cbnz	r5, 80080d8 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80080c2:	4629      	mov	r1, r5
 80080c4:	4620      	mov	r0, r4
 80080c6:	f001 f897 	bl	80091f8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80080ca:	e7c5      	b.n	8008058 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80080cc:	461a      	mov	r2, r3
 80080ce:	f000 fd36 	bl	8008b3e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80080d2:	4604      	mov	r4, r0
 80080d4:	2800      	cmp	r0, #0
 80080d6:	d0be      	beq.n	8008056 <osSemaphoreNew+0xe>
          name = attr->name;
 80080d8:	682d      	ldr	r5, [r5, #0]
 80080da:	e7f2      	b.n	80080c2 <osSemaphoreNew+0x7a>

080080dc <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80080dc:	b513      	push	{r0, r1, r4, lr}
 80080de:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80080e0:	b1f8      	cbz	r0, 8008122 <osSemaphoreAcquire+0x46>
 80080e2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80080e6:	b1a3      	cbz	r3, 8008112 <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 80080e8:	b9d9      	cbnz	r1, 8008122 <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80080ea:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80080ec:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80080ee:	f001 f833 	bl	8009158 <xQueueReceiveFromISR>
 80080f2:	2801      	cmp	r0, #1
 80080f4:	d112      	bne.n	800811c <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80080f6:	9b01      	ldr	r3, [sp, #4]
 80080f8:	b913      	cbnz	r3, 8008100 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80080fa:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80080fc:	b002      	add	sp, #8
 80080fe:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8008100:	4b0b      	ldr	r3, [pc, #44]	; (8008130 <osSemaphoreAcquire+0x54>)
 8008102:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008106:	601a      	str	r2, [r3, #0]
 8008108:	f3bf 8f4f 	dsb	sy
 800810c:	f3bf 8f6f 	isb	sy
 8008110:	e7f3      	b.n	80080fa <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008112:	f000 ff5d 	bl	8008fd0 <xQueueSemaphoreTake>
 8008116:	2801      	cmp	r0, #1
 8008118:	d0ef      	beq.n	80080fa <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800811a:	b92c      	cbnz	r4, 8008128 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 800811c:	f06f 0002 	mvn.w	r0, #2
 8008120:	e7ec      	b.n	80080fc <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8008122:	f06f 0003 	mvn.w	r0, #3
 8008126:	e7e9      	b.n	80080fc <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8008128:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800812c:	e7e6      	b.n	80080fc <osSemaphoreAcquire+0x20>
 800812e:	bf00      	nop
 8008130:	e000ed04 	.word	0xe000ed04

08008134 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008134:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008136:	b300      	cbz	r0, 800817a <osSemaphoreRelease+0x46>
 8008138:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800813c:	b1a3      	cbz	r3, 8008168 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800813e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008140:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008142:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008144:	f000 fe50 	bl	8008de8 <xQueueGiveFromISR>
 8008148:	2801      	cmp	r0, #1
 800814a:	d113      	bne.n	8008174 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800814c:	9b01      	ldr	r3, [sp, #4]
 800814e:	b913      	cbnz	r3, 8008156 <osSemaphoreRelease+0x22>
  stat = osOK;
 8008150:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8008152:	b002      	add	sp, #8
 8008154:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008156:	4b0a      	ldr	r3, [pc, #40]	; (8008180 <osSemaphoreRelease+0x4c>)
 8008158:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800815c:	601a      	str	r2, [r3, #0]
 800815e:	f3bf 8f4f 	dsb	sy
 8008162:	f3bf 8f6f 	isb	sy
 8008166:	e7f3      	b.n	8008150 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008168:	461a      	mov	r2, r3
 800816a:	4619      	mov	r1, r3
 800816c:	f000 fd28 	bl	8008bc0 <xQueueGenericSend>
 8008170:	2801      	cmp	r0, #1
 8008172:	d0ed      	beq.n	8008150 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8008174:	f06f 0002 	mvn.w	r0, #2
 8008178:	e7eb      	b.n	8008152 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800817a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800817e:	e7e8      	b.n	8008152 <osSemaphoreRelease+0x1e>
 8008180:	e000ed04 	.word	0xe000ed04

08008184 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008184:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008186:	4606      	mov	r6, r0
 8008188:	460d      	mov	r5, r1
 800818a:	4614      	mov	r4, r2
 800818c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008190:	b11f      	cbz	r7, 800819a <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008192:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008194:	4628      	mov	r0, r5
 8008196:	b003      	add	sp, #12
 8008198:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800819a:	2800      	cmp	r0, #0
 800819c:	d0f9      	beq.n	8008192 <osMessageQueueNew+0xe>
 800819e:	2900      	cmp	r1, #0
 80081a0:	d0f7      	beq.n	8008192 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80081a2:	b1da      	cbz	r2, 80081dc <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80081a4:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80081a8:	b183      	cbz	r3, 80081cc <osMessageQueueNew+0x48>
 80081aa:	2a4f      	cmp	r2, #79	; 0x4f
 80081ac:	d9f1      	bls.n	8008192 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80081ae:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80081b0:	2a00      	cmp	r2, #0
 80081b2:	d0ee      	beq.n	8008192 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80081b4:	6966      	ldr	r6, [r4, #20]
 80081b6:	4345      	muls	r5, r0
 80081b8:	42ae      	cmp	r6, r5
 80081ba:	d3ea      	bcc.n	8008192 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80081bc:	9700      	str	r7, [sp, #0]
 80081be:	f000 fc49 	bl	8008a54 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80081c2:	4605      	mov	r5, r0
 80081c4:	2800      	cmp	r0, #0
 80081c6:	d0e4      	beq.n	8008192 <osMessageQueueNew+0xe>
        name = attr->name;
 80081c8:	6824      	ldr	r4, [r4, #0]
 80081ca:	e011      	b.n	80081f0 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80081cc:	2a00      	cmp	r2, #0
 80081ce:	d1e0      	bne.n	8008192 <osMessageQueueNew+0xe>
 80081d0:	6923      	ldr	r3, [r4, #16]
 80081d2:	2b00      	cmp	r3, #0
 80081d4:	d1dd      	bne.n	8008192 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80081d6:	6963      	ldr	r3, [r4, #20]
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d1da      	bne.n	8008192 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80081dc:	4629      	mov	r1, r5
 80081de:	2200      	movs	r2, #0
 80081e0:	4630      	mov	r0, r6
 80081e2:	f000 fc85 	bl	8008af0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80081e6:	4605      	mov	r5, r0
 80081e8:	2800      	cmp	r0, #0
 80081ea:	d0d2      	beq.n	8008192 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80081ec:	2c00      	cmp	r4, #0
 80081ee:	d1eb      	bne.n	80081c8 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80081f0:	4621      	mov	r1, r4
 80081f2:	4628      	mov	r0, r5
 80081f4:	f001 f800 	bl	80091f8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80081f8:	e7cc      	b.n	8008194 <osMessageQueueNew+0x10>
	...

080081fc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80081fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80081fe:	461c      	mov	r4, r3
 8008200:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008204:	b1b6      	cbz	r6, 8008234 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008206:	b308      	cbz	r0, 800824c <osMessageQueuePut+0x50>
 8008208:	b301      	cbz	r1, 800824c <osMessageQueuePut+0x50>
 800820a:	b9fb      	cbnz	r3, 800824c <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800820c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800820e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008210:	f000 fd88 	bl	8008d24 <xQueueGenericSendFromISR>
 8008214:	2801      	cmp	r0, #1
 8008216:	d116      	bne.n	8008246 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008218:	9b01      	ldr	r3, [sp, #4]
 800821a:	b913      	cbnz	r3, 8008222 <osMessageQueuePut+0x26>
  stat = osOK;
 800821c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800821e:	b002      	add	sp, #8
 8008220:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008222:	4b0d      	ldr	r3, [pc, #52]	; (8008258 <osMessageQueuePut+0x5c>)
 8008224:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008228:	601a      	str	r2, [r3, #0]
 800822a:	f3bf 8f4f 	dsb	sy
 800822e:	f3bf 8f6f 	isb	sy
 8008232:	e7f3      	b.n	800821c <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008234:	b150      	cbz	r0, 800824c <osMessageQueuePut+0x50>
 8008236:	b149      	cbz	r1, 800824c <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008238:	4633      	mov	r3, r6
 800823a:	4622      	mov	r2, r4
 800823c:	f000 fcc0 	bl	8008bc0 <xQueueGenericSend>
 8008240:	2801      	cmp	r0, #1
 8008242:	d0eb      	beq.n	800821c <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008244:	b92c      	cbnz	r4, 8008252 <osMessageQueuePut+0x56>
          stat = osErrorResource;
 8008246:	f06f 0002 	mvn.w	r0, #2
 800824a:	e7e8      	b.n	800821e <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800824c:	f06f 0003 	mvn.w	r0, #3
 8008250:	e7e5      	b.n	800821e <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8008252:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008256:	e7e2      	b.n	800821e <osMessageQueuePut+0x22>
 8008258:	e000ed04 	.word	0xe000ed04

0800825c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800825c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800825e:	461c      	mov	r4, r3
 8008260:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008264:	b1b3      	cbz	r3, 8008294 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008266:	b300      	cbz	r0, 80082aa <osMessageQueueGet+0x4e>
 8008268:	b1f9      	cbz	r1, 80082aa <osMessageQueueGet+0x4e>
 800826a:	b9f4      	cbnz	r4, 80082aa <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800826c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800826e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008270:	f000 ff72 	bl	8009158 <xQueueReceiveFromISR>
 8008274:	2801      	cmp	r0, #1
 8008276:	d115      	bne.n	80082a4 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008278:	9b01      	ldr	r3, [sp, #4]
 800827a:	b913      	cbnz	r3, 8008282 <osMessageQueueGet+0x26>
  stat = osOK;
 800827c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800827e:	b003      	add	sp, #12
 8008280:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008282:	4b0d      	ldr	r3, [pc, #52]	; (80082b8 <osMessageQueueGet+0x5c>)
 8008284:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008288:	601a      	str	r2, [r3, #0]
 800828a:	f3bf 8f4f 	dsb	sy
 800828e:	f3bf 8f6f 	isb	sy
 8008292:	e7f3      	b.n	800827c <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008294:	b148      	cbz	r0, 80082aa <osMessageQueueGet+0x4e>
 8008296:	b141      	cbz	r1, 80082aa <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008298:	4622      	mov	r2, r4
 800829a:	f000 fdf9 	bl	8008e90 <xQueueReceive>
 800829e:	2801      	cmp	r0, #1
 80082a0:	d0ec      	beq.n	800827c <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80082a2:	b92c      	cbnz	r4, 80082b0 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 80082a4:	f06f 0002 	mvn.w	r0, #2
 80082a8:	e7e9      	b.n	800827e <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80082aa:	f06f 0003 	mvn.w	r0, #3
 80082ae:	e7e6      	b.n	800827e <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80082b0:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80082b4:	e7e3      	b.n	800827e <osMessageQueueGet+0x22>
 80082b6:	bf00      	nop
 80082b8:	e000ed04 	.word	0xe000ed04

080082bc <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80082bc:	4b03      	ldr	r3, [pc, #12]	; (80082cc <vApplicationGetIdleTaskMemory+0x10>)
 80082be:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80082c0:	4b03      	ldr	r3, [pc, #12]	; (80082d0 <vApplicationGetIdleTaskMemory+0x14>)
 80082c2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80082c4:	2380      	movs	r3, #128	; 0x80
 80082c6:	6013      	str	r3, [r2, #0]
}
 80082c8:	4770      	bx	lr
 80082ca:	bf00      	nop
 80082cc:	200021e4 	.word	0x200021e4
 80082d0:	20001fe4 	.word	0x20001fe4

080082d4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80082d4:	4b03      	ldr	r3, [pc, #12]	; (80082e4 <vApplicationGetTimerTaskMemory+0x10>)
 80082d6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80082d8:	4b03      	ldr	r3, [pc, #12]	; (80082e8 <vApplicationGetTimerTaskMemory+0x14>)
 80082da:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80082dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80082e0:	6013      	str	r3, [r2, #0]
}
 80082e2:	4770      	bx	lr
 80082e4:	200026a8 	.word	0x200026a8
 80082e8:	200022a8 	.word	0x200022a8

080082ec <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80082ec:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80082ee:	4b0f      	ldr	r3, [pc, #60]	; (800832c <prvInsertBlockIntoFreeList+0x40>)
 80082f0:	461a      	mov	r2, r3
 80082f2:	681b      	ldr	r3, [r3, #0]
 80082f4:	4283      	cmp	r3, r0
 80082f6:	d3fb      	bcc.n	80082f0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80082f8:	6854      	ldr	r4, [r2, #4]
 80082fa:	1911      	adds	r1, r2, r4
 80082fc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80082fe:	bf01      	itttt	eq
 8008300:	6841      	ldreq	r1, [r0, #4]
 8008302:	4610      	moveq	r0, r2
 8008304:	1909      	addeq	r1, r1, r4
 8008306:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008308:	6844      	ldr	r4, [r0, #4]
 800830a:	1901      	adds	r1, r0, r4
 800830c:	428b      	cmp	r3, r1
 800830e:	d107      	bne.n	8008320 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008310:	4907      	ldr	r1, [pc, #28]	; (8008330 <prvInsertBlockIntoFreeList+0x44>)
 8008312:	6809      	ldr	r1, [r1, #0]
 8008314:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008316:	bf1f      	itttt	ne
 8008318:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800831a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800831c:	1909      	addne	r1, r1, r4
 800831e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008320:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008322:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008324:	bf18      	it	ne
 8008326:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008328:	bd10      	pop	{r4, pc}
 800832a:	bf00      	nop
 800832c:	20012780 	.word	0x20012780
 8008330:	20002768 	.word	0x20002768

08008334 <pvPortMalloc>:
{
 8008334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008338:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800833a:	f001 f9f1 	bl	8009720 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800833e:	4b3e      	ldr	r3, [pc, #248]	; (8008438 <pvPortMalloc+0x104>)
 8008340:	483e      	ldr	r0, [pc, #248]	; (800843c <pvPortMalloc+0x108>)
 8008342:	681a      	ldr	r2, [r3, #0]
 8008344:	469c      	mov	ip, r3
 8008346:	b9d2      	cbnz	r2, 800837e <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8008348:	4a3d      	ldr	r2, [pc, #244]	; (8008440 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800834a:	4b3e      	ldr	r3, [pc, #248]	; (8008444 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800834c:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800834e:	bf1c      	itt	ne
 8008350:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008352:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008356:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008358:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800835a:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800835c:	4b3a      	ldr	r3, [pc, #232]	; (8008448 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800835e:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008362:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008366:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008368:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800836c:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008370:	4b36      	ldr	r3, [pc, #216]	; (800844c <pvPortMalloc+0x118>)
 8008372:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008374:	4b36      	ldr	r3, [pc, #216]	; (8008450 <pvPortMalloc+0x11c>)
 8008376:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008378:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800837c:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800837e:	6807      	ldr	r7, [r0, #0]
 8008380:	4227      	tst	r7, r4
 8008382:	d153      	bne.n	800842c <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8008384:	2c00      	cmp	r4, #0
 8008386:	d044      	beq.n	8008412 <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 8008388:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800838c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800838e:	bf1c      	itt	ne
 8008390:	f023 0307 	bicne.w	r3, r3, #7
 8008394:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008396:	2b00      	cmp	r3, #0
 8008398:	d048      	beq.n	800842c <pvPortMalloc+0xf8>
 800839a:	4a2d      	ldr	r2, [pc, #180]	; (8008450 <pvPortMalloc+0x11c>)
 800839c:	6816      	ldr	r6, [r2, #0]
 800839e:	429e      	cmp	r6, r3
 80083a0:	4690      	mov	r8, r2
 80083a2:	d343      	bcc.n	800842c <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 80083a4:	4a27      	ldr	r2, [pc, #156]	; (8008444 <pvPortMalloc+0x110>)
 80083a6:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80083a8:	6869      	ldr	r1, [r5, #4]
 80083aa:	4299      	cmp	r1, r3
 80083ac:	d201      	bcs.n	80083b2 <pvPortMalloc+0x7e>
 80083ae:	6828      	ldr	r0, [r5, #0]
 80083b0:	b9a8      	cbnz	r0, 80083de <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 80083b2:	f8dc 0000 	ldr.w	r0, [ip]
 80083b6:	42a8      	cmp	r0, r5
 80083b8:	d038      	beq.n	800842c <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80083ba:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80083bc:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80083be:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80083c0:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80083c2:	2910      	cmp	r1, #16
 80083c4:	d912      	bls.n	80083ec <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80083c6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80083c8:	0742      	lsls	r2, r0, #29
 80083ca:	d00b      	beq.n	80083e4 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80083cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083d0:	f383 8811 	msr	BASEPRI, r3
 80083d4:	f3bf 8f6f 	isb	sy
 80083d8:	f3bf 8f4f 	dsb	sy
 80083dc:	e7fe      	b.n	80083dc <pvPortMalloc+0xa8>
 80083de:	462a      	mov	r2, r5
 80083e0:	4605      	mov	r5, r0
 80083e2:	e7e1      	b.n	80083a8 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80083e4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80083e6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80083e8:	f7ff ff80 	bl	80082ec <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083ec:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083ee:	4917      	ldr	r1, [pc, #92]	; (800844c <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 80083f0:	4a18      	ldr	r2, [pc, #96]	; (8008454 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80083f2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083f4:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80083f6:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80083f8:	2300      	movs	r3, #0
 80083fa:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80083fc:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80083fe:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008402:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8008404:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008408:	bf38      	it	cc
 800840a:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800840c:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800840e:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8008410:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8008412:	f001 fa29 	bl	8009868 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008416:	0763      	lsls	r3, r4, #29
 8008418:	d00a      	beq.n	8008430 <pvPortMalloc+0xfc>
 800841a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800841e:	f383 8811 	msr	BASEPRI, r3
 8008422:	f3bf 8f6f 	isb	sy
 8008426:	f3bf 8f4f 	dsb	sy
 800842a:	e7fe      	b.n	800842a <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 800842c:	2400      	movs	r4, #0
 800842e:	e7f0      	b.n	8008412 <pvPortMalloc+0xde>
}
 8008430:	4620      	mov	r0, r4
 8008432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008436:	bf00      	nop
 8008438:	20002768 	.word	0x20002768
 800843c:	2001276c 	.word	0x2001276c
 8008440:	2000276c 	.word	0x2000276c
 8008444:	20012780 	.word	0x20012780
 8008448:	20012764 	.word	0x20012764
 800844c:	20012774 	.word	0x20012774
 8008450:	20012770 	.word	0x20012770
 8008454:	20012778 	.word	0x20012778

08008458 <vPortFree>:
{
 8008458:	b510      	push	{r4, lr}
	if( pv != NULL )
 800845a:	4604      	mov	r4, r0
 800845c:	b390      	cbz	r0, 80084c4 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800845e:	4a1a      	ldr	r2, [pc, #104]	; (80084c8 <vPortFree+0x70>)
 8008460:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008464:	6812      	ldr	r2, [r2, #0]
 8008466:	4213      	tst	r3, r2
 8008468:	d108      	bne.n	800847c <vPortFree+0x24>
 800846a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800846e:	f383 8811 	msr	BASEPRI, r3
 8008472:	f3bf 8f6f 	isb	sy
 8008476:	f3bf 8f4f 	dsb	sy
 800847a:	e7fe      	b.n	800847a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800847c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008480:	b141      	cbz	r1, 8008494 <vPortFree+0x3c>
 8008482:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008486:	f383 8811 	msr	BASEPRI, r3
 800848a:	f3bf 8f6f 	isb	sy
 800848e:	f3bf 8f4f 	dsb	sy
 8008492:	e7fe      	b.n	8008492 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008494:	ea23 0302 	bic.w	r3, r3, r2
 8008498:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800849c:	f001 f940 	bl	8009720 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80084a0:	4a0a      	ldr	r2, [pc, #40]	; (80084cc <vPortFree+0x74>)
 80084a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80084a6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80084a8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80084ac:	440b      	add	r3, r1
 80084ae:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80084b0:	f7ff ff1c 	bl	80082ec <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80084b4:	4a06      	ldr	r2, [pc, #24]	; (80084d0 <vPortFree+0x78>)
 80084b6:	6813      	ldr	r3, [r2, #0]
}
 80084b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80084bc:	3301      	adds	r3, #1
 80084be:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80084c0:	f001 b9d2 	b.w	8009868 <xTaskResumeAll>
}
 80084c4:	bd10      	pop	{r4, pc}
 80084c6:	bf00      	nop
 80084c8:	2001276c 	.word	0x2001276c
 80084cc:	20012770 	.word	0x20012770
 80084d0:	2001277c 	.word	0x2001277c

080084d4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084d4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80084d8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084dc:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084e0:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80084e2:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80084e4:	2300      	movs	r3, #0
 80084e6:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80084e8:	4770      	bx	lr

080084ea <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80084ea:	2300      	movs	r3, #0
 80084ec:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80084ee:	4770      	bx	lr

080084f0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80084f0:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80084f2:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80084f4:	689a      	ldr	r2, [r3, #8]
 80084f6:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80084f8:	689a      	ldr	r2, [r3, #8]
 80084fa:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80084fc:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80084fe:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008500:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008502:	3301      	adds	r3, #1
 8008504:	6003      	str	r3, [r0, #0]
}
 8008506:	4770      	bx	lr

08008508 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008508:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800850a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800850c:	1c63      	adds	r3, r4, #1
 800850e:	d10a      	bne.n	8008526 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008510:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008512:	685a      	ldr	r2, [r3, #4]
 8008514:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008516:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008518:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800851a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800851c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800851e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008520:	3301      	adds	r3, #1
 8008522:	6003      	str	r3, [r0, #0]
}
 8008524:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008526:	f100 0208 	add.w	r2, r0, #8
 800852a:	4613      	mov	r3, r2
 800852c:	6852      	ldr	r2, [r2, #4]
 800852e:	6815      	ldr	r5, [r2, #0]
 8008530:	42a5      	cmp	r5, r4
 8008532:	d9fa      	bls.n	800852a <vListInsert+0x22>
 8008534:	e7ed      	b.n	8008512 <vListInsert+0xa>

08008536 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008536:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800853a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800853c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800853e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008540:	6859      	ldr	r1, [r3, #4]
 8008542:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008544:	bf08      	it	eq
 8008546:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008548:	2200      	movs	r2, #0
 800854a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800854c:	681a      	ldr	r2, [r3, #0]
 800854e:	3a01      	subs	r2, #1
 8008550:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008552:	6818      	ldr	r0, [r3, #0]
}
 8008554:	4770      	bx	lr
	...

08008558 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008558:	4808      	ldr	r0, [pc, #32]	; (800857c <prvPortStartFirstTask+0x24>)
 800855a:	6800      	ldr	r0, [r0, #0]
 800855c:	6800      	ldr	r0, [r0, #0]
 800855e:	f380 8808 	msr	MSP, r0
 8008562:	f04f 0000 	mov.w	r0, #0
 8008566:	f380 8814 	msr	CONTROL, r0
 800856a:	b662      	cpsie	i
 800856c:	b661      	cpsie	f
 800856e:	f3bf 8f4f 	dsb	sy
 8008572:	f3bf 8f6f 	isb	sy
 8008576:	df00      	svc	0
 8008578:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800857a:	0000      	.short	0x0000
 800857c:	e000ed08 	.word	0xe000ed08

08008580 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008580:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008590 <vPortEnableVFP+0x10>
 8008584:	6801      	ldr	r1, [r0, #0]
 8008586:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800858a:	6001      	str	r1, [r0, #0]
 800858c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800858e:	0000      	.short	0x0000
 8008590:	e000ed88 	.word	0xe000ed88

08008594 <prvTaskExitError>:
{
 8008594:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008596:	2300      	movs	r3, #0
 8008598:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800859a:	4b0d      	ldr	r3, [pc, #52]	; (80085d0 <prvTaskExitError+0x3c>)
 800859c:	681b      	ldr	r3, [r3, #0]
 800859e:	3301      	adds	r3, #1
 80085a0:	d008      	beq.n	80085b4 <prvTaskExitError+0x20>
 80085a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085a6:	f383 8811 	msr	BASEPRI, r3
 80085aa:	f3bf 8f6f 	isb	sy
 80085ae:	f3bf 8f4f 	dsb	sy
 80085b2:	e7fe      	b.n	80085b2 <prvTaskExitError+0x1e>
 80085b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085b8:	f383 8811 	msr	BASEPRI, r3
 80085bc:	f3bf 8f6f 	isb	sy
 80085c0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80085c4:	9b01      	ldr	r3, [sp, #4]
 80085c6:	2b00      	cmp	r3, #0
 80085c8:	d0fc      	beq.n	80085c4 <prvTaskExitError+0x30>
}
 80085ca:	b002      	add	sp, #8
 80085cc:	4770      	bx	lr
 80085ce:	bf00      	nop
 80085d0:	20000080 	.word	0x20000080

080085d4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80085d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80085d8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80085dc:	4b07      	ldr	r3, [pc, #28]	; (80085fc <pxPortInitialiseStack+0x28>)
 80085de:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80085e2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80085e6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80085ea:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80085ee:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80085f2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80085f6:	3844      	subs	r0, #68	; 0x44
 80085f8:	4770      	bx	lr
 80085fa:	bf00      	nop
 80085fc:	08008595 	.word	0x08008595

08008600 <SVC_Handler>:
	__asm volatile (
 8008600:	4b07      	ldr	r3, [pc, #28]	; (8008620 <pxCurrentTCBConst2>)
 8008602:	6819      	ldr	r1, [r3, #0]
 8008604:	6808      	ldr	r0, [r1, #0]
 8008606:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800860a:	f380 8809 	msr	PSP, r0
 800860e:	f3bf 8f6f 	isb	sy
 8008612:	f04f 0000 	mov.w	r0, #0
 8008616:	f380 8811 	msr	BASEPRI, r0
 800861a:	4770      	bx	lr
 800861c:	f3af 8000 	nop.w

08008620 <pxCurrentTCBConst2>:
 8008620:	20012790 	.word	0x20012790

08008624 <vPortEnterCritical>:
 8008624:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008628:	f383 8811 	msr	BASEPRI, r3
 800862c:	f3bf 8f6f 	isb	sy
 8008630:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008634:	4a0a      	ldr	r2, [pc, #40]	; (8008660 <vPortEnterCritical+0x3c>)
 8008636:	6813      	ldr	r3, [r2, #0]
 8008638:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800863a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800863c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800863e:	d10d      	bne.n	800865c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008640:	4b08      	ldr	r3, [pc, #32]	; (8008664 <vPortEnterCritical+0x40>)
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	f013 0fff 	tst.w	r3, #255	; 0xff
 8008648:	d008      	beq.n	800865c <vPortEnterCritical+0x38>
 800864a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800864e:	f383 8811 	msr	BASEPRI, r3
 8008652:	f3bf 8f6f 	isb	sy
 8008656:	f3bf 8f4f 	dsb	sy
 800865a:	e7fe      	b.n	800865a <vPortEnterCritical+0x36>
}
 800865c:	4770      	bx	lr
 800865e:	bf00      	nop
 8008660:	20000080 	.word	0x20000080
 8008664:	e000ed04 	.word	0xe000ed04

08008668 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008668:	4a08      	ldr	r2, [pc, #32]	; (800868c <vPortExitCritical+0x24>)
 800866a:	6813      	ldr	r3, [r2, #0]
 800866c:	b943      	cbnz	r3, 8008680 <vPortExitCritical+0x18>
 800866e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008672:	f383 8811 	msr	BASEPRI, r3
 8008676:	f3bf 8f6f 	isb	sy
 800867a:	f3bf 8f4f 	dsb	sy
 800867e:	e7fe      	b.n	800867e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008680:	3b01      	subs	r3, #1
 8008682:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008684:	b90b      	cbnz	r3, 800868a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008686:	f383 8811 	msr	BASEPRI, r3
}
 800868a:	4770      	bx	lr
 800868c:	20000080 	.word	0x20000080

08008690 <PendSV_Handler>:
	__asm volatile
 8008690:	f3ef 8009 	mrs	r0, PSP
 8008694:	f3bf 8f6f 	isb	sy
 8008698:	4b15      	ldr	r3, [pc, #84]	; (80086f0 <pxCurrentTCBConst>)
 800869a:	681a      	ldr	r2, [r3, #0]
 800869c:	f01e 0f10 	tst.w	lr, #16
 80086a0:	bf08      	it	eq
 80086a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80086a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086aa:	6010      	str	r0, [r2, #0]
 80086ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80086b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80086b4:	f380 8811 	msr	BASEPRI, r0
 80086b8:	f3bf 8f4f 	dsb	sy
 80086bc:	f3bf 8f6f 	isb	sy
 80086c0:	f001 f96a 	bl	8009998 <vTaskSwitchContext>
 80086c4:	f04f 0000 	mov.w	r0, #0
 80086c8:	f380 8811 	msr	BASEPRI, r0
 80086cc:	bc09      	pop	{r0, r3}
 80086ce:	6819      	ldr	r1, [r3, #0]
 80086d0:	6808      	ldr	r0, [r1, #0]
 80086d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80086d6:	f01e 0f10 	tst.w	lr, #16
 80086da:	bf08      	it	eq
 80086dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80086e0:	f380 8809 	msr	PSP, r0
 80086e4:	f3bf 8f6f 	isb	sy
 80086e8:	4770      	bx	lr
 80086ea:	bf00      	nop
 80086ec:	f3af 8000 	nop.w

080086f0 <pxCurrentTCBConst>:
 80086f0:	20012790 	.word	0x20012790

080086f4 <xPortSysTickHandler>:
{
 80086f4:	b508      	push	{r3, lr}
	__asm volatile
 80086f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086fa:	f383 8811 	msr	BASEPRI, r3
 80086fe:	f3bf 8f6f 	isb	sy
 8008702:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008706:	f001 f819 	bl	800973c <xTaskIncrementTick>
 800870a:	b118      	cbz	r0, 8008714 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800870c:	4b03      	ldr	r3, [pc, #12]	; (800871c <xPortSysTickHandler+0x28>)
 800870e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008712:	601a      	str	r2, [r3, #0]
	__asm volatile
 8008714:	2300      	movs	r3, #0
 8008716:	f383 8811 	msr	BASEPRI, r3
}
 800871a:	bd08      	pop	{r3, pc}
 800871c:	e000ed04 	.word	0xe000ed04

08008720 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008720:	4a08      	ldr	r2, [pc, #32]	; (8008744 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008722:	4909      	ldr	r1, [pc, #36]	; (8008748 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008724:	2300      	movs	r3, #0
 8008726:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008728:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800872a:	4b08      	ldr	r3, [pc, #32]	; (800874c <vPortSetupTimerInterrupt+0x2c>)
 800872c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	fbb3 f3f1 	udiv	r3, r3, r1
 8008736:	4906      	ldr	r1, [pc, #24]	; (8008750 <vPortSetupTimerInterrupt+0x30>)
 8008738:	3b01      	subs	r3, #1
 800873a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800873c:	2307      	movs	r3, #7
 800873e:	6013      	str	r3, [r2, #0]
}
 8008740:	4770      	bx	lr
 8008742:	bf00      	nop
 8008744:	e000e010 	.word	0xe000e010
 8008748:	e000e018 	.word	0xe000e018
 800874c:	20000074 	.word	0x20000074
 8008750:	e000e014 	.word	0xe000e014

08008754 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008754:	4b38      	ldr	r3, [pc, #224]	; (8008838 <xPortStartScheduler+0xe4>)
 8008756:	4a39      	ldr	r2, [pc, #228]	; (800883c <xPortStartScheduler+0xe8>)
{
 8008758:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800875a:	6819      	ldr	r1, [r3, #0]
 800875c:	4291      	cmp	r1, r2
 800875e:	d108      	bne.n	8008772 <xPortStartScheduler+0x1e>
	__asm volatile
 8008760:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008764:	f383 8811 	msr	BASEPRI, r3
 8008768:	f3bf 8f6f 	isb	sy
 800876c:	f3bf 8f4f 	dsb	sy
 8008770:	e7fe      	b.n	8008770 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008772:	681a      	ldr	r2, [r3, #0]
 8008774:	4b32      	ldr	r3, [pc, #200]	; (8008840 <xPortStartScheduler+0xec>)
 8008776:	429a      	cmp	r2, r3
 8008778:	d108      	bne.n	800878c <xPortStartScheduler+0x38>
 800877a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800877e:	f383 8811 	msr	BASEPRI, r3
 8008782:	f3bf 8f6f 	isb	sy
 8008786:	f3bf 8f4f 	dsb	sy
 800878a:	e7fe      	b.n	800878a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800878c:	4b2d      	ldr	r3, [pc, #180]	; (8008844 <xPortStartScheduler+0xf0>)
 800878e:	781a      	ldrb	r2, [r3, #0]
 8008790:	b2d2      	uxtb	r2, r2
 8008792:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008794:	22ff      	movs	r2, #255	; 0xff
 8008796:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008798:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800879a:	4a2b      	ldr	r2, [pc, #172]	; (8008848 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800879c:	b2db      	uxtb	r3, r3
 800879e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80087a2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80087a6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80087aa:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80087ac:	4a27      	ldr	r2, [pc, #156]	; (800884c <xPortStartScheduler+0xf8>)
 80087ae:	2307      	movs	r3, #7
 80087b0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80087b2:	2100      	movs	r1, #0
 80087b4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80087b8:	0600      	lsls	r0, r0, #24
 80087ba:	f103 34ff 	add.w	r4, r3, #4294967295
 80087be:	d40c      	bmi.n	80087da <xPortStartScheduler+0x86>
 80087c0:	b111      	cbz	r1, 80087c8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80087c2:	2b03      	cmp	r3, #3
 80087c4:	6013      	str	r3, [r2, #0]
 80087c6:	d011      	beq.n	80087ec <xPortStartScheduler+0x98>
 80087c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087cc:	f383 8811 	msr	BASEPRI, r3
 80087d0:	f3bf 8f6f 	isb	sy
 80087d4:	f3bf 8f4f 	dsb	sy
 80087d8:	e7fe      	b.n	80087d8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80087da:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80087de:	005b      	lsls	r3, r3, #1
 80087e0:	b2db      	uxtb	r3, r3
 80087e2:	f88d 3003 	strb.w	r3, [sp, #3]
 80087e6:	2101      	movs	r1, #1
 80087e8:	4623      	mov	r3, r4
 80087ea:	e7e3      	b.n	80087b4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80087ec:	f44f 7340 	mov.w	r3, #768	; 0x300
 80087f0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80087f2:	9b01      	ldr	r3, [sp, #4]
 80087f4:	4a13      	ldr	r2, [pc, #76]	; (8008844 <xPortStartScheduler+0xf0>)
 80087f6:	b2db      	uxtb	r3, r3
 80087f8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80087fa:	4b15      	ldr	r3, [pc, #84]	; (8008850 <xPortStartScheduler+0xfc>)
 80087fc:	681a      	ldr	r2, [r3, #0]
 80087fe:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008802:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008804:	681a      	ldr	r2, [r3, #0]
 8008806:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800880a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800880c:	f7ff ff88 	bl	8008720 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008810:	4b10      	ldr	r3, [pc, #64]	; (8008854 <xPortStartScheduler+0x100>)
 8008812:	2400      	movs	r4, #0
 8008814:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8008816:	f7ff feb3 	bl	8008580 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800881a:	4a0f      	ldr	r2, [pc, #60]	; (8008858 <xPortStartScheduler+0x104>)
 800881c:	6813      	ldr	r3, [r2, #0]
 800881e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008822:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8008824:	f7ff fe98 	bl	8008558 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008828:	f001 f8b6 	bl	8009998 <vTaskSwitchContext>
	prvTaskExitError();
 800882c:	f7ff feb2 	bl	8008594 <prvTaskExitError>
}
 8008830:	4620      	mov	r0, r4
 8008832:	b002      	add	sp, #8
 8008834:	bd10      	pop	{r4, pc}
 8008836:	bf00      	nop
 8008838:	e000ed00 	.word	0xe000ed00
 800883c:	410fc271 	.word	0x410fc271
 8008840:	410fc270 	.word	0x410fc270
 8008844:	e000e400 	.word	0xe000e400
 8008848:	20012788 	.word	0x20012788
 800884c:	2001278c 	.word	0x2001278c
 8008850:	e000ed20 	.word	0xe000ed20
 8008854:	20000080 	.word	0x20000080
 8008858:	e000ef34 	.word	0xe000ef34

0800885c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800885c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008860:	2b0f      	cmp	r3, #15
 8008862:	d90e      	bls.n	8008882 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008864:	4a10      	ldr	r2, [pc, #64]	; (80088a8 <vPortValidateInterruptPriority+0x4c>)
 8008866:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008868:	4a10      	ldr	r2, [pc, #64]	; (80088ac <vPortValidateInterruptPriority+0x50>)
 800886a:	7812      	ldrb	r2, [r2, #0]
 800886c:	429a      	cmp	r2, r3
 800886e:	d908      	bls.n	8008882 <vPortValidateInterruptPriority+0x26>
 8008870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008874:	f383 8811 	msr	BASEPRI, r3
 8008878:	f3bf 8f6f 	isb	sy
 800887c:	f3bf 8f4f 	dsb	sy
 8008880:	e7fe      	b.n	8008880 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008882:	4b0b      	ldr	r3, [pc, #44]	; (80088b0 <vPortValidateInterruptPriority+0x54>)
 8008884:	4a0b      	ldr	r2, [pc, #44]	; (80088b4 <vPortValidateInterruptPriority+0x58>)
 8008886:	681b      	ldr	r3, [r3, #0]
 8008888:	6812      	ldr	r2, [r2, #0]
 800888a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800888e:	4293      	cmp	r3, r2
 8008890:	d908      	bls.n	80088a4 <vPortValidateInterruptPriority+0x48>
 8008892:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008896:	f383 8811 	msr	BASEPRI, r3
 800889a:	f3bf 8f6f 	isb	sy
 800889e:	f3bf 8f4f 	dsb	sy
 80088a2:	e7fe      	b.n	80088a2 <vPortValidateInterruptPriority+0x46>
	}
 80088a4:	4770      	bx	lr
 80088a6:	bf00      	nop
 80088a8:	e000e3f0 	.word	0xe000e3f0
 80088ac:	20012788 	.word	0x20012788
 80088b0:	e000ed0c 	.word	0xe000ed0c
 80088b4:	2001278c 	.word	0x2001278c

080088b8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80088b8:	b510      	push	{r4, lr}
 80088ba:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80088bc:	f7ff feb2 	bl	8008624 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80088c0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80088c2:	f7ff fed1 	bl	8008668 <vPortExitCritical>

	return xReturn;
}
 80088c6:	fab4 f084 	clz	r0, r4
 80088ca:	0940      	lsrs	r0, r0, #5
 80088cc:	bd10      	pop	{r4, pc}

080088ce <prvCopyDataToQueue>:
{
 80088ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088d0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80088d2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80088d4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80088d6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80088d8:	b952      	cbnz	r2, 80088f0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80088da:	6807      	ldr	r7, [r0, #0]
 80088dc:	bb47      	cbnz	r7, 8008930 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80088de:	6880      	ldr	r0, [r0, #8]
 80088e0:	f001 f9b8 	bl	8009c54 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80088e4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80088e6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80088e8:	3601      	adds	r6, #1
 80088ea:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80088ec:	4628      	mov	r0, r5
 80088ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80088f0:	b965      	cbnz	r5, 800890c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80088f2:	6840      	ldr	r0, [r0, #4]
 80088f4:	f014 fbcc 	bl	801d090 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80088f8:	6863      	ldr	r3, [r4, #4]
 80088fa:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80088fc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80088fe:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008900:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008902:	4293      	cmp	r3, r2
 8008904:	d3f0      	bcc.n	80088e8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008906:	6823      	ldr	r3, [r4, #0]
 8008908:	6063      	str	r3, [r4, #4]
 800890a:	e7ed      	b.n	80088e8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800890c:	68c0      	ldr	r0, [r0, #12]
 800890e:	f014 fbbf 	bl	801d090 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008912:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008914:	68e3      	ldr	r3, [r4, #12]
 8008916:	4251      	negs	r1, r2
 8008918:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800891a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800891c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800891e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008920:	bf3e      	ittt	cc
 8008922:	68a3      	ldrcc	r3, [r4, #8]
 8008924:	185b      	addcc	r3, r3, r1
 8008926:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008928:	2d02      	cmp	r5, #2
 800892a:	d101      	bne.n	8008930 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800892c:	b116      	cbz	r6, 8008934 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800892e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008930:	2500      	movs	r5, #0
 8008932:	e7d9      	b.n	80088e8 <prvCopyDataToQueue+0x1a>
 8008934:	4635      	mov	r5, r6
 8008936:	e7d7      	b.n	80088e8 <prvCopyDataToQueue+0x1a>

08008938 <prvCopyDataFromQueue>:
{
 8008938:	4603      	mov	r3, r0
 800893a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800893c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800893e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008940:	b16a      	cbz	r2, 800895e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008942:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008944:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008946:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008948:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800894a:	bf28      	it	cs
 800894c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800894e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008950:	bf28      	it	cs
 8008952:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008954:	68d9      	ldr	r1, [r3, #12]
}
 8008956:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800895a:	f014 bb99 	b.w	801d090 <memcpy>
}
 800895e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008962:	4770      	bx	lr

08008964 <prvUnlockQueue>:
{
 8008964:	b570      	push	{r4, r5, r6, lr}
 8008966:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008968:	f7ff fe5c 	bl	8008624 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800896c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008970:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008974:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008976:	2d00      	cmp	r5, #0
 8008978:	dc14      	bgt.n	80089a4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800897a:	23ff      	movs	r3, #255	; 0xff
 800897c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008980:	f7ff fe72 	bl	8008668 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008984:	f7ff fe4e 	bl	8008624 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008988:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800898c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008990:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008992:	2d00      	cmp	r5, #0
 8008994:	dc12      	bgt.n	80089bc <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008996:	23ff      	movs	r3, #255	; 0xff
 8008998:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800899c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80089a0:	f7ff be62 	b.w	8008668 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80089a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80089a6:	2b00      	cmp	r3, #0
 80089a8:	d0e7      	beq.n	800897a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80089aa:	4630      	mov	r0, r6
 80089ac:	f001 f86e 	bl	8009a8c <xTaskRemoveFromEventList>
 80089b0:	b108      	cbz	r0, 80089b6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80089b2:	f001 f8f7 	bl	8009ba4 <vTaskMissedYield>
			--cTxLock;
 80089b6:	3d01      	subs	r5, #1
 80089b8:	b26d      	sxtb	r5, r5
 80089ba:	e7dc      	b.n	8008976 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80089bc:	6923      	ldr	r3, [r4, #16]
 80089be:	2b00      	cmp	r3, #0
 80089c0:	d0e9      	beq.n	8008996 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80089c2:	4630      	mov	r0, r6
 80089c4:	f001 f862 	bl	8009a8c <xTaskRemoveFromEventList>
 80089c8:	b108      	cbz	r0, 80089ce <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80089ca:	f001 f8eb 	bl	8009ba4 <vTaskMissedYield>
				--cRxLock;
 80089ce:	3d01      	subs	r5, #1
 80089d0:	b26d      	sxtb	r5, r5
 80089d2:	e7de      	b.n	8008992 <prvUnlockQueue+0x2e>

080089d4 <xQueueGenericReset>:
{
 80089d4:	b538      	push	{r3, r4, r5, lr}
 80089d6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80089d8:	4604      	mov	r4, r0
 80089da:	b940      	cbnz	r0, 80089ee <xQueueGenericReset+0x1a>
 80089dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089e0:	f383 8811 	msr	BASEPRI, r3
 80089e4:	f3bf 8f6f 	isb	sy
 80089e8:	f3bf 8f4f 	dsb	sy
 80089ec:	e7fe      	b.n	80089ec <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80089ee:	f7ff fe19 	bl	8008624 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089f2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80089f6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80089f8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089fa:	434b      	muls	r3, r1
 80089fc:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80089fe:	1a5b      	subs	r3, r3, r1
 8008a00:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008a02:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008a04:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008a06:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008a08:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008a0a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008a0c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008a10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008a14:	b995      	cbnz	r5, 8008a3c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008a16:	6923      	ldr	r3, [r4, #16]
 8008a18:	b163      	cbz	r3, 8008a34 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008a1a:	f104 0010 	add.w	r0, r4, #16
 8008a1e:	f001 f835 	bl	8009a8c <xTaskRemoveFromEventList>
 8008a22:	b138      	cbz	r0, 8008a34 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8008a24:	4b0a      	ldr	r3, [pc, #40]	; (8008a50 <xQueueGenericReset+0x7c>)
 8008a26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a2a:	601a      	str	r2, [r3, #0]
 8008a2c:	f3bf 8f4f 	dsb	sy
 8008a30:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008a34:	f7ff fe18 	bl	8008668 <vPortExitCritical>
}
 8008a38:	2001      	movs	r0, #1
 8008a3a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008a3c:	f104 0010 	add.w	r0, r4, #16
 8008a40:	f7ff fd48 	bl	80084d4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8008a44:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a48:	f7ff fd44 	bl	80084d4 <vListInitialise>
 8008a4c:	e7f2      	b.n	8008a34 <xQueueGenericReset+0x60>
 8008a4e:	bf00      	nop
 8008a50:	e000ed04 	.word	0xe000ed04

08008a54 <xQueueGenericCreateStatic>:
	{
 8008a54:	b513      	push	{r0, r1, r4, lr}
 8008a56:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008a58:	b940      	cbnz	r0, 8008a6c <xQueueGenericCreateStatic+0x18>
 8008a5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5e:	f383 8811 	msr	BASEPRI, r3
 8008a62:	f3bf 8f6f 	isb	sy
 8008a66:	f3bf 8f4f 	dsb	sy
 8008a6a:	e7fe      	b.n	8008a6a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8008a6c:	b943      	cbnz	r3, 8008a80 <xQueueGenericCreateStatic+0x2c>
 8008a6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a72:	f383 8811 	msr	BASEPRI, r3
 8008a76:	f3bf 8f6f 	isb	sy
 8008a7a:	f3bf 8f4f 	dsb	sy
 8008a7e:	e7fe      	b.n	8008a7e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008a80:	b14a      	cbz	r2, 8008a96 <xQueueGenericCreateStatic+0x42>
 8008a82:	b991      	cbnz	r1, 8008aaa <xQueueGenericCreateStatic+0x56>
 8008a84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a88:	f383 8811 	msr	BASEPRI, r3
 8008a8c:	f3bf 8f6f 	isb	sy
 8008a90:	f3bf 8f4f 	dsb	sy
 8008a94:	e7fe      	b.n	8008a94 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008a96:	b141      	cbz	r1, 8008aaa <xQueueGenericCreateStatic+0x56>
 8008a98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a9c:	f383 8811 	msr	BASEPRI, r3
 8008aa0:	f3bf 8f6f 	isb	sy
 8008aa4:	f3bf 8f4f 	dsb	sy
 8008aa8:	e7fe      	b.n	8008aa8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8008aaa:	2350      	movs	r3, #80	; 0x50
 8008aac:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8008aae:	9b01      	ldr	r3, [sp, #4]
 8008ab0:	2b50      	cmp	r3, #80	; 0x50
 8008ab2:	d008      	beq.n	8008ac6 <xQueueGenericCreateStatic+0x72>
 8008ab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ab8:	f383 8811 	msr	BASEPRI, r3
 8008abc:	f3bf 8f6f 	isb	sy
 8008ac0:	f3bf 8f4f 	dsb	sy
 8008ac4:	e7fe      	b.n	8008ac4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008ac6:	2900      	cmp	r1, #0
 8008ac8:	bf08      	it	eq
 8008aca:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8008acc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008ace:	6022      	str	r2, [r4, #0]
 8008ad0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8008ad2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8008ad6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008ada:	4619      	mov	r1, r3
 8008adc:	4620      	mov	r0, r4
 8008ade:	f7ff ff79 	bl	80089d4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008ae2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8008ae6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8008aea:	4620      	mov	r0, r4
 8008aec:	b002      	add	sp, #8
 8008aee:	bd10      	pop	{r4, pc}

08008af0 <xQueueGenericCreate>:
	{
 8008af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008af2:	460d      	mov	r5, r1
 8008af4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8008af6:	4606      	mov	r6, r0
 8008af8:	b940      	cbnz	r0, 8008b0c <xQueueGenericCreate+0x1c>
 8008afa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008afe:	f383 8811 	msr	BASEPRI, r3
 8008b02:	f3bf 8f6f 	isb	sy
 8008b06:	f3bf 8f4f 	dsb	sy
 8008b0a:	e7fe      	b.n	8008b0a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b0c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008b0e:	3050      	adds	r0, #80	; 0x50
 8008b10:	f7ff fc10 	bl	8008334 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008b14:	4604      	mov	r4, r0
 8008b16:	b170      	cbz	r0, 8008b36 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8008b18:	2300      	movs	r3, #0
 8008b1a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008b1e:	b165      	cbz	r5, 8008b3a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008b20:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008b24:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8008b28:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8008b2a:	2101      	movs	r1, #1
 8008b2c:	4620      	mov	r0, r4
 8008b2e:	f7ff ff51 	bl	80089d4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008b32:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008b36:	4620      	mov	r0, r4
 8008b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b3a:	4603      	mov	r3, r0
 8008b3c:	e7f2      	b.n	8008b24 <xQueueGenericCreate+0x34>

08008b3e <xQueueCreateCountingSemaphoreStatic>:
	{
 8008b3e:	b513      	push	{r0, r1, r4, lr}
 8008b40:	4613      	mov	r3, r2
 8008b42:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008b44:	b940      	cbnz	r0, 8008b58 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008b46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b4a:	f383 8811 	msr	BASEPRI, r3
 8008b4e:	f3bf 8f6f 	isb	sy
 8008b52:	f3bf 8f4f 	dsb	sy
 8008b56:	e7fe      	b.n	8008b56 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008b58:	4288      	cmp	r0, r1
 8008b5a:	d208      	bcs.n	8008b6e <xQueueCreateCountingSemaphoreStatic+0x30>
 8008b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b60:	f383 8811 	msr	BASEPRI, r3
 8008b64:	f3bf 8f6f 	isb	sy
 8008b68:	f3bf 8f4f 	dsb	sy
 8008b6c:	e7fe      	b.n	8008b6c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008b6e:	2202      	movs	r2, #2
 8008b70:	9200      	str	r2, [sp, #0]
 8008b72:	2200      	movs	r2, #0
 8008b74:	4611      	mov	r1, r2
 8008b76:	f7ff ff6d 	bl	8008a54 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8008b7a:	b100      	cbz	r0, 8008b7e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008b7c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008b7e:	b002      	add	sp, #8
 8008b80:	bd10      	pop	{r4, pc}

08008b82 <xQueueCreateCountingSemaphore>:
	{
 8008b82:	b510      	push	{r4, lr}
 8008b84:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008b86:	b940      	cbnz	r0, 8008b9a <xQueueCreateCountingSemaphore+0x18>
 8008b88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b8c:	f383 8811 	msr	BASEPRI, r3
 8008b90:	f3bf 8f6f 	isb	sy
 8008b94:	f3bf 8f4f 	dsb	sy
 8008b98:	e7fe      	b.n	8008b98 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8008b9a:	4288      	cmp	r0, r1
 8008b9c:	d208      	bcs.n	8008bb0 <xQueueCreateCountingSemaphore+0x2e>
 8008b9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ba2:	f383 8811 	msr	BASEPRI, r3
 8008ba6:	f3bf 8f6f 	isb	sy
 8008baa:	f3bf 8f4f 	dsb	sy
 8008bae:	e7fe      	b.n	8008bae <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008bb0:	2202      	movs	r2, #2
 8008bb2:	2100      	movs	r1, #0
 8008bb4:	f7ff ff9c 	bl	8008af0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8008bb8:	b100      	cbz	r0, 8008bbc <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8008bba:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008bbc:	bd10      	pop	{r4, pc}
	...

08008bc0 <xQueueGenericSend>:
{
 8008bc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008bc4:	4688      	mov	r8, r1
 8008bc6:	9201      	str	r2, [sp, #4]
 8008bc8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008bca:	4604      	mov	r4, r0
 8008bcc:	b940      	cbnz	r0, 8008be0 <xQueueGenericSend+0x20>
 8008bce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd2:	f383 8811 	msr	BASEPRI, r3
 8008bd6:	f3bf 8f6f 	isb	sy
 8008bda:	f3bf 8f4f 	dsb	sy
 8008bde:	e7fe      	b.n	8008bde <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008be0:	b951      	cbnz	r1, 8008bf8 <xQueueGenericSend+0x38>
 8008be2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008be4:	b143      	cbz	r3, 8008bf8 <xQueueGenericSend+0x38>
 8008be6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bea:	f383 8811 	msr	BASEPRI, r3
 8008bee:	f3bf 8f6f 	isb	sy
 8008bf2:	f3bf 8f4f 	dsb	sy
 8008bf6:	e7fe      	b.n	8008bf6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008bf8:	2f02      	cmp	r7, #2
 8008bfa:	d10b      	bne.n	8008c14 <xQueueGenericSend+0x54>
 8008bfc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bfe:	2b01      	cmp	r3, #1
 8008c00:	d008      	beq.n	8008c14 <xQueueGenericSend+0x54>
 8008c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c06:	f383 8811 	msr	BASEPRI, r3
 8008c0a:	f3bf 8f6f 	isb	sy
 8008c0e:	f3bf 8f4f 	dsb	sy
 8008c12:	e7fe      	b.n	8008c12 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008c14:	f000 ffcc 	bl	8009bb0 <xTaskGetSchedulerState>
 8008c18:	4606      	mov	r6, r0
 8008c1a:	b950      	cbnz	r0, 8008c32 <xQueueGenericSend+0x72>
 8008c1c:	9b01      	ldr	r3, [sp, #4]
 8008c1e:	b14b      	cbz	r3, 8008c34 <xQueueGenericSend+0x74>
 8008c20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c24:	f383 8811 	msr	BASEPRI, r3
 8008c28:	f3bf 8f6f 	isb	sy
 8008c2c:	f3bf 8f4f 	dsb	sy
 8008c30:	e7fe      	b.n	8008c30 <xQueueGenericSend+0x70>
 8008c32:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8008c34:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8008d20 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8008c38:	f04f 0900 	mov.w	r9, #0
 8008c3c:	e037      	b.n	8008cae <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008c3e:	9d01      	ldr	r5, [sp, #4]
 8008c40:	b91d      	cbnz	r5, 8008c4a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8008c42:	f7ff fd11 	bl	8008668 <vPortExitCritical>
			return errQUEUE_FULL;
 8008c46:	2000      	movs	r0, #0
 8008c48:	e050      	b.n	8008cec <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8008c4a:	b916      	cbnz	r6, 8008c52 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008c4c:	a802      	add	r0, sp, #8
 8008c4e:	f000 ff61 	bl	8009b14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008c52:	f7ff fd09 	bl	8008668 <vPortExitCritical>
		vTaskSuspendAll();
 8008c56:	f000 fd63 	bl	8009720 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008c5a:	f7ff fce3 	bl	8008624 <vPortEnterCritical>
 8008c5e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008c62:	2bff      	cmp	r3, #255	; 0xff
 8008c64:	bf08      	it	eq
 8008c66:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008c6a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008c6e:	2bff      	cmp	r3, #255	; 0xff
 8008c70:	bf08      	it	eq
 8008c72:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008c76:	f7ff fcf7 	bl	8008668 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008c7a:	a901      	add	r1, sp, #4
 8008c7c:	a802      	add	r0, sp, #8
 8008c7e:	f000 ff55 	bl	8009b2c <xTaskCheckForTimeOut>
 8008c82:	2800      	cmp	r0, #0
 8008c84:	d146      	bne.n	8008d14 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008c86:	f7ff fccd 	bl	8008624 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008c8a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008c8c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008c8e:	429a      	cmp	r2, r3
 8008c90:	d12f      	bne.n	8008cf2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008c92:	f7ff fce9 	bl	8008668 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008c96:	9901      	ldr	r1, [sp, #4]
 8008c98:	f104 0010 	add.w	r0, r4, #16
 8008c9c:	f000 febe 	bl	8009a1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008ca0:	4620      	mov	r0, r4
 8008ca2:	f7ff fe5f 	bl	8008964 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008ca6:	f000 fddf 	bl	8009868 <xTaskResumeAll>
 8008caa:	b350      	cbz	r0, 8008d02 <xQueueGenericSend+0x142>
 8008cac:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008cae:	f7ff fcb9 	bl	8008624 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008cb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008cb4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008cb6:	429a      	cmp	r2, r3
 8008cb8:	d301      	bcc.n	8008cbe <xQueueGenericSend+0xfe>
 8008cba:	2f02      	cmp	r7, #2
 8008cbc:	d1bf      	bne.n	8008c3e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008cbe:	463a      	mov	r2, r7
 8008cc0:	4641      	mov	r1, r8
 8008cc2:	4620      	mov	r0, r4
 8008cc4:	f7ff fe03 	bl	80088ce <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008cc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008cca:	b11b      	cbz	r3, 8008cd4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008ccc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008cd0:	f000 fedc 	bl	8009a8c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8008cd4:	b138      	cbz	r0, 8008ce6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8008cd6:	4b12      	ldr	r3, [pc, #72]	; (8008d20 <xQueueGenericSend+0x160>)
 8008cd8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008cdc:	601a      	str	r2, [r3, #0]
 8008cde:	f3bf 8f4f 	dsb	sy
 8008ce2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008ce6:	f7ff fcbf 	bl	8008668 <vPortExitCritical>
				return pdPASS;
 8008cea:	2001      	movs	r0, #1
}
 8008cec:	b004      	add	sp, #16
 8008cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8008cf2:	f7ff fcb9 	bl	8008668 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8008cf6:	4620      	mov	r0, r4
 8008cf8:	f7ff fe34 	bl	8008964 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008cfc:	f000 fdb4 	bl	8009868 <xTaskResumeAll>
 8008d00:	e7d4      	b.n	8008cac <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8008d02:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008d06:	f8ca 3000 	str.w	r3, [sl]
 8008d0a:	f3bf 8f4f 	dsb	sy
 8008d0e:	f3bf 8f6f 	isb	sy
 8008d12:	e7cb      	b.n	8008cac <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8008d14:	4620      	mov	r0, r4
 8008d16:	f7ff fe25 	bl	8008964 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008d1a:	f000 fda5 	bl	8009868 <xTaskResumeAll>
 8008d1e:	e792      	b.n	8008c46 <xQueueGenericSend+0x86>
 8008d20:	e000ed04 	.word	0xe000ed04

08008d24 <xQueueGenericSendFromISR>:
{
 8008d24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008d28:	4689      	mov	r9, r1
 8008d2a:	4690      	mov	r8, r2
 8008d2c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008d2e:	4604      	mov	r4, r0
 8008d30:	b940      	cbnz	r0, 8008d44 <xQueueGenericSendFromISR+0x20>
 8008d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d36:	f383 8811 	msr	BASEPRI, r3
 8008d3a:	f3bf 8f6f 	isb	sy
 8008d3e:	f3bf 8f4f 	dsb	sy
 8008d42:	e7fe      	b.n	8008d42 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008d44:	b951      	cbnz	r1, 8008d5c <xQueueGenericSendFromISR+0x38>
 8008d46:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008d48:	b143      	cbz	r3, 8008d5c <xQueueGenericSendFromISR+0x38>
 8008d4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d4e:	f383 8811 	msr	BASEPRI, r3
 8008d52:	f3bf 8f6f 	isb	sy
 8008d56:	f3bf 8f4f 	dsb	sy
 8008d5a:	e7fe      	b.n	8008d5a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8008d5c:	2f02      	cmp	r7, #2
 8008d5e:	d10b      	bne.n	8008d78 <xQueueGenericSendFromISR+0x54>
 8008d60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d62:	2b01      	cmp	r3, #1
 8008d64:	d008      	beq.n	8008d78 <xQueueGenericSendFromISR+0x54>
 8008d66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d6a:	f383 8811 	msr	BASEPRI, r3
 8008d6e:	f3bf 8f6f 	isb	sy
 8008d72:	f3bf 8f4f 	dsb	sy
 8008d76:	e7fe      	b.n	8008d76 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008d78:	f7ff fd70 	bl	800885c <vPortValidateInterruptPriority>
	__asm volatile
 8008d7c:	f3ef 8611 	mrs	r6, BASEPRI
 8008d80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d84:	f383 8811 	msr	BASEPRI, r3
 8008d88:	f3bf 8f6f 	isb	sy
 8008d8c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008d90:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008d92:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008d94:	429a      	cmp	r2, r3
 8008d96:	d301      	bcc.n	8008d9c <xQueueGenericSendFromISR+0x78>
 8008d98:	2f02      	cmp	r7, #2
 8008d9a:	d123      	bne.n	8008de4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008d9c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008da0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8008da2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008da4:	463a      	mov	r2, r7
 8008da6:	4649      	mov	r1, r9
 8008da8:	4620      	mov	r0, r4
 8008daa:	f7ff fd90 	bl	80088ce <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8008dae:	1c6b      	adds	r3, r5, #1
 8008db0:	d113      	bne.n	8008dda <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008db2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008db4:	b90b      	cbnz	r3, 8008dba <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8008db6:	2001      	movs	r0, #1
 8008db8:	e00b      	b.n	8008dd2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008dba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008dbe:	f000 fe65 	bl	8009a8c <xTaskRemoveFromEventList>
 8008dc2:	2800      	cmp	r0, #0
 8008dc4:	d0f7      	beq.n	8008db6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8008dc6:	f1b8 0f00 	cmp.w	r8, #0
 8008dca:	d0f4      	beq.n	8008db6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008dcc:	2001      	movs	r0, #1
 8008dce:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8008dd2:	f386 8811 	msr	BASEPRI, r6
}
 8008dd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008dda:	3501      	adds	r5, #1
 8008ddc:	b26d      	sxtb	r5, r5
 8008dde:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8008de2:	e7e8      	b.n	8008db6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8008de4:	2000      	movs	r0, #0
 8008de6:	e7f4      	b.n	8008dd2 <xQueueGenericSendFromISR+0xae>

08008de8 <xQueueGiveFromISR>:
{
 8008de8:	b570      	push	{r4, r5, r6, lr}
 8008dea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008dec:	4604      	mov	r4, r0
 8008dee:	b940      	cbnz	r0, 8008e02 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008e02:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008e04:	b143      	cbz	r3, 8008e18 <xQueueGiveFromISR+0x30>
 8008e06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e0a:	f383 8811 	msr	BASEPRI, r3
 8008e0e:	f3bf 8f6f 	isb	sy
 8008e12:	f3bf 8f4f 	dsb	sy
 8008e16:	e7fe      	b.n	8008e16 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008e18:	6803      	ldr	r3, [r0, #0]
 8008e1a:	b953      	cbnz	r3, 8008e32 <xQueueGiveFromISR+0x4a>
 8008e1c:	6883      	ldr	r3, [r0, #8]
 8008e1e:	b143      	cbz	r3, 8008e32 <xQueueGiveFromISR+0x4a>
 8008e20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e24:	f383 8811 	msr	BASEPRI, r3
 8008e28:	f3bf 8f6f 	isb	sy
 8008e2c:	f3bf 8f4f 	dsb	sy
 8008e30:	e7fe      	b.n	8008e30 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008e32:	f7ff fd13 	bl	800885c <vPortValidateInterruptPriority>
	__asm volatile
 8008e36:	f3ef 8611 	mrs	r6, BASEPRI
 8008e3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e3e:	f383 8811 	msr	BASEPRI, r3
 8008e42:	f3bf 8f6f 	isb	sy
 8008e46:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e4a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8008e4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008e4e:	4293      	cmp	r3, r2
 8008e50:	d91c      	bls.n	8008e8c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e52:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008e56:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008e58:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8008e5a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008e5c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8008e5e:	d110      	bne.n	8008e82 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008e60:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008e62:	b90b      	cbnz	r3, 8008e68 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008e64:	2001      	movs	r0, #1
 8008e66:	e009      	b.n	8008e7c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008e68:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008e6c:	f000 fe0e 	bl	8009a8c <xTaskRemoveFromEventList>
 8008e70:	2800      	cmp	r0, #0
 8008e72:	d0f7      	beq.n	8008e64 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008e74:	2d00      	cmp	r5, #0
 8008e76:	d0f5      	beq.n	8008e64 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008e78:	2001      	movs	r0, #1
 8008e7a:	6028      	str	r0, [r5, #0]
	__asm volatile
 8008e7c:	f386 8811 	msr	BASEPRI, r6
}
 8008e80:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008e82:	3301      	adds	r3, #1
 8008e84:	b25b      	sxtb	r3, r3
 8008e86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8008e8a:	e7eb      	b.n	8008e64 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8008e8c:	2000      	movs	r0, #0
 8008e8e:	e7f5      	b.n	8008e7c <xQueueGiveFromISR+0x94>

08008e90 <xQueueReceive>:
{
 8008e90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e94:	b085      	sub	sp, #20
 8008e96:	460f      	mov	r7, r1
 8008e98:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008e9a:	4604      	mov	r4, r0
 8008e9c:	b940      	cbnz	r0, 8008eb0 <xQueueReceive+0x20>
	__asm volatile
 8008e9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ea2:	f383 8811 	msr	BASEPRI, r3
 8008ea6:	f3bf 8f6f 	isb	sy
 8008eaa:	f3bf 8f4f 	dsb	sy
 8008eae:	e7fe      	b.n	8008eae <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008eb0:	b951      	cbnz	r1, 8008ec8 <xQueueReceive+0x38>
 8008eb2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008eb4:	b143      	cbz	r3, 8008ec8 <xQueueReceive+0x38>
 8008eb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eba:	f383 8811 	msr	BASEPRI, r3
 8008ebe:	f3bf 8f6f 	isb	sy
 8008ec2:	f3bf 8f4f 	dsb	sy
 8008ec6:	e7fe      	b.n	8008ec6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008ec8:	f000 fe72 	bl	8009bb0 <xTaskGetSchedulerState>
 8008ecc:	4606      	mov	r6, r0
 8008ece:	b950      	cbnz	r0, 8008ee6 <xQueueReceive+0x56>
 8008ed0:	9b01      	ldr	r3, [sp, #4]
 8008ed2:	b14b      	cbz	r3, 8008ee8 <xQueueReceive+0x58>
 8008ed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ed8:	f383 8811 	msr	BASEPRI, r3
 8008edc:	f3bf 8f6f 	isb	sy
 8008ee0:	f3bf 8f4f 	dsb	sy
 8008ee4:	e7fe      	b.n	8008ee4 <xQueueReceive+0x54>
 8008ee6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8008ee8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8008fcc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 8008eec:	f04f 0800 	mov.w	r8, #0
 8008ef0:	e03b      	b.n	8008f6a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008ef2:	9d01      	ldr	r5, [sp, #4]
 8008ef4:	b91d      	cbnz	r5, 8008efe <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 8008ef6:	f7ff fbb7 	bl	8008668 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8008efa:	2000      	movs	r0, #0
 8008efc:	e052      	b.n	8008fa4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 8008efe:	b916      	cbnz	r6, 8008f06 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008f00:	a802      	add	r0, sp, #8
 8008f02:	f000 fe07 	bl	8009b14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008f06:	f7ff fbaf 	bl	8008668 <vPortExitCritical>
		vTaskSuspendAll();
 8008f0a:	f000 fc09 	bl	8009720 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008f0e:	f7ff fb89 	bl	8008624 <vPortEnterCritical>
 8008f12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008f16:	2bff      	cmp	r3, #255	; 0xff
 8008f18:	bf08      	it	eq
 8008f1a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008f1e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008f22:	2bff      	cmp	r3, #255	; 0xff
 8008f24:	bf08      	it	eq
 8008f26:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008f2a:	f7ff fb9d 	bl	8008668 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008f2e:	a901      	add	r1, sp, #4
 8008f30:	a802      	add	r0, sp, #8
 8008f32:	f000 fdfb 	bl	8009b2c <xTaskCheckForTimeOut>
 8008f36:	2800      	cmp	r0, #0
 8008f38:	d13d      	bne.n	8008fb6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008f3a:	4620      	mov	r0, r4
 8008f3c:	f7ff fcbc 	bl	80088b8 <prvIsQueueEmpty>
 8008f40:	b398      	cbz	r0, 8008faa <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008f42:	9901      	ldr	r1, [sp, #4]
 8008f44:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008f48:	f000 fd68 	bl	8009a1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008f4c:	4620      	mov	r0, r4
 8008f4e:	f7ff fd09 	bl	8008964 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008f52:	f000 fc89 	bl	8009868 <xTaskResumeAll>
 8008f56:	b938      	cbnz	r0, 8008f68 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8008f58:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008f5c:	f8c9 3000 	str.w	r3, [r9]
 8008f60:	f3bf 8f4f 	dsb	sy
 8008f64:	f3bf 8f6f 	isb	sy
 8008f68:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008f6a:	f7ff fb5b 	bl	8008624 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008f6e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f70:	2d00      	cmp	r5, #0
 8008f72:	d0be      	beq.n	8008ef2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f74:	4639      	mov	r1, r7
 8008f76:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f78:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008f7a:	f7ff fcdd 	bl	8008938 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008f7e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f80:	6923      	ldr	r3, [r4, #16]
 8008f82:	b163      	cbz	r3, 8008f9e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f84:	f104 0010 	add.w	r0, r4, #16
 8008f88:	f000 fd80 	bl	8009a8c <xTaskRemoveFromEventList>
 8008f8c:	b138      	cbz	r0, 8008f9e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 8008f8e:	4b0f      	ldr	r3, [pc, #60]	; (8008fcc <xQueueReceive+0x13c>)
 8008f90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f94:	601a      	str	r2, [r3, #0]
 8008f96:	f3bf 8f4f 	dsb	sy
 8008f9a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008f9e:	f7ff fb63 	bl	8008668 <vPortExitCritical>
				return pdPASS;
 8008fa2:	2001      	movs	r0, #1
}
 8008fa4:	b005      	add	sp, #20
 8008fa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8008faa:	4620      	mov	r0, r4
 8008fac:	f7ff fcda 	bl	8008964 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008fb0:	f000 fc5a 	bl	8009868 <xTaskResumeAll>
 8008fb4:	e7d8      	b.n	8008f68 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 8008fb6:	4620      	mov	r0, r4
 8008fb8:	f7ff fcd4 	bl	8008964 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008fbc:	f000 fc54 	bl	8009868 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008fc0:	4620      	mov	r0, r4
 8008fc2:	f7ff fc79 	bl	80088b8 <prvIsQueueEmpty>
 8008fc6:	2800      	cmp	r0, #0
 8008fc8:	d0ce      	beq.n	8008f68 <xQueueReceive+0xd8>
 8008fca:	e796      	b.n	8008efa <xQueueReceive+0x6a>
 8008fcc:	e000ed04 	.word	0xe000ed04

08008fd0 <xQueueSemaphoreTake>:
{
 8008fd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8008fd4:	4604      	mov	r4, r0
{
 8008fd6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008fd8:	b940      	cbnz	r0, 8008fec <xQueueSemaphoreTake+0x1c>
 8008fda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fde:	f383 8811 	msr	BASEPRI, r3
 8008fe2:	f3bf 8f6f 	isb	sy
 8008fe6:	f3bf 8f4f 	dsb	sy
 8008fea:	e7fe      	b.n	8008fea <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8008fec:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8008fee:	b145      	cbz	r5, 8009002 <xQueueSemaphoreTake+0x32>
 8008ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff4:	f383 8811 	msr	BASEPRI, r3
 8008ff8:	f3bf 8f6f 	isb	sy
 8008ffc:	f3bf 8f4f 	dsb	sy
 8009000:	e7fe      	b.n	8009000 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009002:	f000 fdd5 	bl	8009bb0 <xTaskGetSchedulerState>
 8009006:	4606      	mov	r6, r0
 8009008:	b950      	cbnz	r0, 8009020 <xQueueSemaphoreTake+0x50>
 800900a:	9b01      	ldr	r3, [sp, #4]
 800900c:	b16b      	cbz	r3, 800902a <xQueueSemaphoreTake+0x5a>
 800900e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009012:	f383 8811 	msr	BASEPRI, r3
 8009016:	f3bf 8f6f 	isb	sy
 800901a:	f3bf 8f4f 	dsb	sy
 800901e:	e7fe      	b.n	800901e <xQueueSemaphoreTake+0x4e>
 8009020:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8009022:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8009154 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8009026:	2700      	movs	r7, #0
 8009028:	e051      	b.n	80090ce <xQueueSemaphoreTake+0xfe>
 800902a:	4605      	mov	r5, r0
 800902c:	e7f9      	b.n	8009022 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800902e:	9b01      	ldr	r3, [sp, #4]
 8009030:	b963      	cbnz	r3, 800904c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009032:	b145      	cbz	r5, 8009046 <xQueueSemaphoreTake+0x76>
 8009034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009038:	f383 8811 	msr	BASEPRI, r3
 800903c:	f3bf 8f6f 	isb	sy
 8009040:	f3bf 8f4f 	dsb	sy
 8009044:	e7fe      	b.n	8009044 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8009046:	f7ff fb0f 	bl	8008668 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800904a:	e05e      	b.n	800910a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800904c:	b916      	cbnz	r6, 8009054 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800904e:	a802      	add	r0, sp, #8
 8009050:	f000 fd60 	bl	8009b14 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009054:	f7ff fb08 	bl	8008668 <vPortExitCritical>
		vTaskSuspendAll();
 8009058:	f000 fb62 	bl	8009720 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800905c:	f7ff fae2 	bl	8008624 <vPortEnterCritical>
 8009060:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009064:	2bff      	cmp	r3, #255	; 0xff
 8009066:	bf08      	it	eq
 8009068:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800906c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009070:	2bff      	cmp	r3, #255	; 0xff
 8009072:	bf08      	it	eq
 8009074:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009078:	f7ff faf6 	bl	8008668 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800907c:	a901      	add	r1, sp, #4
 800907e:	a802      	add	r0, sp, #8
 8009080:	f000 fd54 	bl	8009b2c <xTaskCheckForTimeOut>
 8009084:	2800      	cmp	r0, #0
 8009086:	d14a      	bne.n	800911e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009088:	4620      	mov	r0, r4
 800908a:	f7ff fc15 	bl	80088b8 <prvIsQueueEmpty>
 800908e:	2800      	cmp	r0, #0
 8009090:	d03f      	beq.n	8009112 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009092:	6823      	ldr	r3, [r4, #0]
 8009094:	b93b      	cbnz	r3, 80090a6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8009096:	f7ff fac5 	bl	8008624 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800909a:	68a0      	ldr	r0, [r4, #8]
 800909c:	f000 fd98 	bl	8009bd0 <xTaskPriorityInherit>
 80090a0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80090a2:	f7ff fae1 	bl	8008668 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80090a6:	9901      	ldr	r1, [sp, #4]
 80090a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80090ac:	f000 fcb6 	bl	8009a1c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80090b0:	4620      	mov	r0, r4
 80090b2:	f7ff fc57 	bl	8008964 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80090b6:	f000 fbd7 	bl	8009868 <xTaskResumeAll>
 80090ba:	b938      	cbnz	r0, 80090cc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80090bc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80090c0:	f8c8 3000 	str.w	r3, [r8]
 80090c4:	f3bf 8f4f 	dsb	sy
 80090c8:	f3bf 8f6f 	isb	sy
 80090cc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80090ce:	f7ff faa9 	bl	8008624 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80090d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80090d4:	2b00      	cmp	r3, #0
 80090d6:	d0aa      	beq.n	800902e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80090d8:	3b01      	subs	r3, #1
 80090da:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090dc:	6823      	ldr	r3, [r4, #0]
 80090de:	b913      	cbnz	r3, 80090e6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80090e0:	f000 fe4e 	bl	8009d80 <pvTaskIncrementMutexHeldCount>
 80090e4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80090e6:	6923      	ldr	r3, [r4, #16]
 80090e8:	b163      	cbz	r3, 8009104 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090ea:	f104 0010 	add.w	r0, r4, #16
 80090ee:	f000 fccd 	bl	8009a8c <xTaskRemoveFromEventList>
 80090f2:	b138      	cbz	r0, 8009104 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 80090f4:	4b17      	ldr	r3, [pc, #92]	; (8009154 <xQueueSemaphoreTake+0x184>)
 80090f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090fa:	601a      	str	r2, [r3, #0]
 80090fc:	f3bf 8f4f 	dsb	sy
 8009100:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009104:	f7ff fab0 	bl	8008668 <vPortExitCritical>
				return pdPASS;
 8009108:	2501      	movs	r5, #1
}
 800910a:	4628      	mov	r0, r5
 800910c:	b004      	add	sp, #16
 800910e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009112:	4620      	mov	r0, r4
 8009114:	f7ff fc26 	bl	8008964 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009118:	f000 fba6 	bl	8009868 <xTaskResumeAll>
 800911c:	e7d6      	b.n	80090cc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800911e:	4620      	mov	r0, r4
 8009120:	f7ff fc20 	bl	8008964 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009124:	f000 fba0 	bl	8009868 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009128:	4620      	mov	r0, r4
 800912a:	f7ff fbc5 	bl	80088b8 <prvIsQueueEmpty>
 800912e:	2800      	cmp	r0, #0
 8009130:	d0cc      	beq.n	80090cc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009132:	2d00      	cmp	r5, #0
 8009134:	d0e9      	beq.n	800910a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8009136:	f7ff fa75 	bl	8008624 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800913a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800913c:	b119      	cbz	r1, 8009146 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800913e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009140:	6819      	ldr	r1, [r3, #0]
 8009142:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009146:	68a0      	ldr	r0, [r4, #8]
 8009148:	f000 fdc8 	bl	8009cdc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800914c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800914e:	f7ff fa8b 	bl	8008668 <vPortExitCritical>
 8009152:	e7da      	b.n	800910a <xQueueSemaphoreTake+0x13a>
 8009154:	e000ed04 	.word	0xe000ed04

08009158 <xQueueReceiveFromISR>:
{
 8009158:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800915c:	4689      	mov	r9, r1
 800915e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8009160:	4605      	mov	r5, r0
 8009162:	b940      	cbnz	r0, 8009176 <xQueueReceiveFromISR+0x1e>
 8009164:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009168:	f383 8811 	msr	BASEPRI, r3
 800916c:	f3bf 8f6f 	isb	sy
 8009170:	f3bf 8f4f 	dsb	sy
 8009174:	e7fe      	b.n	8009174 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009176:	b951      	cbnz	r1, 800918e <xQueueReceiveFromISR+0x36>
 8009178:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800917a:	b143      	cbz	r3, 800918e <xQueueReceiveFromISR+0x36>
 800917c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009180:	f383 8811 	msr	BASEPRI, r3
 8009184:	f3bf 8f6f 	isb	sy
 8009188:	f3bf 8f4f 	dsb	sy
 800918c:	e7fe      	b.n	800918c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800918e:	f7ff fb65 	bl	800885c <vPortValidateInterruptPriority>
	__asm volatile
 8009192:	f3ef 8711 	mrs	r7, BASEPRI
 8009196:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919a:	f383 8811 	msr	BASEPRI, r3
 800919e:	f3bf 8f6f 	isb	sy
 80091a2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80091a6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80091a8:	b31c      	cbz	r4, 80091f2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80091aa:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80091ae:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80091b0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80091b2:	4628      	mov	r0, r5
 80091b4:	f7ff fbc0 	bl	8008938 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80091b8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80091ba:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80091bc:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80091be:	d113      	bne.n	80091e8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091c0:	692b      	ldr	r3, [r5, #16]
 80091c2:	b90b      	cbnz	r3, 80091c8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80091c4:	2001      	movs	r0, #1
 80091c6:	e00b      	b.n	80091e0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091c8:	f105 0010 	add.w	r0, r5, #16
 80091cc:	f000 fc5e 	bl	8009a8c <xTaskRemoveFromEventList>
 80091d0:	2800      	cmp	r0, #0
 80091d2:	d0f7      	beq.n	80091c4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80091d4:	f1b8 0f00 	cmp.w	r8, #0
 80091d8:	d0f4      	beq.n	80091c4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80091da:	2001      	movs	r0, #1
 80091dc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80091e0:	f387 8811 	msr	BASEPRI, r7
}
 80091e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80091e8:	3601      	adds	r6, #1
 80091ea:	b276      	sxtb	r6, r6
 80091ec:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80091f0:	e7e8      	b.n	80091c4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80091f2:	4620      	mov	r0, r4
 80091f4:	e7f4      	b.n	80091e0 <xQueueReceiveFromISR+0x88>
	...

080091f8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80091f8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80091fa:	4a07      	ldr	r2, [pc, #28]	; (8009218 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80091fc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80091fe:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8009202:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8009206:	b91d      	cbnz	r5, 8009210 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009208:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800920c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800920e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009210:	3301      	adds	r3, #1
 8009212:	2b08      	cmp	r3, #8
 8009214:	d1f3      	bne.n	80091fe <vQueueAddToRegistry+0x6>
 8009216:	e7fa      	b.n	800920e <vQueueAddToRegistry+0x16>
 8009218:	200132cc 	.word	0x200132cc

0800921c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800921c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800921e:	4909      	ldr	r1, [pc, #36]	; (8009244 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009220:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009222:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8009226:	4282      	cmp	r2, r0
 8009228:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800922c:	d106      	bne.n	800923c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800922e:	4a06      	ldr	r2, [pc, #24]	; (8009248 <vQueueUnregisterQueue+0x2c>)
 8009230:	2100      	movs	r1, #0
 8009232:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009236:	4422      	add	r2, r4
 8009238:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800923a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800923c:	3301      	adds	r3, #1
 800923e:	2b08      	cmp	r3, #8
 8009240:	d1ef      	bne.n	8009222 <vQueueUnregisterQueue+0x6>
 8009242:	e7fa      	b.n	800923a <vQueueUnregisterQueue+0x1e>
 8009244:	200132d0 	.word	0x200132d0
 8009248:	200132cc 	.word	0x200132cc

0800924c <vQueueDelete>:
{
 800924c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800924e:	b940      	cbnz	r0, 8009262 <vQueueDelete+0x16>
	__asm volatile
 8009250:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009254:	f383 8811 	msr	BASEPRI, r3
 8009258:	f3bf 8f6f 	isb	sy
 800925c:	f3bf 8f4f 	dsb	sy
 8009260:	e7fe      	b.n	8009260 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8009262:	f7ff ffdb 	bl	800921c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009266:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800926a:	b91b      	cbnz	r3, 8009274 <vQueueDelete+0x28>
}
 800926c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009270:	f7ff b8f2 	b.w	8008458 <vPortFree>
}
 8009274:	bd10      	pop	{r4, pc}

08009276 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009276:	b570      	push	{r4, r5, r6, lr}
 8009278:	4604      	mov	r4, r0
 800927a:	460d      	mov	r5, r1
 800927c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800927e:	f7ff f9d1 	bl	8008624 <vPortEnterCritical>
 8009282:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009286:	2bff      	cmp	r3, #255	; 0xff
 8009288:	bf04      	itt	eq
 800928a:	2300      	moveq	r3, #0
 800928c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009290:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009294:	2bff      	cmp	r3, #255	; 0xff
 8009296:	bf04      	itt	eq
 8009298:	2300      	moveq	r3, #0
 800929a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800929e:	f7ff f9e3 	bl	8008668 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80092a2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80092a4:	b92b      	cbnz	r3, 80092b2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80092a6:	4632      	mov	r2, r6
 80092a8:	4629      	mov	r1, r5
 80092aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092ae:	f000 fbcf 	bl	8009a50 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80092b2:	4620      	mov	r0, r4
	}
 80092b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80092b8:	f7ff bb54 	b.w	8008964 <prvUnlockQueue>

080092bc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80092bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092c0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80092c2:	f7ff f9af 	bl	8008624 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80092c6:	4b2f      	ldr	r3, [pc, #188]	; (8009384 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80092c8:	4d2f      	ldr	r5, [pc, #188]	; (8009388 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80092ca:	681a      	ldr	r2, [r3, #0]
 80092cc:	4f2f      	ldr	r7, [pc, #188]	; (800938c <prvAddNewTaskToReadyList+0xd0>)
 80092ce:	3201      	adds	r2, #1
 80092d0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80092d2:	682e      	ldr	r6, [r5, #0]
 80092d4:	2e00      	cmp	r6, #0
 80092d6:	d149      	bne.n	800936c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80092d8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80092da:	681b      	ldr	r3, [r3, #0]
 80092dc:	2b01      	cmp	r3, #1
 80092de:	d11f      	bne.n	8009320 <prvAddNewTaskToReadyList+0x64>
 80092e0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80092e2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80092e4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80092e6:	f7ff f8f5 	bl	80084d4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80092ea:	2e38      	cmp	r6, #56	; 0x38
 80092ec:	f108 0814 	add.w	r8, r8, #20
 80092f0:	d1f7      	bne.n	80092e2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80092f2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80093b8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80092f6:	4e26      	ldr	r6, [pc, #152]	; (8009390 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80092f8:	4640      	mov	r0, r8
 80092fa:	f7ff f8eb 	bl	80084d4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80092fe:	4630      	mov	r0, r6
 8009300:	f7ff f8e8 	bl	80084d4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009304:	4823      	ldr	r0, [pc, #140]	; (8009394 <prvAddNewTaskToReadyList+0xd8>)
 8009306:	f7ff f8e5 	bl	80084d4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800930a:	4823      	ldr	r0, [pc, #140]	; (8009398 <prvAddNewTaskToReadyList+0xdc>)
 800930c:	f7ff f8e2 	bl	80084d4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009310:	4822      	ldr	r0, [pc, #136]	; (800939c <prvAddNewTaskToReadyList+0xe0>)
 8009312:	f7ff f8df 	bl	80084d4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009316:	4b22      	ldr	r3, [pc, #136]	; (80093a0 <prvAddNewTaskToReadyList+0xe4>)
 8009318:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800931c:	4b21      	ldr	r3, [pc, #132]	; (80093a4 <prvAddNewTaskToReadyList+0xe8>)
 800931e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8009320:	4a21      	ldr	r2, [pc, #132]	; (80093a8 <prvAddNewTaskToReadyList+0xec>)
 8009322:	6813      	ldr	r3, [r2, #0]
 8009324:	3301      	adds	r3, #1
 8009326:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009328:	4a20      	ldr	r2, [pc, #128]	; (80093ac <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800932a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800932c:	6811      	ldr	r1, [r2, #0]
 800932e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009330:	2014      	movs	r0, #20
 8009332:	428b      	cmp	r3, r1
 8009334:	fb00 7003 	mla	r0, r0, r3, r7
 8009338:	f104 0104 	add.w	r1, r4, #4
 800933c:	bf88      	it	hi
 800933e:	6013      	strhi	r3, [r2, #0]
 8009340:	f7ff f8d6 	bl	80084f0 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009344:	f7ff f990 	bl	8008668 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009348:	4b19      	ldr	r3, [pc, #100]	; (80093b0 <prvAddNewTaskToReadyList+0xf4>)
 800934a:	681b      	ldr	r3, [r3, #0]
 800934c:	b163      	cbz	r3, 8009368 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800934e:	682b      	ldr	r3, [r5, #0]
 8009350:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009352:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009354:	429a      	cmp	r2, r3
 8009356:	d207      	bcs.n	8009368 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8009358:	4b16      	ldr	r3, [pc, #88]	; (80093b4 <prvAddNewTaskToReadyList+0xf8>)
 800935a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800935e:	601a      	str	r2, [r3, #0]
 8009360:	f3bf 8f4f 	dsb	sy
 8009364:	f3bf 8f6f 	isb	sy
}
 8009368:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800936c:	4b10      	ldr	r3, [pc, #64]	; (80093b0 <prvAddNewTaskToReadyList+0xf4>)
 800936e:	681b      	ldr	r3, [r3, #0]
 8009370:	2b00      	cmp	r3, #0
 8009372:	d1d5      	bne.n	8009320 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009374:	682b      	ldr	r3, [r5, #0]
 8009376:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009378:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800937a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800937c:	bf98      	it	ls
 800937e:	602c      	strls	r4, [r5, #0]
 8009380:	e7ce      	b.n	8009320 <prvAddNewTaskToReadyList+0x64>
 8009382:	bf00      	nop
 8009384:	20012bfc 	.word	0x20012bfc
 8009388:	20012790 	.word	0x20012790
 800938c:	2001279c 	.word	0x2001279c
 8009390:	20012c24 	.word	0x20012c24
 8009394:	20012c44 	.word	0x20012c44
 8009398:	20012c70 	.word	0x20012c70
 800939c:	20012c5c 	.word	0x20012c5c
 80093a0:	20012794 	.word	0x20012794
 80093a4:	20012798 	.word	0x20012798
 80093a8:	20012c08 	.word	0x20012c08
 80093ac:	20012c0c 	.word	0x20012c0c
 80093b0:	20012c58 	.word	0x20012c58
 80093b4:	e000ed04 	.word	0xe000ed04
 80093b8:	20012c10 	.word	0x20012c10

080093bc <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80093bc:	4a06      	ldr	r2, [pc, #24]	; (80093d8 <prvResetNextTaskUnblockTime+0x1c>)
 80093be:	6813      	ldr	r3, [r2, #0]
 80093c0:	6819      	ldr	r1, [r3, #0]
 80093c2:	4b06      	ldr	r3, [pc, #24]	; (80093dc <prvResetNextTaskUnblockTime+0x20>)
 80093c4:	b919      	cbnz	r1, 80093ce <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80093c6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80093ca:	601a      	str	r2, [r3, #0]
	}
}
 80093cc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80093ce:	6812      	ldr	r2, [r2, #0]
 80093d0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80093d2:	68d2      	ldr	r2, [r2, #12]
 80093d4:	6852      	ldr	r2, [r2, #4]
 80093d6:	e7f8      	b.n	80093ca <prvResetNextTaskUnblockTime+0xe>
 80093d8:	20012794 	.word	0x20012794
 80093dc:	20012c38 	.word	0x20012c38

080093e0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80093e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80093e4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80093e8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80093ec:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80093ee:	4606      	mov	r6, r0
 80093f0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80093f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80093f4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80093f6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80093f8:	f013 fe58 	bl	801d0ac <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80093fc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80093fe:	f1a9 0904 	sub.w	r9, r9, #4
 8009402:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009404:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009408:	2d00      	cmp	r5, #0
 800940a:	d043      	beq.n	8009494 <prvInitialiseNewTask.isra.0+0xb4>
 800940c:	1e6b      	subs	r3, r5, #1
 800940e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009412:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009414:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009418:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800941c:	7819      	ldrb	r1, [r3, #0]
 800941e:	b109      	cbz	r1, 8009424 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009420:	42ab      	cmp	r3, r5
 8009422:	d1f7      	bne.n	8009414 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009424:	2300      	movs	r3, #0
 8009426:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800942a:	9d08      	ldr	r5, [sp, #32]
 800942c:	2d37      	cmp	r5, #55	; 0x37
 800942e:	bf28      	it	cs
 8009430:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009432:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009436:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009438:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800943a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800943c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009440:	f7ff f853 	bl	80084ea <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009444:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009448:	f104 0018 	add.w	r0, r4, #24
 800944c:	f7ff f84d 	bl	80084ea <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009450:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009454:	2260      	movs	r2, #96	; 0x60
 8009456:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009458:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800945a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800945c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800945e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009462:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009466:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800946a:	f013 fe1f 	bl	801d0ac <memset>
 800946e:	4b0b      	ldr	r3, [pc, #44]	; (800949c <prvInitialiseNewTask.isra.0+0xbc>)
 8009470:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009472:	4b0b      	ldr	r3, [pc, #44]	; (80094a0 <prvInitialiseNewTask.isra.0+0xc0>)
 8009474:	6623      	str	r3, [r4, #96]	; 0x60
 8009476:	4b0b      	ldr	r3, [pc, #44]	; (80094a4 <prvInitialiseNewTask.isra.0+0xc4>)
 8009478:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800947a:	463a      	mov	r2, r7
 800947c:	4631      	mov	r1, r6
 800947e:	4648      	mov	r0, r9
 8009480:	f7ff f8a8 	bl	80085d4 <pxPortInitialiseStack>
 8009484:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009486:	f1b8 0f00 	cmp.w	r8, #0
 800948a:	d001      	beq.n	8009490 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800948c:	f8c8 4000 	str.w	r4, [r8]
}
 8009490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009494:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009498:	e7c7      	b.n	800942a <prvInitialiseNewTask.isra.0+0x4a>
 800949a:	bf00      	nop
 800949c:	08021cbc 	.word	0x08021cbc
 80094a0:	08021cdc 	.word	0x08021cdc
 80094a4:	08021c9c 	.word	0x08021c9c

080094a8 <prvDeleteTCB>:
	{
 80094a8:	b510      	push	{r4, lr}
 80094aa:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80094ac:	3058      	adds	r0, #88	; 0x58
 80094ae:	f014 f9ab 	bl	801d808 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80094b2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 80094b6:	b93b      	cbnz	r3, 80094c8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 80094b8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80094ba:	f7fe ffcd 	bl	8008458 <vPortFree>
				vPortFree( pxTCB );
 80094be:	4620      	mov	r0, r4
	}
 80094c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80094c4:	f7fe bfc8 	b.w	8008458 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80094c8:	2b01      	cmp	r3, #1
 80094ca:	d0f8      	beq.n	80094be <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80094cc:	2b02      	cmp	r3, #2
 80094ce:	d008      	beq.n	80094e2 <prvDeleteTCB+0x3a>
 80094d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094d4:	f383 8811 	msr	BASEPRI, r3
 80094d8:	f3bf 8f6f 	isb	sy
 80094dc:	f3bf 8f4f 	dsb	sy
 80094e0:	e7fe      	b.n	80094e0 <prvDeleteTCB+0x38>
	}
 80094e2:	bd10      	pop	{r4, pc}

080094e4 <prvIdleTask>:
{
 80094e4:	b580      	push	{r7, lr}
				taskYIELD();
 80094e6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8009544 <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80094ea:	4f12      	ldr	r7, [pc, #72]	; (8009534 <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80094ec:	4c12      	ldr	r4, [pc, #72]	; (8009538 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 80094ee:	4d13      	ldr	r5, [pc, #76]	; (800953c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80094f0:	6823      	ldr	r3, [r4, #0]
 80094f2:	b963      	cbnz	r3, 800950e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80094f4:	4b12      	ldr	r3, [pc, #72]	; (8009540 <prvIdleTask+0x5c>)
 80094f6:	681b      	ldr	r3, [r3, #0]
 80094f8:	2b01      	cmp	r3, #1
 80094fa:	d9f8      	bls.n	80094ee <prvIdleTask+0xa>
				taskYIELD();
 80094fc:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009500:	f8c8 3000 	str.w	r3, [r8]
 8009504:	f3bf 8f4f 	dsb	sy
 8009508:	f3bf 8f6f 	isb	sy
 800950c:	e7ee      	b.n	80094ec <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 800950e:	f7ff f889 	bl	8008624 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009512:	68fb      	ldr	r3, [r7, #12]
 8009514:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009516:	1d30      	adds	r0, r6, #4
 8009518:	f7ff f80d 	bl	8008536 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800951c:	682b      	ldr	r3, [r5, #0]
 800951e:	3b01      	subs	r3, #1
 8009520:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009522:	6823      	ldr	r3, [r4, #0]
 8009524:	3b01      	subs	r3, #1
 8009526:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009528:	f7ff f89e 	bl	8008668 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800952c:	4630      	mov	r0, r6
 800952e:	f7ff ffbb 	bl	80094a8 <prvDeleteTCB>
 8009532:	e7dd      	b.n	80094f0 <prvIdleTask+0xc>
 8009534:	20012c70 	.word	0x20012c70
 8009538:	20012c00 	.word	0x20012c00
 800953c:	20012bfc 	.word	0x20012bfc
 8009540:	2001279c 	.word	0x2001279c
 8009544:	e000ed04 	.word	0xe000ed04

08009548 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800954a:	4b16      	ldr	r3, [pc, #88]	; (80095a4 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800954c:	4e16      	ldr	r6, [pc, #88]	; (80095a8 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800954e:	681d      	ldr	r5, [r3, #0]
{
 8009550:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009552:	6830      	ldr	r0, [r6, #0]
 8009554:	3004      	adds	r0, #4
{
 8009556:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009558:	f7fe ffed 	bl	8008536 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800955c:	1c63      	adds	r3, r4, #1
 800955e:	4633      	mov	r3, r6
 8009560:	d107      	bne.n	8009572 <prvAddCurrentTaskToDelayedList+0x2a>
 8009562:	b137      	cbz	r7, 8009572 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009564:	6831      	ldr	r1, [r6, #0]
 8009566:	4811      	ldr	r0, [pc, #68]	; (80095ac <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009568:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800956c:	3104      	adds	r1, #4
 800956e:	f7fe bfbf 	b.w	80084f0 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009572:	681a      	ldr	r2, [r3, #0]
 8009574:	192c      	adds	r4, r5, r4
 8009576:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8009578:	d307      	bcc.n	800958a <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800957a:	4a0d      	ldr	r2, [pc, #52]	; (80095b0 <prvAddCurrentTaskToDelayedList+0x68>)
 800957c:	6810      	ldr	r0, [r2, #0]
 800957e:	6819      	ldr	r1, [r3, #0]
}
 8009580:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009584:	3104      	adds	r1, #4
 8009586:	f7fe bfbf 	b.w	8008508 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800958a:	4a0a      	ldr	r2, [pc, #40]	; (80095b4 <prvAddCurrentTaskToDelayedList+0x6c>)
 800958c:	6810      	ldr	r0, [r2, #0]
 800958e:	6819      	ldr	r1, [r3, #0]
 8009590:	3104      	adds	r1, #4
 8009592:	f7fe ffb9 	bl	8008508 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009596:	4b08      	ldr	r3, [pc, #32]	; (80095b8 <prvAddCurrentTaskToDelayedList+0x70>)
 8009598:	681a      	ldr	r2, [r3, #0]
 800959a:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800959c:	bf88      	it	hi
 800959e:	601c      	strhi	r4, [r3, #0]
}
 80095a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80095a2:	bf00      	nop
 80095a4:	20012c84 	.word	0x20012c84
 80095a8:	20012790 	.word	0x20012790
 80095ac:	20012c5c 	.word	0x20012c5c
 80095b0:	20012798 	.word	0x20012798
 80095b4:	20012794 	.word	0x20012794
 80095b8:	20012c38 	.word	0x20012c38

080095bc <xTaskCreateStatic>:
	{
 80095bc:	b570      	push	{r4, r5, r6, lr}
 80095be:	b086      	sub	sp, #24
 80095c0:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80095c4:	b945      	cbnz	r5, 80095d8 <xTaskCreateStatic+0x1c>
 80095c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ca:	f383 8811 	msr	BASEPRI, r3
 80095ce:	f3bf 8f6f 	isb	sy
 80095d2:	f3bf 8f4f 	dsb	sy
 80095d6:	e7fe      	b.n	80095d6 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80095d8:	b944      	cbnz	r4, 80095ec <xTaskCreateStatic+0x30>
 80095da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095de:	f383 8811 	msr	BASEPRI, r3
 80095e2:	f3bf 8f6f 	isb	sy
 80095e6:	f3bf 8f4f 	dsb	sy
 80095ea:	e7fe      	b.n	80095ea <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80095ec:	26c0      	movs	r6, #192	; 0xc0
 80095ee:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80095f0:	9e05      	ldr	r6, [sp, #20]
 80095f2:	2ec0      	cmp	r6, #192	; 0xc0
 80095f4:	d008      	beq.n	8009608 <xTaskCreateStatic+0x4c>
 80095f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095fa:	f383 8811 	msr	BASEPRI, r3
 80095fe:	f3bf 8f6f 	isb	sy
 8009602:	f3bf 8f4f 	dsb	sy
 8009606:	e7fe      	b.n	8009606 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009608:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800960a:	2502      	movs	r5, #2
 800960c:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009610:	ad04      	add	r5, sp, #16
 8009612:	9501      	str	r5, [sp, #4]
 8009614:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009616:	9402      	str	r4, [sp, #8]
 8009618:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800961a:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800961c:	f7ff fee0 	bl	80093e0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009620:	4620      	mov	r0, r4
 8009622:	f7ff fe4b 	bl	80092bc <prvAddNewTaskToReadyList>
	}
 8009626:	9804      	ldr	r0, [sp, #16]
 8009628:	b006      	add	sp, #24
 800962a:	bd70      	pop	{r4, r5, r6, pc}

0800962c <xTaskCreate>:
	{
 800962c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009630:	4607      	mov	r7, r0
 8009632:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009634:	0090      	lsls	r0, r2, #2
	{
 8009636:	4688      	mov	r8, r1
 8009638:	4616      	mov	r6, r2
 800963a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800963c:	f7fe fe7a 	bl	8008334 <pvPortMalloc>
			if( pxStack != NULL )
 8009640:	4605      	mov	r5, r0
 8009642:	b1e8      	cbz	r0, 8009680 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009644:	20c0      	movs	r0, #192	; 0xc0
 8009646:	f7fe fe75 	bl	8008334 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800964a:	4604      	mov	r4, r0
 800964c:	b1a8      	cbz	r0, 800967a <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800964e:	2300      	movs	r3, #0
 8009650:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009654:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009656:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009658:	9301      	str	r3, [sp, #4]
 800965a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800965c:	9002      	str	r0, [sp, #8]
 800965e:	9300      	str	r3, [sp, #0]
 8009660:	4632      	mov	r2, r6
 8009662:	464b      	mov	r3, r9
 8009664:	4641      	mov	r1, r8
 8009666:	4638      	mov	r0, r7
 8009668:	f7ff feba 	bl	80093e0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800966c:	4620      	mov	r0, r4
 800966e:	f7ff fe25 	bl	80092bc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009672:	2001      	movs	r0, #1
	}
 8009674:	b005      	add	sp, #20
 8009676:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800967a:	4628      	mov	r0, r5
 800967c:	f7fe feec 	bl	8008458 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009680:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009684:	e7f6      	b.n	8009674 <xTaskCreate+0x48>
	...

08009688 <vTaskStartScheduler>:
{
 8009688:	b510      	push	{r4, lr}
 800968a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800968c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800968e:	aa07      	add	r2, sp, #28
 8009690:	a906      	add	r1, sp, #24
 8009692:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009694:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009698:	f7fe fe10 	bl	80082bc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800969c:	9b05      	ldr	r3, [sp, #20]
 800969e:	9302      	str	r3, [sp, #8]
 80096a0:	9b06      	ldr	r3, [sp, #24]
 80096a2:	9a07      	ldr	r2, [sp, #28]
 80096a4:	4917      	ldr	r1, [pc, #92]	; (8009704 <vTaskStartScheduler+0x7c>)
 80096a6:	4818      	ldr	r0, [pc, #96]	; (8009708 <vTaskStartScheduler+0x80>)
 80096a8:	e9cd 4300 	strd	r4, r3, [sp]
 80096ac:	4623      	mov	r3, r4
 80096ae:	f7ff ff85 	bl	80095bc <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80096b2:	b1d0      	cbz	r0, 80096ea <vTaskStartScheduler+0x62>
			xReturn = xTimerCreateTimerTask();
 80096b4:	f000 fbc2 	bl	8009e3c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80096b8:	2801      	cmp	r0, #1
 80096ba:	d118      	bne.n	80096ee <vTaskStartScheduler+0x66>
 80096bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096c0:	f383 8811 	msr	BASEPRI, r3
 80096c4:	f3bf 8f6f 	isb	sy
 80096c8:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80096cc:	4b0f      	ldr	r3, [pc, #60]	; (800970c <vTaskStartScheduler+0x84>)
 80096ce:	4a10      	ldr	r2, [pc, #64]	; (8009710 <vTaskStartScheduler+0x88>)
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	3358      	adds	r3, #88	; 0x58
 80096d4:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80096d6:	4b0f      	ldr	r3, [pc, #60]	; (8009714 <vTaskStartScheduler+0x8c>)
 80096d8:	f04f 32ff 	mov.w	r2, #4294967295
 80096dc:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80096de:	4b0e      	ldr	r3, [pc, #56]	; (8009718 <vTaskStartScheduler+0x90>)
 80096e0:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80096e2:	4b0e      	ldr	r3, [pc, #56]	; (800971c <vTaskStartScheduler+0x94>)
 80096e4:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 80096e6:	f7ff f835 	bl	8008754 <xPortStartScheduler>
}
 80096ea:	b008      	add	sp, #32
 80096ec:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80096ee:	3001      	adds	r0, #1
 80096f0:	d1fb      	bne.n	80096ea <vTaskStartScheduler+0x62>
 80096f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096f6:	f383 8811 	msr	BASEPRI, r3
 80096fa:	f3bf 8f6f 	isb	sy
 80096fe:	f3bf 8f4f 	dsb	sy
 8009702:	e7fe      	b.n	8009702 <vTaskStartScheduler+0x7a>
 8009704:	0801f764 	.word	0x0801f764
 8009708:	080094e5 	.word	0x080094e5
 800970c:	20012790 	.word	0x20012790
 8009710:	200000fc 	.word	0x200000fc
 8009714:	20012c38 	.word	0x20012c38
 8009718:	20012c58 	.word	0x20012c58
 800971c:	20012c84 	.word	0x20012c84

08009720 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009720:	4a02      	ldr	r2, [pc, #8]	; (800972c <vTaskSuspendAll+0xc>)
 8009722:	6813      	ldr	r3, [r2, #0]
 8009724:	3301      	adds	r3, #1
 8009726:	6013      	str	r3, [r2, #0]
}
 8009728:	4770      	bx	lr
 800972a:	bf00      	nop
 800972c:	20012c04 	.word	0x20012c04

08009730 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009730:	4b01      	ldr	r3, [pc, #4]	; (8009738 <xTaskGetTickCount+0x8>)
 8009732:	6818      	ldr	r0, [r3, #0]
}
 8009734:	4770      	bx	lr
 8009736:	bf00      	nop
 8009738:	20012c84 	.word	0x20012c84

0800973c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800973c:	4b3f      	ldr	r3, [pc, #252]	; (800983c <xTaskIncrementTick+0x100>)
 800973e:	681b      	ldr	r3, [r3, #0]
{
 8009740:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009744:	2b00      	cmp	r3, #0
 8009746:	d173      	bne.n	8009830 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009748:	4b3d      	ldr	r3, [pc, #244]	; (8009840 <xTaskIncrementTick+0x104>)
 800974a:	681d      	ldr	r5, [r3, #0]
 800974c:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800974e:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009750:	b9bd      	cbnz	r5, 8009782 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009752:	4b3c      	ldr	r3, [pc, #240]	; (8009844 <xTaskIncrementTick+0x108>)
 8009754:	681a      	ldr	r2, [r3, #0]
 8009756:	6812      	ldr	r2, [r2, #0]
 8009758:	b142      	cbz	r2, 800976c <xTaskIncrementTick+0x30>
 800975a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800975e:	f383 8811 	msr	BASEPRI, r3
 8009762:	f3bf 8f6f 	isb	sy
 8009766:	f3bf 8f4f 	dsb	sy
 800976a:	e7fe      	b.n	800976a <xTaskIncrementTick+0x2e>
 800976c:	4a36      	ldr	r2, [pc, #216]	; (8009848 <xTaskIncrementTick+0x10c>)
 800976e:	6819      	ldr	r1, [r3, #0]
 8009770:	6810      	ldr	r0, [r2, #0]
 8009772:	6018      	str	r0, [r3, #0]
 8009774:	6011      	str	r1, [r2, #0]
 8009776:	4a35      	ldr	r2, [pc, #212]	; (800984c <xTaskIncrementTick+0x110>)
 8009778:	6813      	ldr	r3, [r2, #0]
 800977a:	3301      	adds	r3, #1
 800977c:	6013      	str	r3, [r2, #0]
 800977e:	f7ff fe1d 	bl	80093bc <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009782:	4e33      	ldr	r6, [pc, #204]	; (8009850 <xTaskIncrementTick+0x114>)
 8009784:	4f33      	ldr	r7, [pc, #204]	; (8009854 <xTaskIncrementTick+0x118>)
 8009786:	6833      	ldr	r3, [r6, #0]
 8009788:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009860 <xTaskIncrementTick+0x124>
 800978c:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800978e:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009792:	d211      	bcs.n	80097b8 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009794:	f8d8 3000 	ldr.w	r3, [r8]
 8009798:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800979a:	2314      	movs	r3, #20
 800979c:	4353      	muls	r3, r2
 800979e:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80097a0:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80097a2:	4b2d      	ldr	r3, [pc, #180]	; (8009858 <xTaskIncrementTick+0x11c>)
 80097a4:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80097a6:	bf28      	it	cs
 80097a8:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80097aa:	2b00      	cmp	r3, #0
 80097ac:	bf18      	it	ne
 80097ae:	2401      	movne	r4, #1
}
 80097b0:	4620      	mov	r0, r4
 80097b2:	b003      	add	sp, #12
 80097b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097b8:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009844 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80097bc:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009864 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80097c0:	f8d9 3000 	ldr.w	r3, [r9]
 80097c4:	681b      	ldr	r3, [r3, #0]
 80097c6:	b91b      	cbnz	r3, 80097d0 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80097c8:	f04f 33ff 	mov.w	r3, #4294967295
 80097cc:	6033      	str	r3, [r6, #0]
					break;
 80097ce:	e7e1      	b.n	8009794 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80097d0:	f8d9 3000 	ldr.w	r3, [r9]
 80097d4:	68db      	ldr	r3, [r3, #12]
 80097d6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80097da:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80097de:	4295      	cmp	r5, r2
 80097e0:	d201      	bcs.n	80097e6 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80097e2:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80097e4:	e7d6      	b.n	8009794 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80097e6:	f10b 0104 	add.w	r1, fp, #4
 80097ea:	4608      	mov	r0, r1
 80097ec:	9101      	str	r1, [sp, #4]
 80097ee:	f7fe fea2 	bl	8008536 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80097f2:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80097f6:	9901      	ldr	r1, [sp, #4]
 80097f8:	b122      	cbz	r2, 8009804 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80097fa:	f10b 0018 	add.w	r0, fp, #24
 80097fe:	f7fe fe9a 	bl	8008536 <uxListRemove>
 8009802:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009804:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009808:	f8da 2000 	ldr.w	r2, [sl]
 800980c:	2314      	movs	r3, #20
 800980e:	4290      	cmp	r0, r2
 8009810:	bf88      	it	hi
 8009812:	f8ca 0000 	strhi.w	r0, [sl]
 8009816:	fb03 7000 	mla	r0, r3, r0, r7
 800981a:	f7fe fe69 	bl	80084f0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800981e:	f8d8 1000 	ldr.w	r1, [r8]
 8009822:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009826:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009828:	429a      	cmp	r2, r3
 800982a:	bf28      	it	cs
 800982c:	2401      	movcs	r4, #1
 800982e:	e7c7      	b.n	80097c0 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8009830:	4a0a      	ldr	r2, [pc, #40]	; (800985c <xTaskIncrementTick+0x120>)
 8009832:	6813      	ldr	r3, [r2, #0]
 8009834:	3301      	adds	r3, #1
 8009836:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009838:	2400      	movs	r4, #0
	return xSwitchRequired;
 800983a:	e7b9      	b.n	80097b0 <xTaskIncrementTick+0x74>
 800983c:	20012c04 	.word	0x20012c04
 8009840:	20012c84 	.word	0x20012c84
 8009844:	20012794 	.word	0x20012794
 8009848:	20012798 	.word	0x20012798
 800984c:	20012c3c 	.word	0x20012c3c
 8009850:	20012c38 	.word	0x20012c38
 8009854:	2001279c 	.word	0x2001279c
 8009858:	20012c88 	.word	0x20012c88
 800985c:	20012c40 	.word	0x20012c40
 8009860:	20012790 	.word	0x20012790
 8009864:	20012c0c 	.word	0x20012c0c

08009868 <xTaskResumeAll>:
{
 8009868:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800986a:	4c30      	ldr	r4, [pc, #192]	; (800992c <xTaskResumeAll+0xc4>)
 800986c:	6823      	ldr	r3, [r4, #0]
 800986e:	b943      	cbnz	r3, 8009882 <xTaskResumeAll+0x1a>
 8009870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009874:	f383 8811 	msr	BASEPRI, r3
 8009878:	f3bf 8f6f 	isb	sy
 800987c:	f3bf 8f4f 	dsb	sy
 8009880:	e7fe      	b.n	8009880 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009882:	f7fe fecf 	bl	8008624 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009886:	6823      	ldr	r3, [r4, #0]
 8009888:	3b01      	subs	r3, #1
 800988a:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800988c:	6824      	ldr	r4, [r4, #0]
 800988e:	b12c      	cbz	r4, 800989c <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009890:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009892:	f7fe fee9 	bl	8008668 <vPortExitCritical>
}
 8009896:	4620      	mov	r0, r4
 8009898:	b003      	add	sp, #12
 800989a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800989c:	4b24      	ldr	r3, [pc, #144]	; (8009930 <xTaskResumeAll+0xc8>)
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	2b00      	cmp	r3, #0
 80098a2:	d0f5      	beq.n	8009890 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80098a4:	4d23      	ldr	r5, [pc, #140]	; (8009934 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80098a6:	4e24      	ldr	r6, [pc, #144]	; (8009938 <xTaskResumeAll+0xd0>)
 80098a8:	4f24      	ldr	r7, [pc, #144]	; (800993c <xTaskResumeAll+0xd4>)
 80098aa:	e01e      	b.n	80098ea <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80098ac:	68eb      	ldr	r3, [r5, #12]
 80098ae:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80098b0:	f104 0018 	add.w	r0, r4, #24
 80098b4:	f7fe fe3f 	bl	8008536 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80098b8:	1d21      	adds	r1, r4, #4
 80098ba:	4608      	mov	r0, r1
 80098bc:	9101      	str	r1, [sp, #4]
 80098be:	f7fe fe3a 	bl	8008536 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80098c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80098c4:	6832      	ldr	r2, [r6, #0]
 80098c6:	9901      	ldr	r1, [sp, #4]
 80098c8:	2014      	movs	r0, #20
 80098ca:	4293      	cmp	r3, r2
 80098cc:	fb00 7003 	mla	r0, r0, r3, r7
 80098d0:	bf88      	it	hi
 80098d2:	6033      	strhi	r3, [r6, #0]
 80098d4:	f7fe fe0c 	bl	80084f0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80098d8:	4b19      	ldr	r3, [pc, #100]	; (8009940 <xTaskResumeAll+0xd8>)
 80098da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80098dc:	681b      	ldr	r3, [r3, #0]
 80098de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80098e0:	429a      	cmp	r2, r3
 80098e2:	d302      	bcc.n	80098ea <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80098e4:	4b17      	ldr	r3, [pc, #92]	; (8009944 <xTaskResumeAll+0xdc>)
 80098e6:	2201      	movs	r2, #1
 80098e8:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80098ea:	682b      	ldr	r3, [r5, #0]
 80098ec:	2b00      	cmp	r3, #0
 80098ee:	d1dd      	bne.n	80098ac <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80098f0:	b10c      	cbz	r4, 80098f6 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80098f2:	f7ff fd63 	bl	80093bc <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80098f6:	4d14      	ldr	r5, [pc, #80]	; (8009948 <xTaskResumeAll+0xe0>)
 80098f8:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80098fa:	b144      	cbz	r4, 800990e <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80098fc:	4e11      	ldr	r6, [pc, #68]	; (8009944 <xTaskResumeAll+0xdc>)
 80098fe:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009900:	f7ff ff1c 	bl	800973c <xTaskIncrementTick>
 8009904:	b100      	cbz	r0, 8009908 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009906:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8009908:	3c01      	subs	r4, #1
 800990a:	d1f9      	bne.n	8009900 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800990c:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800990e:	4b0d      	ldr	r3, [pc, #52]	; (8009944 <xTaskResumeAll+0xdc>)
 8009910:	681b      	ldr	r3, [r3, #0]
 8009912:	2b00      	cmp	r3, #0
 8009914:	d0bc      	beq.n	8009890 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009916:	4b0d      	ldr	r3, [pc, #52]	; (800994c <xTaskResumeAll+0xe4>)
 8009918:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800991c:	601a      	str	r2, [r3, #0]
 800991e:	f3bf 8f4f 	dsb	sy
 8009922:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009926:	2401      	movs	r4, #1
 8009928:	e7b3      	b.n	8009892 <xTaskResumeAll+0x2a>
 800992a:	bf00      	nop
 800992c:	20012c04 	.word	0x20012c04
 8009930:	20012bfc 	.word	0x20012bfc
 8009934:	20012c44 	.word	0x20012c44
 8009938:	20012c0c 	.word	0x20012c0c
 800993c:	2001279c 	.word	0x2001279c
 8009940:	20012790 	.word	0x20012790
 8009944:	20012c88 	.word	0x20012c88
 8009948:	20012c40 	.word	0x20012c40
 800994c:	e000ed04 	.word	0xe000ed04

08009950 <vTaskDelay>:
	{
 8009950:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009952:	b940      	cbnz	r0, 8009966 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8009954:	4b0e      	ldr	r3, [pc, #56]	; (8009990 <vTaskDelay+0x40>)
 8009956:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800995a:	601a      	str	r2, [r3, #0]
 800995c:	f3bf 8f4f 	dsb	sy
 8009960:	f3bf 8f6f 	isb	sy
	}
 8009964:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009966:	4b0b      	ldr	r3, [pc, #44]	; (8009994 <vTaskDelay+0x44>)
 8009968:	6819      	ldr	r1, [r3, #0]
 800996a:	b141      	cbz	r1, 800997e <vTaskDelay+0x2e>
 800996c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009970:	f383 8811 	msr	BASEPRI, r3
 8009974:	f3bf 8f6f 	isb	sy
 8009978:	f3bf 8f4f 	dsb	sy
 800997c:	e7fe      	b.n	800997c <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800997e:	f7ff fecf 	bl	8009720 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009982:	f7ff fde1 	bl	8009548 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009986:	f7ff ff6f 	bl	8009868 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800998a:	2800      	cmp	r0, #0
 800998c:	d0e2      	beq.n	8009954 <vTaskDelay+0x4>
 800998e:	e7e9      	b.n	8009964 <vTaskDelay+0x14>
 8009990:	e000ed04 	.word	0xe000ed04
 8009994:	20012c04 	.word	0x20012c04

08009998 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009998:	4b1a      	ldr	r3, [pc, #104]	; (8009a04 <vTaskSwitchContext+0x6c>)
 800999a:	681a      	ldr	r2, [r3, #0]
 800999c:	4b1a      	ldr	r3, [pc, #104]	; (8009a08 <vTaskSwitchContext+0x70>)
{
 800999e:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80099a0:	b112      	cbz	r2, 80099a8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80099a2:	2201      	movs	r2, #1
 80099a4:	601a      	str	r2, [r3, #0]
}
 80099a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099a8:	4d18      	ldr	r5, [pc, #96]	; (8009a0c <vTaskSwitchContext+0x74>)
		xYieldPending = pdFALSE;
 80099aa:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099ac:	4a18      	ldr	r2, [pc, #96]	; (8009a10 <vTaskSwitchContext+0x78>)
 80099ae:	682b      	ldr	r3, [r5, #0]
 80099b0:	2714      	movs	r7, #20
 80099b2:	4616      	mov	r6, r2
 80099b4:	fb07 f103 	mul.w	r1, r7, r3
 80099b8:	1850      	adds	r0, r2, r1
 80099ba:	5854      	ldr	r4, [r2, r1]
 80099bc:	b1ac      	cbz	r4, 80099ea <vTaskSwitchContext+0x52>
 80099be:	6844      	ldr	r4, [r0, #4]
 80099c0:	3108      	adds	r1, #8
 80099c2:	6864      	ldr	r4, [r4, #4]
 80099c4:	6044      	str	r4, [r0, #4]
 80099c6:	440a      	add	r2, r1
 80099c8:	4294      	cmp	r4, r2
 80099ca:	bf04      	itt	eq
 80099cc:	6862      	ldreq	r2, [r4, #4]
 80099ce:	6042      	streq	r2, [r0, #4]
 80099d0:	2214      	movs	r2, #20
 80099d2:	fb02 6203 	mla	r2, r2, r3, r6
 80099d6:	6852      	ldr	r2, [r2, #4]
 80099d8:	68d1      	ldr	r1, [r2, #12]
 80099da:	4a0e      	ldr	r2, [pc, #56]	; (8009a14 <vTaskSwitchContext+0x7c>)
 80099dc:	6011      	str	r1, [r2, #0]
 80099de:	602b      	str	r3, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80099e0:	6813      	ldr	r3, [r2, #0]
 80099e2:	4a0d      	ldr	r2, [pc, #52]	; (8009a18 <vTaskSwitchContext+0x80>)
 80099e4:	3358      	adds	r3, #88	; 0x58
 80099e6:	6013      	str	r3, [r2, #0]
}
 80099e8:	e7dd      	b.n	80099a6 <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099ea:	b943      	cbnz	r3, 80099fe <vTaskSwitchContext+0x66>
 80099ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099f0:	f383 8811 	msr	BASEPRI, r3
 80099f4:	f3bf 8f6f 	isb	sy
 80099f8:	f3bf 8f4f 	dsb	sy
 80099fc:	e7fe      	b.n	80099fc <vTaskSwitchContext+0x64>
 80099fe:	3b01      	subs	r3, #1
 8009a00:	e7d8      	b.n	80099b4 <vTaskSwitchContext+0x1c>
 8009a02:	bf00      	nop
 8009a04:	20012c04 	.word	0x20012c04
 8009a08:	20012c88 	.word	0x20012c88
 8009a0c:	20012c0c 	.word	0x20012c0c
 8009a10:	2001279c 	.word	0x2001279c
 8009a14:	20012790 	.word	0x20012790
 8009a18:	200000fc 	.word	0x200000fc

08009a1c <vTaskPlaceOnEventList>:
{
 8009a1c:	b510      	push	{r4, lr}
 8009a1e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009a20:	b940      	cbnz	r0, 8009a34 <vTaskPlaceOnEventList+0x18>
 8009a22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a26:	f383 8811 	msr	BASEPRI, r3
 8009a2a:	f3bf 8f6f 	isb	sy
 8009a2e:	f3bf 8f4f 	dsb	sy
 8009a32:	e7fe      	b.n	8009a32 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009a34:	4b05      	ldr	r3, [pc, #20]	; (8009a4c <vTaskPlaceOnEventList+0x30>)
 8009a36:	6819      	ldr	r1, [r3, #0]
 8009a38:	3118      	adds	r1, #24
 8009a3a:	f7fe fd65 	bl	8008508 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009a3e:	4620      	mov	r0, r4
 8009a40:	2101      	movs	r1, #1
}
 8009a42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009a46:	f7ff bd7f 	b.w	8009548 <prvAddCurrentTaskToDelayedList>
 8009a4a:	bf00      	nop
 8009a4c:	20012790 	.word	0x20012790

08009a50 <vTaskPlaceOnEventListRestricted>:
	{
 8009a50:	b538      	push	{r3, r4, r5, lr}
 8009a52:	460d      	mov	r5, r1
 8009a54:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009a56:	b940      	cbnz	r0, 8009a6a <vTaskPlaceOnEventListRestricted+0x1a>
 8009a58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a5c:	f383 8811 	msr	BASEPRI, r3
 8009a60:	f3bf 8f6f 	isb	sy
 8009a64:	f3bf 8f4f 	dsb	sy
 8009a68:	e7fe      	b.n	8009a68 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009a6a:	4b07      	ldr	r3, [pc, #28]	; (8009a88 <vTaskPlaceOnEventListRestricted+0x38>)
 8009a6c:	6819      	ldr	r1, [r3, #0]
 8009a6e:	3118      	adds	r1, #24
 8009a70:	f7fe fd3e 	bl	80084f0 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009a74:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009a76:	4621      	mov	r1, r4
 8009a78:	bf0c      	ite	eq
 8009a7a:	4628      	moveq	r0, r5
 8009a7c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009a80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009a84:	f7ff bd60 	b.w	8009548 <prvAddCurrentTaskToDelayedList>
 8009a88:	20012790 	.word	0x20012790

08009a8c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a8c:	68c3      	ldr	r3, [r0, #12]
{
 8009a8e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a90:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8009a92:	b944      	cbnz	r4, 8009aa6 <xTaskRemoveFromEventList+0x1a>
 8009a94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a98:	f383 8811 	msr	BASEPRI, r3
 8009a9c:	f3bf 8f6f 	isb	sy
 8009aa0:	f3bf 8f4f 	dsb	sy
 8009aa4:	e7fe      	b.n	8009aa4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009aa6:	f104 0118 	add.w	r1, r4, #24
 8009aaa:	4608      	mov	r0, r1
 8009aac:	9101      	str	r1, [sp, #4]
 8009aae:	f7fe fd42 	bl	8008536 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ab2:	4b12      	ldr	r3, [pc, #72]	; (8009afc <xTaskRemoveFromEventList+0x70>)
 8009ab4:	9901      	ldr	r1, [sp, #4]
 8009ab6:	681b      	ldr	r3, [r3, #0]
 8009ab8:	b9eb      	cbnz	r3, 8009af6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009aba:	1d21      	adds	r1, r4, #4
 8009abc:	4608      	mov	r0, r1
 8009abe:	9101      	str	r1, [sp, #4]
 8009ac0:	f7fe fd39 	bl	8008536 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009ac4:	4a0e      	ldr	r2, [pc, #56]	; (8009b00 <xTaskRemoveFromEventList+0x74>)
 8009ac6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ac8:	6810      	ldr	r0, [r2, #0]
 8009aca:	9901      	ldr	r1, [sp, #4]
 8009acc:	4283      	cmp	r3, r0
 8009ace:	bf88      	it	hi
 8009ad0:	6013      	strhi	r3, [r2, #0]
 8009ad2:	4a0c      	ldr	r2, [pc, #48]	; (8009b04 <xTaskRemoveFromEventList+0x78>)
 8009ad4:	2014      	movs	r0, #20
 8009ad6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009ada:	f7fe fd09 	bl	80084f0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8009ade:	4b0a      	ldr	r3, [pc, #40]	; (8009b08 <xTaskRemoveFromEventList+0x7c>)
 8009ae0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009ae2:	681b      	ldr	r3, [r3, #0]
 8009ae4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ae6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009ae8:	bf85      	ittet	hi
 8009aea:	4b08      	ldrhi	r3, [pc, #32]	; (8009b0c <xTaskRemoveFromEventList+0x80>)
 8009aec:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8009aee:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8009af0:	6018      	strhi	r0, [r3, #0]
}
 8009af2:	b002      	add	sp, #8
 8009af4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009af6:	4806      	ldr	r0, [pc, #24]	; (8009b10 <xTaskRemoveFromEventList+0x84>)
 8009af8:	e7ef      	b.n	8009ada <xTaskRemoveFromEventList+0x4e>
 8009afa:	bf00      	nop
 8009afc:	20012c04 	.word	0x20012c04
 8009b00:	20012c0c 	.word	0x20012c0c
 8009b04:	2001279c 	.word	0x2001279c
 8009b08:	20012790 	.word	0x20012790
 8009b0c:	20012c88 	.word	0x20012c88
 8009b10:	20012c44 	.word	0x20012c44

08009b14 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8009b14:	4b03      	ldr	r3, [pc, #12]	; (8009b24 <vTaskInternalSetTimeOutState+0x10>)
 8009b16:	681b      	ldr	r3, [r3, #0]
 8009b18:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8009b1a:	4b03      	ldr	r3, [pc, #12]	; (8009b28 <vTaskInternalSetTimeOutState+0x14>)
 8009b1c:	681b      	ldr	r3, [r3, #0]
 8009b1e:	6043      	str	r3, [r0, #4]
}
 8009b20:	4770      	bx	lr
 8009b22:	bf00      	nop
 8009b24:	20012c3c 	.word	0x20012c3c
 8009b28:	20012c84 	.word	0x20012c84

08009b2c <xTaskCheckForTimeOut>:
{
 8009b2c:	b570      	push	{r4, r5, r6, lr}
 8009b2e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8009b30:	4605      	mov	r5, r0
 8009b32:	b940      	cbnz	r0, 8009b46 <xTaskCheckForTimeOut+0x1a>
 8009b34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b38:	f383 8811 	msr	BASEPRI, r3
 8009b3c:	f3bf 8f6f 	isb	sy
 8009b40:	f3bf 8f4f 	dsb	sy
 8009b44:	e7fe      	b.n	8009b44 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8009b46:	b941      	cbnz	r1, 8009b5a <xTaskCheckForTimeOut+0x2e>
 8009b48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b4c:	f383 8811 	msr	BASEPRI, r3
 8009b50:	f3bf 8f6f 	isb	sy
 8009b54:	f3bf 8f4f 	dsb	sy
 8009b58:	e7fe      	b.n	8009b58 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009b5a:	f7fe fd63 	bl	8008624 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8009b5e:	4b0f      	ldr	r3, [pc, #60]	; (8009b9c <xTaskCheckForTimeOut+0x70>)
 8009b60:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8009b62:	6823      	ldr	r3, [r4, #0]
 8009b64:	1c5a      	adds	r2, r3, #1
 8009b66:	d010      	beq.n	8009b8a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009b68:	480d      	ldr	r0, [pc, #52]	; (8009ba0 <xTaskCheckForTimeOut+0x74>)
 8009b6a:	682e      	ldr	r6, [r5, #0]
 8009b6c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009b6e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009b70:	4286      	cmp	r6, r0
 8009b72:	d001      	beq.n	8009b78 <xTaskCheckForTimeOut+0x4c>
 8009b74:	428a      	cmp	r2, r1
 8009b76:	d90f      	bls.n	8009b98 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009b78:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009b7a:	4283      	cmp	r3, r0
 8009b7c:	d90a      	bls.n	8009b94 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8009b7e:	1a5b      	subs	r3, r3, r1
 8009b80:	4413      	add	r3, r2
 8009b82:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009b84:	4628      	mov	r0, r5
 8009b86:	f7ff ffc5 	bl	8009b14 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009b8a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009b8c:	f7fe fd6c 	bl	8008668 <vPortExitCritical>
}
 8009b90:	4620      	mov	r0, r4
 8009b92:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009b94:	2300      	movs	r3, #0
 8009b96:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009b98:	2401      	movs	r4, #1
 8009b9a:	e7f7      	b.n	8009b8c <xTaskCheckForTimeOut+0x60>
 8009b9c:	20012c84 	.word	0x20012c84
 8009ba0:	20012c3c 	.word	0x20012c3c

08009ba4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009ba4:	4b01      	ldr	r3, [pc, #4]	; (8009bac <vTaskMissedYield+0x8>)
 8009ba6:	2201      	movs	r2, #1
 8009ba8:	601a      	str	r2, [r3, #0]
}
 8009baa:	4770      	bx	lr
 8009bac:	20012c88 	.word	0x20012c88

08009bb0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8009bb0:	4b05      	ldr	r3, [pc, #20]	; (8009bc8 <xTaskGetSchedulerState+0x18>)
 8009bb2:	681b      	ldr	r3, [r3, #0]
 8009bb4:	b133      	cbz	r3, 8009bc4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009bb6:	4b05      	ldr	r3, [pc, #20]	; (8009bcc <xTaskGetSchedulerState+0x1c>)
 8009bb8:	681b      	ldr	r3, [r3, #0]
 8009bba:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8009bbc:	bf0c      	ite	eq
 8009bbe:	2002      	moveq	r0, #2
 8009bc0:	2000      	movne	r0, #0
 8009bc2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009bc4:	2001      	movs	r0, #1
	}
 8009bc6:	4770      	bx	lr
 8009bc8:	20012c58 	.word	0x20012c58
 8009bcc:	20012c04 	.word	0x20012c04

08009bd0 <xTaskPriorityInherit>:
	{
 8009bd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8009bd2:	4604      	mov	r4, r0
 8009bd4:	b350      	cbz	r0, 8009c2c <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009bd6:	4a1c      	ldr	r2, [pc, #112]	; (8009c48 <xTaskPriorityInherit+0x78>)
 8009bd8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009bda:	6811      	ldr	r1, [r2, #0]
 8009bdc:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8009bde:	428b      	cmp	r3, r1
 8009be0:	4616      	mov	r6, r2
 8009be2:	d229      	bcs.n	8009c38 <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009be4:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009be6:	4d19      	ldr	r5, [pc, #100]	; (8009c4c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009be8:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009bea:	bfa1      	itttt	ge
 8009bec:	6832      	ldrge	r2, [r6, #0]
 8009bee:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8009bf0:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8009bf4:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009bf6:	2214      	movs	r2, #20
 8009bf8:	fb02 5303 	mla	r3, r2, r3, r5
 8009bfc:	6942      	ldr	r2, [r0, #20]
 8009bfe:	429a      	cmp	r2, r3
 8009c00:	d116      	bne.n	8009c30 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c02:	1d01      	adds	r1, r0, #4
 8009c04:	4608      	mov	r0, r1
 8009c06:	9101      	str	r1, [sp, #4]
 8009c08:	f7fe fc95 	bl	8008536 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c0c:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c0e:	4a10      	ldr	r2, [pc, #64]	; (8009c50 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c12:	6810      	ldr	r0, [r2, #0]
 8009c14:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c16:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8009c18:	4283      	cmp	r3, r0
 8009c1a:	f04f 0014 	mov.w	r0, #20
 8009c1e:	fb00 5003 	mla	r0, r0, r3, r5
 8009c22:	bf88      	it	hi
 8009c24:	6013      	strhi	r3, [r2, #0]
 8009c26:	f7fe fc63 	bl	80084f0 <vListInsertEnd>
				xReturn = pdTRUE;
 8009c2a:	2001      	movs	r0, #1
	}
 8009c2c:	b002      	add	sp, #8
 8009c2e:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8009c30:	6833      	ldr	r3, [r6, #0]
 8009c32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c34:	62c3      	str	r3, [r0, #44]	; 0x2c
 8009c36:	e7f8      	b.n	8009c2a <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8009c38:	6813      	ldr	r3, [r2, #0]
 8009c3a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8009c3c:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8009c3e:	42a0      	cmp	r0, r4
 8009c40:	bf2c      	ite	cs
 8009c42:	2000      	movcs	r0, #0
 8009c44:	2001      	movcc	r0, #1
 8009c46:	e7f1      	b.n	8009c2c <xTaskPriorityInherit+0x5c>
 8009c48:	20012790 	.word	0x20012790
 8009c4c:	2001279c 	.word	0x2001279c
 8009c50:	20012c0c 	.word	0x20012c0c

08009c54 <xTaskPriorityDisinherit>:
	{
 8009c54:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009c56:	b910      	cbnz	r0, 8009c5e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009c58:	2000      	movs	r0, #0
	}
 8009c5a:	b002      	add	sp, #8
 8009c5c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8009c5e:	4b1c      	ldr	r3, [pc, #112]	; (8009cd0 <xTaskPriorityDisinherit+0x7c>)
 8009c60:	681c      	ldr	r4, [r3, #0]
 8009c62:	4284      	cmp	r4, r0
 8009c64:	d008      	beq.n	8009c78 <xTaskPriorityDisinherit+0x24>
 8009c66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c6a:	f383 8811 	msr	BASEPRI, r3
 8009c6e:	f3bf 8f6f 	isb	sy
 8009c72:	f3bf 8f4f 	dsb	sy
 8009c76:	e7fe      	b.n	8009c76 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009c78:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009c7a:	b943      	cbnz	r3, 8009c8e <xTaskPriorityDisinherit+0x3a>
 8009c7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c80:	f383 8811 	msr	BASEPRI, r3
 8009c84:	f3bf 8f6f 	isb	sy
 8009c88:	f3bf 8f4f 	dsb	sy
 8009c8c:	e7fe      	b.n	8009c8c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009c8e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009c90:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8009c92:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009c94:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009c96:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009c98:	d0de      	beq.n	8009c58 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009c9a:	2b00      	cmp	r3, #0
 8009c9c:	d1dc      	bne.n	8009c58 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009c9e:	1d21      	adds	r1, r4, #4
 8009ca0:	4608      	mov	r0, r1
 8009ca2:	9101      	str	r1, [sp, #4]
 8009ca4:	f7fe fc47 	bl	8008536 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009ca8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009caa:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009cac:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cae:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8009cb2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009cb4:	4a07      	ldr	r2, [pc, #28]	; (8009cd4 <xTaskPriorityDisinherit+0x80>)
 8009cb6:	6810      	ldr	r0, [r2, #0]
 8009cb8:	4283      	cmp	r3, r0
 8009cba:	bf88      	it	hi
 8009cbc:	6013      	strhi	r3, [r2, #0]
 8009cbe:	4a06      	ldr	r2, [pc, #24]	; (8009cd8 <xTaskPriorityDisinherit+0x84>)
 8009cc0:	2014      	movs	r0, #20
 8009cc2:	fb00 2003 	mla	r0, r0, r3, r2
 8009cc6:	f7fe fc13 	bl	80084f0 <vListInsertEnd>
					xReturn = pdTRUE;
 8009cca:	2001      	movs	r0, #1
		return xReturn;
 8009ccc:	e7c5      	b.n	8009c5a <xTaskPriorityDisinherit+0x6>
 8009cce:	bf00      	nop
 8009cd0:	20012790 	.word	0x20012790
 8009cd4:	20012c0c 	.word	0x20012c0c
 8009cd8:	2001279c 	.word	0x2001279c

08009cdc <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009cdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8009cde:	4604      	mov	r4, r0
 8009ce0:	2800      	cmp	r0, #0
 8009ce2:	d044      	beq.n	8009d6e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009ce4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009ce6:	b942      	cbnz	r2, 8009cfa <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009ce8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cec:	f383 8811 	msr	BASEPRI, r3
 8009cf0:	f3bf 8f6f 	isb	sy
 8009cf4:	f3bf 8f4f 	dsb	sy
 8009cf8:	e7fe      	b.n	8009cf8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8009cfa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8009cfc:	4299      	cmp	r1, r3
 8009cfe:	bf38      	it	cc
 8009d00:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8009d02:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009d04:	428b      	cmp	r3, r1
 8009d06:	d032      	beq.n	8009d6e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8009d08:	2a01      	cmp	r2, #1
 8009d0a:	d130      	bne.n	8009d6e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8009d0c:	4a19      	ldr	r2, [pc, #100]	; (8009d74 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8009d0e:	6812      	ldr	r2, [r2, #0]
 8009d10:	4282      	cmp	r2, r0
 8009d12:	d108      	bne.n	8009d26 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8009d14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d18:	f383 8811 	msr	BASEPRI, r3
 8009d1c:	f3bf 8f6f 	isb	sy
 8009d20:	f3bf 8f4f 	dsb	sy
 8009d24:	e7fe      	b.n	8009d24 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d26:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009d28:	4d13      	ldr	r5, [pc, #76]	; (8009d78 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8009d2a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009d2c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009d2e:	f04f 0214 	mov.w	r2, #20
 8009d32:	fb02 5303 	mla	r3, r2, r3, r5
 8009d36:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d38:	bfa4      	itt	ge
 8009d3a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8009d3e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8009d40:	429a      	cmp	r2, r3
 8009d42:	d114      	bne.n	8009d6e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009d44:	1d01      	adds	r1, r0, #4
 8009d46:	4608      	mov	r0, r1
 8009d48:	9101      	str	r1, [sp, #4]
 8009d4a:	f7fe fbf4 	bl	8008536 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8009d4e:	4a0b      	ldr	r2, [pc, #44]	; (8009d7c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8009d50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009d52:	6810      	ldr	r0, [r2, #0]
 8009d54:	9901      	ldr	r1, [sp, #4]
 8009d56:	4283      	cmp	r3, r0
 8009d58:	f04f 0014 	mov.w	r0, #20
 8009d5c:	fb00 5003 	mla	r0, r0, r3, r5
 8009d60:	bf88      	it	hi
 8009d62:	6013      	strhi	r3, [r2, #0]
	}
 8009d64:	b003      	add	sp, #12
 8009d66:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009d6a:	f7fe bbc1 	b.w	80084f0 <vListInsertEnd>
	}
 8009d6e:	b003      	add	sp, #12
 8009d70:	bd30      	pop	{r4, r5, pc}
 8009d72:	bf00      	nop
 8009d74:	20012790 	.word	0x20012790
 8009d78:	2001279c 	.word	0x2001279c
 8009d7c:	20012c0c 	.word	0x20012c0c

08009d80 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8009d80:	4b04      	ldr	r3, [pc, #16]	; (8009d94 <pvTaskIncrementMutexHeldCount+0x14>)
 8009d82:	681a      	ldr	r2, [r3, #0]
 8009d84:	b11a      	cbz	r2, 8009d8e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009d86:	6819      	ldr	r1, [r3, #0]
 8009d88:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009d8a:	3201      	adds	r2, #1
 8009d8c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8009d8e:	6818      	ldr	r0, [r3, #0]
	}
 8009d90:	4770      	bx	lr
 8009d92:	bf00      	nop
 8009d94:	20012790 	.word	0x20012790

08009d98 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009d98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009d9a:	4c11      	ldr	r4, [pc, #68]	; (8009de0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009d9c:	f7fe fc42 	bl	8008624 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8009da0:	6825      	ldr	r5, [r4, #0]
 8009da2:	b9bd      	cbnz	r5, 8009dd4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009da4:	4f0f      	ldr	r7, [pc, #60]	; (8009de4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009da6:	4e10      	ldr	r6, [pc, #64]	; (8009de8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009da8:	4638      	mov	r0, r7
 8009daa:	f7fe fb93 	bl	80084d4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8009dae:	4630      	mov	r0, r6
 8009db0:	f7fe fb90 	bl	80084d4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009db4:	4b0d      	ldr	r3, [pc, #52]	; (8009dec <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009db6:	4a0e      	ldr	r2, [pc, #56]	; (8009df0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009db8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009dba:	4b0e      	ldr	r3, [pc, #56]	; (8009df4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009dbc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8009dbe:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009dc0:	200a      	movs	r0, #10
 8009dc2:	4b0d      	ldr	r3, [pc, #52]	; (8009df8 <prvCheckForValidListAndQueue+0x60>)
 8009dc4:	9500      	str	r5, [sp, #0]
 8009dc6:	f7fe fe45 	bl	8008a54 <xQueueGenericCreateStatic>
 8009dca:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009dcc:	b110      	cbz	r0, 8009dd4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8009dce:	490b      	ldr	r1, [pc, #44]	; (8009dfc <prvCheckForValidListAndQueue+0x64>)
 8009dd0:	f7ff fa12 	bl	80091f8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009dd4:	b003      	add	sp, #12
 8009dd6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009dda:	f7fe bc45 	b.w	8008668 <vPortExitCritical>
 8009dde:	bf00      	nop
 8009de0:	20012db0 	.word	0x20012db0
 8009de4:	20012d34 	.word	0x20012d34
 8009de8:	20012d48 	.word	0x20012d48
 8009dec:	20012c8c 	.word	0x20012c8c
 8009df0:	20012c94 	.word	0x20012c94
 8009df4:	20012c90 	.word	0x20012c90
 8009df8:	20012d60 	.word	0x20012d60
 8009dfc:	0801f769 	.word	0x0801f769

08009e00 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8009e00:	4291      	cmp	r1, r2
{
 8009e02:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8009e04:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009e06:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8009e08:	d80a      	bhi.n	8009e20 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009e0a:	1ad2      	subs	r2, r2, r3
 8009e0c:	6983      	ldr	r3, [r0, #24]
 8009e0e:	429a      	cmp	r2, r3
 8009e10:	d20d      	bcs.n	8009e2e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8009e12:	4b08      	ldr	r3, [pc, #32]	; (8009e34 <prvInsertTimerInActiveList+0x34>)
 8009e14:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009e16:	6818      	ldr	r0, [r3, #0]
 8009e18:	f7fe fb76 	bl	8008508 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8009e1c:	2000      	movs	r0, #0
}
 8009e1e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8009e20:	429a      	cmp	r2, r3
 8009e22:	d201      	bcs.n	8009e28 <prvInsertTimerInActiveList+0x28>
 8009e24:	4299      	cmp	r1, r3
 8009e26:	d202      	bcs.n	8009e2e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009e28:	4b03      	ldr	r3, [pc, #12]	; (8009e38 <prvInsertTimerInActiveList+0x38>)
 8009e2a:	1d01      	adds	r1, r0, #4
 8009e2c:	e7f3      	b.n	8009e16 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8009e2e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8009e30:	e7f5      	b.n	8009e1e <prvInsertTimerInActiveList+0x1e>
 8009e32:	bf00      	nop
 8009e34:	20012c90 	.word	0x20012c90
 8009e38:	20012c8c 	.word	0x20012c8c

08009e3c <xTimerCreateTimerTask>:
{
 8009e3c:	b510      	push	{r4, lr}
 8009e3e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8009e40:	f7ff ffaa 	bl	8009d98 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8009e44:	4b12      	ldr	r3, [pc, #72]	; (8009e90 <xTimerCreateTimerTask+0x54>)
 8009e46:	681b      	ldr	r3, [r3, #0]
 8009e48:	b1b3      	cbz	r3, 8009e78 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8009e4a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009e4c:	aa07      	add	r2, sp, #28
 8009e4e:	a906      	add	r1, sp, #24
 8009e50:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8009e52:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009e56:	f7fe fa3d 	bl	80082d4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009e5a:	9b05      	ldr	r3, [sp, #20]
 8009e5c:	9302      	str	r3, [sp, #8]
 8009e5e:	9b06      	ldr	r3, [sp, #24]
 8009e60:	9301      	str	r3, [sp, #4]
 8009e62:	2302      	movs	r3, #2
 8009e64:	9300      	str	r3, [sp, #0]
 8009e66:	9a07      	ldr	r2, [sp, #28]
 8009e68:	490a      	ldr	r1, [pc, #40]	; (8009e94 <xTimerCreateTimerTask+0x58>)
 8009e6a:	480b      	ldr	r0, [pc, #44]	; (8009e98 <xTimerCreateTimerTask+0x5c>)
 8009e6c:	4623      	mov	r3, r4
 8009e6e:	f7ff fba5 	bl	80095bc <xTaskCreateStatic>
 8009e72:	4b0a      	ldr	r3, [pc, #40]	; (8009e9c <xTimerCreateTimerTask+0x60>)
 8009e74:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009e76:	b940      	cbnz	r0, 8009e8a <xTimerCreateTimerTask+0x4e>
 8009e78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e7c:	f383 8811 	msr	BASEPRI, r3
 8009e80:	f3bf 8f6f 	isb	sy
 8009e84:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009e88:	e7fe      	b.n	8009e88 <xTimerCreateTimerTask+0x4c>
}
 8009e8a:	2001      	movs	r0, #1
 8009e8c:	b008      	add	sp, #32
 8009e8e:	bd10      	pop	{r4, pc}
 8009e90:	20012db0 	.word	0x20012db0
 8009e94:	0801f76e 	.word	0x0801f76e
 8009e98:	08009f75 	.word	0x08009f75
 8009e9c:	20012db4 	.word	0x20012db4

08009ea0 <xTimerGenericCommand>:
{
 8009ea0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009ea2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009ea4:	4604      	mov	r4, r0
{
 8009ea6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009ea8:	b940      	cbnz	r0, 8009ebc <xTimerGenericCommand+0x1c>
 8009eaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eae:	f383 8811 	msr	BASEPRI, r3
 8009eb2:	f3bf 8f6f 	isb	sy
 8009eb6:	f3bf 8f4f 	dsb	sy
 8009eba:	e7fe      	b.n	8009eba <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009ebc:	4d0d      	ldr	r5, [pc, #52]	; (8009ef4 <xTimerGenericCommand+0x54>)
 8009ebe:	6828      	ldr	r0, [r5, #0]
 8009ec0:	b180      	cbz	r0, 8009ee4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009ec2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009ec4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009ec8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009eca:	dc0d      	bgt.n	8009ee8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009ecc:	f7ff fe70 	bl	8009bb0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009ed0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009ed2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009ed4:	bf08      	it	eq
 8009ed6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009ed8:	6828      	ldr	r0, [r5, #0]
 8009eda:	bf18      	it	ne
 8009edc:	461a      	movne	r2, r3
 8009ede:	4669      	mov	r1, sp
 8009ee0:	f7fe fe6e 	bl	8008bc0 <xQueueGenericSend>
}
 8009ee4:	b004      	add	sp, #16
 8009ee6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009ee8:	2300      	movs	r3, #0
 8009eea:	4669      	mov	r1, sp
 8009eec:	f7fe ff1a 	bl	8008d24 <xQueueGenericSendFromISR>
 8009ef0:	e7f8      	b.n	8009ee4 <xTimerGenericCommand+0x44>
 8009ef2:	bf00      	nop
 8009ef4:	20012db0 	.word	0x20012db0

08009ef8 <prvSwitchTimerLists>:
{
 8009ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009efa:	4d1c      	ldr	r5, [pc, #112]	; (8009f6c <prvSwitchTimerLists+0x74>)
{
 8009efc:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009efe:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8009f00:	682b      	ldr	r3, [r5, #0]
 8009f02:	681a      	ldr	r2, [r3, #0]
 8009f04:	b92a      	cbnz	r2, 8009f12 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 8009f06:	4a1a      	ldr	r2, [pc, #104]	; (8009f70 <prvSwitchTimerLists+0x78>)
 8009f08:	6811      	ldr	r1, [r2, #0]
 8009f0a:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8009f0c:	6013      	str	r3, [r2, #0]
}
 8009f0e:	b005      	add	sp, #20
 8009f10:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009f12:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f14:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009f16:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009f18:	1d21      	adds	r1, r4, #4
 8009f1a:	4608      	mov	r0, r1
 8009f1c:	9103      	str	r1, [sp, #12]
 8009f1e:	f7fe fb0a 	bl	8008536 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009f22:	6a23      	ldr	r3, [r4, #32]
 8009f24:	4620      	mov	r0, r4
 8009f26:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009f28:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009f2c:	9903      	ldr	r1, [sp, #12]
 8009f2e:	f013 0f04 	tst.w	r3, #4
 8009f32:	d0e5      	beq.n	8009f00 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009f34:	69a3      	ldr	r3, [r4, #24]
 8009f36:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8009f38:	429e      	cmp	r6, r3
 8009f3a:	d205      	bcs.n	8009f48 <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009f3c:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009f3e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009f40:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009f42:	f7fe fae1 	bl	8008508 <vListInsert>
 8009f46:	e7db      	b.n	8009f00 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009f48:	2300      	movs	r3, #0
 8009f4a:	9700      	str	r7, [sp, #0]
 8009f4c:	4632      	mov	r2, r6
 8009f4e:	4619      	mov	r1, r3
 8009f50:	4620      	mov	r0, r4
 8009f52:	f7ff ffa5 	bl	8009ea0 <xTimerGenericCommand>
				configASSERT( xResult );
 8009f56:	2800      	cmp	r0, #0
 8009f58:	d1d2      	bne.n	8009f00 <prvSwitchTimerLists+0x8>
 8009f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f5e:	f383 8811 	msr	BASEPRI, r3
 8009f62:	f3bf 8f6f 	isb	sy
 8009f66:	f3bf 8f4f 	dsb	sy
 8009f6a:	e7fe      	b.n	8009f6a <prvSwitchTimerLists+0x72>
 8009f6c:	20012c8c 	.word	0x20012c8c
 8009f70:	20012c90 	.word	0x20012c90

08009f74 <prvTimerTask>:
{
 8009f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009f78:	4f77      	ldr	r7, [pc, #476]	; (800a158 <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 8009f7a:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800a168 <prvTimerTask+0x1f4>
{
 8009f7e:	b087      	sub	sp, #28
 8009f80:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009f82:	683b      	ldr	r3, [r7, #0]
 8009f84:	f8d3 b000 	ldr.w	fp, [r3]
 8009f88:	f1bb 0f00 	cmp.w	fp, #0
 8009f8c:	d028      	beq.n	8009fe0 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009f8e:	68db      	ldr	r3, [r3, #12]
 8009f90:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009f94:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8009f96:	4e71      	ldr	r6, [pc, #452]	; (800a15c <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 8009f98:	f7ff fbc2 	bl	8009720 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8009f9c:	f7ff fbc8 	bl	8009730 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8009fa0:	6833      	ldr	r3, [r6, #0]
 8009fa2:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8009fa4:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8009fa6:	46b0      	mov	r8, r6
 8009fa8:	d31c      	bcc.n	8009fe4 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8009faa:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009fac:	b31c      	cbz	r4, 8009ff6 <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009fae:	4b6c      	ldr	r3, [pc, #432]	; (800a160 <prvTimerTask+0x1ec>)
 8009fb0:	681b      	ldr	r3, [r3, #0]
 8009fb2:	681c      	ldr	r4, [r3, #0]
 8009fb4:	fab4 f484 	clz	r4, r4
 8009fb8:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009fba:	4b6a      	ldr	r3, [pc, #424]	; (800a164 <prvTimerTask+0x1f0>)
 8009fbc:	4622      	mov	r2, r4
 8009fbe:	6818      	ldr	r0, [r3, #0]
 8009fc0:	ebab 0105 	sub.w	r1, fp, r5
 8009fc4:	f7ff f957 	bl	8009276 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009fc8:	f7ff fc4e 	bl	8009868 <xTaskResumeAll>
 8009fcc:	b978      	cbnz	r0, 8009fee <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8009fce:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8009fd2:	f8ca 3000 	str.w	r3, [sl]
 8009fd6:	f3bf 8f4f 	dsb	sy
 8009fda:	f3bf 8f6f 	isb	sy
 8009fde:	e006      	b.n	8009fee <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009fe0:	2401      	movs	r4, #1
 8009fe2:	e7d8      	b.n	8009f96 <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8009fe4:	f7ff ff88 	bl	8009ef8 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8009fe8:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 8009fea:	f7ff fc3d 	bl	8009868 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8009fee:	4e5d      	ldr	r6, [pc, #372]	; (800a164 <prvTimerTask+0x1f0>)
 8009ff0:	f04f 0b00 	mov.w	fp, #0
 8009ff4:	e035      	b.n	800a062 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009ff6:	4583      	cmp	fp, r0
 8009ff8:	d8df      	bhi.n	8009fba <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 8009ffa:	f7ff fc35 	bl	8009868 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ffe:	f8d9 3000 	ldr.w	r3, [r9]
 800a002:	68db      	ldr	r3, [r3, #12]
 800a004:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a006:	1d30      	adds	r0, r6, #4
 800a008:	f7fe fa95 	bl	8008536 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a00c:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 800a010:	0758      	lsls	r0, r3, #29
 800a012:	d518      	bpl.n	800a046 <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a014:	69b1      	ldr	r1, [r6, #24]
 800a016:	465b      	mov	r3, fp
 800a018:	462a      	mov	r2, r5
 800a01a:	4459      	add	r1, fp
 800a01c:	4630      	mov	r0, r6
 800a01e:	f7ff feef 	bl	8009e00 <prvInsertTimerInActiveList>
 800a022:	b1a0      	cbz	r0, 800a04e <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a024:	9400      	str	r4, [sp, #0]
 800a026:	4623      	mov	r3, r4
 800a028:	465a      	mov	r2, fp
 800a02a:	4621      	mov	r1, r4
 800a02c:	4630      	mov	r0, r6
 800a02e:	f7ff ff37 	bl	8009ea0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a032:	b960      	cbnz	r0, 800a04e <prvTimerTask+0xda>
 800a034:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a038:	f383 8811 	msr	BASEPRI, r3
 800a03c:	f3bf 8f6f 	isb	sy
 800a040:	f3bf 8f4f 	dsb	sy
 800a044:	e7fe      	b.n	800a044 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a046:	f023 0301 	bic.w	r3, r3, #1
 800a04a:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a04e:	6a33      	ldr	r3, [r6, #32]
 800a050:	4630      	mov	r0, r6
 800a052:	4798      	blx	r3
}
 800a054:	e7cb      	b.n	8009fee <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a056:	9b03      	ldr	r3, [sp, #12]
 800a058:	9905      	ldr	r1, [sp, #20]
 800a05a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a05c:	9b02      	ldr	r3, [sp, #8]
 800a05e:	2b00      	cmp	r3, #0
 800a060:	da0a      	bge.n	800a078 <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a062:	6830      	ldr	r0, [r6, #0]
 800a064:	2200      	movs	r2, #0
 800a066:	a902      	add	r1, sp, #8
 800a068:	f7fe ff12 	bl	8008e90 <xQueueReceive>
 800a06c:	2800      	cmp	r0, #0
 800a06e:	d088      	beq.n	8009f82 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a070:	9b02      	ldr	r3, [sp, #8]
 800a072:	9804      	ldr	r0, [sp, #16]
 800a074:	2b00      	cmp	r3, #0
 800a076:	dbee      	blt.n	800a056 <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a078:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a07a:	6963      	ldr	r3, [r4, #20]
 800a07c:	b9a3      	cbnz	r3, 800a0a8 <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 800a07e:	f7ff fb57 	bl	8009730 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a082:	f8d8 3000 	ldr.w	r3, [r8]
 800a086:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800a088:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a08a:	d201      	bcs.n	800a090 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 800a08c:	f7ff ff34 	bl	8009ef8 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800a090:	9b02      	ldr	r3, [sp, #8]
 800a092:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800a096:	2b09      	cmp	r3, #9
 800a098:	d8e3      	bhi.n	800a062 <prvTimerTask+0xee>
 800a09a:	e8df f003 	tbb	[pc, r3]
 800a09e:	0909      	.short	0x0909
 800a0a0:	543b3409 	.word	0x543b3409
 800a0a4:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a0a8:	1d20      	adds	r0, r4, #4
 800a0aa:	f7fe fa44 	bl	8008536 <uxListRemove>
 800a0ae:	e7e6      	b.n	800a07e <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a0b0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a0b4:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a0b6:	f043 0301 	orr.w	r3, r3, #1
 800a0ba:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a0be:	9b03      	ldr	r3, [sp, #12]
 800a0c0:	462a      	mov	r2, r5
 800a0c2:	4419      	add	r1, r3
 800a0c4:	4620      	mov	r0, r4
 800a0c6:	f7ff fe9b 	bl	8009e00 <prvInsertTimerInActiveList>
 800a0ca:	2800      	cmp	r0, #0
 800a0cc:	d0c9      	beq.n	800a062 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a0ce:	6a23      	ldr	r3, [r4, #32]
 800a0d0:	4620      	mov	r0, r4
 800a0d2:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a0d4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a0d8:	0759      	lsls	r1, r3, #29
 800a0da:	d5c2      	bpl.n	800a062 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a0dc:	69a2      	ldr	r2, [r4, #24]
 800a0de:	9903      	ldr	r1, [sp, #12]
 800a0e0:	f8cd b000 	str.w	fp, [sp]
 800a0e4:	2300      	movs	r3, #0
 800a0e6:	440a      	add	r2, r1
 800a0e8:	4620      	mov	r0, r4
 800a0ea:	4619      	mov	r1, r3
 800a0ec:	f7ff fed8 	bl	8009ea0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a0f0:	2800      	cmp	r0, #0
 800a0f2:	d1b6      	bne.n	800a062 <prvTimerTask+0xee>
 800a0f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0f8:	f383 8811 	msr	BASEPRI, r3
 800a0fc:	f3bf 8f6f 	isb	sy
 800a100:	f3bf 8f4f 	dsb	sy
 800a104:	e7fe      	b.n	800a104 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a106:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a10a:	f023 0301 	bic.w	r3, r3, #1
 800a10e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a112:	e7a6      	b.n	800a062 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a114:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a118:	9903      	ldr	r1, [sp, #12]
 800a11a:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a11c:	f043 0301 	orr.w	r3, r3, #1
 800a120:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a124:	b941      	cbnz	r1, 800a138 <prvTimerTask+0x1c4>
 800a126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a12a:	f383 8811 	msr	BASEPRI, r3
 800a12e:	f3bf 8f6f 	isb	sy
 800a132:	f3bf 8f4f 	dsb	sy
 800a136:	e7fe      	b.n	800a136 <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a138:	462b      	mov	r3, r5
 800a13a:	462a      	mov	r2, r5
 800a13c:	4429      	add	r1, r5
 800a13e:	4620      	mov	r0, r4
 800a140:	f7ff fe5e 	bl	8009e00 <prvInsertTimerInActiveList>
					break;
 800a144:	e78d      	b.n	800a062 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a146:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a14a:	079a      	lsls	r2, r3, #30
 800a14c:	d4dd      	bmi.n	800a10a <prvTimerTask+0x196>
							vPortFree( pxTimer );
 800a14e:	4620      	mov	r0, r4
 800a150:	f7fe f982 	bl	8008458 <vPortFree>
 800a154:	e785      	b.n	800a062 <prvTimerTask+0xee>
 800a156:	bf00      	nop
 800a158:	20012c8c 	.word	0x20012c8c
 800a15c:	20012d5c 	.word	0x20012d5c
 800a160:	20012c90 	.word	0x20012c90
 800a164:	20012db0 	.word	0x20012db0
 800a168:	e000ed04 	.word	0xe000ed04

0800a16c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a16c:	8880      	ldrh	r0, [r0, #4]
 800a16e:	4770      	bx	lr

0800a170 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a170:	2300      	movs	r3, #0
 800a172:	8083      	strh	r3, [r0, #4]
 800a174:	4770      	bx	lr
	...

0800a178 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a17a:	6803      	ldr	r3, [r0, #0]
 800a17c:	4605      	mov	r5, r0
 800a17e:	460e      	mov	r6, r1
 800a180:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a182:	2100      	movs	r1, #0
 800a184:	4798      	blx	r3
 800a186:	682b      	ldr	r3, [r5, #0]
 800a188:	4604      	mov	r4, r0
 800a18a:	6a1b      	ldr	r3, [r3, #32]
 800a18c:	4628      	mov	r0, r5
 800a18e:	4798      	blx	r3
 800a190:	88ab      	ldrh	r3, [r5, #4]
 800a192:	1b34      	subs	r4, r6, r4
 800a194:	b2a4      	uxth	r4, r4
 800a196:	fbb4 f4f0 	udiv	r4, r4, r0
 800a19a:	42a3      	cmp	r3, r4
 800a19c:	d805      	bhi.n	800a1aa <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a19e:	4b0e      	ldr	r3, [pc, #56]	; (800a1d8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a1a0:	4a0e      	ldr	r2, [pc, #56]	; (800a1dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a1a2:	211e      	movs	r1, #30
 800a1a4:	480e      	ldr	r0, [pc, #56]	; (800a1e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a1a6:	f012 fdf7 	bl	801cd98 <__assert_func>
 800a1aa:	682b      	ldr	r3, [r5, #0]
 800a1ac:	2100      	movs	r1, #0
 800a1ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1b0:	4628      	mov	r0, r5
 800a1b2:	4798      	blx	r3
 800a1b4:	682b      	ldr	r3, [r5, #0]
 800a1b6:	4607      	mov	r7, r0
 800a1b8:	6a1b      	ldr	r3, [r3, #32]
 800a1ba:	4628      	mov	r0, r5
 800a1bc:	4798      	blx	r3
 800a1be:	1bf3      	subs	r3, r6, r7
 800a1c0:	b29b      	uxth	r3, r3
 800a1c2:	fbb3 f2f0 	udiv	r2, r3, r0
 800a1c6:	fb02 3010 	mls	r0, r2, r0, r3
 800a1ca:	b118      	cbz	r0, 800a1d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a1cc:	4b05      	ldr	r3, [pc, #20]	; (800a1e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a1ce:	4a03      	ldr	r2, [pc, #12]	; (800a1dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a1d0:	211f      	movs	r1, #31
 800a1d2:	e7e7      	b.n	800a1a4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a1d4:	4620      	mov	r0, r4
 800a1d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a1d8:	0801f776 	.word	0x0801f776
 800a1dc:	0801f8e2 	.word	0x0801f8e2
 800a1e0:	0801f78b 	.word	0x0801f78b
 800a1e4:	0801f7b9 	.word	0x0801f7b9

0800a1e8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a1e8:	b538      	push	{r3, r4, r5, lr}
 800a1ea:	6803      	ldr	r3, [r0, #0]
 800a1ec:	6a1b      	ldr	r3, [r3, #32]
 800a1ee:	460d      	mov	r5, r1
 800a1f0:	4604      	mov	r4, r0
 800a1f2:	4798      	blx	r3
 800a1f4:	4285      	cmp	r5, r0
 800a1f6:	d905      	bls.n	800a204 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a1f8:	4b0c      	ldr	r3, [pc, #48]	; (800a22c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a1fa:	4a0d      	ldr	r2, [pc, #52]	; (800a230 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a1fc:	2130      	movs	r1, #48	; 0x30
 800a1fe:	480d      	ldr	r0, [pc, #52]	; (800a234 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a200:	f012 fdca 	bl	801cd98 <__assert_func>
 800a204:	6823      	ldr	r3, [r4, #0]
 800a206:	88a5      	ldrh	r5, [r4, #4]
 800a208:	69db      	ldr	r3, [r3, #28]
 800a20a:	4620      	mov	r0, r4
 800a20c:	4798      	blx	r3
 800a20e:	4285      	cmp	r5, r0
 800a210:	d303      	bcc.n	800a21a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a212:	4b09      	ldr	r3, [pc, #36]	; (800a238 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a214:	4a06      	ldr	r2, [pc, #24]	; (800a230 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a216:	2131      	movs	r1, #49	; 0x31
 800a218:	e7f1      	b.n	800a1fe <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a21a:	6823      	ldr	r3, [r4, #0]
 800a21c:	88a1      	ldrh	r1, [r4, #4]
 800a21e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a220:	4620      	mov	r0, r4
 800a222:	4798      	blx	r3
 800a224:	88a3      	ldrh	r3, [r4, #4]
 800a226:	3301      	adds	r3, #1
 800a228:	80a3      	strh	r3, [r4, #4]
 800a22a:	bd38      	pop	{r3, r4, r5, pc}
 800a22c:	0801f833 	.word	0x0801f833
 800a230:	0801f925 	.word	0x0801f925
 800a234:	0801f78b 	.word	0x0801f78b
 800a238:	0801f84a 	.word	0x0801f84a

0800a23c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a23c:	b570      	push	{r4, r5, r6, lr}
 800a23e:	6803      	ldr	r3, [r0, #0]
 800a240:	6a1b      	ldr	r3, [r3, #32]
 800a242:	4616      	mov	r6, r2
 800a244:	4604      	mov	r4, r0
 800a246:	460d      	mov	r5, r1
 800a248:	4798      	blx	r3
 800a24a:	4286      	cmp	r6, r0
 800a24c:	d905      	bls.n	800a25a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a24e:	4b06      	ldr	r3, [pc, #24]	; (800a268 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a250:	4a06      	ldr	r2, [pc, #24]	; (800a26c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a252:	4807      	ldr	r0, [pc, #28]	; (800a270 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a254:	213a      	movs	r1, #58	; 0x3a
 800a256:	f012 fd9f 	bl	801cd98 <__assert_func>
 800a25a:	6823      	ldr	r3, [r4, #0]
 800a25c:	4629      	mov	r1, r5
 800a25e:	4620      	mov	r0, r4
 800a260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a262:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a266:	4718      	bx	r3
 800a268:	0801f833 	.word	0x0801f833
 800a26c:	0801f898 	.word	0x0801f898
 800a270:	0801f78b 	.word	0x0801f78b

0800a274 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a274:	4770      	bx	lr
	...

0800a278 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a278:	4a02      	ldr	r2, [pc, #8]	; (800a284 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a27a:	6002      	str	r2, [r0, #0]
 800a27c:	2200      	movs	r2, #0
 800a27e:	8082      	strh	r2, [r0, #4]
 800a280:	4770      	bx	lr
 800a282:	bf00      	nop
 800a284:	0801f86c 	.word	0x0801f86c

0800a288 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a288:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a28a:	2000      	movs	r0, #0
 800a28c:	b12b      	cbz	r3, 800a29a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a28e:	b920      	cbnz	r0, 800a29a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a290:	1a5a      	subs	r2, r3, r1
 800a292:	4250      	negs	r0, r2
 800a294:	4150      	adcs	r0, r2
 800a296:	699b      	ldr	r3, [r3, #24]
 800a298:	e7f8      	b.n	800a28c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a29a:	4770      	bx	lr

0800a29c <_ZN8touchgfx9Container9removeAllEv>:
 800a29c:	2200      	movs	r2, #0
 800a29e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a2a0:	b123      	cbz	r3, 800a2ac <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a2a2:	6999      	ldr	r1, [r3, #24]
 800a2a4:	6281      	str	r1, [r0, #40]	; 0x28
 800a2a6:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a2aa:	e7f8      	b.n	800a29e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a2ac:	4770      	bx	lr

0800a2ae <_ZN8touchgfx9Container6unlinkEv>:
 800a2ae:	2300      	movs	r3, #0
 800a2b0:	6283      	str	r3, [r0, #40]	; 0x28
 800a2b2:	4770      	bx	lr

0800a2b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a2b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2b8:	461f      	mov	r7, r3
 800a2ba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a2be:	460d      	mov	r5, r1
 800a2c0:	4616      	mov	r6, r2
 800a2c2:	b103      	cbz	r3, 800a2c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a2c4:	6038      	str	r0, [r7, #0]
 800a2c6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a2c8:	b314      	cbz	r4, 800a310 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a2ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a2ce:	b1eb      	cbz	r3, 800a30c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a2d4:	428d      	cmp	r5, r1
 800a2d6:	db19      	blt.n	800a30c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2d8:	8923      	ldrh	r3, [r4, #8]
 800a2da:	b289      	uxth	r1, r1
 800a2dc:	440b      	add	r3, r1
 800a2de:	b21b      	sxth	r3, r3
 800a2e0:	429d      	cmp	r5, r3
 800a2e2:	da13      	bge.n	800a30c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a2e8:	4296      	cmp	r6, r2
 800a2ea:	db0f      	blt.n	800a30c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2ec:	8963      	ldrh	r3, [r4, #10]
 800a2ee:	b292      	uxth	r2, r2
 800a2f0:	4413      	add	r3, r2
 800a2f2:	b21b      	sxth	r3, r3
 800a2f4:	429e      	cmp	r6, r3
 800a2f6:	da09      	bge.n	800a30c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a2f8:	6823      	ldr	r3, [r4, #0]
 800a2fa:	1ab2      	subs	r2, r6, r2
 800a2fc:	1a69      	subs	r1, r5, r1
 800a2fe:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800a302:	b212      	sxth	r2, r2
 800a304:	463b      	mov	r3, r7
 800a306:	b209      	sxth	r1, r1
 800a308:	4620      	mov	r0, r4
 800a30a:	47c0      	blx	r8
 800a30c:	69a4      	ldr	r4, [r4, #24]
 800a30e:	e7db      	b.n	800a2c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a310:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a314 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a314:	2200      	movs	r2, #0
 800a316:	8002      	strh	r2, [r0, #0]
 800a318:	8042      	strh	r2, [r0, #2]
 800a31a:	8082      	strh	r2, [r0, #4]
 800a31c:	80c2      	strh	r2, [r0, #6]
 800a31e:	4770      	bx	lr

0800a320 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a320:	b570      	push	{r4, r5, r6, lr}
 800a322:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a324:	460d      	mov	r5, r1
 800a326:	4616      	mov	r6, r2
 800a328:	b13c      	cbz	r4, 800a33a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a32a:	6823      	ldr	r3, [r4, #0]
 800a32c:	4620      	mov	r0, r4
 800a32e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a330:	4632      	mov	r2, r6
 800a332:	4629      	mov	r1, r5
 800a334:	4798      	blx	r3
 800a336:	69a4      	ldr	r4, [r4, #24]
 800a338:	e7f6      	b.n	800a328 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a33a:	bd70      	pop	{r4, r5, r6, pc}

0800a33c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a33c:	b538      	push	{r3, r4, r5, lr}
 800a33e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a340:	460d      	mov	r5, r1
 800a342:	b134      	cbz	r4, 800a352 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a344:	682b      	ldr	r3, [r5, #0]
 800a346:	4621      	mov	r1, r4
 800a348:	689b      	ldr	r3, [r3, #8]
 800a34a:	4628      	mov	r0, r5
 800a34c:	4798      	blx	r3
 800a34e:	69a4      	ldr	r4, [r4, #24]
 800a350:	e7f7      	b.n	800a342 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a352:	bd38      	pop	{r3, r4, r5, pc}

0800a354 <_ZN8touchgfx9ContainerD1Ev>:
 800a354:	4770      	bx	lr

0800a356 <_ZN8touchgfx9ContainerD0Ev>:
 800a356:	b510      	push	{r4, lr}
 800a358:	212c      	movs	r1, #44	; 0x2c
 800a35a:	4604      	mov	r4, r0
 800a35c:	f012 fcee 	bl	801cd3c <_ZdlPvj>
 800a360:	4620      	mov	r0, r4
 800a362:	bd10      	pop	{r4, pc}

0800a364 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a364:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a366:	b19b      	cbz	r3, 800a390 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a368:	428b      	cmp	r3, r1
 800a36a:	d109      	bne.n	800a380 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a36c:	699a      	ldr	r2, [r3, #24]
 800a36e:	2100      	movs	r1, #0
 800a370:	6159      	str	r1, [r3, #20]
 800a372:	6282      	str	r2, [r0, #40]	; 0x28
 800a374:	b902      	cbnz	r2, 800a378 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a376:	4770      	bx	lr
 800a378:	6199      	str	r1, [r3, #24]
 800a37a:	4770      	bx	lr
 800a37c:	4613      	mov	r3, r2
 800a37e:	b13a      	cbz	r2, 800a390 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a380:	699a      	ldr	r2, [r3, #24]
 800a382:	428a      	cmp	r2, r1
 800a384:	d1fa      	bne.n	800a37c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a386:	698a      	ldr	r2, [r1, #24]
 800a388:	619a      	str	r2, [r3, #24]
 800a38a:	2300      	movs	r3, #0
 800a38c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a390:	4770      	bx	lr

0800a392 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a392:	b410      	push	{r4}
 800a394:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a396:	4604      	mov	r4, r0
 800a398:	b92b      	cbnz	r3, 800a3a6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a39a:	6803      	ldr	r3, [r0, #0]
 800a39c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a3a2:	4611      	mov	r1, r2
 800a3a4:	4718      	bx	r3
 800a3a6:	b941      	cbnz	r1, 800a3ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a3a8:	6193      	str	r3, [r2, #24]
 800a3aa:	6282      	str	r2, [r0, #40]	; 0x28
 800a3ac:	6154      	str	r4, [r2, #20]
 800a3ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a3b2:	4770      	bx	lr
 800a3b4:	4603      	mov	r3, r0
 800a3b6:	2800      	cmp	r0, #0
 800a3b8:	d0f9      	beq.n	800a3ae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a3ba:	4299      	cmp	r1, r3
 800a3bc:	6998      	ldr	r0, [r3, #24]
 800a3be:	d1f9      	bne.n	800a3b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a3c0:	6190      	str	r0, [r2, #24]
 800a3c2:	618a      	str	r2, [r1, #24]
 800a3c4:	e7f2      	b.n	800a3ac <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800a3c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a3c8:	4288      	cmp	r0, r1
 800a3ca:	b508      	push	{r3, lr}
 800a3cc:	d105      	bne.n	800a3da <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a3ce:	4b11      	ldr	r3, [pc, #68]	; (800a414 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a3d0:	4a11      	ldr	r2, [pc, #68]	; (800a418 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3d2:	2121      	movs	r1, #33	; 0x21
 800a3d4:	4811      	ldr	r0, [pc, #68]	; (800a41c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a3d6:	f012 fcdf 	bl	801cd98 <__assert_func>
 800a3da:	694b      	ldr	r3, [r1, #20]
 800a3dc:	b11b      	cbz	r3, 800a3e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a3de:	4b10      	ldr	r3, [pc, #64]	; (800a420 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a3e0:	4a0d      	ldr	r2, [pc, #52]	; (800a418 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a3e2:	2122      	movs	r1, #34	; 0x22
 800a3e4:	e7f6      	b.n	800a3d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a3e6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a3ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a3ec:	b913      	cbnz	r3, 800a3f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a3ee:	6281      	str	r1, [r0, #40]	; 0x28
 800a3f0:	bd08      	pop	{r3, pc}
 800a3f2:	4613      	mov	r3, r2
 800a3f4:	699a      	ldr	r2, [r3, #24]
 800a3f6:	b12a      	cbz	r2, 800a404 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a3f8:	428b      	cmp	r3, r1
 800a3fa:	d1fa      	bne.n	800a3f2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a3fc:	4b09      	ldr	r3, [pc, #36]	; (800a424 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a3fe:	4a06      	ldr	r2, [pc, #24]	; (800a418 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a400:	2133      	movs	r1, #51	; 0x33
 800a402:	e7e7      	b.n	800a3d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a404:	428b      	cmp	r3, r1
 800a406:	d103      	bne.n	800a410 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a408:	4b06      	ldr	r3, [pc, #24]	; (800a424 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a40a:	4a03      	ldr	r2, [pc, #12]	; (800a418 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a40c:	2136      	movs	r1, #54	; 0x36
 800a40e:	e7e1      	b.n	800a3d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a410:	6199      	str	r1, [r3, #24]
 800a412:	e7ed      	b.n	800a3f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a414:	0801f963 	.word	0x0801f963
 800a418:	0801fab4 	.word	0x0801fab4
 800a41c:	0801f98f 	.word	0x0801f98f
 800a420:	0801f9c2 	.word	0x0801f9c2
 800a424:	0801f9f8 	.word	0x0801f9f8

0800a428 <_ZN8touchgfx4RectaNERKS0_>:
 800a428:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a42c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a430:	888c      	ldrh	r4, [r1, #4]
 800a432:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a436:	443c      	add	r4, r7
 800a438:	b2a4      	uxth	r4, r4
 800a43a:	fa0f f884 	sxth.w	r8, r4
 800a43e:	45c1      	cmp	r9, r8
 800a440:	da2f      	bge.n	800a4a2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a442:	8882      	ldrh	r2, [r0, #4]
 800a444:	444a      	add	r2, r9
 800a446:	b292      	uxth	r2, r2
 800a448:	fa0f fe82 	sxth.w	lr, r2
 800a44c:	4577      	cmp	r7, lr
 800a44e:	da28      	bge.n	800a4a2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a450:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a454:	88cb      	ldrh	r3, [r1, #6]
 800a456:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a45a:	442b      	add	r3, r5
 800a45c:	b21b      	sxth	r3, r3
 800a45e:	429e      	cmp	r6, r3
 800a460:	da1f      	bge.n	800a4a2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a462:	88c3      	ldrh	r3, [r0, #6]
 800a464:	4433      	add	r3, r6
 800a466:	b29b      	uxth	r3, r3
 800a468:	fa0f fc83 	sxth.w	ip, r3
 800a46c:	4565      	cmp	r5, ip
 800a46e:	da18      	bge.n	800a4a2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a470:	454f      	cmp	r7, r9
 800a472:	bfb8      	it	lt
 800a474:	464f      	movlt	r7, r9
 800a476:	42b5      	cmp	r5, r6
 800a478:	bfb8      	it	lt
 800a47a:	4635      	movlt	r5, r6
 800a47c:	45f0      	cmp	r8, lr
 800a47e:	bfd8      	it	le
 800a480:	4622      	movle	r2, r4
 800a482:	1bd2      	subs	r2, r2, r7
 800a484:	8082      	strh	r2, [r0, #4]
 800a486:	884a      	ldrh	r2, [r1, #2]
 800a488:	88c9      	ldrh	r1, [r1, #6]
 800a48a:	8007      	strh	r7, [r0, #0]
 800a48c:	440a      	add	r2, r1
 800a48e:	b292      	uxth	r2, r2
 800a490:	b211      	sxth	r1, r2
 800a492:	458c      	cmp	ip, r1
 800a494:	bfa8      	it	ge
 800a496:	4613      	movge	r3, r2
 800a498:	1b5b      	subs	r3, r3, r5
 800a49a:	80c3      	strh	r3, [r0, #6]
 800a49c:	8045      	strh	r5, [r0, #2]
 800a49e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a4a2:	2300      	movs	r3, #0
 800a4a4:	8003      	strh	r3, [r0, #0]
 800a4a6:	8043      	strh	r3, [r0, #2]
 800a4a8:	8083      	strh	r3, [r0, #4]
 800a4aa:	80c3      	strh	r3, [r0, #6]
 800a4ac:	e7f7      	b.n	800a49e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a4ae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a4b2:	2b00      	cmp	r3, #0
 800a4b4:	dd06      	ble.n	800a4c4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800a4b6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a4ba:	2800      	cmp	r0, #0
 800a4bc:	bfcc      	ite	gt
 800a4be:	2000      	movgt	r0, #0
 800a4c0:	2001      	movle	r0, #1
 800a4c2:	4770      	bx	lr
 800a4c4:	2001      	movs	r0, #1
 800a4c6:	4770      	bx	lr

0800a4c8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a4c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a4cc:	2300      	movs	r3, #0
 800a4ce:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a4d0:	8003      	strh	r3, [r0, #0]
 800a4d2:	4604      	mov	r4, r0
 800a4d4:	8043      	strh	r3, [r0, #2]
 800a4d6:	8083      	strh	r3, [r0, #4]
 800a4d8:	80c3      	strh	r3, [r0, #6]
 800a4da:	2d00      	cmp	r5, #0
 800a4dc:	d040      	beq.n	800a560 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a4de:	1d28      	adds	r0, r5, #4
 800a4e0:	f7ff ffe5 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4e4:	b988      	cbnz	r0, 800a50a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a4e6:	4620      	mov	r0, r4
 800a4e8:	f7ff ffe1 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800a4ec:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a4f0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a4f4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a4f8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a4fc:	b138      	cbz	r0, 800a50e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a4fe:	8022      	strh	r2, [r4, #0]
 800a500:	8063      	strh	r3, [r4, #2]
 800a502:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a506:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a50a:	69ad      	ldr	r5, [r5, #24]
 800a50c:	e7e5      	b.n	800a4da <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a50e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a512:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a516:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a51a:	4290      	cmp	r0, r2
 800a51c:	4607      	mov	r7, r0
 800a51e:	bfa8      	it	ge
 800a520:	4617      	movge	r7, r2
 800a522:	4472      	add	r2, lr
 800a524:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a528:	8027      	strh	r7, [r4, #0]
 800a52a:	4299      	cmp	r1, r3
 800a52c:	460e      	mov	r6, r1
 800a52e:	4440      	add	r0, r8
 800a530:	bfa8      	it	ge
 800a532:	461e      	movge	r6, r3
 800a534:	4471      	add	r1, lr
 800a536:	4463      	add	r3, ip
 800a538:	b200      	sxth	r0, r0
 800a53a:	b212      	sxth	r2, r2
 800a53c:	b209      	sxth	r1, r1
 800a53e:	b21b      	sxth	r3, r3
 800a540:	4290      	cmp	r0, r2
 800a542:	bfac      	ite	ge
 800a544:	ebc7 0200 	rsbge	r2, r7, r0
 800a548:	ebc7 0202 	rsblt	r2, r7, r2
 800a54c:	4299      	cmp	r1, r3
 800a54e:	bfac      	ite	ge
 800a550:	ebc6 0301 	rsbge	r3, r6, r1
 800a554:	ebc6 0303 	rsblt	r3, r6, r3
 800a558:	8066      	strh	r6, [r4, #2]
 800a55a:	80a2      	strh	r2, [r4, #4]
 800a55c:	80e3      	strh	r3, [r4, #6]
 800a55e:	e7d4      	b.n	800a50a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a560:	4620      	mov	r0, r4
 800a562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a566 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a566:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a56a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a56e:	b383      	cbz	r3, 800a5d2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a570:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a572:	b374      	cbz	r4, 800a5d2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a574:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a578:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a57c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a580:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a584:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a588:	b303      	cbz	r3, 800a5cc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a58a:	4668      	mov	r0, sp
 800a58c:	1d21      	adds	r1, r4, #4
 800a58e:	f8ad 5000 	strh.w	r5, [sp]
 800a592:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a596:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a59a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a59e:	f7ff ff43 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800a5a2:	4668      	mov	r0, sp
 800a5a4:	f7ff ff83 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800a5a8:	b980      	cbnz	r0, 800a5cc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a5aa:	f8bd 3000 	ldrh.w	r3, [sp]
 800a5ae:	88a2      	ldrh	r2, [r4, #4]
 800a5b0:	1a9b      	subs	r3, r3, r2
 800a5b2:	f8ad 3000 	strh.w	r3, [sp]
 800a5b6:	88e2      	ldrh	r2, [r4, #6]
 800a5b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a5bc:	1a9b      	subs	r3, r3, r2
 800a5be:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a5c2:	6823      	ldr	r3, [r4, #0]
 800a5c4:	4669      	mov	r1, sp
 800a5c6:	689b      	ldr	r3, [r3, #8]
 800a5c8:	4620      	mov	r0, r4
 800a5ca:	4798      	blx	r3
 800a5cc:	69a4      	ldr	r4, [r4, #24]
 800a5ce:	2c00      	cmp	r4, #0
 800a5d0:	d1d8      	bne.n	800a584 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a5d2:	b002      	add	sp, #8
 800a5d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a5d8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a5d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5da:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a5de:	460d      	mov	r5, r1
 800a5e0:	4616      	mov	r6, r2
 800a5e2:	b323      	cbz	r3, 800a62e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a5e4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a5e6:	b314      	cbz	r4, 800a62e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a5e8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a5ec:	b1eb      	cbz	r3, 800a62a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a5ee:	6828      	ldr	r0, [r5, #0]
 800a5f0:	6869      	ldr	r1, [r5, #4]
 800a5f2:	466b      	mov	r3, sp
 800a5f4:	c303      	stmia	r3!, {r0, r1}
 800a5f6:	4668      	mov	r0, sp
 800a5f8:	1d21      	adds	r1, r4, #4
 800a5fa:	f7ff ff15 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800a5fe:	4668      	mov	r0, sp
 800a600:	f7ff ff55 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800a604:	b988      	cbnz	r0, 800a62a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a606:	f8bd 3000 	ldrh.w	r3, [sp]
 800a60a:	88a2      	ldrh	r2, [r4, #4]
 800a60c:	1a9b      	subs	r3, r3, r2
 800a60e:	f8ad 3000 	strh.w	r3, [sp]
 800a612:	88e2      	ldrh	r2, [r4, #6]
 800a614:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a618:	1a9b      	subs	r3, r3, r2
 800a61a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a61e:	6823      	ldr	r3, [r4, #0]
 800a620:	4632      	mov	r2, r6
 800a622:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a624:	4669      	mov	r1, sp
 800a626:	4620      	mov	r0, r4
 800a628:	4798      	blx	r3
 800a62a:	69a4      	ldr	r4, [r4, #24]
 800a62c:	e7db      	b.n	800a5e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a62e:	b002      	add	sp, #8
 800a630:	bd70      	pop	{r4, r5, r6, pc}

0800a632 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a632:	b513      	push	{r0, r1, r4, lr}
 800a634:	6803      	ldr	r3, [r0, #0]
 800a636:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 800a63a:	2300      	movs	r3, #0
 800a63c:	e9cd 3300 	strd	r3, r3, [sp]
 800a640:	466b      	mov	r3, sp
 800a642:	47a0      	blx	r4
 800a644:	b002      	add	sp, #8
 800a646:	bd10      	pop	{r4, pc}

0800a648 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a648:	2301      	movs	r3, #1
 800a64a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a64e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a652:	4770      	bx	lr

0800a654 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a654:	2301      	movs	r3, #1
 800a656:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a65a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a65e:	4770      	bx	lr

0800a660 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a660:	6843      	ldr	r3, [r0, #4]
 800a662:	2201      	movs	r2, #1
 800a664:	725a      	strb	r2, [r3, #9]
 800a666:	6840      	ldr	r0, [r0, #4]
 800a668:	6803      	ldr	r3, [r0, #0]
 800a66a:	691b      	ldr	r3, [r3, #16]
 800a66c:	4718      	bx	r3

0800a66e <_ZN8touchgfx3HAL8flushDMAEv>:
 800a66e:	6840      	ldr	r0, [r0, #4]
 800a670:	6803      	ldr	r3, [r0, #0]
 800a672:	689b      	ldr	r3, [r3, #8]
 800a674:	4718      	bx	r3

0800a676 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800a676:	b530      	push	{r4, r5, lr}
 800a678:	b08b      	sub	sp, #44	; 0x2c
 800a67a:	6804      	ldr	r4, [r0, #0]
 800a67c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800a680:	9508      	str	r5, [sp, #32]
 800a682:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800a686:	9507      	str	r5, [sp, #28]
 800a688:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800a68c:	9506      	str	r5, [sp, #24]
 800a68e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800a692:	9505      	str	r5, [sp, #20]
 800a694:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800a698:	9504      	str	r5, [sp, #16]
 800a69a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800a69e:	9503      	str	r5, [sp, #12]
 800a6a0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a6a4:	9502      	str	r5, [sp, #8]
 800a6a6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800a6aa:	e9cd 3500 	strd	r3, r5, [sp]
 800a6ae:	4613      	mov	r3, r2
 800a6b0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	47a0      	blx	r4
 800a6b6:	b00b      	add	sp, #44	; 0x2c
 800a6b8:	bd30      	pop	{r4, r5, pc}
	...

0800a6bc <_ZN8touchgfx3HAL10beginFrameEv>:
 800a6bc:	4b04      	ldr	r3, [pc, #16]	; (800a6d0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a6be:	781b      	ldrb	r3, [r3, #0]
 800a6c0:	b123      	cbz	r3, 800a6cc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a6c2:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a6c6:	f080 0001 	eor.w	r0, r0, #1
 800a6ca:	4770      	bx	lr
 800a6cc:	2001      	movs	r0, #1
 800a6ce:	4770      	bx	lr
 800a6d0:	20012dc2 	.word	0x20012dc2

0800a6d4 <_ZN8touchgfx3HAL8endFrameEv>:
 800a6d4:	b510      	push	{r4, lr}
 800a6d6:	4604      	mov	r4, r0
 800a6d8:	6840      	ldr	r0, [r0, #4]
 800a6da:	6803      	ldr	r3, [r0, #0]
 800a6dc:	689b      	ldr	r3, [r3, #8]
 800a6de:	4798      	blx	r3
 800a6e0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a6e4:	b113      	cbz	r3, 800a6ec <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a6e6:	2301      	movs	r3, #1
 800a6e8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a6ec:	bd10      	pop	{r4, pc}

0800a6ee <_ZN8touchgfx3HAL10initializeEv>:
 800a6ee:	b510      	push	{r4, lr}
 800a6f0:	4604      	mov	r4, r0
 800a6f2:	f7f6 f8f1 	bl	80008d8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800a6f6:	6860      	ldr	r0, [r4, #4]
 800a6f8:	6803      	ldr	r3, [r0, #0]
 800a6fa:	68db      	ldr	r3, [r3, #12]
 800a6fc:	4798      	blx	r3
 800a6fe:	68e0      	ldr	r0, [r4, #12]
 800a700:	6803      	ldr	r3, [r0, #0]
 800a702:	689b      	ldr	r3, [r3, #8]
 800a704:	4798      	blx	r3
 800a706:	6823      	ldr	r3, [r4, #0]
 800a708:	4620      	mov	r0, r4
 800a70a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a70c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a710:	4718      	bx	r3
	...

0800a714 <_ZN8touchgfx3HAL4tickEv>:
 800a714:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a716:	6803      	ldr	r3, [r0, #0]
 800a718:	4d5c      	ldr	r5, [pc, #368]	; (800a88c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a71a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a71e:	4604      	mov	r4, r0
 800a720:	4798      	blx	r3
 800a722:	2800      	cmp	r0, #0
 800a724:	f000 8097 	beq.w	800a856 <_ZN8touchgfx3HAL4tickEv+0x142>
 800a728:	2001      	movs	r0, #1
 800a72a:	f7f6 f811 	bl	8000750 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a72e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a732:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a736:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a73a:	2600      	movs	r6, #0
 800a73c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a740:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a744:	b133      	cbz	r3, 800a754 <_ZN8touchgfx3HAL4tickEv+0x40>
 800a746:	6823      	ldr	r3, [r4, #0]
 800a748:	4620      	mov	r0, r4
 800a74a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800a74e:	4798      	blx	r3
 800a750:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a754:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a758:	6862      	ldr	r2, [r4, #4]
 800a75a:	f083 0301 	eor.w	r3, r3, #1
 800a75e:	7253      	strb	r3, [r2, #9]
 800a760:	2601      	movs	r6, #1
 800a762:	702e      	strb	r6, [r5, #0]
 800a764:	f003 fbd8 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800a768:	6803      	ldr	r3, [r0, #0]
 800a76a:	4631      	mov	r1, r6
 800a76c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a76e:	4798      	blx	r3
 800a770:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a774:	b90b      	cbnz	r3, 800a77a <_ZN8touchgfx3HAL4tickEv+0x66>
 800a776:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a77a:	f003 fbcd 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800a77e:	6803      	ldr	r3, [r0, #0]
 800a780:	695b      	ldr	r3, [r3, #20]
 800a782:	4798      	blx	r3
 800a784:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a786:	6803      	ldr	r3, [r0, #0]
 800a788:	691b      	ldr	r3, [r3, #16]
 800a78a:	4798      	blx	r3
 800a78c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a790:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a794:	3b01      	subs	r3, #1
 800a796:	b2db      	uxtb	r3, r3
 800a798:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a79c:	b10a      	cbz	r2, 800a7a2 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800a79e:	2b00      	cmp	r3, #0
 800a7a0:	d1eb      	bne.n	800a77a <_ZN8touchgfx3HAL4tickEv+0x66>
 800a7a2:	4a3b      	ldr	r2, [pc, #236]	; (800a890 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a7a4:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a7a8:	7813      	ldrb	r3, [r2, #0]
 800a7aa:	3301      	adds	r3, #1
 800a7ac:	b25b      	sxtb	r3, r3
 800a7ae:	4299      	cmp	r1, r3
 800a7b0:	7013      	strb	r3, [r2, #0]
 800a7b2:	dc10      	bgt.n	800a7d6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a7b4:	68e0      	ldr	r0, [r4, #12]
 800a7b6:	2300      	movs	r3, #0
 800a7b8:	7013      	strb	r3, [r2, #0]
 800a7ba:	6803      	ldr	r3, [r0, #0]
 800a7bc:	aa03      	add	r2, sp, #12
 800a7be:	68db      	ldr	r3, [r3, #12]
 800a7c0:	a902      	add	r1, sp, #8
 800a7c2:	4798      	blx	r3
 800a7c4:	6823      	ldr	r3, [r4, #0]
 800a7c6:	2800      	cmp	r0, #0
 800a7c8:	d051      	beq.n	800a86e <_ZN8touchgfx3HAL4tickEv+0x15a>
 800a7ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800a7ce:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a7d2:	4620      	mov	r0, r4
 800a7d4:	4798      	blx	r3
 800a7d6:	6960      	ldr	r0, [r4, #20]
 800a7d8:	2300      	movs	r3, #0
 800a7da:	f88d 3007 	strb.w	r3, [sp, #7]
 800a7de:	b158      	cbz	r0, 800a7f8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a7e0:	6803      	ldr	r3, [r0, #0]
 800a7e2:	f10d 0107 	add.w	r1, sp, #7
 800a7e6:	68db      	ldr	r3, [r3, #12]
 800a7e8:	4798      	blx	r3
 800a7ea:	b128      	cbz	r0, 800a7f8 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a7ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a7ee:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a7f2:	6803      	ldr	r3, [r0, #0]
 800a7f4:	68db      	ldr	r3, [r3, #12]
 800a7f6:	4798      	blx	r3
 800a7f8:	f104 001c 	add.w	r0, r4, #28
 800a7fc:	f012 f9c6 	bl	801cb8c <_ZN8touchgfx8Gestures4tickEv>
 800a800:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a804:	b30b      	cbz	r3, 800a84a <_ZN8touchgfx3HAL4tickEv+0x136>
 800a806:	6920      	ldr	r0, [r4, #16]
 800a808:	6803      	ldr	r3, [r0, #0]
 800a80a:	691b      	ldr	r3, [r3, #16]
 800a80c:	4798      	blx	r3
 800a80e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a810:	4606      	mov	r6, r0
 800a812:	b903      	cbnz	r3, 800a816 <_ZN8touchgfx3HAL4tickEv+0x102>
 800a814:	6720      	str	r0, [r4, #112]	; 0x70
 800a816:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a818:	4a1e      	ldr	r2, [pc, #120]	; (800a894 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800a81a:	1af3      	subs	r3, r6, r3
 800a81c:	4293      	cmp	r3, r2
 800a81e:	d914      	bls.n	800a84a <_ZN8touchgfx3HAL4tickEv+0x136>
 800a820:	6920      	ldr	r0, [r4, #16]
 800a822:	6803      	ldr	r3, [r0, #0]
 800a824:	699b      	ldr	r3, [r3, #24]
 800a826:	4798      	blx	r3
 800a828:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a82a:	2264      	movs	r2, #100	; 0x64
 800a82c:	1af3      	subs	r3, r6, r3
 800a82e:	fbb3 f3f2 	udiv	r3, r3, r2
 800a832:	fbb0 f0f3 	udiv	r0, r0, r3
 800a836:	2800      	cmp	r0, #0
 800a838:	dc1e      	bgt.n	800a878 <_ZN8touchgfx3HAL4tickEv+0x164>
 800a83a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a83e:	6920      	ldr	r0, [r4, #16]
 800a840:	6803      	ldr	r3, [r0, #0]
 800a842:	2100      	movs	r1, #0
 800a844:	69db      	ldr	r3, [r3, #28]
 800a846:	4798      	blx	r3
 800a848:	6726      	str	r6, [r4, #112]	; 0x70
 800a84a:	f003 fb65 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800a84e:	6803      	ldr	r3, [r0, #0]
 800a850:	2100      	movs	r1, #0
 800a852:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a854:	4798      	blx	r3
 800a856:	6823      	ldr	r3, [r4, #0]
 800a858:	4620      	mov	r0, r4
 800a85a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800a85e:	4798      	blx	r3
 800a860:	2001      	movs	r0, #1
 800a862:	f7f5 ff76 	bl	8000752 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a866:	2300      	movs	r3, #0
 800a868:	702b      	strb	r3, [r5, #0]
 800a86a:	b004      	add	sp, #16
 800a86c:	bd70      	pop	{r4, r5, r6, pc}
 800a86e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a872:	4620      	mov	r0, r4
 800a874:	4798      	blx	r3
 800a876:	e7ae      	b.n	800a7d6 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a878:	2863      	cmp	r0, #99	; 0x63
 800a87a:	bfcb      	itete	gt
 800a87c:	2300      	movgt	r3, #0
 800a87e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a882:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a886:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a88a:	e7d8      	b.n	800a83e <_ZN8touchgfx3HAL4tickEv+0x12a>
 800a88c:	20012dc8 	.word	0x20012dc8
 800a890:	20012dc9 	.word	0x20012dc9
 800a894:	05f5e100 	.word	0x05f5e100

0800a898 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a898:	f7f6 b84e 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a89c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a89c:	6581      	str	r1, [r0, #88]	; 0x58
 800a89e:	301c      	adds	r0, #28
 800a8a0:	f012 b972 	b.w	801cb88 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a8a4 <_ZN8touchgfx3HAL5touchEll>:
 800a8a4:	b530      	push	{r4, r5, lr}
 800a8a6:	b087      	sub	sp, #28
 800a8a8:	4604      	mov	r4, r0
 800a8aa:	a804      	add	r0, sp, #16
 800a8ac:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a8b0:	f003 f8d6 	bl	800da60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a8b4:	9b04      	ldr	r3, [sp, #16]
 800a8b6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a8ba:	a906      	add	r1, sp, #24
 800a8bc:	9b05      	ldr	r3, [sp, #20]
 800a8be:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a8c2:	a803      	add	r0, sp, #12
 800a8c4:	f003 f90a 	bl	800dadc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a8c8:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a8cc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a8d0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a8d4:	f104 001c 	add.w	r0, r4, #28
 800a8d8:	b189      	cbz	r1, 800a8fe <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a8da:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a8de:	9300      	str	r3, [sp, #0]
 800a8e0:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a8e4:	4613      	mov	r3, r2
 800a8e6:	462a      	mov	r2, r5
 800a8e8:	f012 f95e 	bl	801cba8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a8ec:	b128      	cbz	r0, 800a8fa <_ZN8touchgfx3HAL5touchEll+0x56>
 800a8ee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a8f2:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a8f4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a8f8:	6623      	str	r3, [r4, #96]	; 0x60
 800a8fa:	b007      	add	sp, #28
 800a8fc:	bd30      	pop	{r4, r5, pc}
 800a8fe:	f012 f997 	bl	801cc30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a902:	2301      	movs	r3, #1
 800a904:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a908:	e7f1      	b.n	800a8ee <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a90a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a90a:	b570      	push	{r4, r5, r6, lr}
 800a90c:	2b00      	cmp	r3, #0
 800a90e:	d050      	beq.n	800a9b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a910:	ea81 0002 	eor.w	r0, r1, r2
 800a914:	07c6      	lsls	r6, r0, #31
 800a916:	d508      	bpl.n	800a92a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a918:	3a01      	subs	r2, #1
 800a91a:	18cc      	adds	r4, r1, r3
 800a91c:	42a1      	cmp	r1, r4
 800a91e:	d048      	beq.n	800a9b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a920:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a924:	f801 0b01 	strb.w	r0, [r1], #1
 800a928:	e7f8      	b.n	800a91c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a92a:	07d5      	lsls	r5, r2, #31
 800a92c:	bf42      	ittt	mi
 800a92e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a932:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a936:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a93a:	2b01      	cmp	r3, #1
 800a93c:	d915      	bls.n	800a96a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a93e:	ea82 0001 	eor.w	r0, r2, r1
 800a942:	0784      	lsls	r4, r0, #30
 800a944:	d02d      	beq.n	800a9a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800a946:	1e94      	subs	r4, r2, #2
 800a948:	4608      	mov	r0, r1
 800a94a:	18ce      	adds	r6, r1, r3
 800a94c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800a950:	f820 5b02 	strh.w	r5, [r0], #2
 800a954:	1a35      	subs	r5, r6, r0
 800a956:	2d01      	cmp	r5, #1
 800a958:	d8f8      	bhi.n	800a94c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800a95a:	1e98      	subs	r0, r3, #2
 800a95c:	f020 0001 	bic.w	r0, r0, #1
 800a960:	3002      	adds	r0, #2
 800a962:	4401      	add	r1, r0
 800a964:	4402      	add	r2, r0
 800a966:	f003 0301 	and.w	r3, r3, #1
 800a96a:	1f14      	subs	r4, r2, #4
 800a96c:	4608      	mov	r0, r1
 800a96e:	18ce      	adds	r6, r1, r3
 800a970:	1a35      	subs	r5, r6, r0
 800a972:	2d03      	cmp	r5, #3
 800a974:	d810      	bhi.n	800a998 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800a976:	089c      	lsrs	r4, r3, #2
 800a978:	00a0      	lsls	r0, r4, #2
 800a97a:	4401      	add	r1, r0
 800a97c:	3801      	subs	r0, #1
 800a97e:	4402      	add	r2, r0
 800a980:	f06f 0003 	mvn.w	r0, #3
 800a984:	fb00 3404 	mla	r4, r0, r4, r3
 800a988:	440c      	add	r4, r1
 800a98a:	42a1      	cmp	r1, r4
 800a98c:	d011      	beq.n	800a9b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a98e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a992:	f801 3b01 	strb.w	r3, [r1], #1
 800a996:	e7f8      	b.n	800a98a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800a998:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800a99c:	f840 5b04 	str.w	r5, [r0], #4
 800a9a0:	e7e6      	b.n	800a970 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800a9a2:	0790      	lsls	r0, r2, #30
 800a9a4:	d0e1      	beq.n	800a96a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a9a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a9aa:	f821 0b02 	strh.w	r0, [r1], #2
 800a9ae:	3b02      	subs	r3, #2
 800a9b0:	e7db      	b.n	800a96a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a9b2:	2001      	movs	r0, #1
 800a9b4:	bd70      	pop	{r4, r5, r6, pc}

0800a9b6 <_ZN8touchgfx3HAL7noTouchEv>:
 800a9b6:	b510      	push	{r4, lr}
 800a9b8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a9bc:	4604      	mov	r4, r0
 800a9be:	b153      	cbz	r3, 800a9d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a9c0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a9c4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a9c8:	2101      	movs	r1, #1
 800a9ca:	301c      	adds	r0, #28
 800a9cc:	f012 f930 	bl	801cc30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a9d0:	2300      	movs	r3, #0
 800a9d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a9d6:	bd10      	pop	{r4, pc}

0800a9d8 <_ZN8touchgfx3HAL3lcdEv>:
 800a9d8:	4b04      	ldr	r3, [pc, #16]	; (800a9ec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800a9da:	681b      	ldr	r3, [r3, #0]
 800a9dc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a9e0:	b10a      	cbz	r2, 800a9e6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800a9e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a9e4:	b900      	cbnz	r0, 800a9e8 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800a9e6:	6898      	ldr	r0, [r3, #8]
 800a9e8:	4770      	bx	lr
 800a9ea:	bf00      	nop
 800a9ec:	20012dc4 	.word	0x20012dc4

0800a9f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a9f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9f4:	4604      	mov	r4, r0
 800a9f6:	6980      	ldr	r0, [r0, #24]
 800a9f8:	b085      	sub	sp, #20
 800a9fa:	460f      	mov	r7, r1
 800a9fc:	4690      	mov	r8, r2
 800a9fe:	4699      	mov	r9, r3
 800aa00:	b930      	cbnz	r0, 800aa10 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800aa02:	4b1c      	ldr	r3, [pc, #112]	; (800aa74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800aa04:	4a1c      	ldr	r2, [pc, #112]	; (800aa78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800aa06:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 800aa0a:	481c      	ldr	r0, [pc, #112]	; (800aa7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800aa0c:	f012 f9c4 	bl	801cd98 <__assert_func>
 800aa10:	ad04      	add	r5, sp, #16
 800aa12:	2600      	movs	r6, #0
 800aa14:	f845 6d04 	str.w	r6, [r5, #-4]!
 800aa18:	6806      	ldr	r6, [r0, #0]
 800aa1a:	9501      	str	r5, [sp, #4]
 800aa1c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800aa20:	9500      	str	r5, [sp, #0]
 800aa22:	6835      	ldr	r5, [r6, #0]
 800aa24:	47a8      	blx	r5
 800aa26:	4d16      	ldr	r5, [pc, #88]	; (800aa80 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800aa28:	4606      	mov	r6, r0
 800aa2a:	f8a5 9000 	strh.w	r9, [r5]
 800aa2e:	f7ff ffd3 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800aa32:	6803      	ldr	r3, [r0, #0]
 800aa34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa36:	4798      	blx	r3
 800aa38:	2801      	cmp	r0, #1
 800aa3a:	d012      	beq.n	800aa62 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800aa3c:	d306      	bcc.n	800aa4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800aa3e:	280d      	cmp	r0, #13
 800aa40:	d80b      	bhi.n	800aa5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800aa42:	4b10      	ldr	r3, [pc, #64]	; (800aa84 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800aa44:	4a0c      	ldr	r2, [pc, #48]	; (800aa78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800aa46:	f44f 71b4 	mov.w	r1, #360	; 0x168
 800aa4a:	e7de      	b.n	800aa0a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800aa4c:	882b      	ldrh	r3, [r5, #0]
 800aa4e:	fb08 7203 	mla	r2, r8, r3, r7
 800aa52:	9b03      	ldr	r3, [sp, #12]
 800aa54:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800aa58:	63e3      	str	r3, [r4, #60]	; 0x3c
 800aa5a:	4630      	mov	r0, r6
 800aa5c:	b005      	add	sp, #20
 800aa5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa62:	882a      	ldrh	r2, [r5, #0]
 800aa64:	9b03      	ldr	r3, [sp, #12]
 800aa66:	fb08 7202 	mla	r2, r8, r2, r7
 800aa6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800aa6e:	1a9a      	subs	r2, r3, r2
 800aa70:	63e2      	str	r2, [r4, #60]	; 0x3c
 800aa72:	e7f2      	b.n	800aa5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800aa74:	0801fc5c 	.word	0x0801fc5c
 800aa78:	0801ff14 	.word	0x0801ff14
 800aa7c:	0801fca1 	.word	0x0801fca1
 800aa80:	20012dbe 	.word	0x20012dbe
 800aa84:	0801fcc7 	.word	0x0801fcc7

0800aa88 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800aa88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa8a:	b08b      	sub	sp, #44	; 0x2c
 800aa8c:	4617      	mov	r7, r2
 800aa8e:	4604      	mov	r4, r0
 800aa90:	460e      	mov	r6, r1
 800aa92:	461d      	mov	r5, r3
 800aa94:	f7ff ffa0 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800aa98:	6803      	ldr	r3, [r0, #0]
 800aa9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa9c:	4798      	blx	r3
 800aa9e:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800aaa2:	4b0e      	ldr	r3, [pc, #56]	; (800aadc <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 800aaa4:	6822      	ldr	r2, [r4, #0]
 800aaa6:	881b      	ldrh	r3, [r3, #0]
 800aaa8:	9306      	str	r3, [sp, #24]
 800aaaa:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800aaae:	9305      	str	r3, [sp, #20]
 800aab0:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800aab4:	9304      	str	r3, [sp, #16]
 800aab6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800aaba:	9303      	str	r3, [sp, #12]
 800aabc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800aac0:	9302      	str	r3, [sp, #8]
 800aac2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800aac6:	e9cd 5300 	strd	r5, r3, [sp]
 800aaca:	4631      	mov	r1, r6
 800aacc:	6b95      	ldr	r5, [r2, #56]	; 0x38
 800aace:	463b      	mov	r3, r7
 800aad0:	2200      	movs	r2, #0
 800aad2:	4620      	mov	r0, r4
 800aad4:	47a8      	blx	r5
 800aad6:	b00b      	add	sp, #44	; 0x2c
 800aad8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aada:	bf00      	nop
 800aadc:	20012dbe 	.word	0x20012dbe

0800aae0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800aae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aae4:	4698      	mov	r8, r3
 800aae6:	6803      	ldr	r3, [r0, #0]
 800aae8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 800aaea:	4b13      	ldr	r3, [pc, #76]	; (800ab38 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800aaec:	b08b      	sub	sp, #44	; 0x2c
 800aaee:	4617      	mov	r7, r2
 800aaf0:	f8b3 9000 	ldrh.w	r9, [r3]
 800aaf4:	460e      	mov	r6, r1
 800aaf6:	4604      	mov	r4, r0
 800aaf8:	f7ff ff6e 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800aafc:	6803      	ldr	r3, [r0, #0]
 800aafe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab00:	4798      	blx	r3
 800ab02:	2302      	movs	r3, #2
 800ab04:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ab08:	2301      	movs	r3, #1
 800ab0a:	9305      	str	r3, [sp, #20]
 800ab0c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ab10:	9304      	str	r3, [sp, #16]
 800ab12:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ab16:	9303      	str	r3, [sp, #12]
 800ab18:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ab1c:	9302      	str	r3, [sp, #8]
 800ab1e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ab22:	9008      	str	r0, [sp, #32]
 800ab24:	e9cd 8300 	strd	r8, r3, [sp]
 800ab28:	2200      	movs	r2, #0
 800ab2a:	463b      	mov	r3, r7
 800ab2c:	4631      	mov	r1, r6
 800ab2e:	4620      	mov	r0, r4
 800ab30:	47a8      	blx	r5
 800ab32:	b00b      	add	sp, #44	; 0x2c
 800ab34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab38:	20012dbe 	.word	0x20012dbe

0800ab3c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800ab3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab40:	4698      	mov	r8, r3
 800ab42:	6803      	ldr	r3, [r0, #0]
 800ab44:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 800ab46:	4b0f      	ldr	r3, [pc, #60]	; (800ab84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800ab48:	b087      	sub	sp, #28
 800ab4a:	f8b3 9000 	ldrh.w	r9, [r3]
 800ab4e:	460e      	mov	r6, r1
 800ab50:	4617      	mov	r7, r2
 800ab52:	4604      	mov	r4, r0
 800ab54:	f7ff ff40 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800ab58:	6803      	ldr	r3, [r0, #0]
 800ab5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab5c:	4798      	blx	r3
 800ab5e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ab62:	9302      	str	r3, [sp, #8]
 800ab64:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ab68:	9301      	str	r3, [sp, #4]
 800ab6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ab6e:	9300      	str	r3, [sp, #0]
 800ab70:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800ab74:	4643      	mov	r3, r8
 800ab76:	463a      	mov	r2, r7
 800ab78:	4631      	mov	r1, r6
 800ab7a:	4620      	mov	r0, r4
 800ab7c:	47a8      	blx	r5
 800ab7e:	b007      	add	sp, #28
 800ab80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab84:	20012dbe 	.word	0x20012dbe

0800ab88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ab88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab8c:	4604      	mov	r4, r0
 800ab8e:	b08f      	sub	sp, #60	; 0x3c
 800ab90:	4610      	mov	r0, r2
 800ab92:	460d      	mov	r5, r1
 800ab94:	4691      	mov	r9, r2
 800ab96:	461e      	mov	r6, r3
 800ab98:	f006 f958 	bl	8010e4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab9c:	2800      	cmp	r0, #0
 800ab9e:	f000 80b3 	beq.w	800ad08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 800aba2:	6823      	ldr	r3, [r4, #0]
 800aba4:	f8df b190 	ldr.w	fp, [pc, #400]	; 800ad38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 800aba8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800abaa:	f8df a190 	ldr.w	sl, [pc, #400]	; 800ad3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800abae:	4f5f      	ldr	r7, [pc, #380]	; (800ad2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800abb0:	4620      	mov	r0, r4
 800abb2:	4798      	blx	r3
 800abb4:	6823      	ldr	r3, [r4, #0]
 800abb6:	4620      	mov	r0, r4
 800abb8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800abba:	4798      	blx	r3
 800abbc:	f8bb 3000 	ldrh.w	r3, [fp]
 800abc0:	9300      	str	r3, [sp, #0]
 800abc2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800abc6:	f8ba 3000 	ldrh.w	r3, [sl]
 800abca:	9301      	str	r3, [sp, #4]
 800abcc:	883b      	ldrh	r3, [r7, #0]
 800abce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800abd2:	9302      	str	r3, [sp, #8]
 800abd4:	4b56      	ldr	r3, [pc, #344]	; (800ad30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800abd6:	9304      	str	r3, [sp, #16]
 800abd8:	881a      	ldrh	r2, [r3, #0]
 800abda:	9203      	str	r2, [sp, #12]
 800abdc:	4640      	mov	r0, r8
 800abde:	f006 f9ef 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abe2:	8038      	strh	r0, [r7, #0]
 800abe4:	4640      	mov	r0, r8
 800abe6:	f006 fa25 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800abea:	9b04      	ldr	r3, [sp, #16]
 800abec:	8018      	strh	r0, [r3, #0]
 800abee:	4b51      	ldr	r3, [pc, #324]	; (800ad34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800abf0:	781b      	ldrb	r3, [r3, #0]
 800abf2:	2b00      	cmp	r3, #0
 800abf4:	f040 808b 	bne.w	800ad0e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 800abf8:	883b      	ldrh	r3, [r7, #0]
 800abfa:	f8ab 3000 	strh.w	r3, [fp]
 800abfe:	f8aa 0000 	strh.w	r0, [sl]
 800ac02:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ac04:	9304      	str	r3, [sp, #16]
 800ac06:	4648      	mov	r0, r9
 800ac08:	6c27      	ldr	r7, [r4, #64]	; 0x40
 800ac0a:	f006 f91f 	bl	8010e4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ac0e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800ac12:	2200      	movs	r2, #0
 800ac14:	4611      	mov	r1, r2
 800ac16:	4628      	mov	r0, r5
 800ac18:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ac1c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ac20:	f7f7 fdb6 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800ac24:	2301      	movs	r3, #1
 800ac26:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ac2a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ac2e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac32:	2b00      	cmp	r3, #0
 800ac34:	dd71      	ble.n	800ad1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 800ac36:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac3a:	2b00      	cmp	r3, #0
 800ac3c:	dd6d      	ble.n	800ad1a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 800ac3e:	462a      	mov	r2, r5
 800ac40:	ab0a      	add	r3, sp, #40	; 0x28
 800ac42:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ac46:	6851      	ldr	r1, [r2, #4]
 800ac48:	c303      	stmia	r3!, {r0, r1}
 800ac4a:	4631      	mov	r1, r6
 800ac4c:	a80a      	add	r0, sp, #40	; 0x28
 800ac4e:	f7ff fbeb 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800ac52:	4b36      	ldr	r3, [pc, #216]	; (800ad2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800ac54:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ac58:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ac5c:	4b34      	ldr	r3, [pc, #208]	; (800ad30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800ac5e:	aa0a      	add	r2, sp, #40	; 0x28
 800ac60:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ac64:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ac68:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ac6c:	ab08      	add	r3, sp, #32
 800ac6e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ac72:	2600      	movs	r6, #0
 800ac74:	4618      	mov	r0, r3
 800ac76:	a90c      	add	r1, sp, #48	; 0x30
 800ac78:	960c      	str	r6, [sp, #48]	; 0x30
 800ac7a:	f7ff fbd5 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800ac7e:	a807      	add	r0, sp, #28
 800ac80:	f006 fb30 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac84:	4680      	mov	r8, r0
 800ac86:	f7ff fea7 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800ac8a:	6802      	ldr	r2, [r0, #0]
 800ac8c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800ac8e:	4790      	blx	r2
 800ac90:	4580      	cmp	r8, r0
 800ac92:	d049      	beq.n	800ad28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 800ac94:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800ac96:	b150      	cbz	r0, 800acae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 800ac98:	a807      	add	r0, sp, #28
 800ac9a:	f006 fb23 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac9e:	4606      	mov	r6, r0
 800aca0:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800aca2:	6803      	ldr	r3, [r0, #0]
 800aca4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aca6:	4798      	blx	r3
 800aca8:	1a33      	subs	r3, r6, r0
 800acaa:	4258      	negs	r0, r3
 800acac:	4158      	adcs	r0, r3
 800acae:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800acb2:	2600      	movs	r6, #0
 800acb4:	682a      	ldr	r2, [r5, #0]
 800acb6:	696b      	ldr	r3, [r5, #20]
 800acb8:	616e      	str	r6, [r5, #20]
 800acba:	9305      	str	r3, [sp, #20]
 800acbc:	6892      	ldr	r2, [r2, #8]
 800acbe:	a908      	add	r1, sp, #32
 800acc0:	4628      	mov	r0, r5
 800acc2:	4790      	blx	r2
 800acc4:	9b05      	ldr	r3, [sp, #20]
 800acc6:	616b      	str	r3, [r5, #20]
 800acc8:	4652      	mov	r2, sl
 800acca:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800acce:	4649      	mov	r1, r9
 800acd0:	4628      	mov	r0, r5
 800acd2:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800acd6:	f7f7 fd5b 	bl	8002790 <_ZN8touchgfx8Drawable5setXYEss>
 800acda:	9b04      	ldr	r3, [sp, #16]
 800acdc:	9a00      	ldr	r2, [sp, #0]
 800acde:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 800ace2:	4b15      	ldr	r3, [pc, #84]	; (800ad38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ace4:	801a      	strh	r2, [r3, #0]
 800ace6:	4b15      	ldr	r3, [pc, #84]	; (800ad3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ace8:	9a01      	ldr	r2, [sp, #4]
 800acea:	801a      	strh	r2, [r3, #0]
 800acec:	4b0f      	ldr	r3, [pc, #60]	; (800ad2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 800acee:	9a02      	ldr	r2, [sp, #8]
 800acf0:	801a      	strh	r2, [r3, #0]
 800acf2:	4b0f      	ldr	r3, [pc, #60]	; (800ad30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800acf4:	9a03      	ldr	r2, [sp, #12]
 800acf6:	801a      	strh	r2, [r3, #0]
 800acf8:	6823      	ldr	r3, [r4, #0]
 800acfa:	4620      	mov	r0, r4
 800acfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800acfe:	4798      	blx	r3
 800ad00:	6823      	ldr	r3, [r4, #0]
 800ad02:	4620      	mov	r0, r4
 800ad04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ad06:	4798      	blx	r3
 800ad08:	b00f      	add	sp, #60	; 0x3c
 800ad0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad0e:	883b      	ldrh	r3, [r7, #0]
 800ad10:	f8ab 0000 	strh.w	r0, [fp]
 800ad14:	f8aa 3000 	strh.w	r3, [sl]
 800ad18:	e773      	b.n	800ac02 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800ad1a:	462a      	mov	r2, r5
 800ad1c:	ab0a      	add	r3, sp, #40	; 0x28
 800ad1e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ad22:	6851      	ldr	r1, [r2, #4]
 800ad24:	c303      	stmia	r3!, {r0, r1}
 800ad26:	e794      	b.n	800ac52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 800ad28:	4630      	mov	r0, r6
 800ad2a:	e7c0      	b.n	800acae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 800ad2c:	20012db8 	.word	0x20012db8
 800ad30:	20012dba 	.word	0x20012dba
 800ad34:	20012dbc 	.word	0x20012dbc
 800ad38:	20012dbe 	.word	0x20012dbe
 800ad3c:	20012dc0 	.word	0x20012dc0

0800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ad40:	b510      	push	{r4, lr}
 800ad42:	4b07      	ldr	r3, [pc, #28]	; (800ad60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ad44:	781b      	ldrb	r3, [r3, #0]
 800ad46:	4604      	mov	r4, r0
 800ad48:	b13b      	cbz	r3, 800ad5a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ad4a:	6803      	ldr	r3, [r0, #0]
 800ad4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad4e:	4798      	blx	r3
 800ad50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ad52:	4283      	cmp	r3, r0
 800ad54:	d101      	bne.n	800ad5a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ad56:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ad58:	bd10      	pop	{r4, pc}
 800ad5a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ad5c:	e7fc      	b.n	800ad58 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ad5e:	bf00      	nop
 800ad60:	20012dc2 	.word	0x20012dc2

0800ad64 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ad64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad68:	b088      	sub	sp, #32
 800ad6a:	461c      	mov	r4, r3
 800ad6c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ad70:	2500      	movs	r5, #0
 800ad72:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 800ad76:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 800ad7a:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 800ad7e:	9503      	str	r5, [sp, #12]
 800ad80:	e9cd 3100 	strd	r3, r1, [sp]
 800ad84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ad88:	f8ad 8014 	strh.w	r8, [sp, #20]
 800ad8c:	4692      	mov	sl, r2
 800ad8e:	4606      	mov	r6, r0
 800ad90:	f8ad 7016 	strh.w	r7, [sp, #22]
 800ad94:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ad98:	f88d 501c 	strb.w	r5, [sp, #28]
 800ad9c:	f7ff ffd0 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ada0:	fb09 a404 	mla	r4, r9, r4, sl
 800ada4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800ada8:	9404      	str	r4, [sp, #16]
 800adaa:	f8ad 901a 	strh.w	r9, [sp, #26]
 800adae:	f88d 501e 	strb.w	r5, [sp, #30]
 800adb2:	f88d 501d 	strb.w	r5, [sp, #29]
 800adb6:	f1b8 0f00 	cmp.w	r8, #0
 800adba:	d000      	beq.n	800adbe <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 800adbc:	b937      	cbnz	r7, 800adcc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 800adbe:	4b0d      	ldr	r3, [pc, #52]	; (800adf4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 800adc0:	4a0d      	ldr	r2, [pc, #52]	; (800adf8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800adc2:	f44f 7101 	mov.w	r1, #516	; 0x204
 800adc6:	480d      	ldr	r0, [pc, #52]	; (800adfc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800adc8:	f011 ffe6 	bl	801cd98 <__assert_func>
 800adcc:	6833      	ldr	r3, [r6, #0]
 800adce:	9c00      	ldr	r4, [sp, #0]
 800add0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800add2:	4630      	mov	r0, r6
 800add4:	4798      	blx	r3
 800add6:	4220      	tst	r0, r4
 800add8:	d104      	bne.n	800ade4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 800adda:	4b09      	ldr	r3, [pc, #36]	; (800ae00 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800addc:	4a06      	ldr	r2, [pc, #24]	; (800adf8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 800adde:	f240 2105 	movw	r1, #517	; 0x205
 800ade2:	e7f0      	b.n	800adc6 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800ade4:	6870      	ldr	r0, [r6, #4]
 800ade6:	6803      	ldr	r3, [r0, #0]
 800ade8:	4669      	mov	r1, sp
 800adea:	685b      	ldr	r3, [r3, #4]
 800adec:	4798      	blx	r3
 800adee:	b008      	add	sp, #32
 800adf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800adf4:	0801faef 	.word	0x0801faef
 800adf8:	0801fd4f 	.word	0x0801fd4f
 800adfc:	0801fca1 	.word	0x0801fca1
 800ae00:	0801fb27 	.word	0x0801fb27

0800ae04 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ae04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae08:	b089      	sub	sp, #36	; 0x24
 800ae0a:	2400      	movs	r4, #0
 800ae0c:	461d      	mov	r5, r3
 800ae0e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800ae12:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 800ae16:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800ae1a:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800ae1e:	9403      	str	r4, [sp, #12]
 800ae20:	468a      	mov	sl, r1
 800ae22:	4693      	mov	fp, r2
 800ae24:	4606      	mov	r6, r0
 800ae26:	e9cd 3400 	strd	r3, r4, [sp]
 800ae2a:	f7ff ff89 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae2e:	fb09 b505 	mla	r5, r9, r5, fp
 800ae32:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ae36:	9504      	str	r5, [sp, #16]
 800ae38:	f8ad 8014 	strh.w	r8, [sp, #20]
 800ae3c:	f8ad 7016 	strh.w	r7, [sp, #22]
 800ae40:	f8ad 4018 	strh.w	r4, [sp, #24]
 800ae44:	f8ad 901a 	strh.w	r9, [sp, #26]
 800ae48:	f8cd a00c 	str.w	sl, [sp, #12]
 800ae4c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800ae50:	f88d 401e 	strb.w	r4, [sp, #30]
 800ae54:	f1b8 0f00 	cmp.w	r8, #0
 800ae58:	d000      	beq.n	800ae5c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 800ae5a:	b937      	cbnz	r7, 800ae6a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 800ae5c:	4b0d      	ldr	r3, [pc, #52]	; (800ae94 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 800ae5e:	4a0e      	ldr	r2, [pc, #56]	; (800ae98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800ae60:	f240 2119 	movw	r1, #537	; 0x219
 800ae64:	480d      	ldr	r0, [pc, #52]	; (800ae9c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800ae66:	f011 ff97 	bl	801cd98 <__assert_func>
 800ae6a:	6833      	ldr	r3, [r6, #0]
 800ae6c:	9c00      	ldr	r4, [sp, #0]
 800ae6e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ae70:	4630      	mov	r0, r6
 800ae72:	4798      	blx	r3
 800ae74:	4220      	tst	r0, r4
 800ae76:	d104      	bne.n	800ae82 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 800ae78:	4b09      	ldr	r3, [pc, #36]	; (800aea0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800ae7a:	4a07      	ldr	r2, [pc, #28]	; (800ae98 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 800ae7c:	f240 211a 	movw	r1, #538	; 0x21a
 800ae80:	e7f0      	b.n	800ae64 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800ae82:	6870      	ldr	r0, [r6, #4]
 800ae84:	6803      	ldr	r3, [r0, #0]
 800ae86:	4669      	mov	r1, sp
 800ae88:	685b      	ldr	r3, [r3, #4]
 800ae8a:	4798      	blx	r3
 800ae8c:	b009      	add	sp, #36	; 0x24
 800ae8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae92:	bf00      	nop
 800ae94:	0801fb6c 	.word	0x0801fb6c
 800ae98:	0801fdc5 	.word	0x0801fdc5
 800ae9c:	0801fca1 	.word	0x0801fca1
 800aea0:	0801fba4 	.word	0x0801fba4

0800aea4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800aea4:	b510      	push	{r4, lr}
 800aea6:	4b0b      	ldr	r3, [pc, #44]	; (800aed4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800aea8:	781b      	ldrb	r3, [r3, #0]
 800aeaa:	4604      	mov	r4, r0
 800aeac:	b95b      	cbnz	r3, 800aec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aeae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800aeb2:	2b02      	cmp	r3, #2
 800aeb4:	d007      	beq.n	800aec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aeb6:	6840      	ldr	r0, [r0, #4]
 800aeb8:	f000 fb54 	bl	800b564 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800aebc:	b118      	cbz	r0, 800aec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800aebe:	6862      	ldr	r2, [r4, #4]
 800aec0:	7a53      	ldrb	r3, [r2, #9]
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	d0fc      	beq.n	800aec0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800aec6:	f7f5 fd2f 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800aeca:	4620      	mov	r0, r4
 800aecc:	f7ff ff38 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aed0:	bd10      	pop	{r4, pc}
 800aed2:	bf00      	nop
 800aed4:	20012dc2 	.word	0x20012dc2

0800aed8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800aed8:	b508      	push	{r3, lr}
 800aeda:	290d      	cmp	r1, #13
 800aedc:	d817      	bhi.n	800af0e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800aede:	e8df f001 	tbb	[pc, r1]
 800aee2:	090b      	.short	0x090b
 800aee4:	0d0d0d07 	.word	0x0d0d0d07
 800aee8:	1414140d 	.word	0x1414140d
 800aeec:	0d0d1414 	.word	0x0d0d1414
 800aef0:	2020      	movs	r0, #32
 800aef2:	bd08      	pop	{r3, pc}
 800aef4:	2018      	movs	r0, #24
 800aef6:	e7fc      	b.n	800aef2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800aef8:	2010      	movs	r0, #16
 800aefa:	e7fa      	b.n	800aef2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800aefc:	4b05      	ldr	r3, [pc, #20]	; (800af14 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800aefe:	4a06      	ldr	r2, [pc, #24]	; (800af18 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800af00:	4806      	ldr	r0, [pc, #24]	; (800af1c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800af02:	f240 2177 	movw	r1, #631	; 0x277
 800af06:	f011 ff47 	bl	801cd98 <__assert_func>
 800af0a:	2008      	movs	r0, #8
 800af0c:	e7f1      	b.n	800aef2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800af0e:	2000      	movs	r0, #0
 800af10:	e7ef      	b.n	800aef2 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800af12:	bf00      	nop
 800af14:	0801fd1d 	.word	0x0801fd1d
 800af18:	080200de 	.word	0x080200de
 800af1c:	0801fca1 	.word	0x0801fca1

0800af20 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800af20:	b570      	push	{r4, r5, r6, lr}
 800af22:	460d      	mov	r5, r1
 800af24:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800af28:	4616      	mov	r6, r2
 800af2a:	461c      	mov	r4, r3
 800af2c:	f7ff ffd4 	bl	800aed8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800af30:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800af34:	10c0      	asrs	r0, r0, #3
 800af36:	fb06 5101 	mla	r1, r6, r1, r5
 800af3a:	fb00 4001 	mla	r0, r0, r1, r4
 800af3e:	bd70      	pop	{r4, r5, r6, pc}

0800af40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800af40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af44:	b08a      	sub	sp, #40	; 0x28
 800af46:	f04f 0c00 	mov.w	ip, #0
 800af4a:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800af4e:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800af52:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800af56:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800af5a:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 800af5e:	f8cd c014 	str.w	ip, [sp, #20]
 800af62:	2d0b      	cmp	r5, #11
 800af64:	4604      	mov	r4, r0
 800af66:	469a      	mov	sl, r3
 800af68:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800af6c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800af70:	d129      	bne.n	800afc6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 800af72:	2080      	movs	r0, #128	; 0x80
 800af74:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800af78:	9204      	str	r2, [sp, #16]
 800af7a:	4620      	mov	r0, r4
 800af7c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800af80:	f8ad 2020 	strh.w	r2, [sp, #32]
 800af84:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800af88:	f8ad 701c 	strh.w	r7, [sp, #28]
 800af8c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800af90:	f7ff fed6 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800af94:	e9cd 9800 	strd	r9, r8, [sp]
 800af98:	4603      	mov	r3, r0
 800af9a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800af9e:	4651      	mov	r1, sl
 800afa0:	4620      	mov	r0, r4
 800afa2:	f7ff ffbd 	bl	800af20 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800afa6:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800afaa:	9006      	str	r0, [sp, #24]
 800afac:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800afb0:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 800afb4:	b107      	cbz	r7, 800afb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 800afb6:	b9d6      	cbnz	r6, 800afee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 800afb8:	4b17      	ldr	r3, [pc, #92]	; (800b018 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800afba:	4a18      	ldr	r2, [pc, #96]	; (800b01c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800afbc:	f240 11cf 	movw	r1, #463	; 0x1cf
 800afc0:	4817      	ldr	r0, [pc, #92]	; (800b020 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 800afc2:	f011 fee9 	bl	801cd98 <__assert_func>
 800afc6:	2d02      	cmp	r5, #2
 800afc8:	d108      	bne.n	800afdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 800afca:	2bff      	cmp	r3, #255	; 0xff
 800afcc:	d104      	bne.n	800afd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 800afce:	2800      	cmp	r0, #0
 800afd0:	bf14      	ite	ne
 800afd2:	2040      	movne	r0, #64	; 0x40
 800afd4:	2020      	moveq	r0, #32
 800afd6:	e7cd      	b.n	800af74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800afd8:	2040      	movs	r0, #64	; 0x40
 800afda:	e7cb      	b.n	800af74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800afdc:	2bff      	cmp	r3, #255	; 0xff
 800afde:	d104      	bne.n	800afea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 800afe0:	2800      	cmp	r0, #0
 800afe2:	bf14      	ite	ne
 800afe4:	2004      	movne	r0, #4
 800afe6:	2001      	moveq	r0, #1
 800afe8:	e7c4      	b.n	800af74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800afea:	2004      	movs	r0, #4
 800afec:	e7c2      	b.n	800af74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800afee:	6823      	ldr	r3, [r4, #0]
 800aff0:	9d02      	ldr	r5, [sp, #8]
 800aff2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aff4:	4620      	mov	r0, r4
 800aff6:	4798      	blx	r3
 800aff8:	4228      	tst	r0, r5
 800affa:	d104      	bne.n	800b006 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 800affc:	4b09      	ldr	r3, [pc, #36]	; (800b024 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 800affe:	4a07      	ldr	r2, [pc, #28]	; (800b01c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800b000:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 800b004:	e7dc      	b.n	800afc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 800b006:	6860      	ldr	r0, [r4, #4]
 800b008:	6803      	ldr	r3, [r0, #0]
 800b00a:	a902      	add	r1, sp, #8
 800b00c:	685b      	ldr	r3, [r3, #4]
 800b00e:	4798      	blx	r3
 800b010:	b00a      	add	sp, #40	; 0x28
 800b012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b016:	bf00      	nop
 800b018:	0801faef 	.word	0x0801faef
 800b01c:	0801ff78 	.word	0x0801ff78
 800b020:	0801fca1 	.word	0x0801fca1
 800b024:	0801fb27 	.word	0x0801fb27

0800b028 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800b028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b02c:	b08b      	sub	sp, #44	; 0x2c
 800b02e:	469b      	mov	fp, r3
 800b030:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800b034:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800b038:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800b03c:	2fff      	cmp	r7, #255	; 0xff
 800b03e:	bf14      	ite	ne
 800b040:	2308      	movne	r3, #8
 800b042:	2302      	moveq	r3, #2
 800b044:	2600      	movs	r6, #0
 800b046:	4604      	mov	r4, r0
 800b048:	4689      	mov	r9, r1
 800b04a:	4692      	mov	sl, r2
 800b04c:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800b050:	9605      	str	r6, [sp, #20]
 800b052:	f7ff fe75 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b056:	e9cd 8500 	strd	r8, r5, [sp]
 800b05a:	4603      	mov	r3, r0
 800b05c:	465a      	mov	r2, fp
 800b05e:	4651      	mov	r1, sl
 800b060:	4620      	mov	r0, r4
 800b062:	f7ff ff5d 	bl	800af20 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b066:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b06a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b06e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b072:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b076:	6823      	ldr	r3, [r4, #0]
 800b078:	9006      	str	r0, [sp, #24]
 800b07a:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800b07e:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800b082:	f8ad 6020 	strh.w	r6, [sp, #32]
 800b086:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 800b08a:	f8cd 9014 	str.w	r9, [sp, #20]
 800b08e:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800b092:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b094:	9d02      	ldr	r5, [sp, #8]
 800b096:	4620      	mov	r0, r4
 800b098:	4798      	blx	r3
 800b09a:	4228      	tst	r0, r5
 800b09c:	d106      	bne.n	800b0ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800b09e:	4b07      	ldr	r3, [pc, #28]	; (800b0bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800b0a0:	4a07      	ldr	r2, [pc, #28]	; (800b0c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800b0a2:	4808      	ldr	r0, [pc, #32]	; (800b0c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800b0a4:	f240 212e 	movw	r1, #558	; 0x22e
 800b0a8:	f011 fe76 	bl	801cd98 <__assert_func>
 800b0ac:	6860      	ldr	r0, [r4, #4]
 800b0ae:	6803      	ldr	r3, [r0, #0]
 800b0b0:	a902      	add	r1, sp, #8
 800b0b2:	685b      	ldr	r3, [r3, #4]
 800b0b4:	4798      	blx	r3
 800b0b6:	b00b      	add	sp, #44	; 0x2c
 800b0b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b0bc:	0801fb27 	.word	0x0801fb27
 800b0c0:	08020049 	.word	0x08020049
 800b0c4:	0801fca1 	.word	0x0801fca1

0800b0c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b0c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b0cc:	461f      	mov	r7, r3
 800b0ce:	4b0b      	ldr	r3, [pc, #44]	; (800b0fc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b0d0:	460d      	mov	r5, r1
 800b0d2:	f8b3 8000 	ldrh.w	r8, [r3]
 800b0d6:	4616      	mov	r6, r2
 800b0d8:	4604      	mov	r4, r0
 800b0da:	f7ff fc7d 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800b0de:	6803      	ldr	r3, [r0, #0]
 800b0e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b0e2:	4798      	blx	r3
 800b0e4:	463b      	mov	r3, r7
 800b0e6:	e9cd 8000 	strd	r8, r0, [sp]
 800b0ea:	4632      	mov	r2, r6
 800b0ec:	4629      	mov	r1, r5
 800b0ee:	4620      	mov	r0, r4
 800b0f0:	f7ff ff16 	bl	800af20 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b0f4:	b002      	add	sp, #8
 800b0f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0fa:	bf00      	nop
 800b0fc:	20012dbe 	.word	0x20012dbe

0800b100 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800b100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b104:	b088      	sub	sp, #32
 800b106:	4698      	mov	r8, r3
 800b108:	2300      	movs	r3, #0
 800b10a:	9303      	str	r3, [sp, #12]
 800b10c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b110:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800b114:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b118:	f8ad 6014 	strh.w	r6, [sp, #20]
 800b11c:	e9cd 3100 	strd	r3, r1, [sp]
 800b120:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b124:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b128:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800b12c:	f88d 301c 	strb.w	r3, [sp, #28]
 800b130:	4617      	mov	r7, r2
 800b132:	4604      	mov	r4, r0
 800b134:	f8ad 5016 	strh.w	r5, [sp, #22]
 800b138:	f7ff fe02 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b13c:	4642      	mov	r2, r8
 800b13e:	4603      	mov	r3, r0
 800b140:	4639      	mov	r1, r7
 800b142:	4620      	mov	r0, r4
 800b144:	f7ff ffc0 	bl	800b0c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b148:	4b16      	ldr	r3, [pc, #88]	; (800b1a4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800b14a:	9004      	str	r0, [sp, #16]
 800b14c:	881b      	ldrh	r3, [r3, #0]
 800b14e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b152:	f7ff fc41 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800b156:	6803      	ldr	r3, [r0, #0]
 800b158:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b15a:	4798      	blx	r3
 800b15c:	f88d 001e 	strb.w	r0, [sp, #30]
 800b160:	f88d 001d 	strb.w	r0, [sp, #29]
 800b164:	b106      	cbz	r6, 800b168 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800b166:	b935      	cbnz	r5, 800b176 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800b168:	4b0f      	ldr	r3, [pc, #60]	; (800b1a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800b16a:	4a10      	ldr	r2, [pc, #64]	; (800b1ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b16c:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 800b170:	480f      	ldr	r0, [pc, #60]	; (800b1b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800b172:	f011 fe11 	bl	801cd98 <__assert_func>
 800b176:	6823      	ldr	r3, [r4, #0]
 800b178:	9d00      	ldr	r5, [sp, #0]
 800b17a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b17c:	4620      	mov	r0, r4
 800b17e:	4798      	blx	r3
 800b180:	4228      	tst	r0, r5
 800b182:	d104      	bne.n	800b18e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800b184:	4b0b      	ldr	r3, [pc, #44]	; (800b1b4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800b186:	4a09      	ldr	r2, [pc, #36]	; (800b1ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b188:	f240 11ed 	movw	r1, #493	; 0x1ed
 800b18c:	e7f0      	b.n	800b170 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800b18e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b190:	6860      	ldr	r0, [r4, #4]
 800b192:	9303      	str	r3, [sp, #12]
 800b194:	6803      	ldr	r3, [r0, #0]
 800b196:	4669      	mov	r1, sp
 800b198:	685b      	ldr	r3, [r3, #4]
 800b19a:	4798      	blx	r3
 800b19c:	b008      	add	sp, #32
 800b19e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b1a2:	bf00      	nop
 800b1a4:	20012dbe 	.word	0x20012dbe
 800b1a8:	0801faef 	.word	0x0801faef
 800b1ac:	0801fe2a 	.word	0x0801fe2a
 800b1b0:	0801fca1 	.word	0x0801fca1
 800b1b4:	0801fb27 	.word	0x0801fb27

0800b1b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b1b8:	b570      	push	{r4, r5, r6, lr}
 800b1ba:	b08a      	sub	sp, #40	; 0x28
 800b1bc:	466b      	mov	r3, sp
 800b1be:	e883 0006 	stmia.w	r3, {r1, r2}
 800b1c2:	4b20      	ldr	r3, [pc, #128]	; (800b244 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800b1c4:	781b      	ldrb	r3, [r3, #0]
 800b1c6:	4604      	mov	r4, r0
 800b1c8:	b933      	cbnz	r3, 800b1d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b1ca:	4b1f      	ldr	r3, [pc, #124]	; (800b248 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800b1cc:	4a1f      	ldr	r2, [pc, #124]	; (800b24c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b1ce:	4820      	ldr	r0, [pc, #128]	; (800b250 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b1d0:	f240 213f 	movw	r1, #575	; 0x23f
 800b1d4:	f011 fde0 	bl	801cd98 <__assert_func>
 800b1d8:	2300      	movs	r3, #0
 800b1da:	9305      	str	r3, [sp, #20]
 800b1dc:	2301      	movs	r3, #1
 800b1de:	9302      	str	r3, [sp, #8]
 800b1e0:	6803      	ldr	r3, [r0, #0]
 800b1e2:	f8bd 5000 	ldrh.w	r5, [sp]
 800b1e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1e8:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800b1ec:	4798      	blx	r3
 800b1ee:	4632      	mov	r2, r6
 800b1f0:	4629      	mov	r1, r5
 800b1f2:	4603      	mov	r3, r0
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	f7ff ff67 	bl	800b0c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b1fa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b1fc:	9306      	str	r3, [sp, #24]
 800b1fe:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b202:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b206:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b20a:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b20e:	4b11      	ldr	r3, [pc, #68]	; (800b254 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b210:	9003      	str	r0, [sp, #12]
 800b212:	881b      	ldrh	r3, [r3, #0]
 800b214:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b218:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b21c:	f7ff fbdc 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800b220:	6803      	ldr	r3, [r0, #0]
 800b222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b224:	4798      	blx	r3
 800b226:	23ff      	movs	r3, #255	; 0xff
 800b228:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b22c:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b230:	6860      	ldr	r0, [r4, #4]
 800b232:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b236:	6803      	ldr	r3, [r0, #0]
 800b238:	a902      	add	r1, sp, #8
 800b23a:	685b      	ldr	r3, [r3, #4]
 800b23c:	4798      	blx	r3
 800b23e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b240:	b00a      	add	sp, #40	; 0x28
 800b242:	bd70      	pop	{r4, r5, r6, pc}
 800b244:	20012dc3 	.word	0x20012dc3
 800b248:	0801fbee 	.word	0x0801fbee
 800b24c:	0801fece 	.word	0x0801fece
 800b250:	0801fca1 	.word	0x0801fca1
 800b254:	20012dbe 	.word	0x20012dbe

0800b258 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b258:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b25a:	b08b      	sub	sp, #44	; 0x2c
 800b25c:	466d      	mov	r5, sp
 800b25e:	e885 0006 	stmia.w	r5, {r1, r2}
 800b262:	461d      	mov	r5, r3
 800b264:	2300      	movs	r3, #0
 800b266:	9305      	str	r3, [sp, #20]
 800b268:	2301      	movs	r3, #1
 800b26a:	9302      	str	r3, [sp, #8]
 800b26c:	6803      	ldr	r3, [r0, #0]
 800b26e:	f8bd 6000 	ldrh.w	r6, [sp]
 800b272:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b274:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b278:	4604      	mov	r4, r0
 800b27a:	4798      	blx	r3
 800b27c:	463a      	mov	r2, r7
 800b27e:	4631      	mov	r1, r6
 800b280:	4603      	mov	r3, r0
 800b282:	4620      	mov	r0, r4
 800b284:	f7ff ff20 	bl	800b0c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b288:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b28c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b290:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b294:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b298:	4b0e      	ldr	r3, [pc, #56]	; (800b2d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800b29a:	9003      	str	r0, [sp, #12]
 800b29c:	881b      	ldrh	r3, [r3, #0]
 800b29e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b2a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b2a4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b2a8:	9506      	str	r5, [sp, #24]
 800b2aa:	f7ff fb95 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800b2ae:	6803      	ldr	r3, [r0, #0]
 800b2b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b2b2:	4798      	blx	r3
 800b2b4:	23ff      	movs	r3, #255	; 0xff
 800b2b6:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b2ba:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b2be:	6860      	ldr	r0, [r4, #4]
 800b2c0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b2c4:	6803      	ldr	r3, [r0, #0]
 800b2c6:	a902      	add	r1, sp, #8
 800b2c8:	685b      	ldr	r3, [r3, #4]
 800b2ca:	4798      	blx	r3
 800b2cc:	4628      	mov	r0, r5
 800b2ce:	b00b      	add	sp, #44	; 0x2c
 800b2d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b2d2:	bf00      	nop
 800b2d4:	20012dbe 	.word	0x20012dbe

0800b2d8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b2d8:	b570      	push	{r4, r5, r6, lr}
 800b2da:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b2de:	4604      	mov	r4, r0
 800b2e0:	b19b      	cbz	r3, 800b30a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b2e2:	2002      	movs	r0, #2
 800b2e4:	f7f5 fa36 	bl	8000754 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b2e8:	2300      	movs	r3, #0
 800b2ea:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b2ee:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b2f2:	6823      	ldr	r3, [r4, #0]
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 800b2fa:	f7ff fd21 	bl	800ad40 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2fe:	462b      	mov	r3, r5
 800b300:	4601      	mov	r1, r0
 800b302:	4620      	mov	r0, r4
 800b304:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b308:	4718      	bx	r3
 800b30a:	bd70      	pop	{r4, r5, r6, pc}

0800b30c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800b30c:	4770      	bx	lr

0800b30e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b30e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b312:	1a13      	subs	r3, r2, r0
 800b314:	4258      	negs	r0, r3
 800b316:	4158      	adcs	r0, r3
 800b318:	4770      	bx	lr

0800b31a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b31a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b31e:	1a9b      	subs	r3, r3, r2
 800b320:	2b00      	cmp	r3, #0
 800b322:	bfdc      	itt	le
 800b324:	6882      	ldrle	r2, [r0, #8]
 800b326:	189b      	addle	r3, r3, r2
 800b328:	2b01      	cmp	r3, #1
 800b32a:	bfcc      	ite	gt
 800b32c:	2000      	movgt	r0, #0
 800b32e:	2001      	movle	r0, #1
 800b330:	4770      	bx	lr

0800b332 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b332:	6902      	ldr	r2, [r0, #16]
 800b334:	6840      	ldr	r0, [r0, #4]
 800b336:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800b33a:	4770      	bx	lr

0800b33c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b33c:	6803      	ldr	r3, [r0, #0]
 800b33e:	691b      	ldr	r3, [r3, #16]
 800b340:	4718      	bx	r3

0800b342 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b342:	4770      	bx	lr

0800b344 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b344:	4770      	bx	lr

0800b346 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b346:	4770      	bx	lr

0800b348 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b348:	b570      	push	{r4, r5, r6, lr}
 800b34a:	2301      	movs	r3, #1
 800b34c:	7203      	strb	r3, [r0, #8]
 800b34e:	4604      	mov	r4, r0
 800b350:	6840      	ldr	r0, [r0, #4]
 800b352:	6803      	ldr	r3, [r0, #0]
 800b354:	699b      	ldr	r3, [r3, #24]
 800b356:	4798      	blx	r3
 800b358:	6803      	ldr	r3, [r0, #0]
 800b35a:	2b40      	cmp	r3, #64	; 0x40
 800b35c:	4605      	mov	r5, r0
 800b35e:	d039      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b360:	d815      	bhi.n	800b38e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b362:	2b04      	cmp	r3, #4
 800b364:	d022      	beq.n	800b3ac <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b366:	d808      	bhi.n	800b37a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b368:	2b01      	cmp	r3, #1
 800b36a:	d033      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b36c:	2b02      	cmp	r3, #2
 800b36e:	d108      	bne.n	800b382 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800b370:	6823      	ldr	r3, [r4, #0]
 800b372:	4620      	mov	r0, r4
 800b374:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b376:	4798      	blx	r3
 800b378:	e025      	b.n	800b3c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800b37a:	2b08      	cmp	r3, #8
 800b37c:	d01e      	beq.n	800b3bc <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800b37e:	2b20      	cmp	r3, #32
 800b380:	d028      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b382:	4b17      	ldr	r3, [pc, #92]	; (800b3e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800b384:	4a17      	ldr	r2, [pc, #92]	; (800b3e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800b386:	4818      	ldr	r0, [pc, #96]	; (800b3e8 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800b388:	218b      	movs	r1, #139	; 0x8b
 800b38a:	f011 fd05 	bl	801cd98 <__assert_func>
 800b38e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b392:	d01f      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b394:	d804      	bhi.n	800b3a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800b396:	2b80      	cmp	r3, #128	; 0x80
 800b398:	d01c      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b39a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b39e:	e7ef      	b.n	800b380 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800b3a0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b3a4:	d016      	beq.n	800b3d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800b3a6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b3aa:	e7e0      	b.n	800b36e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800b3ac:	6823      	ldr	r3, [r4, #0]
 800b3ae:	7f01      	ldrb	r1, [r0, #28]
 800b3b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b3b2:	4620      	mov	r0, r4
 800b3b4:	4798      	blx	r3
 800b3b6:	6823      	ldr	r3, [r4, #0]
 800b3b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b3ba:	e006      	b.n	800b3ca <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800b3bc:	6823      	ldr	r3, [r4, #0]
 800b3be:	7f01      	ldrb	r1, [r0, #28]
 800b3c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b3c2:	4620      	mov	r0, r4
 800b3c4:	4798      	blx	r3
 800b3c6:	6823      	ldr	r3, [r4, #0]
 800b3c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b3ca:	4629      	mov	r1, r5
 800b3cc:	4620      	mov	r0, r4
 800b3ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b3d2:	4718      	bx	r3
 800b3d4:	6823      	ldr	r3, [r4, #0]
 800b3d6:	4620      	mov	r0, r4
 800b3d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b3da:	4798      	blx	r3
 800b3dc:	e7eb      	b.n	800b3b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b3de:	bf00      	nop
 800b3e0:	08020127 	.word	0x08020127
 800b3e4:	080201e8 	.word	0x080201e8
 800b3e8:	0802014c 	.word	0x0802014c

0800b3ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b3ec:	b570      	push	{r4, r5, r6, lr}
 800b3ee:	4604      	mov	r4, r0
 800b3f0:	460e      	mov	r6, r1
 800b3f2:	6860      	ldr	r0, [r4, #4]
 800b3f4:	6803      	ldr	r3, [r0, #0]
 800b3f6:	685b      	ldr	r3, [r3, #4]
 800b3f8:	4798      	blx	r3
 800b3fa:	2800      	cmp	r0, #0
 800b3fc:	d1f9      	bne.n	800b3f2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b3fe:	4d0d      	ldr	r5, [pc, #52]	; (800b434 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b400:	6828      	ldr	r0, [r5, #0]
 800b402:	6803      	ldr	r3, [r0, #0]
 800b404:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b406:	4798      	blx	r3
 800b408:	f7f5 fa9c 	bl	8000944 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b40c:	6828      	ldr	r0, [r5, #0]
 800b40e:	2101      	movs	r1, #1
 800b410:	f7ff ff7c 	bl	800b30c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800b414:	6860      	ldr	r0, [r4, #4]
 800b416:	6803      	ldr	r3, [r0, #0]
 800b418:	4631      	mov	r1, r6
 800b41a:	689b      	ldr	r3, [r3, #8]
 800b41c:	4798      	blx	r3
 800b41e:	6823      	ldr	r3, [r4, #0]
 800b420:	4620      	mov	r0, r4
 800b422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b424:	4798      	blx	r3
 800b426:	6828      	ldr	r0, [r5, #0]
 800b428:	6803      	ldr	r3, [r0, #0]
 800b42a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b42e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b430:	4718      	bx	r3
 800b432:	bf00      	nop
 800b434:	20012dc4 	.word	0x20012dc4

0800b438 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b438:	b508      	push	{r3, lr}
 800b43a:	f7f5 fa75 	bl	8000928 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b43e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b442:	f7f5 ba79 	b.w	8000938 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b446 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b446:	b510      	push	{r4, lr}
 800b448:	2114      	movs	r1, #20
 800b44a:	4604      	mov	r4, r0
 800b44c:	f011 fc76 	bl	801cd3c <_ZdlPvj>
 800b450:	4620      	mov	r0, r4
 800b452:	bd10      	pop	{r4, pc}

0800b454 <_ZN8touchgfx13DMA_Interface5startEv>:
 800b454:	b510      	push	{r4, lr}
 800b456:	4604      	mov	r4, r0
 800b458:	6840      	ldr	r0, [r0, #4]
 800b45a:	6803      	ldr	r3, [r0, #0]
 800b45c:	681b      	ldr	r3, [r3, #0]
 800b45e:	4798      	blx	r3
 800b460:	b948      	cbnz	r0, 800b476 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b462:	7a63      	ldrb	r3, [r4, #9]
 800b464:	b13b      	cbz	r3, 800b476 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b466:	7a23      	ldrb	r3, [r4, #8]
 800b468:	b92b      	cbnz	r3, 800b476 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b46a:	6823      	ldr	r3, [r4, #0]
 800b46c:	4620      	mov	r0, r4
 800b46e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b474:	4718      	bx	r3
 800b476:	bd10      	pop	{r4, pc}

0800b478 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b478:	b510      	push	{r4, lr}
 800b47a:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800b47e:	1b12      	subs	r2, r2, r4
 800b480:	2a00      	cmp	r2, #0
 800b482:	bfdc      	itt	le
 800b484:	6883      	ldrle	r3, [r0, #8]
 800b486:	18d2      	addle	r2, r2, r3
 800b488:	2a01      	cmp	r2, #1
 800b48a:	dd18      	ble.n	800b4be <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800b48c:	6843      	ldr	r3, [r0, #4]
 800b48e:	f101 021c 	add.w	r2, r1, #28
 800b492:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800b496:	f851 4b04 	ldr.w	r4, [r1], #4
 800b49a:	f843 4b04 	str.w	r4, [r3], #4
 800b49e:	4291      	cmp	r1, r2
 800b4a0:	d1f9      	bne.n	800b496 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800b4a2:	880a      	ldrh	r2, [r1, #0]
 800b4a4:	801a      	strh	r2, [r3, #0]
 800b4a6:	788a      	ldrb	r2, [r1, #2]
 800b4a8:	709a      	strb	r2, [r3, #2]
 800b4aa:	68c3      	ldr	r3, [r0, #12]
 800b4ac:	6882      	ldr	r2, [r0, #8]
 800b4ae:	f3bf 8f5b 	dmb	ish
 800b4b2:	3301      	adds	r3, #1
 800b4b4:	429a      	cmp	r2, r3
 800b4b6:	bfd8      	it	le
 800b4b8:	1a9b      	suble	r3, r3, r2
 800b4ba:	60c3      	str	r3, [r0, #12]
 800b4bc:	bd10      	pop	{r4, pc}
 800b4be:	4b03      	ldr	r3, [pc, #12]	; (800b4cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b4c0:	4a03      	ldr	r2, [pc, #12]	; (800b4d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b4c2:	4804      	ldr	r0, [pc, #16]	; (800b4d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800b4c4:	2139      	movs	r1, #57	; 0x39
 800b4c6:	f011 fc67 	bl	801cd98 <__assert_func>
 800b4ca:	bf00      	nop
 800b4cc:	08020172 	.word	0x08020172
 800b4d0:	08020218 	.word	0x08020218
 800b4d4:	0802014c 	.word	0x0802014c

0800b4d8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b4d8:	b510      	push	{r4, lr}
 800b4da:	6803      	ldr	r3, [r0, #0]
 800b4dc:	681b      	ldr	r3, [r3, #0]
 800b4de:	4604      	mov	r4, r0
 800b4e0:	4798      	blx	r3
 800b4e2:	b128      	cbz	r0, 800b4f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b4e4:	4b07      	ldr	r3, [pc, #28]	; (800b504 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b4e6:	4a08      	ldr	r2, [pc, #32]	; (800b508 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b4e8:	4808      	ldr	r0, [pc, #32]	; (800b50c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b4ea:	213f      	movs	r1, #63	; 0x3f
 800b4ec:	f011 fc54 	bl	801cd98 <__assert_func>
 800b4f0:	6923      	ldr	r3, [r4, #16]
 800b4f2:	68a2      	ldr	r2, [r4, #8]
 800b4f4:	f3bf 8f5b 	dmb	ish
 800b4f8:	3301      	adds	r3, #1
 800b4fa:	429a      	cmp	r2, r3
 800b4fc:	bfd8      	it	le
 800b4fe:	1a9b      	suble	r3, r3, r2
 800b500:	6123      	str	r3, [r4, #16]
 800b502:	bd10      	pop	{r4, pc}
 800b504:	08020195 	.word	0x08020195
 800b508:	08020266 	.word	0x08020266
 800b50c:	0802014c 	.word	0x0802014c

0800b510 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b510:	b570      	push	{r4, r5, r6, lr}
 800b512:	4604      	mov	r4, r0
 800b514:	6840      	ldr	r0, [r0, #4]
 800b516:	6803      	ldr	r3, [r0, #0]
 800b518:	681b      	ldr	r3, [r3, #0]
 800b51a:	4798      	blx	r3
 800b51c:	4605      	mov	r5, r0
 800b51e:	b930      	cbnz	r0, 800b52e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b520:	7a23      	ldrb	r3, [r4, #8]
 800b522:	b123      	cbz	r3, 800b52e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b524:	6860      	ldr	r0, [r4, #4]
 800b526:	6803      	ldr	r3, [r0, #0]
 800b528:	695b      	ldr	r3, [r3, #20]
 800b52a:	4798      	blx	r3
 800b52c:	7225      	strb	r5, [r4, #8]
 800b52e:	6860      	ldr	r0, [r4, #4]
 800b530:	6803      	ldr	r3, [r0, #0]
 800b532:	681b      	ldr	r3, [r3, #0]
 800b534:	4798      	blx	r3
 800b536:	b928      	cbnz	r0, 800b544 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b538:	6823      	ldr	r3, [r4, #0]
 800b53a:	4620      	mov	r0, r4
 800b53c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b53e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b542:	4718      	bx	r3
 800b544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b548:	f7f5 ba04 	b.w	8000954 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b54c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b54c:	b510      	push	{r4, lr}
 800b54e:	4c04      	ldr	r4, [pc, #16]	; (800b560 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b550:	6082      	str	r2, [r0, #8]
 800b552:	2200      	movs	r2, #0
 800b554:	e9c0 4100 	strd	r4, r1, [r0]
 800b558:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b55c:	bd10      	pop	{r4, pc}
 800b55e:	bf00      	nop
 800b560:	080201cc 	.word	0x080201cc

0800b564 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b564:	6840      	ldr	r0, [r0, #4]
 800b566:	6803      	ldr	r3, [r0, #0]
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	4718      	bx	r3

0800b56c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800b56c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800b570:	4770      	bx	lr

0800b572 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800b572:	4770      	bx	lr

0800b574 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800b574:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b578:	b133      	cbz	r3, 800b588 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800b57a:	790b      	ldrb	r3, [r1, #4]
 800b57c:	2b01      	cmp	r3, #1
 800b57e:	bf01      	itttt	eq
 800b580:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800b582:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800b584:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800b586:	8603      	strheq	r3, [r0, #48]	; 0x30
 800b588:	f011 bbb4 	b.w	801ccf4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800b58c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800b58c:	8813      	ldrh	r3, [r2, #0]
 800b58e:	8683      	strh	r3, [r0, #52]	; 0x34
 800b590:	f000 bc78 	b.w	800be84 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800b594 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800b594:	b510      	push	{r4, lr}
 800b596:	2138      	movs	r1, #56	; 0x38
 800b598:	4604      	mov	r4, r0
 800b59a:	f011 fbcf 	bl	801cd3c <_ZdlPvj>
 800b59e:	4620      	mov	r0, r4
 800b5a0:	bd10      	pop	{r4, pc}

0800b5a2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800b5a2:	b510      	push	{r4, lr}
 800b5a4:	4604      	mov	r4, r0
 800b5a6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b5a8:	b150      	cbz	r0, 800b5c0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b5aa:	6803      	ldr	r3, [r0, #0]
 800b5ac:	68db      	ldr	r3, [r3, #12]
 800b5ae:	4798      	blx	r3
 800b5b0:	b130      	cbz	r0, 800b5c0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b5b2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b5b4:	6803      	ldr	r3, [r0, #0]
 800b5b6:	4621      	mov	r1, r4
 800b5b8:	689b      	ldr	r3, [r3, #8]
 800b5ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b5be:	4718      	bx	r3
 800b5c0:	bd10      	pop	{r4, pc}

0800b5c2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800b5c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800b5c6:	4770      	bx	lr

0800b5c8 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800b5c8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800b5cc:	4770      	bx	lr

0800b5ce <_ZN8touchgfx13ScalableImageD1Ev>:
 800b5ce:	4770      	bx	lr

0800b5d0 <_ZN8touchgfx13ScalableImageD0Ev>:
 800b5d0:	b510      	push	{r4, lr}
 800b5d2:	212c      	movs	r1, #44	; 0x2c
 800b5d4:	4604      	mov	r4, r0
 800b5d6:	f011 fbb1 	bl	801cd3c <_ZdlPvj>
 800b5da:	4620      	mov	r0, r4
 800b5dc:	bd10      	pop	{r4, pc}

0800b5de <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800b5de:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b5e0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b5e4:	2bff      	cmp	r3, #255	; 0xff
 800b5e6:	4605      	mov	r5, r0
 800b5e8:	d007      	beq.n	800b5fa <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 800b5ea:	2300      	movs	r3, #0
 800b5ec:	802b      	strh	r3, [r5, #0]
 800b5ee:	806b      	strh	r3, [r5, #2]
 800b5f0:	80ab      	strh	r3, [r5, #4]
 800b5f2:	80eb      	strh	r3, [r5, #6]
 800b5f4:	4628      	mov	r0, r5
 800b5f6:	b004      	add	sp, #16
 800b5f8:	bd70      	pop	{r4, r5, r6, pc}
 800b5fa:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800b5fe:	4621      	mov	r1, r4
 800b600:	4668      	mov	r0, sp
 800b602:	f005 fd51 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b606:	4620      	mov	r0, r4
 800b608:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800b60c:	f005 fcd8 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b610:	4286      	cmp	r6, r0
 800b612:	d1ea      	bne.n	800b5ea <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800b614:	4621      	mov	r1, r4
 800b616:	a802      	add	r0, sp, #8
 800b618:	f005 fd46 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b61c:	4620      	mov	r0, r4
 800b61e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800b622:	f005 fd07 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b626:	4286      	cmp	r6, r0
 800b628:	d1df      	bne.n	800b5ea <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800b62a:	4621      	mov	r1, r4
 800b62c:	4628      	mov	r0, r5
 800b62e:	f005 fd3b 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b632:	e7df      	b.n	800b5f4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>

0800b634 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800b634:	b538      	push	{r3, r4, r5, lr}
 800b636:	2300      	movs	r3, #0
 800b638:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800b63c:	8083      	strh	r3, [r0, #4]
 800b63e:	80c3      	strh	r3, [r0, #6]
 800b640:	8103      	strh	r3, [r0, #8]
 800b642:	8143      	strh	r3, [r0, #10]
 800b644:	8183      	strh	r3, [r0, #12]
 800b646:	81c3      	strh	r3, [r0, #14]
 800b648:	8203      	strh	r3, [r0, #16]
 800b64a:	8243      	strh	r3, [r0, #18]
 800b64c:	61c3      	str	r3, [r0, #28]
 800b64e:	8403      	strh	r3, [r0, #32]
 800b650:	8443      	strh	r3, [r0, #34]	; 0x22
 800b652:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800b656:	2501      	movs	r5, #1
 800b658:	4b08      	ldr	r3, [pc, #32]	; (800b67c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800b65a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800b65e:	6003      	str	r3, [r0, #0]
 800b660:	880b      	ldrh	r3, [r1, #0]
 800b662:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b664:	23ff      	movs	r3, #255	; 0xff
 800b666:	4604      	mov	r4, r0
 800b668:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800b66c:	f000 ff31 	bl	800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b670:	4b03      	ldr	r3, [pc, #12]	; (800b680 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800b672:	6023      	str	r3, [r4, #0]
 800b674:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800b678:	4620      	mov	r0, r4
 800b67a:	bd38      	pop	{r3, r4, r5, pc}
 800b67c:	08020674 	.word	0x08020674
 800b680:	08020310 	.word	0x08020310

0800b684 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800b684:	4603      	mov	r3, r0
 800b686:	3026      	adds	r0, #38	; 0x26
 800b688:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800b68c:	b90b      	cbnz	r3, 800b692 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800b68e:	f003 bd07 	b.w	800f0a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800b692:	f003 bd15 	b.w	800f0c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800b698 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800b698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b69c:	4604      	mov	r4, r0
 800b69e:	469b      	mov	fp, r3
 800b6a0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800b6a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b6a8:	f9b1 6000 	ldrsh.w	r6, [r1]
 800b6ac:	8888      	ldrh	r0, [r1, #4]
 800b6ae:	b0b3      	sub	sp, #204	; 0xcc
 800b6b0:	4430      	add	r0, r6
 800b6b2:	b280      	uxth	r0, r0
 800b6b4:	9206      	str	r2, [sp, #24]
 800b6b6:	fa0f fe80 	sxth.w	lr, r0
 800b6ba:	2200      	movs	r2, #0
 800b6bc:	4596      	cmp	lr, r2
 800b6be:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800b6c2:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800b6c6:	9211      	str	r2, [sp, #68]	; 0x44
 800b6c8:	f340 811a 	ble.w	800b900 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800b6cc:	45b4      	cmp	ip, r6
 800b6ce:	f340 8117 	ble.w	800b900 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800b6d2:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b6d6:	88ca      	ldrh	r2, [r1, #6]
 800b6d8:	442a      	add	r2, r5
 800b6da:	b292      	uxth	r2, r2
 800b6dc:	b211      	sxth	r1, r2
 800b6de:	2900      	cmp	r1, #0
 800b6e0:	f340 810e 	ble.w	800b900 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800b6e4:	42ab      	cmp	r3, r5
 800b6e6:	f340 810b 	ble.w	800b900 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800b6ea:	45f4      	cmp	ip, lr
 800b6ec:	bfb8      	it	lt
 800b6ee:	fa1f f08c 	uxthlt.w	r0, ip
 800b6f2:	428b      	cmp	r3, r1
 800b6f4:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800b6f8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800b6fc:	bfb8      	it	lt
 800b6fe:	b29a      	uxthlt	r2, r3
 800b700:	1b80      	subs	r0, r0, r6
 800b702:	1b52      	subs	r2, r2, r5
 800b704:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800b708:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 800b70c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800b710:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 800b714:	ab11      	add	r3, sp, #68	; 0x44
 800b716:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b71a:	6822      	ldr	r2, [r4, #0]
 800b71c:	9307      	str	r3, [sp, #28]
 800b71e:	ad13      	add	r5, sp, #76	; 0x4c
 800b720:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800b722:	e885 0003 	stmia.w	r5, {r0, r1}
 800b726:	4629      	mov	r1, r5
 800b728:	4620      	mov	r0, r4
 800b72a:	4790      	blx	r2
 800b72c:	4621      	mov	r1, r4
 800b72e:	a815      	add	r0, sp, #84	; 0x54
 800b730:	f003 fc17 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b734:	a815      	add	r0, sp, #84	; 0x54
 800b736:	f002 fa5b 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b73a:	9b07      	ldr	r3, [sp, #28]
 800b73c:	1d26      	adds	r6, r4, #4
 800b73e:	4618      	mov	r0, r3
 800b740:	4631      	mov	r1, r6
 800b742:	f002 fa3d 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b746:	4628      	mov	r0, r5
 800b748:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800b74c:	f002 fa50 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b750:	4628      	mov	r0, r5
 800b752:	f005 fd3d 	bl	80111d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 800b756:	9007      	str	r0, [sp, #28]
 800b758:	2800      	cmp	r0, #0
 800b75a:	f000 80ce 	beq.w	800b8fa <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 800b75e:	f8db 2000 	ldr.w	r2, [fp]
 800b762:	9209      	str	r2, [sp, #36]	; 0x24
 800b764:	f8db 2004 	ldr.w	r2, [fp, #4]
 800b768:	920a      	str	r2, [sp, #40]	; 0x28
 800b76a:	f8db 2008 	ldr.w	r2, [fp, #8]
 800b76e:	920b      	str	r2, [sp, #44]	; 0x2c
 800b770:	f8db 200c 	ldr.w	r2, [fp, #12]
 800b774:	920c      	str	r2, [sp, #48]	; 0x30
 800b776:	f8da 2000 	ldr.w	r2, [sl]
 800b77a:	920d      	str	r2, [sp, #52]	; 0x34
 800b77c:	f8da 2004 	ldr.w	r2, [sl, #4]
 800b780:	920e      	str	r2, [sp, #56]	; 0x38
 800b782:	f8da 2008 	ldr.w	r2, [sl, #8]
 800b786:	920f      	str	r2, [sp, #60]	; 0x3c
 800b788:	f8da 200c 	ldr.w	r2, [sl, #12]
 800b78c:	9210      	str	r2, [sp, #64]	; 0x40
 800b78e:	a90d      	add	r1, sp, #52	; 0x34
 800b790:	4632      	mov	r2, r6
 800b792:	a809      	add	r0, sp, #36	; 0x24
 800b794:	f002 f9f8 	bl	800db88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b798:	4632      	mov	r2, r6
 800b79a:	a90e      	add	r1, sp, #56	; 0x38
 800b79c:	a80a      	add	r0, sp, #40	; 0x28
 800b79e:	f002 f9f3 	bl	800db88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b7a2:	4632      	mov	r2, r6
 800b7a4:	a90f      	add	r1, sp, #60	; 0x3c
 800b7a6:	a80b      	add	r0, sp, #44	; 0x2c
 800b7a8:	f002 f9ee 	bl	800db88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b7ac:	4632      	mov	r2, r6
 800b7ae:	a910      	add	r1, sp, #64	; 0x40
 800b7b0:	a80c      	add	r0, sp, #48	; 0x30
 800b7b2:	f002 f9e9 	bl	800db88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b7b6:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800b7ba:	edd7 3a00 	vldr	s7, [r7]
 800b7be:	ed97 5a01 	vldr	s10, [r7, #4]
 800b7c2:	edd9 2a00 	vldr	s5, [r9]
 800b7c6:	ed98 3a00 	vldr	s6, [r8]
 800b7ca:	ed99 4a01 	vldr	s8, [r9, #4]
 800b7ce:	edd8 4a01 	vldr	s9, [r8, #4]
 800b7d2:	edd9 5a02 	vldr	s11, [r9, #8]
 800b7d6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800b7da:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800b7de:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 800b7e2:	eef0 6a67 	vmov.f32	s13, s15
 800b7e6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800b7ea:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 800b7ee:	eeb0 7a67 	vmov.f32	s14, s15
 800b7f2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800b7f6:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 800b7fa:	eeb0 6a67 	vmov.f32	s12, s15
 800b7fe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800b802:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800b806:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 800b80a:	ee16 6a10 	vmov	r6, s12
 800b80e:	eeb0 6a67 	vmov.f32	s12, s15
 800b812:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800b816:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800b81a:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 800b81e:	ee16 0a10 	vmov	r0, s12
 800b822:	eeb0 6a67 	vmov.f32	s12, s15
 800b826:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800b82a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800b82e:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 800b832:	ee16 1a10 	vmov	r1, s12
 800b836:	eeb0 6a67 	vmov.f32	s12, s15
 800b83a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800b83e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800b842:	ee16 2a10 	vmov	r2, s12
 800b846:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800b84a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800b84e:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800b852:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b856:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800b85a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800b85e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800b862:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800b866:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800b86a:	f8d8 b008 	ldr.w	fp, [r8, #8]
 800b86e:	68ff      	ldr	r7, [r7, #12]
 800b870:	9624      	str	r6, [sp, #144]	; 0x90
 800b872:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 800b876:	922d      	str	r2, [sp, #180]	; 0xb4
 800b878:	4a23      	ldr	r2, [pc, #140]	; (800b908 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 800b87a:	9b06      	ldr	r3, [sp, #24]
 800b87c:	8812      	ldrh	r2, [r2, #0]
 800b87e:	9317      	str	r3, [sp, #92]	; 0x5c
 800b880:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800b884:	9b07      	ldr	r3, [sp, #28]
 800b886:	9218      	str	r2, [sp, #96]	; 0x60
 800b888:	4628      	mov	r0, r5
 800b88a:	9319      	str	r3, [sp, #100]	; 0x64
 800b88c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800b890:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800b894:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800b898:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 800b89c:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800b8a0:	9731      	str	r7, [sp, #196]	; 0xc4
 800b8a2:	f005 fcc7 	bl	8011234 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800b8a6:	901a      	str	r0, [sp, #104]	; 0x68
 800b8a8:	4628      	mov	r0, r5
 800b8aa:	f005 fb89 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b8ae:	901b      	str	r0, [sp, #108]	; 0x6c
 800b8b0:	4628      	mov	r0, r5
 800b8b2:	f005 fbbf 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b8b6:	901c      	str	r0, [sp, #112]	; 0x70
 800b8b8:	4628      	mov	r0, r5
 800b8ba:	f005 fb81 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b8be:	4b13      	ldr	r3, [pc, #76]	; (800b90c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 800b8c0:	901d      	str	r0, [sp, #116]	; 0x74
 800b8c2:	681b      	ldr	r3, [r3, #0]
 800b8c4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b8c8:	b10a      	cbz	r2, 800b8ce <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 800b8ca:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800b8cc:	b905      	cbnz	r5, 800b8d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 800b8ce:	689d      	ldr	r5, [r3, #8]
 800b8d0:	682b      	ldr	r3, [r5, #0]
 800b8d2:	4620      	mov	r0, r4
 800b8d4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800b8d6:	f7ff fed5 	bl	800b684 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800b8da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b8de:	9304      	str	r3, [sp, #16]
 800b8e0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b8e4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800b8e8:	ab13      	add	r3, sp, #76	; 0x4c
 800b8ea:	9301      	str	r3, [sp, #4]
 800b8ec:	ab15      	add	r3, sp, #84	; 0x54
 800b8ee:	9300      	str	r3, [sp, #0]
 800b8f0:	aa1e      	add	r2, sp, #120	; 0x78
 800b8f2:	ab19      	add	r3, sp, #100	; 0x64
 800b8f4:	a917      	add	r1, sp, #92	; 0x5c
 800b8f6:	4628      	mov	r0, r5
 800b8f8:	47b0      	blx	r6
 800b8fa:	b033      	add	sp, #204	; 0xcc
 800b8fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b900:	2300      	movs	r3, #0
 800b902:	9312      	str	r3, [sp, #72]	; 0x48
 800b904:	e706      	b.n	800b714 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800b906:	bf00      	nop
 800b908:	20012dbe 	.word	0x20012dbe
 800b90c:	20012dc4 	.word	0x20012dc4

0800b910 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800b910:	b570      	push	{r4, r5, r6, lr}
 800b912:	ed2d 8b04 	vpush	{d8-d9}
 800b916:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800b91a:	b098      	sub	sp, #96	; 0x60
 800b91c:	4604      	mov	r4, r0
 800b91e:	460e      	mov	r6, r1
 800b920:	2b00      	cmp	r3, #0
 800b922:	d065      	beq.n	800b9f0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800b924:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800b928:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800ba0c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800b92c:	ee09 3a10 	vmov	s18, r3
 800b930:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b934:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800b938:	ee08 3a90 	vmov	s17, r3
 800b93c:	4628      	mov	r0, r5
 800b93e:	4b34      	ldr	r3, [pc, #208]	; (800ba10 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800b940:	930c      	str	r3, [sp, #48]	; 0x30
 800b942:	930d      	str	r3, [sp, #52]	; 0x34
 800b944:	930e      	str	r3, [sp, #56]	; 0x38
 800b946:	930f      	str	r3, [sp, #60]	; 0x3c
 800b948:	f005 fb3a 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b94c:	ee07 0a90 	vmov	s15, r0
 800b950:	4628      	mov	r0, r5
 800b952:	eef8 9a67 	vcvt.f32.u32	s19, s15
 800b956:	f005 fb6d 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b95a:	4b2e      	ldr	r3, [pc, #184]	; (800ba14 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800b95c:	781b      	ldrb	r3, [r3, #0]
 800b95e:	ee07 0a90 	vmov	s15, r0
 800b962:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800b966:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800b96a:	2b01      	cmp	r3, #1
 800b96c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800b970:	ee39 9a08 	vadd.f32	s18, s18, s16
 800b974:	ee78 8a88 	vadd.f32	s17, s17, s16
 800b978:	eef0 7a48 	vmov.f32	s15, s16
 800b97c:	d13c      	bne.n	800b9f8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800b97e:	eef0 6a69 	vmov.f32	s13, s19
 800b982:	eeb0 6a47 	vmov.f32	s12, s14
 800b986:	eef0 5a47 	vmov.f32	s11, s14
 800b98a:	ee19 3a90 	vmov	r3, s19
 800b98e:	eeb0 7a48 	vmov.f32	s14, s16
 800b992:	eef0 9a48 	vmov.f32	s19, s16
 800b996:	9314      	str	r3, [sp, #80]	; 0x50
 800b998:	ab14      	add	r3, sp, #80	; 0x50
 800b99a:	9303      	str	r3, [sp, #12]
 800b99c:	ab10      	add	r3, sp, #64	; 0x40
 800b99e:	9302      	str	r3, [sp, #8]
 800b9a0:	ab0c      	add	r3, sp, #48	; 0x30
 800b9a2:	9301      	str	r3, [sp, #4]
 800b9a4:	ab08      	add	r3, sp, #32
 800b9a6:	9300      	str	r3, [sp, #0]
 800b9a8:	2200      	movs	r2, #0
 800b9aa:	ab04      	add	r3, sp, #16
 800b9ac:	4631      	mov	r1, r6
 800b9ae:	4620      	mov	r0, r4
 800b9b0:	edcd 7a04 	vstr	s15, [sp, #16]
 800b9b4:	ed8d 9a05 	vstr	s18, [sp, #20]
 800b9b8:	ed8d 9a06 	vstr	s18, [sp, #24]
 800b9bc:	edcd 7a07 	vstr	s15, [sp, #28]
 800b9c0:	edcd 7a08 	vstr	s15, [sp, #32]
 800b9c4:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800b9c8:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800b9cc:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800b9d0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800b9d4:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800b9d8:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800b9dc:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800b9e0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800b9e4:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800b9e8:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800b9ec:	f7ff fe54 	bl	800b698 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800b9f0:	b018      	add	sp, #96	; 0x60
 800b9f2:	ecbd 8b04 	vpop	{d8-d9}
 800b9f6:	bd70      	pop	{r4, r5, r6, pc}
 800b9f8:	eef0 6a47 	vmov.f32	s13, s14
 800b9fc:	eef0 5a69 	vmov.f32	s11, s19
 800ba00:	eeb0 6a48 	vmov.f32	s12, s16
 800ba04:	ee18 3a10 	vmov	r3, s16
 800ba08:	e7c5      	b.n	800b996 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800ba0a:	bf00      	nop
 800ba0c:	00000000 	.word	0x00000000
 800ba10:	42c80000 	.word	0x42c80000
 800ba14:	20012dbc 	.word	0x20012dbc

0800ba18 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800ba18:	2200      	movs	r2, #0
 800ba1a:	8002      	strh	r2, [r0, #0]
 800ba1c:	8042      	strh	r2, [r0, #2]
 800ba1e:	8082      	strh	r2, [r0, #4]
 800ba20:	80c2      	strh	r2, [r0, #6]
 800ba22:	4770      	bx	lr

0800ba24 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800ba24:	b570      	push	{r4, r5, r6, lr}
 800ba26:	6803      	ldr	r3, [r0, #0]
 800ba28:	4604      	mov	r4, r0
 800ba2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba2c:	4615      	mov	r5, r2
 800ba2e:	4798      	blx	r3
 800ba30:	6823      	ldr	r3, [r4, #0]
 800ba32:	4629      	mov	r1, r5
 800ba34:	4620      	mov	r0, r4
 800ba36:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ba38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba3c:	4718      	bx	r3

0800ba3e <_ZN8touchgfx8TextAreaD1Ev>:
 800ba3e:	4770      	bx	lr

0800ba40 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800ba40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ba42:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ba44:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba48:	4299      	cmp	r1, r3
 800ba4a:	d029      	beq.n	800baa0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800ba4c:	4b15      	ldr	r3, [pc, #84]	; (800baa4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800ba4e:	681b      	ldr	r3, [r3, #0]
 800ba50:	b92b      	cbnz	r3, 800ba5e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800ba52:	4b15      	ldr	r3, [pc, #84]	; (800baa8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800ba54:	4a15      	ldr	r2, [pc, #84]	; (800baac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ba56:	21ae      	movs	r1, #174	; 0xae
 800ba58:	4815      	ldr	r0, [pc, #84]	; (800bab0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800ba5a:	f011 f99d 	bl	801cd98 <__assert_func>
 800ba5e:	4a15      	ldr	r2, [pc, #84]	; (800bab4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800ba60:	8812      	ldrh	r2, [r2, #0]
 800ba62:	428a      	cmp	r2, r1
 800ba64:	d803      	bhi.n	800ba6e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800ba66:	4b14      	ldr	r3, [pc, #80]	; (800bab8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800ba68:	4a10      	ldr	r2, [pc, #64]	; (800baac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800ba6a:	21af      	movs	r1, #175	; 0xaf
 800ba6c:	e7f4      	b.n	800ba58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800ba6e:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800ba72:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800ba76:	4b11      	ldr	r3, [pc, #68]	; (800babc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800ba78:	7854      	ldrb	r4, [r2, #1]
 800ba7a:	681b      	ldr	r3, [r3, #0]
 800ba7c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800ba80:	682b      	ldr	r3, [r5, #0]
 800ba82:	69de      	ldr	r6, [r3, #28]
 800ba84:	4b0e      	ldr	r3, [pc, #56]	; (800bac0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800ba86:	6818      	ldr	r0, [r3, #0]
 800ba88:	f7f8 fe02 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800ba8c:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800ba90:	2300      	movs	r3, #0
 800ba92:	4602      	mov	r2, r0
 800ba94:	9300      	str	r3, [sp, #0]
 800ba96:	4621      	mov	r1, r4
 800ba98:	4628      	mov	r0, r5
 800ba9a:	47b0      	blx	r6
 800ba9c:	b002      	add	sp, #8
 800ba9e:	bd70      	pop	{r4, r5, r6, pc}
 800baa0:	2000      	movs	r0, #0
 800baa2:	e7fb      	b.n	800ba9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800baa4:	20012e14 	.word	0x20012e14
 800baa8:	0801eef0 	.word	0x0801eef0
 800baac:	080203f0 	.word	0x080203f0
 800bab0:	0801ef7e 	.word	0x0801ef7e
 800bab4:	20012e18 	.word	0x20012e18
 800bab8:	0801efa7 	.word	0x0801efa7
 800babc:	20012e1c 	.word	0x20012e1c
 800bac0:	20012e20 	.word	0x20012e20

0800bac4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800bac4:	b570      	push	{r4, r5, r6, lr}
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800baca:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800bacc:	4b11      	ldr	r3, [pc, #68]	; (800bb14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800bace:	681b      	ldr	r3, [r3, #0]
 800bad0:	4604      	mov	r4, r0
 800bad2:	b28d      	uxth	r5, r1
 800bad4:	b92b      	cbnz	r3, 800bae2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800bad6:	4b10      	ldr	r3, [pc, #64]	; (800bb18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800bad8:	4a10      	ldr	r2, [pc, #64]	; (800bb1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800bada:	21ae      	movs	r1, #174	; 0xae
 800badc:	4810      	ldr	r0, [pc, #64]	; (800bb20 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800bade:	f011 f95b 	bl	801cd98 <__assert_func>
 800bae2:	4910      	ldr	r1, [pc, #64]	; (800bb24 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800bae4:	8809      	ldrh	r1, [r1, #0]
 800bae6:	4291      	cmp	r1, r2
 800bae8:	d803      	bhi.n	800baf2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800baea:	4b0f      	ldr	r3, [pc, #60]	; (800bb28 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800baec:	4a0b      	ldr	r2, [pc, #44]	; (800bb1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800baee:	21af      	movs	r1, #175	; 0xaf
 800baf0:	e7f4      	b.n	800badc <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800baf2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800baf6:	4b0d      	ldr	r3, [pc, #52]	; (800bb2c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800baf8:	681b      	ldr	r3, [r3, #0]
 800bafa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800bafe:	6803      	ldr	r3, [r0, #0]
 800bb00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb02:	4798      	blx	r3
 800bb04:	1a29      	subs	r1, r5, r0
 800bb06:	4633      	mov	r3, r6
 800bb08:	4620      	mov	r0, r4
 800bb0a:	b209      	sxth	r1, r1
 800bb0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb10:	4718      	bx	r3
 800bb12:	bf00      	nop
 800bb14:	20012e14 	.word	0x20012e14
 800bb18:	0801eef0 	.word	0x0801eef0
 800bb1c:	080203f0 	.word	0x080203f0
 800bb20:	0801ef7e 	.word	0x0801ef7e
 800bb24:	20012e18 	.word	0x20012e18
 800bb28:	0801efa7 	.word	0x0801efa7
 800bb2c:	20012e1c 	.word	0x20012e1c

0800bb30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800bb30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bb34:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bb36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bb3a:	4293      	cmp	r3, r2
 800bb3c:	b08c      	sub	sp, #48	; 0x30
 800bb3e:	4604      	mov	r4, r0
 800bb40:	4688      	mov	r8, r1
 800bb42:	d05f      	beq.n	800bc04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800bb44:	4e31      	ldr	r6, [pc, #196]	; (800bc0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800bb46:	6832      	ldr	r2, [r6, #0]
 800bb48:	b92a      	cbnz	r2, 800bb56 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800bb4a:	4b31      	ldr	r3, [pc, #196]	; (800bc10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800bb4c:	4a31      	ldr	r2, [pc, #196]	; (800bc14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800bb4e:	21ae      	movs	r1, #174	; 0xae
 800bb50:	4831      	ldr	r0, [pc, #196]	; (800bc18 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800bb52:	f011 f921 	bl	801cd98 <__assert_func>
 800bb56:	4d31      	ldr	r5, [pc, #196]	; (800bc1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800bb58:	8829      	ldrh	r1, [r5, #0]
 800bb5a:	4299      	cmp	r1, r3
 800bb5c:	d803      	bhi.n	800bb66 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800bb5e:	4b30      	ldr	r3, [pc, #192]	; (800bc20 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800bb60:	4a2c      	ldr	r2, [pc, #176]	; (800bc14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800bb62:	21af      	movs	r1, #175	; 0xaf
 800bb64:	e7f4      	b.n	800bb50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800bb66:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800bb6a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bb6e:	4b2d      	ldr	r3, [pc, #180]	; (800bc24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800bb70:	681b      	ldr	r3, [r3, #0]
 800bb72:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800bb76:	2a00      	cmp	r2, #0
 800bb78:	d044      	beq.n	800bc04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800bb7a:	784b      	ldrb	r3, [r1, #1]
 800bb7c:	9207      	str	r2, [sp, #28]
 800bb7e:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800bb82:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bb86:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800bb8a:	4b27      	ldr	r3, [pc, #156]	; (800bc28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800bb8c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800bb90:	681b      	ldr	r3, [r3, #0]
 800bb92:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800bb96:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bb9a:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800bb9e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800bba2:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800bba6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bba8:	f88d a020 	strb.w	sl, [sp, #32]
 800bbac:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800bbb0:	9009      	str	r0, [sp, #36]	; 0x24
 800bbb2:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800bbb6:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800bbba:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800bbbe:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800bbc2:	b10a      	cbz	r2, 800bbc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800bbc4:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800bbc6:	b907      	cbnz	r7, 800bbca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800bbc8:	689f      	ldr	r7, [r3, #8]
 800bbca:	f10d 0914 	add.w	r9, sp, #20
 800bbce:	4621      	mov	r1, r4
 800bbd0:	4648      	mov	r0, r9
 800bbd2:	f003 f9c6 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bbd6:	6833      	ldr	r3, [r6, #0]
 800bbd8:	2b00      	cmp	r3, #0
 800bbda:	d0b6      	beq.n	800bb4a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800bbdc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bbde:	882b      	ldrh	r3, [r5, #0]
 800bbe0:	428b      	cmp	r3, r1
 800bbe2:	d9bc      	bls.n	800bb5e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800bbe4:	4b11      	ldr	r3, [pc, #68]	; (800bc2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800bbe6:	6818      	ldr	r0, [r3, #0]
 800bbe8:	f7f8 fd52 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800bbec:	2300      	movs	r3, #0
 800bbee:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bbf2:	ab07      	add	r3, sp, #28
 800bbf4:	9001      	str	r0, [sp, #4]
 800bbf6:	9300      	str	r3, [sp, #0]
 800bbf8:	e899 0006 	ldmia.w	r9, {r1, r2}
 800bbfc:	4643      	mov	r3, r8
 800bbfe:	4638      	mov	r0, r7
 800bc00:	f7f8 fcf8 	bl	80045f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bc04:	b00c      	add	sp, #48	; 0x30
 800bc06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bc0a:	bf00      	nop
 800bc0c:	20012e14 	.word	0x20012e14
 800bc10:	0801eef0 	.word	0x0801eef0
 800bc14:	080203f0 	.word	0x080203f0
 800bc18:	0801ef7e 	.word	0x0801ef7e
 800bc1c:	20012e18 	.word	0x20012e18
 800bc20:	0801efa7 	.word	0x0801efa7
 800bc24:	20012e1c 	.word	0x20012e1c
 800bc28:	20012dc4 	.word	0x20012dc4
 800bc2c:	20012e20 	.word	0x20012e20

0800bc30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800bc30:	b40e      	push	{r1, r2, r3}
 800bc32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc36:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bc38:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bc3c:	4293      	cmp	r3, r2
 800bc3e:	b09a      	sub	sp, #104	; 0x68
 800bc40:	4605      	mov	r5, r0
 800bc42:	d067      	beq.n	800bd14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800bc44:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800bd28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800bc48:	aa24      	add	r2, sp, #144	; 0x90
 800bc4a:	9202      	str	r2, [sp, #8]
 800bc4c:	f8da 2000 	ldr.w	r2, [sl]
 800bc50:	b92a      	cbnz	r2, 800bc5e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800bc52:	4b31      	ldr	r3, [pc, #196]	; (800bd18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800bc54:	4a31      	ldr	r2, [pc, #196]	; (800bd1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800bc56:	21ae      	movs	r1, #174	; 0xae
 800bc58:	4831      	ldr	r0, [pc, #196]	; (800bd20 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800bc5a:	f011 f89d 	bl	801cd98 <__assert_func>
 800bc5e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800bd2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800bc62:	f8b8 1000 	ldrh.w	r1, [r8]
 800bc66:	4299      	cmp	r1, r3
 800bc68:	d803      	bhi.n	800bc72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800bc6a:	4b2e      	ldr	r3, [pc, #184]	; (800bd24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800bc6c:	4a2b      	ldr	r2, [pc, #172]	; (800bd1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800bc6e:	21af      	movs	r1, #175	; 0xaf
 800bc70:	e7f2      	b.n	800bc58 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800bc72:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800bd30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800bc76:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bc7a:	f8d9 3000 	ldr.w	r3, [r9]
 800bc7e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 800bc82:	6823      	ldr	r3, [r4, #0]
 800bc84:	4620      	mov	r0, r4
 800bc86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bc88:	4798      	blx	r3
 800bc8a:	4607      	mov	r7, r0
 800bc8c:	b206      	sxth	r6, r0
 800bc8e:	a803      	add	r0, sp, #12
 800bc90:	f003 fd9f 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800bc94:	6823      	ldr	r3, [r4, #0]
 800bc96:	4620      	mov	r0, r4
 800bc98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bc9a:	4798      	blx	r3
 800bc9c:	6823      	ldr	r3, [r4, #0]
 800bc9e:	4683      	mov	fp, r0
 800bca0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bca2:	4620      	mov	r0, r4
 800bca4:	4798      	blx	r3
 800bca6:	465b      	mov	r3, fp
 800bca8:	9000      	str	r0, [sp, #0]
 800bcaa:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800bcac:	9a02      	ldr	r2, [sp, #8]
 800bcae:	a803      	add	r0, sp, #12
 800bcb0:	f003 fddc 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bcb4:	f8da 3000 	ldr.w	r3, [sl]
 800bcb8:	f895 1039 	ldrb.w	r1, [r5, #57]	; 0x39
 800bcbc:	2b00      	cmp	r3, #0
 800bcbe:	d0c8      	beq.n	800bc52 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800bcc0:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 800bcc2:	f8b8 0000 	ldrh.w	r0, [r8]
 800bcc6:	4290      	cmp	r0, r2
 800bcc8:	d9cf      	bls.n	800bc6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800bcca:	eb03 0442 	add.w	r4, r3, r2, lsl #1
 800bcce:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800bcd2:	7862      	ldrb	r2, [r4, #1]
 800bcd4:	f8d9 3000 	ldr.w	r3, [r9]
 800bcd8:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800bcdc:	9400      	str	r4, [sp, #0]
 800bcde:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bce2:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800bce6:	a803      	add	r0, sp, #12
 800bce8:	f001 fc58 	bl	800d59c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800bcec:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800bcf0:	18b1      	adds	r1, r6, r2
 800bcf2:	2900      	cmp	r1, #0
 800bcf4:	b203      	sxth	r3, r0
 800bcf6:	dd0b      	ble.n	800bd10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800bcf8:	3b01      	subs	r3, #1
 800bcfa:	fb13 f302 	smulbb	r3, r3, r2
 800bcfe:	fb17 3300 	smlabb	r3, r7, r0, r3
 800bd02:	b21e      	sxth	r6, r3
 800bd04:	4630      	mov	r0, r6
 800bd06:	b01a      	add	sp, #104	; 0x68
 800bd08:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd0c:	b003      	add	sp, #12
 800bd0e:	4770      	bx	lr
 800bd10:	2b00      	cmp	r3, #0
 800bd12:	dcf7      	bgt.n	800bd04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800bd14:	2600      	movs	r6, #0
 800bd16:	e7f5      	b.n	800bd04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800bd18:	0801eef0 	.word	0x0801eef0
 800bd1c:	080203f0 	.word	0x080203f0
 800bd20:	0801ef7e 	.word	0x0801ef7e
 800bd24:	0801efa7 	.word	0x0801efa7
 800bd28:	20012e14 	.word	0x20012e14
 800bd2c:	20012e18 	.word	0x20012e18
 800bd30:	20012e1c 	.word	0x20012e1c

0800bd34 <_ZN8touchgfx8TextAreaD0Ev>:
 800bd34:	b510      	push	{r4, lr}
 800bd36:	213c      	movs	r1, #60	; 0x3c
 800bd38:	4604      	mov	r4, r0
 800bd3a:	f010 ffff 	bl	801cd3c <_ZdlPvj>
 800bd3e:	4620      	mov	r0, r4
 800bd40:	bd10      	pop	{r4, pc}
	...

0800bd44 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800bd44:	b570      	push	{r4, r5, r6, lr}
 800bd46:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bd48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bd4c:	4299      	cmp	r1, r3
 800bd4e:	4604      	mov	r4, r0
 800bd50:	d01e      	beq.n	800bd90 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800bd52:	6803      	ldr	r3, [r0, #0]
 800bd54:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800bd56:	4b0f      	ldr	r3, [pc, #60]	; (800bd94 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	b92b      	cbnz	r3, 800bd68 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800bd5c:	4b0e      	ldr	r3, [pc, #56]	; (800bd98 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800bd5e:	4a0f      	ldr	r2, [pc, #60]	; (800bd9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800bd60:	21ae      	movs	r1, #174	; 0xae
 800bd62:	480f      	ldr	r0, [pc, #60]	; (800bda0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800bd64:	f011 f818 	bl	801cd98 <__assert_func>
 800bd68:	4b0e      	ldr	r3, [pc, #56]	; (800bda4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800bd6a:	881b      	ldrh	r3, [r3, #0]
 800bd6c:	428b      	cmp	r3, r1
 800bd6e:	d803      	bhi.n	800bd78 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800bd70:	4b0d      	ldr	r3, [pc, #52]	; (800bda8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800bd72:	4a0a      	ldr	r2, [pc, #40]	; (800bd9c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800bd74:	21af      	movs	r1, #175	; 0xaf
 800bd76:	e7f4      	b.n	800bd62 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800bd78:	4b0c      	ldr	r3, [pc, #48]	; (800bdac <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800bd7a:	6818      	ldr	r0, [r3, #0]
 800bd7c:	f7f8 fc88 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800bd80:	2300      	movs	r3, #0
 800bd82:	4601      	mov	r1, r0
 800bd84:	46ac      	mov	ip, r5
 800bd86:	4620      	mov	r0, r4
 800bd88:	461a      	mov	r2, r3
 800bd8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd8e:	4760      	bx	ip
 800bd90:	2000      	movs	r0, #0
 800bd92:	bd70      	pop	{r4, r5, r6, pc}
 800bd94:	20012e14 	.word	0x20012e14
 800bd98:	0801eef0 	.word	0x0801eef0
 800bd9c:	080203f0 	.word	0x080203f0
 800bda0:	0801ef7e 	.word	0x0801ef7e
 800bda4:	20012e18 	.word	0x20012e18
 800bda8:	0801efa7 	.word	0x0801efa7
 800bdac:	20012e20 	.word	0x20012e20

0800bdb0 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800bdb0:	b570      	push	{r4, r5, r6, lr}
 800bdb2:	6803      	ldr	r3, [r0, #0]
 800bdb4:	4604      	mov	r4, r0
 800bdb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bdb8:	4615      	mov	r5, r2
 800bdba:	4798      	blx	r3
 800bdbc:	6823      	ldr	r3, [r4, #0]
 800bdbe:	4629      	mov	r1, r5
 800bdc0:	4620      	mov	r0, r4
 800bdc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bdc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdc8:	4718      	bx	r3

0800bdca <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800bdca:	b538      	push	{r3, r4, r5, lr}
 800bdcc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bdce:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bdd2:	429a      	cmp	r2, r3
 800bdd4:	4604      	mov	r4, r0
 800bdd6:	d014      	beq.n	800be02 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800bdd8:	6803      	ldr	r3, [r0, #0]
 800bdda:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bddc:	4798      	blx	r3
 800bdde:	6823      	ldr	r3, [r4, #0]
 800bde0:	4605      	mov	r5, r0
 800bde2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bde4:	4620      	mov	r0, r4
 800bde6:	4798      	blx	r3
 800bde8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bdec:	b22d      	sxth	r5, r5
 800bdee:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bdf2:	4601      	mov	r1, r0
 800bdf4:	bf06      	itte	eq
 800bdf6:	4602      	moveq	r2, r0
 800bdf8:	4629      	moveq	r1, r5
 800bdfa:	462a      	movne	r2, r5
 800bdfc:	4620      	mov	r0, r4
 800bdfe:	f7ff ffd7 	bl	800bdb0 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800be02:	bd38      	pop	{r3, r4, r5, pc}

0800be04 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800be04:	888a      	ldrh	r2, [r1, #4]
 800be06:	8582      	strh	r2, [r0, #44]	; 0x2c
 800be08:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800be0c:	b922      	cbnz	r2, 800be18 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800be0e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800be12:	b90b      	cbnz	r3, 800be18 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 800be14:	f7ff bfd9 	b.w	800bdca <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800be18:	4770      	bx	lr

0800be1a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800be1a:	2300      	movs	r3, #0
 800be1c:	8083      	strh	r3, [r0, #4]
 800be1e:	80c3      	strh	r3, [r0, #6]
 800be20:	8003      	strh	r3, [r0, #0]
 800be22:	8043      	strh	r3, [r0, #2]
 800be24:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800be28:	2bff      	cmp	r3, #255	; 0xff
 800be2a:	bf01      	itttt	eq
 800be2c:	890b      	ldrheq	r3, [r1, #8]
 800be2e:	8083      	strheq	r3, [r0, #4]
 800be30:	894b      	ldrheq	r3, [r1, #10]
 800be32:	80c3      	strheq	r3, [r0, #6]
 800be34:	4770      	bx	lr
	...

0800be38 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800be38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800be3a:	4604      	mov	r4, r0
 800be3c:	6808      	ldr	r0, [r1, #0]
 800be3e:	6849      	ldr	r1, [r1, #4]
 800be40:	466b      	mov	r3, sp
 800be42:	c303      	stmia	r3!, {r0, r1}
 800be44:	6823      	ldr	r3, [r4, #0]
 800be46:	4669      	mov	r1, sp
 800be48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800be4a:	4620      	mov	r0, r4
 800be4c:	4798      	blx	r3
 800be4e:	4b08      	ldr	r3, [pc, #32]	; (800be70 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800be50:	681b      	ldr	r3, [r3, #0]
 800be52:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800be56:	b10a      	cbz	r2, 800be5c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800be58:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800be5a:	b900      	cbnz	r0, 800be5e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800be5c:	6898      	ldr	r0, [r3, #8]
 800be5e:	6803      	ldr	r3, [r0, #0]
 800be60:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800be62:	699d      	ldr	r5, [r3, #24]
 800be64:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800be68:	4669      	mov	r1, sp
 800be6a:	47a8      	blx	r5
 800be6c:	b003      	add	sp, #12
 800be6e:	bd30      	pop	{r4, r5, pc}
 800be70:	20012dc4 	.word	0x20012dc4

0800be74 <_ZN8touchgfx3BoxD1Ev>:
 800be74:	4770      	bx	lr

0800be76 <_ZN8touchgfx3BoxD0Ev>:
 800be76:	b510      	push	{r4, lr}
 800be78:	212c      	movs	r1, #44	; 0x2c
 800be7a:	4604      	mov	r4, r0
 800be7c:	f010 ff5e 	bl	801cd3c <_ZdlPvj>
 800be80:	4620      	mov	r0, r4
 800be82:	bd10      	pop	{r4, pc}

0800be84 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800be84:	b570      	push	{r4, r5, r6, lr}
 800be86:	880b      	ldrh	r3, [r1, #0]
 800be88:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800be8a:	4605      	mov	r5, r0
 800be8c:	8813      	ldrh	r3, [r2, #0]
 800be8e:	f825 3f30 	strh.w	r3, [r5, #48]!
 800be92:	4604      	mov	r4, r0
 800be94:	4628      	mov	r0, r5
 800be96:	f005 f893 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800be9a:	4606      	mov	r6, r0
 800be9c:	4628      	mov	r0, r5
 800be9e:	f005 f8c9 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bea2:	6823      	ldr	r3, [r4, #0]
 800bea4:	4605      	mov	r5, r0
 800bea6:	b231      	sxth	r1, r6
 800bea8:	4620      	mov	r0, r4
 800beaa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800beac:	4798      	blx	r3
 800beae:	6823      	ldr	r3, [r4, #0]
 800beb0:	b229      	sxth	r1, r5
 800beb2:	4620      	mov	r0, r4
 800beb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800beb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800beba:	4718      	bx	r3

0800bebc <_ZNK8touchgfx6Button12getSolidRectEv>:
 800bebc:	b510      	push	{r4, lr}
 800bebe:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800bec2:	2bff      	cmp	r3, #255	; 0xff
 800bec4:	4604      	mov	r4, r0
 800bec6:	d006      	beq.n	800bed6 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800bec8:	2300      	movs	r3, #0
 800beca:	8003      	strh	r3, [r0, #0]
 800becc:	8043      	strh	r3, [r0, #2]
 800bece:	8083      	strh	r3, [r0, #4]
 800bed0:	80c3      	strh	r3, [r0, #6]
 800bed2:	4620      	mov	r0, r4
 800bed4:	bd10      	pop	{r4, pc}
 800bed6:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800beda:	b11b      	cbz	r3, 800bee4 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800bedc:	3130      	adds	r1, #48	; 0x30
 800bede:	f005 f8e3 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800bee2:	e7f6      	b.n	800bed2 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800bee4:	312e      	adds	r1, #46	; 0x2e
 800bee6:	e7fa      	b.n	800bede <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800bee8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800bee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800beec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bef0:	b08a      	sub	sp, #40	; 0x28
 800bef2:	4604      	mov	r4, r0
 800bef4:	4688      	mov	r8, r1
 800bef6:	2b00      	cmp	r3, #0
 800bef8:	d044      	beq.n	800bf84 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800befa:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800befc:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bf00:	a805      	add	r0, sp, #20
 800bf02:	f005 f85d 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf06:	4605      	mov	r5, r0
 800bf08:	b206      	sxth	r6, r0
 800bf0a:	a805      	add	r0, sp, #20
 800bf0c:	f005 f892 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf10:	f9b8 2000 	ldrsh.w	r2, [r8]
 800bf14:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800bf18:	4417      	add	r7, r2
 800bf1a:	b2bf      	uxth	r7, r7
 800bf1c:	2300      	movs	r3, #0
 800bf1e:	fa0f fe87 	sxth.w	lr, r7
 800bf22:	459e      	cmp	lr, r3
 800bf24:	fa0f fc80 	sxth.w	ip, r0
 800bf28:	9306      	str	r3, [sp, #24]
 800bf2a:	dd2d      	ble.n	800bf88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800bf2c:	4296      	cmp	r6, r2
 800bf2e:	dd2b      	ble.n	800bf88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800bf30:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800bf34:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800bf38:	4419      	add	r1, r3
 800bf3a:	b289      	uxth	r1, r1
 800bf3c:	fa0f f881 	sxth.w	r8, r1
 800bf40:	f1b8 0f00 	cmp.w	r8, #0
 800bf44:	dd20      	ble.n	800bf88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800bf46:	459c      	cmp	ip, r3
 800bf48:	dd1e      	ble.n	800bf88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800bf4a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800bf4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800bf52:	4576      	cmp	r6, lr
 800bf54:	bfa8      	it	ge
 800bf56:	463d      	movge	r5, r7
 800bf58:	45c4      	cmp	ip, r8
 800bf5a:	bfa8      	it	ge
 800bf5c:	4608      	movge	r0, r1
 800bf5e:	1aad      	subs	r5, r5, r2
 800bf60:	1ac0      	subs	r0, r0, r3
 800bf62:	f8ad 501c 	strh.w	r5, [sp, #28]
 800bf66:	f8ad 001e 	strh.w	r0, [sp, #30]
 800bf6a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800bf6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bf72:	4b1f      	ldr	r3, [pc, #124]	; (800bff0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800bf74:	681b      	ldr	r3, [r3, #0]
 800bf76:	b953      	cbnz	r3, 800bf8e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800bf78:	4b1e      	ldr	r3, [pc, #120]	; (800bff4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800bf7a:	4a1f      	ldr	r2, [pc, #124]	; (800bff8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800bf7c:	481f      	ldr	r0, [pc, #124]	; (800bffc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800bf7e:	2187      	movs	r1, #135	; 0x87
 800bf80:	f010 ff0a 	bl	801cd98 <__assert_func>
 800bf84:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800bf86:	e7b9      	b.n	800befc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800bf88:	2300      	movs	r3, #0
 800bf8a:	9307      	str	r3, [sp, #28]
 800bf8c:	e7f1      	b.n	800bf72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800bf8e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800bf92:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf96:	429a      	cmp	r2, r3
 800bf98:	d026      	beq.n	800bfe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800bf9a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800bf9e:	2b00      	cmp	r3, #0
 800bfa0:	dd22      	ble.n	800bfe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800bfa2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800bfa6:	2b00      	cmp	r3, #0
 800bfa8:	dd1e      	ble.n	800bfe8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800bfaa:	2300      	movs	r3, #0
 800bfac:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800bfb0:	6823      	ldr	r3, [r4, #0]
 800bfb2:	a908      	add	r1, sp, #32
 800bfb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bfb6:	4620      	mov	r0, r4
 800bfb8:	4798      	blx	r3
 800bfba:	4b11      	ldr	r3, [pc, #68]	; (800c000 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800bfbc:	681b      	ldr	r3, [r3, #0]
 800bfbe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bfc2:	b10a      	cbz	r2, 800bfc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800bfc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800bfc6:	b900      	cbnz	r0, 800bfca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800bfc8:	6898      	ldr	r0, [r3, #8]
 800bfca:	6801      	ldr	r1, [r0, #0]
 800bfcc:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800bfd0:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800bfd4:	2501      	movs	r5, #1
 800bfd6:	9502      	str	r5, [sp, #8]
 800bfd8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800bfdc:	9401      	str	r4, [sp, #4]
 800bfde:	ac06      	add	r4, sp, #24
 800bfe0:	9400      	str	r4, [sp, #0]
 800bfe2:	688c      	ldr	r4, [r1, #8]
 800bfe4:	a905      	add	r1, sp, #20
 800bfe6:	47a0      	blx	r4
 800bfe8:	b00a      	add	sp, #40	; 0x28
 800bfea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfee:	bf00      	nop
 800bff0:	20012e4c 	.word	0x20012e4c
 800bff4:	0801f4d0 	.word	0x0801f4d0
 800bff8:	08020484 	.word	0x08020484
 800bffc:	0801f55d 	.word	0x0801f55d
 800c000:	20012dc4 	.word	0x20012dc4

0800c004 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800c004:	4770      	bx	lr
	...

0800c008 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800c008:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c00a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c00c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c010:	4299      	cmp	r1, r3
 800c012:	4606      	mov	r6, r0
 800c014:	d02a      	beq.n	800c06c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800c016:	4b16      	ldr	r3, [pc, #88]	; (800c070 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	b92b      	cbnz	r3, 800c028 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800c01c:	4b15      	ldr	r3, [pc, #84]	; (800c074 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800c01e:	4a16      	ldr	r2, [pc, #88]	; (800c078 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800c020:	21ae      	movs	r1, #174	; 0xae
 800c022:	4816      	ldr	r0, [pc, #88]	; (800c07c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800c024:	f010 feb8 	bl	801cd98 <__assert_func>
 800c028:	4a15      	ldr	r2, [pc, #84]	; (800c080 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800c02a:	8812      	ldrh	r2, [r2, #0]
 800c02c:	428a      	cmp	r2, r1
 800c02e:	d803      	bhi.n	800c038 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800c030:	4b14      	ldr	r3, [pc, #80]	; (800c084 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800c032:	4a11      	ldr	r2, [pc, #68]	; (800c078 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800c034:	21af      	movs	r1, #175	; 0xaf
 800c036:	e7f4      	b.n	800c022 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800c038:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c03c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c040:	4b11      	ldr	r3, [pc, #68]	; (800c088 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800c042:	7854      	ldrb	r4, [r2, #1]
 800c044:	681b      	ldr	r3, [r3, #0]
 800c046:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800c04a:	682b      	ldr	r3, [r5, #0]
 800c04c:	69df      	ldr	r7, [r3, #28]
 800c04e:	4b0f      	ldr	r3, [pc, #60]	; (800c08c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800c050:	6818      	ldr	r0, [r3, #0]
 800c052:	f7f8 fb1d 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800c056:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800c05a:	2300      	movs	r3, #0
 800c05c:	9300      	str	r3, [sp, #0]
 800c05e:	4602      	mov	r2, r0
 800c060:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800c062:	4621      	mov	r1, r4
 800c064:	4628      	mov	r0, r5
 800c066:	47b8      	blx	r7
 800c068:	b003      	add	sp, #12
 800c06a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c06c:	2000      	movs	r0, #0
 800c06e:	e7fb      	b.n	800c068 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800c070:	20012e14 	.word	0x20012e14
 800c074:	0801eef0 	.word	0x0801eef0
 800c078:	08020530 	.word	0x08020530
 800c07c:	0801ef7e 	.word	0x0801ef7e
 800c080:	20012e18 	.word	0x20012e18
 800c084:	0801efa7 	.word	0x0801efa7
 800c088:	20012e1c 	.word	0x20012e1c
 800c08c:	20012e20 	.word	0x20012e20

0800c090 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800c090:	b570      	push	{r4, r5, r6, lr}
 800c092:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c094:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c098:	4299      	cmp	r1, r3
 800c09a:	4604      	mov	r4, r0
 800c09c:	d01e      	beq.n	800c0dc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800c09e:	6803      	ldr	r3, [r0, #0]
 800c0a0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800c0a2:	4b0f      	ldr	r3, [pc, #60]	; (800c0e0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800c0a4:	681b      	ldr	r3, [r3, #0]
 800c0a6:	b92b      	cbnz	r3, 800c0b4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800c0a8:	4b0e      	ldr	r3, [pc, #56]	; (800c0e4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800c0aa:	4a0f      	ldr	r2, [pc, #60]	; (800c0e8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800c0ac:	21ae      	movs	r1, #174	; 0xae
 800c0ae:	480f      	ldr	r0, [pc, #60]	; (800c0ec <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800c0b0:	f010 fe72 	bl	801cd98 <__assert_func>
 800c0b4:	4b0e      	ldr	r3, [pc, #56]	; (800c0f0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800c0b6:	881b      	ldrh	r3, [r3, #0]
 800c0b8:	428b      	cmp	r3, r1
 800c0ba:	d803      	bhi.n	800c0c4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800c0bc:	4b0d      	ldr	r3, [pc, #52]	; (800c0f4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800c0be:	4a0a      	ldr	r2, [pc, #40]	; (800c0e8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800c0c0:	21af      	movs	r1, #175	; 0xaf
 800c0c2:	e7f4      	b.n	800c0ae <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800c0c4:	4b0c      	ldr	r3, [pc, #48]	; (800c0f8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800c0c6:	6818      	ldr	r0, [r3, #0]
 800c0c8:	f7f8 fae2 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800c0cc:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800c0ce:	4601      	mov	r1, r0
 800c0d0:	46ac      	mov	ip, r5
 800c0d2:	4620      	mov	r0, r4
 800c0d4:	2300      	movs	r3, #0
 800c0d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0da:	4760      	bx	ip
 800c0dc:	2000      	movs	r0, #0
 800c0de:	bd70      	pop	{r4, r5, r6, pc}
 800c0e0:	20012e14 	.word	0x20012e14
 800c0e4:	0801eef0 	.word	0x0801eef0
 800c0e8:	08020530 	.word	0x08020530
 800c0ec:	0801ef7e 	.word	0x0801ef7e
 800c0f0:	20012e18 	.word	0x20012e18
 800c0f4:	0801efa7 	.word	0x0801efa7
 800c0f8:	20012e20 	.word	0x20012e20

0800c0fc <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800c0fc:	b510      	push	{r4, lr}
 800c0fe:	2140      	movs	r1, #64	; 0x40
 800c100:	4604      	mov	r4, r0
 800c102:	f010 fe1b 	bl	801cd3c <_ZdlPvj>
 800c106:	4620      	mov	r0, r4
 800c108:	bd10      	pop	{r4, pc}
	...

0800c10c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800c10c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c110:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800c112:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c116:	4293      	cmp	r3, r2
 800c118:	b08c      	sub	sp, #48	; 0x30
 800c11a:	4604      	mov	r4, r0
 800c11c:	460e      	mov	r6, r1
 800c11e:	d05d      	beq.n	800c1dc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800c120:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800c200 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800c124:	f8d8 2000 	ldr.w	r2, [r8]
 800c128:	b92a      	cbnz	r2, 800c136 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800c12a:	4b2e      	ldr	r3, [pc, #184]	; (800c1e4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800c12c:	4a2e      	ldr	r2, [pc, #184]	; (800c1e8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800c12e:	21ae      	movs	r1, #174	; 0xae
 800c130:	482e      	ldr	r0, [pc, #184]	; (800c1ec <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800c132:	f010 fe31 	bl	801cd98 <__assert_func>
 800c136:	4f2e      	ldr	r7, [pc, #184]	; (800c1f0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800c138:	8839      	ldrh	r1, [r7, #0]
 800c13a:	4299      	cmp	r1, r3
 800c13c:	d803      	bhi.n	800c146 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800c13e:	4b2d      	ldr	r3, [pc, #180]	; (800c1f4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800c140:	4a29      	ldr	r2, [pc, #164]	; (800c1e8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800c142:	21af      	movs	r1, #175	; 0xaf
 800c144:	e7f4      	b.n	800c130 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800c146:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800c14a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c14e:	4b2a      	ldr	r3, [pc, #168]	; (800c1f8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800c150:	681b      	ldr	r3, [r3, #0]
 800c152:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800c156:	2a00      	cmp	r2, #0
 800c158:	d040      	beq.n	800c1dc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800c15a:	784b      	ldrb	r3, [r1, #1]
 800c15c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800c160:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800c164:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800c168:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 800c16c:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800c170:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c172:	9207      	str	r2, [sp, #28]
 800c174:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800c178:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c17c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800c180:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 800c184:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800c188:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800c18c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800c190:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800c194:	f88d a020 	strb.w	sl, [sp, #32]
 800c198:	9009      	str	r0, [sp, #36]	; 0x24
 800c19a:	f7fe fc1d 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800c19e:	ad05      	add	r5, sp, #20
 800c1a0:	4681      	mov	r9, r0
 800c1a2:	4621      	mov	r1, r4
 800c1a4:	4628      	mov	r0, r5
 800c1a6:	f002 fedc 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c1aa:	f8d8 3000 	ldr.w	r3, [r8]
 800c1ae:	2b00      	cmp	r3, #0
 800c1b0:	d0bb      	beq.n	800c12a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800c1b2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c1b4:	883b      	ldrh	r3, [r7, #0]
 800c1b6:	428b      	cmp	r3, r1
 800c1b8:	d9c1      	bls.n	800c13e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800c1ba:	4b10      	ldr	r3, [pc, #64]	; (800c1fc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800c1bc:	6818      	ldr	r0, [r3, #0]
 800c1be:	f7f8 fa67 	bl	8004690 <_ZNK8touchgfx5Texts7getTextEt>
 800c1c2:	2300      	movs	r3, #0
 800c1c4:	9303      	str	r3, [sp, #12]
 800c1c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c1c8:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800c1cc:	ab07      	add	r3, sp, #28
 800c1ce:	9300      	str	r3, [sp, #0]
 800c1d0:	e895 0006 	ldmia.w	r5, {r1, r2}
 800c1d4:	4633      	mov	r3, r6
 800c1d6:	4648      	mov	r0, r9
 800c1d8:	f7f8 fa0c 	bl	80045f4 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c1dc:	b00c      	add	sp, #48	; 0x30
 800c1de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c1e2:	bf00      	nop
 800c1e4:	0801eef0 	.word	0x0801eef0
 800c1e8:	08020530 	.word	0x08020530
 800c1ec:	0801ef7e 	.word	0x0801ef7e
 800c1f0:	20012e18 	.word	0x20012e18
 800c1f4:	0801efa7 	.word	0x0801efa7
 800c1f8:	20012e1c 	.word	0x20012e1c
 800c1fc:	20012e20 	.word	0x20012e20
 800c200:	20012e14 	.word	0x20012e14

0800c204 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800c204:	4770      	bx	lr

0800c206 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800c206:	b510      	push	{r4, lr}
 800c208:	2134      	movs	r1, #52	; 0x34
 800c20a:	4604      	mov	r4, r0
 800c20c:	f010 fd96 	bl	801cd3c <_ZdlPvj>
 800c210:	4620      	mov	r0, r4
 800c212:	bd10      	pop	{r4, pc}

0800c214 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800c214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c218:	4604      	mov	r4, r0
 800c21a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c21c:	8962      	ldrh	r2, [r4, #10]
 800c21e:	b218      	sxth	r0, r3
 800c220:	460e      	mov	r6, r1
 800c222:	005b      	lsls	r3, r3, #1
 800c224:	8921      	ldrh	r1, [r4, #8]
 800c226:	b29b      	uxth	r3, r3
 800c228:	1ac9      	subs	r1, r1, r3
 800c22a:	b08e      	sub	sp, #56	; 0x38
 800c22c:	b209      	sxth	r1, r1
 800c22e:	1ad3      	subs	r3, r2, r3
 800c230:	b21b      	sxth	r3, r3
 800c232:	2900      	cmp	r1, #0
 800c234:	f8ad 0000 	strh.w	r0, [sp]
 800c238:	f8ad 0002 	strh.w	r0, [sp, #2]
 800c23c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c240:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c244:	dd5e      	ble.n	800c304 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c246:	2b00      	cmp	r3, #0
 800c248:	dd5c      	ble.n	800c304 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c24a:	6830      	ldr	r0, [r6, #0]
 800c24c:	6871      	ldr	r1, [r6, #4]
 800c24e:	ab02      	add	r3, sp, #8
 800c250:	c303      	stmia	r3!, {r0, r1}
 800c252:	4669      	mov	r1, sp
 800c254:	a802      	add	r0, sp, #8
 800c256:	f7fe f8e7 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800c25a:	4620      	mov	r0, r4
 800c25c:	a902      	add	r1, sp, #8
 800c25e:	f7ff fdeb 	bl	800be38 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800c262:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800c264:	2800      	cmp	r0, #0
 800c266:	d05f      	beq.n	800c328 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c268:	8963      	ldrh	r3, [r4, #10]
 800c26a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c26e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c272:	1a1f      	subs	r7, r3, r0
 800c274:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800c278:	b202      	sxth	r2, r0
 800c27a:	2500      	movs	r5, #0
 800c27c:	b21b      	sxth	r3, r3
 800c27e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c282:	1a09      	subs	r1, r1, r0
 800c284:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800c288:	9506      	str	r5, [sp, #24]
 800c28a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800c28e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800c292:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c296:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800c29a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800c29e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c2a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c2a6:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800c2aa:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c2ae:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c2b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c2b6:	af04      	add	r7, sp, #16
 800c2b8:	ab06      	add	r3, sp, #24
 800c2ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c2be:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c2c2:	e887 0003 	stmia.w	r7, {r0, r1}
 800c2c6:	4631      	mov	r1, r6
 800c2c8:	4638      	mov	r0, r7
 800c2ca:	f7fe f8ad 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800c2ce:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	dd12      	ble.n	800c2fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c2d6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c2da:	2b00      	cmp	r3, #0
 800c2dc:	dd0e      	ble.n	800c2fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c2de:	6823      	ldr	r3, [r4, #0]
 800c2e0:	4639      	mov	r1, r7
 800c2e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c2e4:	4620      	mov	r0, r4
 800c2e6:	4798      	blx	r3
 800c2e8:	f7fe fb76 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800c2ec:	6803      	ldr	r3, [r0, #0]
 800c2ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c2f0:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800c2f4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2f8:	4639      	mov	r1, r7
 800c2fa:	47c0      	blx	r8
 800c2fc:	3501      	adds	r5, #1
 800c2fe:	2d04      	cmp	r5, #4
 800c300:	d1da      	bne.n	800c2b8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800c302:	e011      	b.n	800c328 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c304:	6830      	ldr	r0, [r6, #0]
 800c306:	6871      	ldr	r1, [r6, #4]
 800c308:	ab06      	add	r3, sp, #24
 800c30a:	c303      	stmia	r3!, {r0, r1}
 800c30c:	6823      	ldr	r3, [r4, #0]
 800c30e:	a906      	add	r1, sp, #24
 800c310:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c312:	4620      	mov	r0, r4
 800c314:	4798      	blx	r3
 800c316:	f7fe fb5f 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 800c31a:	6803      	ldr	r3, [r0, #0]
 800c31c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c31e:	699d      	ldr	r5, [r3, #24]
 800c320:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c324:	a906      	add	r1, sp, #24
 800c326:	47a8      	blx	r5
 800c328:	b00e      	add	sp, #56	; 0x38
 800c32a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c32e <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800c32e:	4770      	bx	lr

0800c330 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800c330:	b510      	push	{r4, lr}
 800c332:	213c      	movs	r1, #60	; 0x3c
 800c334:	4604      	mov	r4, r0
 800c336:	f010 fd01 	bl	801cd3c <_ZdlPvj>
 800c33a:	4620      	mov	r0, r4
 800c33c:	bd10      	pop	{r4, pc}

0800c33e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800c33e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c342:	461c      	mov	r4, r3
 800c344:	4606      	mov	r6, r0
 800c346:	9f06      	ldr	r7, [sp, #24]
 800c348:	f7ff fd9c 	bl	800be84 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800c34c:	8823      	ldrh	r3, [r4, #0]
 800c34e:	86b3      	strh	r3, [r6, #52]	; 0x34
 800c350:	883b      	ldrh	r3, [r7, #0]
 800c352:	86f3      	strh	r3, [r6, #54]	; 0x36
 800c354:	4638      	mov	r0, r7
 800c356:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800c35a:	f004 fe31 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c35e:	f04f 0802 	mov.w	r8, #2
 800c362:	fb95 f5f8 	sdiv	r5, r5, r8
 800c366:	b2ad      	uxth	r5, r5
 800c368:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 800c36c:	8730      	strh	r0, [r6, #56]	; 0x38
 800c36e:	4638      	mov	r0, r7
 800c370:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800c374:	fb94 f4f8 	sdiv	r4, r4, r8
 800c378:	f004 fe5c 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c37c:	b2a4      	uxth	r4, r4
 800c37e:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 800c382:	8770      	strh	r0, [r6, #58]	; 0x3a
 800c384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c388 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800c388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c38c:	4604      	mov	r4, r0
 800c38e:	b08c      	sub	sp, #48	; 0x30
 800c390:	460d      	mov	r5, r1
 800c392:	f7ff fda9 	bl	800bee8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c396:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c39a:	b33b      	cbz	r3, 800c3ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 800c39c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c39e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c3a2:	a805      	add	r0, sp, #20
 800c3a4:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800c3a8:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800c3ac:	f004 fe08 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c3b0:	4606      	mov	r6, r0
 800c3b2:	a805      	add	r0, sp, #20
 800c3b4:	f004 fe3e 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c3b8:	6869      	ldr	r1, [r5, #4]
 800c3ba:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c3be:	6828      	ldr	r0, [r5, #0]
 800c3c0:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c3c4:	ab08      	add	r3, sp, #32
 800c3c6:	ad08      	add	r5, sp, #32
 800c3c8:	c303      	stmia	r3!, {r0, r1}
 800c3ca:	a906      	add	r1, sp, #24
 800c3cc:	4628      	mov	r0, r5
 800c3ce:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c3d2:	f8ad 601c 	strh.w	r6, [sp, #28]
 800c3d6:	f7fe f827 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800c3da:	4b25      	ldr	r3, [pc, #148]	; (800c470 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 800c3dc:	681b      	ldr	r3, [r3, #0]
 800c3de:	b93b      	cbnz	r3, 800c3f0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 800c3e0:	4b24      	ldr	r3, [pc, #144]	; (800c474 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 800c3e2:	4a25      	ldr	r2, [pc, #148]	; (800c478 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 800c3e4:	4825      	ldr	r0, [pc, #148]	; (800c47c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 800c3e6:	2187      	movs	r1, #135	; 0x87
 800c3e8:	f010 fcd6 	bl	801cd98 <__assert_func>
 800c3ec:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c3ee:	e7d6      	b.n	800c39e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 800c3f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c3f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c3f8:	429a      	cmp	r2, r3
 800c3fa:	d035      	beq.n	800c468 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c3fc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800c400:	2b00      	cmp	r3, #0
 800c402:	dd31      	ble.n	800c468 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c404:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800c408:	2b00      	cmp	r3, #0
 800c40a:	dd2d      	ble.n	800c468 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800c40c:	2300      	movs	r3, #0
 800c40e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800c412:	6823      	ldr	r3, [r4, #0]
 800c414:	a90a      	add	r1, sp, #40	; 0x28
 800c416:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c418:	4620      	mov	r0, r4
 800c41a:	4798      	blx	r3
 800c41c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c420:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800c422:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800c426:	1a9b      	subs	r3, r3, r2
 800c428:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c42c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800c42e:	1ac9      	subs	r1, r1, r3
 800c430:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800c434:	4912      	ldr	r1, [pc, #72]	; (800c480 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 800c436:	6809      	ldr	r1, [r1, #0]
 800c438:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800c43c:	b108      	cbz	r0, 800c442 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 800c43e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800c440:	b900      	cbnz	r0, 800c444 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 800c442:	6888      	ldr	r0, [r1, #8]
 800c444:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800c448:	440b      	add	r3, r1
 800c44a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800c44e:	2601      	movs	r6, #1
 800c450:	440a      	add	r2, r1
 800c452:	6801      	ldr	r1, [r0, #0]
 800c454:	9602      	str	r6, [sp, #8]
 800c456:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c45a:	e9cd 5400 	strd	r5, r4, [sp]
 800c45e:	b21b      	sxth	r3, r3
 800c460:	688c      	ldr	r4, [r1, #8]
 800c462:	b212      	sxth	r2, r2
 800c464:	a905      	add	r1, sp, #20
 800c466:	47a0      	blx	r4
 800c468:	b00c      	add	sp, #48	; 0x30
 800c46a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c46e:	bf00      	nop
 800c470:	20012e4c 	.word	0x20012e4c
 800c474:	0801f4d0 	.word	0x0801f4d0
 800c478:	08020638 	.word	0x08020638
 800c47c:	0801f55d 	.word	0x0801f55d
 800c480:	20012dc4 	.word	0x20012dc4

0800c484 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800c484:	b510      	push	{r4, lr}
 800c486:	2101      	movs	r1, #1
 800c488:	2200      	movs	r2, #0
 800c48a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c48e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800c492:	4c0e      	ldr	r4, [pc, #56]	; (800c4cc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800c494:	8082      	strh	r2, [r0, #4]
 800c496:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c49a:	80c2      	strh	r2, [r0, #6]
 800c49c:	8102      	strh	r2, [r0, #8]
 800c49e:	8142      	strh	r2, [r0, #10]
 800c4a0:	8182      	strh	r2, [r0, #12]
 800c4a2:	81c2      	strh	r2, [r0, #14]
 800c4a4:	8202      	strh	r2, [r0, #16]
 800c4a6:	8242      	strh	r2, [r0, #18]
 800c4a8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c4ac:	61c2      	str	r2, [r0, #28]
 800c4ae:	8402      	strh	r2, [r0, #32]
 800c4b0:	8442      	strh	r2, [r0, #34]	; 0x22
 800c4b2:	6282      	str	r2, [r0, #40]	; 0x28
 800c4b4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800c4b8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c4ba:	8601      	strh	r1, [r0, #48]	; 0x30
 800c4bc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800c4c0:	6004      	str	r4, [r0, #0]
 800c4c2:	8681      	strh	r1, [r0, #52]	; 0x34
 800c4c4:	86c1      	strh	r1, [r0, #54]	; 0x36
 800c4c6:	8702      	strh	r2, [r0, #56]	; 0x38
 800c4c8:	8742      	strh	r2, [r0, #58]	; 0x3a
 800c4ca:	bd10      	pop	{r4, pc}
 800c4cc:	080205cc 	.word	0x080205cc

0800c4d0 <_ZN8touchgfx5ImageD1Ev>:
 800c4d0:	4770      	bx	lr

0800c4d2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c4d2:	b570      	push	{r4, r5, r6, lr}
 800c4d4:	880b      	ldrh	r3, [r1, #0]
 800c4d6:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c4d8:	4604      	mov	r4, r0
 800c4da:	4608      	mov	r0, r1
 800c4dc:	460d      	mov	r5, r1
 800c4de:	f004 fd6f 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c4e2:	4606      	mov	r6, r0
 800c4e4:	4628      	mov	r0, r5
 800c4e6:	f004 fda5 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c4ea:	6823      	ldr	r3, [r4, #0]
 800c4ec:	4605      	mov	r5, r0
 800c4ee:	b231      	sxth	r1, r6
 800c4f0:	4620      	mov	r0, r4
 800c4f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4f4:	4798      	blx	r3
 800c4f6:	6823      	ldr	r3, [r4, #0]
 800c4f8:	b229      	sxth	r1, r5
 800c4fa:	4620      	mov	r0, r4
 800c4fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c4fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c502:	4718      	bx	r3

0800c504 <_ZN8touchgfx5ImageD0Ev>:
 800c504:	b510      	push	{r4, lr}
 800c506:	212c      	movs	r1, #44	; 0x2c
 800c508:	4604      	mov	r4, r0
 800c50a:	f010 fc17 	bl	801cd3c <_ZdlPvj>
 800c50e:	4620      	mov	r0, r4
 800c510:	bd10      	pop	{r4, pc}

0800c512 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c512:	b510      	push	{r4, lr}
 800c514:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c518:	2bff      	cmp	r3, #255	; 0xff
 800c51a:	4604      	mov	r4, r0
 800c51c:	d006      	beq.n	800c52c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c51e:	2300      	movs	r3, #0
 800c520:	8003      	strh	r3, [r0, #0]
 800c522:	8043      	strh	r3, [r0, #2]
 800c524:	8083      	strh	r3, [r0, #4]
 800c526:	80c3      	strh	r3, [r0, #6]
 800c528:	4620      	mov	r0, r4
 800c52a:	bd10      	pop	{r4, pc}
 800c52c:	3126      	adds	r1, #38	; 0x26
 800c52e:	f004 fdbb 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c532:	e7f9      	b.n	800c528 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c534 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c538:	4604      	mov	r4, r0
 800c53a:	b088      	sub	sp, #32
 800c53c:	f854 3b26 	ldr.w	r3, [r4], #38
 800c540:	2500      	movs	r5, #0
 800c542:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c544:	460f      	mov	r7, r1
 800c546:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c54a:	a904      	add	r1, sp, #16
 800c54c:	4606      	mov	r6, r0
 800c54e:	4798      	blx	r3
 800c550:	4620      	mov	r0, r4
 800c552:	f004 fd35 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c556:	4680      	mov	r8, r0
 800c558:	4620      	mov	r0, r4
 800c55a:	f004 fd6b 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c55e:	9506      	str	r5, [sp, #24]
 800c560:	ad06      	add	r5, sp, #24
 800c562:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c566:	4639      	mov	r1, r7
 800c568:	4628      	mov	r0, r5
 800c56a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c56e:	f7fd ff5b 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800c572:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c576:	2b00      	cmp	r3, #0
 800c578:	dd19      	ble.n	800c5ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c57a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c57e:	2b00      	cmp	r3, #0
 800c580:	dd15      	ble.n	800c5ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c582:	4b0c      	ldr	r3, [pc, #48]	; (800c5b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c584:	681b      	ldr	r3, [r3, #0]
 800c586:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c58a:	b10a      	cbz	r2, 800c590 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c58c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c58e:	b900      	cbnz	r0, 800c592 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c590:	6898      	ldr	r0, [r3, #8]
 800c592:	6801      	ldr	r1, [r0, #0]
 800c594:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c598:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c59c:	2701      	movs	r7, #1
 800c59e:	9702      	str	r7, [sp, #8]
 800c5a0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800c5a4:	e9cd 5600 	strd	r5, r6, [sp]
 800c5a8:	688d      	ldr	r5, [r1, #8]
 800c5aa:	4621      	mov	r1, r4
 800c5ac:	47a8      	blx	r5
 800c5ae:	b008      	add	sp, #32
 800c5b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5b4:	20012dc4 	.word	0x20012dc4

0800c5b8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c5b8:	4b01      	ldr	r3, [pc, #4]	; (800c5c0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c5ba:	6019      	str	r1, [r3, #0]
 800c5bc:	4770      	bx	lr
 800c5be:	bf00      	nop
 800c5c0:	20012dcc 	.word	0x20012dcc

0800c5c4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c5c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5c8:	4696      	mov	lr, r2
 800c5ca:	4605      	mov	r5, r0
 800c5cc:	4614      	mov	r4, r2
 800c5ce:	460e      	mov	r6, r1
 800c5d0:	461f      	mov	r7, r3
 800c5d2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c5d6:	b097      	sub	sp, #92	; 0x5c
 800c5d8:	f10d 0c1c 	add.w	ip, sp, #28
 800c5dc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c5e0:	f8de 3000 	ldr.w	r3, [lr]
 800c5e4:	f8cc 3000 	str.w	r3, [ip]
 800c5e8:	f104 0e14 	add.w	lr, r4, #20
 800c5ec:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c5f0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c5f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c5f8:	f8de 3000 	ldr.w	r3, [lr]
 800c5fc:	f8cc 3000 	str.w	r3, [ip]
 800c600:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c604:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c608:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c60c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c610:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800c614:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800c618:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800c61c:	f8de 3000 	ldr.w	r3, [lr]
 800c620:	f8cc 3000 	str.w	r3, [ip]
 800c624:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c626:	682b      	ldr	r3, [r5, #0]
 800c628:	9201      	str	r2, [sp, #4]
 800c62a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c62e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c630:	9200      	str	r2, [sp, #0]
 800c632:	f8cd 8008 	str.w	r8, [sp, #8]
 800c636:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 800c63a:	aa07      	add	r2, sp, #28
 800c63c:	463b      	mov	r3, r7
 800c63e:	4631      	mov	r1, r6
 800c640:	4628      	mov	r0, r5
 800c642:	47d8      	blx	fp
 800c644:	46a6      	mov	lr, r4
 800c646:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c64a:	f10d 0c1c 	add.w	ip, sp, #28
 800c64e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c652:	f8de 3000 	ldr.w	r3, [lr]
 800c656:	f8cc 3000 	str.w	r3, [ip]
 800c65a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c65e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c662:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c666:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c66a:	343c      	adds	r4, #60	; 0x3c
 800c66c:	f8de 3000 	ldr.w	r3, [lr]
 800c670:	f8cc 3000 	str.w	r3, [ip]
 800c674:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c676:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c67a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c67e:	6823      	ldr	r3, [r4, #0]
 800c680:	f8cc 3000 	str.w	r3, [ip]
 800c684:	682b      	ldr	r3, [r5, #0]
 800c686:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c68a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c68c:	9201      	str	r2, [sp, #4]
 800c68e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c690:	9200      	str	r2, [sp, #0]
 800c692:	f8cd 8008 	str.w	r8, [sp, #8]
 800c696:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800c698:	aa07      	add	r2, sp, #28
 800c69a:	463b      	mov	r3, r7
 800c69c:	4631      	mov	r1, r6
 800c69e:	4628      	mov	r0, r5
 800c6a0:	47a0      	blx	r4
 800c6a2:	b017      	add	sp, #92	; 0x5c
 800c6a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c6a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6ac:	b08d      	sub	sp, #52	; 0x34
 800c6ae:	4688      	mov	r8, r1
 800c6b0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c6b2:	f8d3 c000 	ldr.w	ip, [r3]
 800c6b6:	680f      	ldr	r7, [r1, #0]
 800c6b8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800c6bc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800c6c0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800c6c4:	edd3 6a07 	vldr	s13, [r3, #28]
 800c6c8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c6ca:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800c6ce:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c6d2:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c6d6:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800c6da:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800c6de:	eba7 070c 	sub.w	r7, r7, ip
 800c6e2:	42bc      	cmp	r4, r7
 800c6e4:	bfa8      	it	ge
 800c6e6:	463c      	movge	r4, r7
 800c6e8:	ee07 4a90 	vmov	s15, r4
 800c6ec:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c6f0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800c6f4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c6f8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c6fc:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c700:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c704:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c708:	eb09 0e0c 	add.w	lr, r9, ip
 800c70c:	4571      	cmp	r1, lr
 800c70e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c712:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c716:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c71a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c71e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c722:	f340 808d 	ble.w	800c840 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800c726:	eba1 060e 	sub.w	r6, r1, lr
 800c72a:	fb96 f5f4 	sdiv	r5, r6, r4
 800c72e:	ee07 5a10 	vmov	s14, r5
 800c732:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c736:	2d00      	cmp	r5, #0
 800c738:	fb04 6615 	mls	r6, r4, r5, r6
 800c73c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c740:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c744:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c748:	dd13      	ble.n	800c772 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800c74a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c74e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c752:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c75a:	bf18      	it	ne
 800c75c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c760:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c764:	bf08      	it	eq
 800c766:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c76a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c76e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c772:	fb05 f204 	mul.w	r2, r5, r4
 800c776:	1abf      	subs	r7, r7, r2
 800c778:	4494      	add	ip, r2
 800c77a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c77e:	4411      	add	r1, r2
 800c780:	eb09 020c 	add.w	r2, r9, ip
 800c784:	443a      	add	r2, r7
 800c786:	b209      	sxth	r1, r1
 800c788:	428a      	cmp	r2, r1
 800c78a:	bfc4      	itt	gt
 800c78c:	eba1 0209 	subgt.w	r2, r1, r9
 800c790:	eba2 070c 	subgt.w	r7, r2, ip
 800c794:	2f00      	cmp	r7, #0
 800c796:	dd50      	ble.n	800c83a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800c798:	fb97 f1f4 	sdiv	r1, r7, r4
 800c79c:	fb04 7211 	mls	r2, r4, r1, r7
 800c7a0:	b90a      	cbnz	r2, 800c7a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800c7a2:	3901      	subs	r1, #1
 800c7a4:	4622      	mov	r2, r4
 800c7a6:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c7aa:	6840      	ldr	r0, [r0, #4]
 800c7ac:	900b      	str	r0, [sp, #44]	; 0x2c
 800c7ae:	f8d0 a000 	ldr.w	sl, [r0]
 800c7b2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c7b4:	9008      	str	r0, [sp, #32]
 800c7b6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800c7ba:	9818      	ldr	r0, [sp, #96]	; 0x60
 800c7bc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800c7c0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c7c4:	695b      	ldr	r3, [r3, #20]
 800c7c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c7c8:	445b      	add	r3, fp
 800c7ca:	eef0 6a42 	vmov.f32	s13, s4
 800c7ce:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c7d2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c7d6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c7da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c7de:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c7e2:	9307      	str	r3, [sp, #28]
 800c7e4:	ee17 7a90 	vmov	r7, s15
 800c7e8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c7ec:	eeb0 7a61 	vmov.f32	s14, s3
 800c7f0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c7f4:	ee16 3a90 	vmov	r3, s13
 800c7f8:	fb97 f7f4 	sdiv	r7, r7, r4
 800c7fc:	ee17 ca90 	vmov	ip, s15
 800c800:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c804:	fb9c fcf4 	sdiv	ip, ip, r4
 800c808:	fb0c 3306 	mla	r3, ip, r6, r3
 800c80c:	9302      	str	r3, [sp, #8]
 800c80e:	ee17 3a10 	vmov	r3, s14
 800c812:	44b6      	add	lr, r6
 800c814:	fb04 e505 	mla	r5, r4, r5, lr
 800c818:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c81c:	fb07 3706 	mla	r7, r7, r6, r3
 800c820:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c824:	e9cd 4700 	strd	r4, r7, [sp]
 800c828:	2900      	cmp	r1, #0
 800c82a:	bfcc      	ite	gt
 800c82c:	46a1      	movgt	r9, r4
 800c82e:	4691      	movle	r9, r2
 800c830:	eba9 0306 	sub.w	r3, r9, r6
 800c834:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c838:	47a0      	blx	r4
 800c83a:	b00d      	add	sp, #52	; 0x34
 800c83c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c840:	2500      	movs	r5, #0
 800c842:	462e      	mov	r6, r5
 800c844:	e799      	b.n	800c77a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800c848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c84c:	b0db      	sub	sp, #364	; 0x16c
 800c84e:	461d      	mov	r5, r3
 800c850:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800c854:	930a      	str	r3, [sp, #40]	; 0x28
 800c856:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800c85a:	930b      	str	r3, [sp, #44]	; 0x2c
 800c85c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800c860:	9310      	str	r3, [sp, #64]	; 0x40
 800c862:	6803      	ldr	r3, [r0, #0]
 800c864:	910f      	str	r1, [sp, #60]	; 0x3c
 800c866:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800c868:	9009      	str	r0, [sp, #36]	; 0x24
 800c86a:	4614      	mov	r4, r2
 800c86c:	4629      	mov	r1, r5
 800c86e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c872:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800c876:	47b8      	blx	r7
 800c878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c87a:	6058      	str	r0, [r3, #4]
 800c87c:	2800      	cmp	r0, #0
 800c87e:	f000 83a1 	beq.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c882:	682b      	ldr	r3, [r5, #0]
 800c884:	9314      	str	r3, [sp, #80]	; 0x50
 800c886:	686b      	ldr	r3, [r5, #4]
 800c888:	9315      	str	r3, [sp, #84]	; 0x54
 800c88a:	4bc4      	ldr	r3, [pc, #784]	; (800cb9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c88c:	ed94 7a02 	vldr	s14, [r4, #8]
 800c890:	7819      	ldrb	r1, [r3, #0]
 800c892:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c896:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c89a:	2900      	cmp	r1, #0
 800c89c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c8a0:	bf16      	itet	ne
 800c8a2:	4619      	movne	r1, r3
 800c8a4:	4611      	moveq	r1, r2
 800c8a6:	4613      	movne	r3, r2
 800c8a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8ac:	9116      	str	r1, [sp, #88]	; 0x58
 800c8ae:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800c8b2:	f240 8387 	bls.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8b6:	ed94 7a07 	vldr	s14, [r4, #28]
 800c8ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c8be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8c2:	f240 837f 	bls.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8c6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c8ca:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c8ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c8d2:	f240 8377 	bls.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8d6:	6822      	ldr	r2, [r4, #0]
 800c8d8:	4bb1      	ldr	r3, [pc, #708]	; (800cba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c8da:	429a      	cmp	r2, r3
 800c8dc:	f2c0 8372 	blt.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8e0:	49b0      	ldr	r1, [pc, #704]	; (800cba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c8e2:	6963      	ldr	r3, [r4, #20]
 800c8e4:	428a      	cmp	r2, r1
 800c8e6:	f300 836d 	bgt.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8ea:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c8ee:	48ae      	ldr	r0, [pc, #696]	; (800cba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c8f0:	33ff      	adds	r3, #255	; 0xff
 800c8f2:	4283      	cmp	r3, r0
 800c8f4:	f200 8366 	bhi.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c8f8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c8fa:	4dac      	ldr	r5, [pc, #688]	; (800cbac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c8fc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c900:	33ff      	adds	r3, #255	; 0xff
 800c902:	42ab      	cmp	r3, r5
 800c904:	f200 835e 	bhi.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c908:	6862      	ldr	r2, [r4, #4]
 800c90a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800c90e:	33ff      	adds	r3, #255	; 0xff
 800c910:	4283      	cmp	r3, r0
 800c912:	f200 8357 	bhi.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c916:	69a1      	ldr	r1, [r4, #24]
 800c918:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800c91c:	33ff      	adds	r3, #255	; 0xff
 800c91e:	4283      	cmp	r3, r0
 800c920:	f200 8350 	bhi.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c924:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c926:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800c92a:	30ff      	adds	r0, #255	; 0xff
 800c92c:	42a8      	cmp	r0, r5
 800c92e:	f200 8349 	bhi.w	800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c932:	428a      	cmp	r2, r1
 800c934:	f280 8110 	bge.w	800cb58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c938:	429a      	cmp	r2, r3
 800c93a:	f300 8119 	bgt.w	800cb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c93e:	4299      	cmp	r1, r3
 800c940:	f280 811d 	bge.w	800cb7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c944:	2502      	movs	r5, #2
 800c946:	2701      	movs	r7, #1
 800c948:	46a9      	mov	r9, r5
 800c94a:	46b8      	mov	r8, r7
 800c94c:	f04f 0a00 	mov.w	sl, #0
 800c950:	4621      	mov	r1, r4
 800c952:	a849      	add	r0, sp, #292	; 0x124
 800c954:	f003 fd00 	bl	8010358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c958:	4622      	mov	r2, r4
 800c95a:	4653      	mov	r3, sl
 800c95c:	a949      	add	r1, sp, #292	; 0x124
 800c95e:	f8cd 9000 	str.w	r9, [sp]
 800c962:	a819      	add	r0, sp, #100	; 0x64
 800c964:	f003 fe28 	bl	80105b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c968:	4622      	mov	r2, r4
 800c96a:	4653      	mov	r3, sl
 800c96c:	a949      	add	r1, sp, #292	; 0x124
 800c96e:	f8cd 8000 	str.w	r8, [sp]
 800c972:	a829      	add	r0, sp, #164	; 0xa4
 800c974:	f003 fe20 	bl	80105b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c978:	4643      	mov	r3, r8
 800c97a:	4622      	mov	r2, r4
 800c97c:	a949      	add	r1, sp, #292	; 0x124
 800c97e:	f8cd 9000 	str.w	r9, [sp]
 800c982:	a839      	add	r0, sp, #228	; 0xe4
 800c984:	f003 fe18 	bl	80105b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c988:	42af      	cmp	r7, r5
 800c98a:	bfb5      	itete	lt
 800c98c:	2300      	movlt	r3, #0
 800c98e:	2301      	movge	r3, #1
 800c990:	930e      	strlt	r3, [sp, #56]	; 0x38
 800c992:	930e      	strge	r3, [sp, #56]	; 0x38
 800c994:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c996:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c99a:	af12      	add	r7, sp, #72	; 0x48
 800c99c:	bfb9      	ittee	lt
 800c99e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800c9a0:	ac19      	addlt	r4, sp, #100	; 0x64
 800c9a2:	ad19      	addge	r5, sp, #100	; 0x64
 800c9a4:	ac29      	addge	r4, sp, #164	; 0xa4
 800c9a6:	e887 0003 	stmia.w	r7, {r0, r1}
 800c9aa:	b928      	cbnz	r0, 800c9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800c9ac:	4b80      	ldr	r3, [pc, #512]	; (800cbb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800c9ae:	6818      	ldr	r0, [r3, #0]
 800c9b0:	6803      	ldr	r3, [r0, #0]
 800c9b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9b4:	4798      	blx	r3
 800c9b6:	6038      	str	r0, [r7, #0]
 800c9b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800c9ba:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800c9be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800c9c2:	930c      	str	r3, [sp, #48]	; 0x30
 800c9c4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c9c6:	6963      	ldr	r3, [r4, #20]
 800c9c8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800c9ca:	440b      	add	r3, r1
 800c9cc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800c9d0:	4408      	add	r0, r1
 800c9d2:	b200      	sxth	r0, r0
 800c9d4:	4283      	cmp	r3, r0
 800c9d6:	900d      	str	r0, [sp, #52]	; 0x34
 800c9d8:	f280 80dd 	bge.w	800cb96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800c9dc:	428b      	cmp	r3, r1
 800c9de:	da08      	bge.n	800c9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c9e0:	2a00      	cmp	r2, #0
 800c9e2:	dd06      	ble.n	800c9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800c9e4:	1acb      	subs	r3, r1, r3
 800c9e6:	429a      	cmp	r2, r3
 800c9e8:	f2c0 80e4 	blt.w	800cbb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	f300 80e2 	bgt.w	800cbb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800c9f2:	6967      	ldr	r7, [r4, #20]
 800c9f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c9f6:	443b      	add	r3, r7
 800c9f8:	461f      	mov	r7, r3
 800c9fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c9fc:	1bdf      	subs	r7, r3, r7
 800c9fe:	4297      	cmp	r7, r2
 800ca00:	bfa8      	it	ge
 800ca02:	4617      	movge	r7, r2
 800ca04:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ca08:	2f00      	cmp	r7, #0
 800ca0a:	f340 8166 	ble.w	800ccda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ca0e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ca10:	6829      	ldr	r1, [r5, #0]
 800ca12:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ca16:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ca1a:	6820      	ldr	r0, [r4, #0]
 800ca1c:	4411      	add	r1, r2
 800ca1e:	4299      	cmp	r1, r3
 800ca20:	dd1a      	ble.n	800ca58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ca22:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ca26:	440b      	add	r3, r1
 800ca28:	4402      	add	r2, r0
 800ca2a:	b21b      	sxth	r3, r3
 800ca2c:	429a      	cmp	r2, r3
 800ca2e:	dc13      	bgt.n	800ca58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ca30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ca34:	681b      	ldr	r3, [r3, #0]
 800ca36:	9206      	str	r2, [sp, #24]
 800ca38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ca3a:	9205      	str	r2, [sp, #20]
 800ca3c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ca3e:	9500      	str	r5, [sp, #0]
 800ca40:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ca44:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ca46:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ca48:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ca4c:	a912      	add	r1, sp, #72	; 0x48
 800ca4e:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800ca52:	aa49      	add	r2, sp, #292	; 0x124
 800ca54:	4623      	mov	r3, r4
 800ca56:	47c8      	blx	r9
 800ca58:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ca5c:	441a      	add	r2, r3
 800ca5e:	6963      	ldr	r3, [r4, #20]
 800ca60:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ca64:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ca68:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ca6c:	68a1      	ldr	r1, [r4, #8]
 800ca6e:	ed94 6a08 	vldr	s12, [r4, #32]
 800ca72:	6022      	str	r2, [r4, #0]
 800ca74:	3301      	adds	r3, #1
 800ca76:	6163      	str	r3, [r4, #20]
 800ca78:	69a3      	ldr	r3, [r4, #24]
 800ca7a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ca7e:	3b01      	subs	r3, #1
 800ca80:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ca84:	61a3      	str	r3, [r4, #24]
 800ca86:	6923      	ldr	r3, [r4, #16]
 800ca88:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ca8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca90:	edd4 6a07 	vldr	s13, [r4, #28]
 800ca94:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ca98:	440b      	add	r3, r1
 800ca9a:	68e1      	ldr	r1, [r4, #12]
 800ca9c:	6123      	str	r3, [r4, #16]
 800ca9e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800caa2:	428b      	cmp	r3, r1
 800caa4:	edc4 6a07 	vstr	s13, [r4, #28]
 800caa8:	db15      	blt.n	800cad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800caaa:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800caae:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cab2:	3201      	adds	r2, #1
 800cab4:	edc4 6a07 	vstr	s13, [r4, #28]
 800cab8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cabc:	6022      	str	r2, [r4, #0]
 800cabe:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cac2:	1a5b      	subs	r3, r3, r1
 800cac4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cac8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cacc:	6123      	str	r3, [r4, #16]
 800cace:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cad2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cad6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cada:	441a      	add	r2, r3
 800cadc:	696b      	ldr	r3, [r5, #20]
 800cade:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cae2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cae6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800caea:	68a9      	ldr	r1, [r5, #8]
 800caec:	ed95 6a08 	vldr	s12, [r5, #32]
 800caf0:	602a      	str	r2, [r5, #0]
 800caf2:	3301      	adds	r3, #1
 800caf4:	616b      	str	r3, [r5, #20]
 800caf6:	69ab      	ldr	r3, [r5, #24]
 800caf8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cafc:	3b01      	subs	r3, #1
 800cafe:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cb02:	61ab      	str	r3, [r5, #24]
 800cb04:	692b      	ldr	r3, [r5, #16]
 800cb06:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cb0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb0e:	edd5 6a07 	vldr	s13, [r5, #28]
 800cb12:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cb16:	440b      	add	r3, r1
 800cb18:	68e9      	ldr	r1, [r5, #12]
 800cb1a:	612b      	str	r3, [r5, #16]
 800cb1c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb20:	428b      	cmp	r3, r1
 800cb22:	edc5 6a07 	vstr	s13, [r5, #28]
 800cb26:	db15      	blt.n	800cb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cb28:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cb2c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb30:	3201      	adds	r2, #1
 800cb32:	edc5 6a07 	vstr	s13, [r5, #28]
 800cb36:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cb3a:	602a      	str	r2, [r5, #0]
 800cb3c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cb40:	1a5b      	subs	r3, r3, r1
 800cb42:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cb46:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cb4a:	612b      	str	r3, [r5, #16]
 800cb4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cb50:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cb54:	3f01      	subs	r7, #1
 800cb56:	e757      	b.n	800ca08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cb58:	4299      	cmp	r1, r3
 800cb5a:	dc13      	bgt.n	800cb84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cb5c:	429a      	cmp	r2, r3
 800cb5e:	da14      	bge.n	800cb8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cb60:	2502      	movs	r5, #2
 800cb62:	2703      	movs	r7, #3
 800cb64:	46a9      	mov	r9, r5
 800cb66:	f04f 0800 	mov.w	r8, #0
 800cb6a:	f04f 0a01 	mov.w	sl, #1
 800cb6e:	e6ef      	b.n	800c950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cb70:	2501      	movs	r5, #1
 800cb72:	2700      	movs	r7, #0
 800cb74:	46a9      	mov	r9, r5
 800cb76:	46b8      	mov	r8, r7
 800cb78:	f04f 0a02 	mov.w	sl, #2
 800cb7c:	e6e8      	b.n	800c950 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cb7e:	2501      	movs	r5, #1
 800cb80:	2702      	movs	r7, #2
 800cb82:	e6e1      	b.n	800c948 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cb84:	2500      	movs	r5, #0
 800cb86:	2701      	movs	r7, #1
 800cb88:	e7f4      	b.n	800cb74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cb8a:	2702      	movs	r7, #2
 800cb8c:	2503      	movs	r5, #3
 800cb8e:	f04f 0900 	mov.w	r9, #0
 800cb92:	46b8      	mov	r8, r7
 800cb94:	e7e9      	b.n	800cb6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cb96:	4613      	mov	r3, r2
 800cb98:	e728      	b.n	800c9ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cb9a:	bf00      	nop
 800cb9c:	20012dbc 	.word	0x20012dbc
 800cba0:	fffd8f01 	.word	0xfffd8f01
 800cba4:	00027100 	.word	0x00027100
 800cba8:	0004e1ff 	.word	0x0004e1ff
 800cbac:	0004e1fe 	.word	0x0004e1fe
 800cbb0:	20012dc4 	.word	0x20012dc4
 800cbb4:	4613      	mov	r3, r2
 800cbb6:	992b      	ldr	r1, [sp, #172]	; 0xac
 800cbb8:	9111      	str	r1, [sp, #68]	; 0x44
 800cbba:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800cbbe:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800cbc2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800cbc4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800cbc8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800cbcc:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800cbd0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cbd4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800cbd8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800cbdc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800cbe0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800cbe4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800cbe8:	469e      	mov	lr, r3
 800cbea:	469c      	mov	ip, r3
 800cbec:	f04f 0900 	mov.w	r9, #0
 800cbf0:	f1bc 0f00 	cmp.w	ip, #0
 800cbf4:	d147      	bne.n	800cc86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cbf6:	eb03 0c07 	add.w	ip, r3, r7
 800cbfa:	1ad7      	subs	r7, r2, r3
 800cbfc:	f1b9 0f00 	cmp.w	r9, #0
 800cc00:	d009      	beq.n	800cc16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cc02:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800cc06:	9029      	str	r0, [sp, #164]	; 0xa4
 800cc08:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cc0c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cc10:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cc14:	912d      	str	r1, [sp, #180]	; 0xb4
 800cc16:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cc18:	9111      	str	r1, [sp, #68]	; 0x44
 800cc1a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cc1e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cc22:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cc26:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cc2a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cc2e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cc32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cc36:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cc3a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cc3e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cc42:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cc46:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cc4a:	f04f 0800 	mov.w	r8, #0
 800cc4e:	f1be 0f00 	cmp.w	lr, #0
 800cc52:	d031      	beq.n	800ccb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cc54:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cc56:	4431      	add	r1, r6
 800cc58:	4549      	cmp	r1, r9
 800cc5a:	4450      	add	r0, sl
 800cc5c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cc60:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cc64:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cc68:	db08      	blt.n	800cc7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800cc6a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cc6e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cc72:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cc76:	3001      	adds	r0, #1
 800cc78:	eba1 0109 	sub.w	r1, r1, r9
 800cc7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cc80:	f04f 0801 	mov.w	r8, #1
 800cc84:	e7e3      	b.n	800cc4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cc86:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cc88:	4431      	add	r1, r6
 800cc8a:	4541      	cmp	r1, r8
 800cc8c:	4450      	add	r0, sl
 800cc8e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cc92:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cc96:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cc9a:	db08      	blt.n	800ccae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cc9c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cca0:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cca4:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cca8:	3001      	adds	r0, #1
 800ccaa:	eba1 0108 	sub.w	r1, r1, r8
 800ccae:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ccb2:	f04f 0901 	mov.w	r9, #1
 800ccb6:	e79b      	b.n	800cbf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ccb8:	449c      	add	ip, r3
 800ccba:	1aff      	subs	r7, r7, r3
 800ccbc:	f1b8 0f00 	cmp.w	r8, #0
 800ccc0:	d009      	beq.n	800ccd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ccc2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ccc6:	9019      	str	r0, [sp, #100]	; 0x64
 800ccc8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cccc:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ccd0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ccd4:	911d      	str	r1, [sp, #116]	; 0x74
 800ccd6:	1ad2      	subs	r2, r2, r3
 800ccd8:	e68b      	b.n	800c9f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ccda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ccdc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ccde:	2b00      	cmp	r3, #0
 800cce0:	f000 80d1 	beq.w	800ce86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cce4:	ad19      	add	r5, sp, #100	; 0x64
 800cce6:	ac39      	add	r4, sp, #228	; 0xe4
 800cce8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ccea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ccee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ccf2:	930c      	str	r3, [sp, #48]	; 0x30
 800ccf4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ccf6:	6963      	ldr	r3, [r4, #20]
 800ccf8:	440b      	add	r3, r1
 800ccfa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ccfe:	4408      	add	r0, r1
 800cd00:	b200      	sxth	r0, r0
 800cd02:	4283      	cmp	r3, r0
 800cd04:	900d      	str	r0, [sp, #52]	; 0x34
 800cd06:	f280 80c1 	bge.w	800ce8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cd0a:	428b      	cmp	r3, r1
 800cd0c:	da08      	bge.n	800cd20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cd0e:	2a00      	cmp	r2, #0
 800cd10:	dd06      	ble.n	800cd20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cd12:	1acb      	subs	r3, r1, r3
 800cd14:	429a      	cmp	r2, r3
 800cd16:	f2c0 80bb 	blt.w	800ce90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cd1a:	2b00      	cmp	r3, #0
 800cd1c:	f300 80b9 	bgt.w	800ce92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cd20:	6967      	ldr	r7, [r4, #20]
 800cd22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cd24:	443b      	add	r3, r7
 800cd26:	461f      	mov	r7, r3
 800cd28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cd2a:	1bdf      	subs	r7, r3, r7
 800cd2c:	4297      	cmp	r7, r2
 800cd2e:	bfa8      	it	ge
 800cd30:	4617      	movge	r7, r2
 800cd32:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cd36:	2f00      	cmp	r7, #0
 800cd38:	f340 813c 	ble.w	800cfb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800cd3c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cd3e:	6829      	ldr	r1, [r5, #0]
 800cd40:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd44:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cd48:	6820      	ldr	r0, [r4, #0]
 800cd4a:	4411      	add	r1, r2
 800cd4c:	4299      	cmp	r1, r3
 800cd4e:	dd1a      	ble.n	800cd86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cd50:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cd54:	440b      	add	r3, r1
 800cd56:	4402      	add	r2, r0
 800cd58:	b21b      	sxth	r3, r3
 800cd5a:	429a      	cmp	r2, r3
 800cd5c:	dc13      	bgt.n	800cd86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cd5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cd60:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cd62:	681b      	ldr	r3, [r3, #0]
 800cd64:	9206      	str	r2, [sp, #24]
 800cd66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cd68:	9205      	str	r2, [sp, #20]
 800cd6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cd6c:	9500      	str	r5, [sp, #0]
 800cd6e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cd72:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800cd74:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cd76:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cd7a:	a912      	add	r1, sp, #72	; 0x48
 800cd7c:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800cd80:	aa49      	add	r2, sp, #292	; 0x124
 800cd82:	4623      	mov	r3, r4
 800cd84:	47c8      	blx	r9
 800cd86:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cd8a:	441a      	add	r2, r3
 800cd8c:	6963      	ldr	r3, [r4, #20]
 800cd8e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800cd92:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800cd96:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800cd9a:	68a1      	ldr	r1, [r4, #8]
 800cd9c:	ed94 6a08 	vldr	s12, [r4, #32]
 800cda0:	6022      	str	r2, [r4, #0]
 800cda2:	3301      	adds	r3, #1
 800cda4:	6163      	str	r3, [r4, #20]
 800cda6:	69a3      	ldr	r3, [r4, #24]
 800cda8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cdac:	3b01      	subs	r3, #1
 800cdae:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800cdb2:	61a3      	str	r3, [r4, #24]
 800cdb4:	6923      	ldr	r3, [r4, #16]
 800cdb6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cdba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cdbe:	edd4 6a07 	vldr	s13, [r4, #28]
 800cdc2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cdc6:	440b      	add	r3, r1
 800cdc8:	68e1      	ldr	r1, [r4, #12]
 800cdca:	6123      	str	r3, [r4, #16]
 800cdcc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cdd0:	428b      	cmp	r3, r1
 800cdd2:	edc4 6a07 	vstr	s13, [r4, #28]
 800cdd6:	db15      	blt.n	800ce04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cdd8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cddc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cde0:	3201      	adds	r2, #1
 800cde2:	edc4 6a07 	vstr	s13, [r4, #28]
 800cde6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cdea:	6022      	str	r2, [r4, #0]
 800cdec:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cdf0:	1a5b      	subs	r3, r3, r1
 800cdf2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cdf6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cdfa:	6123      	str	r3, [r4, #16]
 800cdfc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ce00:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce04:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ce08:	441a      	add	r2, r3
 800ce0a:	696b      	ldr	r3, [r5, #20]
 800ce0c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ce10:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ce14:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ce18:	68a9      	ldr	r1, [r5, #8]
 800ce1a:	ed95 6a08 	vldr	s12, [r5, #32]
 800ce1e:	602a      	str	r2, [r5, #0]
 800ce20:	3301      	adds	r3, #1
 800ce22:	616b      	str	r3, [r5, #20]
 800ce24:	69ab      	ldr	r3, [r5, #24]
 800ce26:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce2a:	3b01      	subs	r3, #1
 800ce2c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ce30:	61ab      	str	r3, [r5, #24]
 800ce32:	692b      	ldr	r3, [r5, #16]
 800ce34:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ce38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce3c:	edd5 6a07 	vldr	s13, [r5, #28]
 800ce40:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ce44:	440b      	add	r3, r1
 800ce46:	68e9      	ldr	r1, [r5, #12]
 800ce48:	612b      	str	r3, [r5, #16]
 800ce4a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ce4e:	428b      	cmp	r3, r1
 800ce50:	edc5 6a07 	vstr	s13, [r5, #28]
 800ce54:	db15      	blt.n	800ce82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ce56:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ce5a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ce5e:	3201      	adds	r2, #1
 800ce60:	edc5 6a07 	vstr	s13, [r5, #28]
 800ce64:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ce68:	602a      	str	r2, [r5, #0]
 800ce6a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ce6e:	1a5b      	subs	r3, r3, r1
 800ce70:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ce74:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ce78:	612b      	str	r3, [r5, #16]
 800ce7a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ce7e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ce82:	3f01      	subs	r7, #1
 800ce84:	e757      	b.n	800cd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ce86:	ad39      	add	r5, sp, #228	; 0xe4
 800ce88:	ac19      	add	r4, sp, #100	; 0x64
 800ce8a:	e72d      	b.n	800cce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ce8c:	4613      	mov	r3, r2
 800ce8e:	e744      	b.n	800cd1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ce90:	4613      	mov	r3, r2
 800ce92:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ce96:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ce98:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ce9c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800cea0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800cea4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800cea8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800ceac:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800ceb0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800ceb4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800ceb6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ceba:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800cebe:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800cec2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800cec6:	960e      	str	r6, [sp, #56]	; 0x38
 800cec8:	469e      	mov	lr, r3
 800ceca:	461f      	mov	r7, r3
 800cecc:	f04f 0900 	mov.w	r9, #0
 800ced0:	2f00      	cmp	r7, #0
 800ced2:	d146      	bne.n	800cf62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ced4:	449c      	add	ip, r3
 800ced6:	1ad7      	subs	r7, r2, r3
 800ced8:	f1b9 0f00 	cmp.w	r9, #0
 800cedc:	d009      	beq.n	800cef2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cede:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800cee2:	9039      	str	r0, [sp, #228]	; 0xe4
 800cee4:	913d      	str	r1, [sp, #244]	; 0xf4
 800cee6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ceea:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ceee:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800cef2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cef4:	910e      	str	r1, [sp, #56]	; 0x38
 800cef6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cefa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cefe:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cf02:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cf06:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cf0a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cf0e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cf12:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cf16:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cf1a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cf1e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cf22:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cf26:	f04f 0800 	mov.w	r8, #0
 800cf2a:	f1be 0f00 	cmp.w	lr, #0
 800cf2e:	d030      	beq.n	800cf92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800cf30:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800cf32:	4431      	add	r1, r6
 800cf34:	4549      	cmp	r1, r9
 800cf36:	4450      	add	r0, sl
 800cf38:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cf3c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cf40:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cf44:	db08      	blt.n	800cf58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800cf46:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cf4a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cf4e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cf52:	3001      	adds	r0, #1
 800cf54:	eba1 0109 	sub.w	r1, r1, r9
 800cf58:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cf5c:	f04f 0801 	mov.w	r8, #1
 800cf60:	e7e3      	b.n	800cf2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800cf62:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800cf64:	4431      	add	r1, r6
 800cf66:	4541      	cmp	r1, r8
 800cf68:	4450      	add	r0, sl
 800cf6a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cf6e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cf72:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cf76:	db08      	blt.n	800cf8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800cf78:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cf7c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cf80:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cf84:	3001      	adds	r0, #1
 800cf86:	eba1 0108 	sub.w	r1, r1, r8
 800cf8a:	3f01      	subs	r7, #1
 800cf8c:	f04f 0901 	mov.w	r9, #1
 800cf90:	e79e      	b.n	800ced0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800cf92:	449c      	add	ip, r3
 800cf94:	1aff      	subs	r7, r7, r3
 800cf96:	f1b8 0f00 	cmp.w	r8, #0
 800cf9a:	d009      	beq.n	800cfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800cf9c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800cfa0:	9019      	str	r0, [sp, #100]	; 0x64
 800cfa2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cfa6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cfaa:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cfae:	911d      	str	r1, [sp, #116]	; 0x74
 800cfb0:	1ad2      	subs	r2, r2, r3
 800cfb2:	e6b5      	b.n	800cd20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cfb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cfb6:	681b      	ldr	r3, [r3, #0]
 800cfb8:	b923      	cbnz	r3, 800cfc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800cfba:	4b04      	ldr	r3, [pc, #16]	; (800cfcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800cfbc:	6818      	ldr	r0, [r3, #0]
 800cfbe:	6803      	ldr	r3, [r0, #0]
 800cfc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cfc2:	4798      	blx	r3
 800cfc4:	b05b      	add	sp, #364	; 0x16c
 800cfc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfca:	bf00      	nop
 800cfcc:	20012dc4 	.word	0x20012dc4

0800cfd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800cfd0:	b570      	push	{r4, r5, r6, lr}
 800cfd2:	4604      	mov	r4, r0
 800cfd4:	2500      	movs	r5, #0
 800cfd6:	7223      	strb	r3, [r4, #8]
 800cfd8:	9804      	ldr	r0, [sp, #16]
 800cfda:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cfde:	8025      	strh	r5, [r4, #0]
 800cfe0:	6061      	str	r1, [r4, #4]
 800cfe2:	7263      	strb	r3, [r4, #9]
 800cfe4:	60e0      	str	r0, [r4, #12]
 800cfe6:	8222      	strh	r2, [r4, #16]
 800cfe8:	8265      	strh	r5, [r4, #18]
 800cfea:	82a5      	strh	r5, [r4, #20]
 800cfec:	82e5      	strh	r5, [r4, #22]
 800cfee:	8325      	strh	r5, [r4, #24]
 800cff0:	8365      	strh	r5, [r4, #26]
 800cff2:	83a5      	strh	r5, [r4, #28]
 800cff4:	77a5      	strb	r5, [r4, #30]
 800cff6:	6803      	ldr	r3, [r0, #0]
 800cff8:	695b      	ldr	r3, [r3, #20]
 800cffa:	4798      	blx	r3
 800cffc:	4606      	mov	r6, r0
 800cffe:	b1f8      	cbz	r0, 800d040 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d000:	68e0      	ldr	r0, [r4, #12]
 800d002:	6803      	ldr	r3, [r0, #0]
 800d004:	4631      	mov	r1, r6
 800d006:	68db      	ldr	r3, [r3, #12]
 800d008:	4798      	blx	r3
 800d00a:	7b43      	ldrb	r3, [r0, #13]
 800d00c:	7a82      	ldrb	r2, [r0, #10]
 800d00e:	005b      	lsls	r3, r3, #1
 800d010:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d014:	4313      	orrs	r3, r2
 800d016:	83a3      	strh	r3, [r4, #28]
 800d018:	7a63      	ldrb	r3, [r4, #9]
 800d01a:	2b04      	cmp	r3, #4
 800d01c:	4605      	mov	r5, r0
 800d01e:	d10f      	bne.n	800d040 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d020:	68e0      	ldr	r0, [r4, #12]
 800d022:	6803      	ldr	r3, [r0, #0]
 800d024:	462a      	mov	r2, r5
 800d026:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d028:	4631      	mov	r1, r6
 800d02a:	4798      	blx	r3
 800d02c:	7b6b      	ldrb	r3, [r5, #13]
 800d02e:	005b      	lsls	r3, r3, #1
 800d030:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d034:	7aab      	ldrb	r3, [r5, #10]
 800d036:	4313      	orrs	r3, r2
 800d038:	4418      	add	r0, r3
 800d03a:	8ba3      	ldrh	r3, [r4, #28]
 800d03c:	4418      	add	r0, r3
 800d03e:	83a0      	strh	r0, [r4, #28]
 800d040:	4620      	mov	r0, r4
 800d042:	bd70      	pop	{r4, r5, r6, pc}

0800d044 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d048:	2400      	movs	r4, #0
 800d04a:	b085      	sub	sp, #20
 800d04c:	4681      	mov	r9, r0
 800d04e:	4688      	mov	r8, r1
 800d050:	4692      	mov	sl, r2
 800d052:	469b      	mov	fp, r3
 800d054:	4627      	mov	r7, r4
 800d056:	4625      	mov	r5, r4
 800d058:	4626      	mov	r6, r4
 800d05a:	4554      	cmp	r4, sl
 800d05c:	da2a      	bge.n	800d0b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d05e:	2300      	movs	r3, #0
 800d060:	9303      	str	r3, [sp, #12]
 800d062:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d066:	429d      	cmp	r5, r3
 800d068:	d004      	beq.n	800d074 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d06a:	f242 030b 	movw	r3, #8203	; 0x200b
 800d06e:	429d      	cmp	r5, r3
 800d070:	bf18      	it	ne
 800d072:	462f      	movne	r7, r5
 800d074:	ab03      	add	r3, sp, #12
 800d076:	4642      	mov	r2, r8
 800d078:	4659      	mov	r1, fp
 800d07a:	4648      	mov	r0, r9
 800d07c:	f002 fef2 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d080:	4605      	mov	r5, r0
 800d082:	b1b8      	cbz	r0, 800d0b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d084:	280a      	cmp	r0, #10
 800d086:	d015      	beq.n	800d0b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d088:	9a03      	ldr	r2, [sp, #12]
 800d08a:	b18a      	cbz	r2, 800d0b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d08c:	7b50      	ldrb	r0, [r2, #13]
 800d08e:	7a93      	ldrb	r3, [r2, #10]
 800d090:	8895      	ldrh	r5, [r2, #4]
 800d092:	0040      	lsls	r0, r0, #1
 800d094:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d098:	4303      	orrs	r3, r0
 800d09a:	9301      	str	r3, [sp, #4]
 800d09c:	f8d8 3000 	ldr.w	r3, [r8]
 800d0a0:	4639      	mov	r1, r7
 800d0a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d0a4:	4640      	mov	r0, r8
 800d0a6:	4798      	blx	r3
 800d0a8:	9b01      	ldr	r3, [sp, #4]
 800d0aa:	4418      	add	r0, r3
 800d0ac:	4406      	add	r6, r0
 800d0ae:	b2b6      	uxth	r6, r6
 800d0b0:	3401      	adds	r4, #1
 800d0b2:	e7d2      	b.n	800d05a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d0b4:	4630      	mov	r0, r6
 800d0b6:	b005      	add	sp, #20
 800d0b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d0bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d0bc:	2a02      	cmp	r2, #2
 800d0be:	b530      	push	{r4, r5, lr}
 800d0c0:	d011      	beq.n	800d0e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d0c2:	2a03      	cmp	r2, #3
 800d0c4:	d01c      	beq.n	800d100 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d0c6:	2a01      	cmp	r2, #1
 800d0c8:	d10c      	bne.n	800d0e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d0ca:	888b      	ldrh	r3, [r1, #4]
 800d0cc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d0d0:	8801      	ldrh	r1, [r0, #0]
 800d0d2:	8844      	ldrh	r4, [r0, #2]
 800d0d4:	8004      	strh	r4, [r0, #0]
 800d0d6:	1a9b      	subs	r3, r3, r2
 800d0d8:	1a5b      	subs	r3, r3, r1
 800d0da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d0de:	8043      	strh	r3, [r0, #2]
 800d0e0:	8081      	strh	r1, [r0, #4]
 800d0e2:	80c2      	strh	r2, [r0, #6]
 800d0e4:	bd30      	pop	{r4, r5, pc}
 800d0e6:	88cb      	ldrh	r3, [r1, #6]
 800d0e8:	88c2      	ldrh	r2, [r0, #6]
 800d0ea:	1a9b      	subs	r3, r3, r2
 800d0ec:	8842      	ldrh	r2, [r0, #2]
 800d0ee:	1a9b      	subs	r3, r3, r2
 800d0f0:	888a      	ldrh	r2, [r1, #4]
 800d0f2:	8881      	ldrh	r1, [r0, #4]
 800d0f4:	8043      	strh	r3, [r0, #2]
 800d0f6:	1a52      	subs	r2, r2, r1
 800d0f8:	8801      	ldrh	r1, [r0, #0]
 800d0fa:	1a52      	subs	r2, r2, r1
 800d0fc:	8002      	strh	r2, [r0, #0]
 800d0fe:	e7f1      	b.n	800d0e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d100:	88cb      	ldrh	r3, [r1, #6]
 800d102:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d106:	8841      	ldrh	r1, [r0, #2]
 800d108:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d10c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d110:	8045      	strh	r5, [r0, #2]
 800d112:	1a9b      	subs	r3, r3, r2
 800d114:	1a5b      	subs	r3, r3, r1
 800d116:	8003      	strh	r3, [r0, #0]
 800d118:	8082      	strh	r2, [r0, #4]
 800d11a:	80c4      	strh	r4, [r0, #6]
 800d11c:	e7e2      	b.n	800d0e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d11e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d11e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d122:	b09f      	sub	sp, #124	; 0x7c
 800d124:	9116      	str	r1, [sp, #88]	; 0x58
 800d126:	9317      	str	r3, [sp, #92]	; 0x5c
 800d128:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d12a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d12c:	8809      	ldrh	r1, [r1, #0]
 800d12e:	889b      	ldrh	r3, [r3, #4]
 800d130:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d134:	9212      	str	r2, [sp, #72]	; 0x48
 800d136:	440b      	add	r3, r1
 800d138:	b21b      	sxth	r3, r3
 800d13a:	9310      	str	r3, [sp, #64]	; 0x40
 800d13c:	f8d8 3000 	ldr.w	r3, [r8]
 800d140:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d144:	7a59      	ldrb	r1, [r3, #9]
 800d146:	7a1b      	ldrb	r3, [r3, #8]
 800d148:	9315      	str	r3, [sp, #84]	; 0x54
 800d14a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800d14c:	9011      	str	r0, [sp, #68]	; 0x44
 800d14e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d152:	9114      	str	r1, [sp, #80]	; 0x50
 800d154:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d158:	2a00      	cmp	r2, #0
 800d15a:	d067      	beq.n	800d22c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800d15c:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d160:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d162:	2b04      	cmp	r3, #4
 800d164:	bf14      	ite	ne
 800d166:	2301      	movne	r3, #1
 800d168:	2302      	moveq	r3, #2
 800d16a:	4413      	add	r3, r2
 800d16c:	f04f 0900 	mov.w	r9, #0
 800d170:	930f      	str	r3, [sp, #60]	; 0x3c
 800d172:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d176:	464c      	mov	r4, r9
 800d178:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d17c:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d180:	4293      	cmp	r3, r2
 800d182:	f280 808c 	bge.w	800d29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d186:	2300      	movs	r3, #0
 800d188:	931c      	str	r3, [sp, #112]	; 0x70
 800d18a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d18e:	429c      	cmp	r4, r3
 800d190:	d006      	beq.n	800d1a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800d192:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d194:	f242 020b 	movw	r2, #8203	; 0x200b
 800d198:	4294      	cmp	r4, r2
 800d19a:	bf18      	it	ne
 800d19c:	4623      	movne	r3, r4
 800d19e:	930d      	str	r3, [sp, #52]	; 0x34
 800d1a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d1a2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d1a4:	f8d8 2000 	ldr.w	r2, [r8]
 800d1a8:	428b      	cmp	r3, r1
 800d1aa:	db41      	blt.n	800d230 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d1ac:	6813      	ldr	r3, [r2, #0]
 800d1ae:	4610      	mov	r0, r2
 800d1b0:	695b      	ldr	r3, [r3, #20]
 800d1b2:	4798      	blx	r3
 800d1b4:	4604      	mov	r4, r0
 800d1b6:	f8d8 0000 	ldr.w	r0, [r8]
 800d1ba:	6803      	ldr	r3, [r0, #0]
 800d1bc:	aa1d      	add	r2, sp, #116	; 0x74
 800d1be:	689e      	ldr	r6, [r3, #8]
 800d1c0:	4621      	mov	r1, r4
 800d1c2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d1c6:	47b0      	blx	r6
 800d1c8:	901c      	str	r0, [sp, #112]	; 0x70
 800d1ca:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d1ce:	429c      	cmp	r4, r3
 800d1d0:	f000 80e9 	beq.w	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d1d4:	f242 030b 	movw	r3, #8203	; 0x200b
 800d1d8:	429c      	cmp	r4, r3
 800d1da:	f000 80e4 	beq.w	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d1de:	2c00      	cmp	r4, #0
 800d1e0:	f000 80f6 	beq.w	800d3d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d1e4:	2c0a      	cmp	r4, #10
 800d1e6:	d060      	beq.n	800d2aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d1e8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d1ea:	b36a      	cbz	r2, 800d248 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800d1ec:	8894      	ldrh	r4, [r2, #4]
 800d1ee:	f1bb 0f00 	cmp.w	fp, #0
 800d1f2:	d03b      	beq.n	800d26c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800d1f4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d1f8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d1fc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d200:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d204:	f1bb 0f01 	cmp.w	fp, #1
 800d208:	ea49 0903 	orr.w	r9, r9, r3
 800d20c:	d134      	bne.n	800d278 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800d20e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d210:	eba5 0509 	sub.w	r5, r5, r9
 800d214:	2b00      	cmp	r3, #0
 800d216:	d14f      	bne.n	800d2b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d218:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d21a:	eb09 0305 	add.w	r3, r9, r5
 800d21e:	4413      	add	r3, r2
 800d220:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d222:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d226:	4293      	cmp	r3, r2
 800d228:	da51      	bge.n	800d2ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d22a:	e038      	b.n	800d29e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d22c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d22e:	e79d      	b.n	800d16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800d230:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d234:	9301      	str	r3, [sp, #4]
 800d236:	ab1d      	add	r3, sp, #116	; 0x74
 800d238:	9300      	str	r3, [sp, #0]
 800d23a:	4659      	mov	r1, fp
 800d23c:	ab1c      	add	r3, sp, #112	; 0x70
 800d23e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d240:	f002 fe68 	bl	800ff14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d244:	4604      	mov	r4, r0
 800d246:	e7c0      	b.n	800d1ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800d248:	f8d8 0000 	ldr.w	r0, [r8]
 800d24c:	6803      	ldr	r3, [r0, #0]
 800d24e:	691b      	ldr	r3, [r3, #16]
 800d250:	4798      	blx	r3
 800d252:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d256:	4298      	cmp	r0, r3
 800d258:	f000 80a5 	beq.w	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d25c:	f242 030b 	movw	r3, #8203	; 0x200b
 800d260:	4298      	cmp	r0, r3
 800d262:	f000 80a0 	beq.w	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d266:	f1bb 0f00 	cmp.w	fp, #0
 800d26a:	d100      	bne.n	800d26e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800d26c:	444d      	add	r5, r9
 800d26e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d270:	2a00      	cmp	r2, #0
 800d272:	d1bf      	bne.n	800d1f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800d274:	4691      	mov	r9, r2
 800d276:	e096      	b.n	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d278:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d27a:	2b00      	cmp	r3, #0
 800d27c:	f000 80aa 	beq.w	800d3d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800d280:	f1bb 0f00 	cmp.w	fp, #0
 800d284:	d118      	bne.n	800d2b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d286:	f8d8 0000 	ldr.w	r0, [r8]
 800d28a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d28c:	6803      	ldr	r3, [r0, #0]
 800d28e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d290:	4798      	blx	r3
 800d292:	4405      	add	r5, r0
 800d294:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d296:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d298:	1aeb      	subs	r3, r5, r3
 800d29a:	4293      	cmp	r3, r2
 800d29c:	dd17      	ble.n	800d2ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d29e:	2c00      	cmp	r4, #0
 800d2a0:	f000 8096 	beq.w	800d3d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d2a4:	2c0a      	cmp	r4, #10
 800d2a6:	f040 8084 	bne.w	800d3b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800d2aa:	240a      	movs	r4, #10
 800d2ac:	fab4 f084 	clz	r0, r4
 800d2b0:	0940      	lsrs	r0, r0, #5
 800d2b2:	b01f      	add	sp, #124	; 0x7c
 800d2b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2b8:	f8d8 0000 	ldr.w	r0, [r8]
 800d2bc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d2be:	6803      	ldr	r3, [r0, #0]
 800d2c0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d2c2:	4798      	blx	r3
 800d2c4:	f1bb 0f01 	cmp.w	fp, #1
 800d2c8:	eba5 0500 	sub.w	r5, r5, r0
 800d2cc:	d0a4      	beq.n	800d218 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800d2ce:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d2d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d2d2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d2d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d2da:	7b43      	ldrb	r3, [r0, #13]
 800d2dc:	015b      	lsls	r3, r3, #5
 800d2de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d2e2:	7983      	ldrb	r3, [r0, #6]
 800d2e4:	4429      	add	r1, r5
 800d2e6:	4313      	orrs	r3, r2
 800d2e8:	440b      	add	r3, r1
 800d2ea:	42b3      	cmp	r3, r6
 800d2ec:	db5b      	blt.n	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d2ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d2f0:	4299      	cmp	r1, r3
 800d2f2:	da58      	bge.n	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d2f4:	f8d8 0000 	ldr.w	r0, [r8]
 800d2f8:	6803      	ldr	r3, [r0, #0]
 800d2fa:	42ae      	cmp	r6, r5
 800d2fc:	bfc8      	it	gt
 800d2fe:	1b76      	subgt	r6, r6, r5
 800d300:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d302:	bfcc      	ite	gt
 800d304:	b2b6      	uxthgt	r6, r6
 800d306:	2600      	movle	r6, #0
 800d308:	4798      	blx	r3
 800d30a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d30c:	7b5a      	ldrb	r2, [r3, #13]
 800d30e:	00d1      	lsls	r1, r2, #3
 800d310:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d314:	7a19      	ldrb	r1, [r3, #8]
 800d316:	4339      	orrs	r1, r7
 800d318:	0657      	lsls	r7, r2, #25
 800d31a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d31c:	bf44      	itt	mi
 800d31e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d322:	b209      	sxthmi	r1, r1
 800d324:	19c7      	adds	r7, r0, r7
 800d326:	1a7f      	subs	r7, r7, r1
 800d328:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d32a:	b2bf      	uxth	r7, r7
 800d32c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d330:	fa0f fa87 	sxth.w	sl, r7
 800d334:	4551      	cmp	r1, sl
 800d336:	dd3a      	ble.n	800d3ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d338:	0112      	lsls	r2, r2, #4
 800d33a:	79d8      	ldrb	r0, [r3, #7]
 800d33c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d340:	4302      	orrs	r2, r0
 800d342:	4492      	add	sl, r2
 800d344:	4551      	cmp	r1, sl
 800d346:	dc2e      	bgt.n	800d3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d348:	1bcf      	subs	r7, r1, r7
 800d34a:	b2bf      	uxth	r7, r7
 800d34c:	468a      	mov	sl, r1
 800d34e:	9319      	str	r3, [sp, #100]	; 0x64
 800d350:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d352:	f8d8 0000 	ldr.w	r0, [r8]
 800d356:	681a      	ldr	r2, [r3, #0]
 800d358:	6801      	ldr	r1, [r0, #0]
 800d35a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d35c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d35e:	9313      	str	r3, [sp, #76]	; 0x4c
 800d360:	9218      	str	r2, [sp, #96]	; 0x60
 800d362:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d364:	4788      	blx	r1
 800d366:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d36a:	910b      	str	r1, [sp, #44]	; 0x2c
 800d36c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d370:	910a      	str	r1, [sp, #40]	; 0x28
 800d372:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d376:	9109      	str	r1, [sp, #36]	; 0x24
 800d378:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d37a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d37e:	9305      	str	r3, [sp, #20]
 800d380:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d382:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d384:	9206      	str	r2, [sp, #24]
 800d386:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d38a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d38e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d392:	442e      	add	r6, r5
 800d394:	b236      	sxth	r6, r6
 800d396:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d398:	9600      	str	r6, [sp, #0]
 800d39a:	681a      	ldr	r2, [r3, #0]
 800d39c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d39e:	685b      	ldr	r3, [r3, #4]
 800d3a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d3a2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d3a4:	47b0      	blx	r6
 800d3a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d3a8:	3301      	adds	r3, #1
 800d3aa:	930e      	str	r3, [sp, #56]	; 0x38
 800d3ac:	e6e6      	b.n	800d17c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800d3ae:	2700      	movs	r7, #0
 800d3b0:	e7cd      	b.n	800d34e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800d3b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d3b4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d3b6:	3501      	adds	r5, #1
 800d3b8:	429d      	cmp	r5, r3
 800d3ba:	f6bf af77 	bge.w	800d2ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d3be:	4659      	mov	r1, fp
 800d3c0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d3c2:	f7f7 f8d3 	bl	800456c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d3c6:	4604      	mov	r4, r0
 800d3c8:	b110      	cbz	r0, 800d3d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d3ca:	280a      	cmp	r0, #10
 800d3cc:	d1f2      	bne.n	800d3b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800d3ce:	e76c      	b.n	800d2aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d3d0:	2400      	movs	r4, #0
 800d3d2:	e76b      	b.n	800d2ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d3d4:	f1bb 0f00 	cmp.w	fp, #0
 800d3d8:	f43f af5c 	beq.w	800d294 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d3dc:	e777      	b.n	800d2ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800d3de <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d3de:	b530      	push	{r4, r5, lr}
 800d3e0:	8a44      	ldrh	r4, [r0, #18]
 800d3e2:	8ac5      	ldrh	r5, [r0, #22]
 800d3e4:	82c3      	strh	r3, [r0, #22]
 800d3e6:	442c      	add	r4, r5
 800d3e8:	1ae4      	subs	r4, r4, r3
 800d3ea:	8244      	strh	r4, [r0, #18]
 800d3ec:	8b03      	ldrh	r3, [r0, #24]
 800d3ee:	8a84      	ldrh	r4, [r0, #20]
 800d3f0:	4422      	add	r2, r4
 800d3f2:	440c      	add	r4, r1
 800d3f4:	1a59      	subs	r1, r3, r1
 800d3f6:	8342      	strh	r2, [r0, #26]
 800d3f8:	8284      	strh	r4, [r0, #20]
 800d3fa:	8301      	strh	r1, [r0, #24]
 800d3fc:	bd30      	pop	{r4, r5, pc}

0800d3fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d3fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d402:	7a43      	ldrb	r3, [r0, #9]
 800d404:	1eda      	subs	r2, r3, #3
 800d406:	b087      	sub	sp, #28
 800d408:	4604      	mov	r4, r0
 800d40a:	b2d2      	uxtb	r2, r2
 800d40c:	460f      	mov	r7, r1
 800d40e:	2900      	cmp	r1, #0
 800d410:	d036      	beq.n	800d480 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d412:	2a01      	cmp	r2, #1
 800d414:	d932      	bls.n	800d47c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d416:	1e58      	subs	r0, r3, #1
 800d418:	f1d0 0b00 	rsbs	fp, r0, #0
 800d41c:	eb4b 0b00 	adc.w	fp, fp, r0
 800d420:	1e99      	subs	r1, r3, #2
 800d422:	424b      	negs	r3, r1
 800d424:	414b      	adcs	r3, r1
 800d426:	9303      	str	r3, [sp, #12]
 800d428:	2300      	movs	r3, #0
 800d42a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d42e:	2500      	movs	r5, #0
 800d430:	8265      	strh	r5, [r4, #18]
 800d432:	82a5      	strh	r5, [r4, #20]
 800d434:	46a9      	mov	r9, r5
 800d436:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d43a:	2300      	movs	r3, #0
 800d43c:	9305      	str	r3, [sp, #20]
 800d43e:	8823      	ldrh	r3, [r4, #0]
 800d440:	2b20      	cmp	r3, #32
 800d442:	d02b      	beq.n	800d49c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d444:	eba3 020a 	sub.w	r2, r3, sl
 800d448:	4256      	negs	r6, r2
 800d44a:	4156      	adcs	r6, r2
 800d44c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d450:	4293      	cmp	r3, r2
 800d452:	d004      	beq.n	800d45e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d454:	4553      	cmp	r3, sl
 800d456:	bf16      	itet	ne
 800d458:	4699      	movne	r9, r3
 800d45a:	2601      	moveq	r6, #1
 800d45c:	2600      	movne	r6, #0
 800d45e:	ab05      	add	r3, sp, #20
 800d460:	68e2      	ldr	r2, [r4, #12]
 800d462:	7a21      	ldrb	r1, [r4, #8]
 800d464:	6860      	ldr	r0, [r4, #4]
 800d466:	f002 fcfd 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d46a:	8020      	strh	r0, [r4, #0]
 800d46c:	b9c8      	cbnz	r0, 800d4a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d46e:	8b22      	ldrh	r2, [r4, #24]
 800d470:	2300      	movs	r3, #0
 800d472:	4611      	mov	r1, r2
 800d474:	4620      	mov	r0, r4
 800d476:	f7ff ffb2 	bl	800d3de <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d47a:	e066      	b.n	800d54a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d47c:	468b      	mov	fp, r1
 800d47e:	e7cf      	b.n	800d420 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d480:	3b01      	subs	r3, #1
 800d482:	2a01      	cmp	r2, #1
 800d484:	bf8c      	ite	hi
 800d486:	2200      	movhi	r2, #0
 800d488:	2201      	movls	r2, #1
 800d48a:	2b01      	cmp	r3, #1
 800d48c:	bf8c      	ite	hi
 800d48e:	2300      	movhi	r3, #0
 800d490:	2301      	movls	r3, #1
 800d492:	9202      	str	r2, [sp, #8]
 800d494:	9301      	str	r3, [sp, #4]
 800d496:	9103      	str	r1, [sp, #12]
 800d498:	468b      	mov	fp, r1
 800d49a:	e7c8      	b.n	800d42e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d49c:	4699      	mov	r9, r3
 800d49e:	2601      	movs	r6, #1
 800d4a0:	e7dd      	b.n	800d45e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d4a2:	8ae3      	ldrh	r3, [r4, #22]
 800d4a4:	280a      	cmp	r0, #10
 800d4a6:	f103 0301 	add.w	r3, r3, #1
 800d4aa:	82e3      	strh	r3, [r4, #22]
 800d4ac:	d0df      	beq.n	800d46e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d4ae:	9a05      	ldr	r2, [sp, #20]
 800d4b0:	bb42      	cbnz	r2, 800d504 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d4b2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d4b6:	4298      	cmp	r0, r3
 800d4b8:	d001      	beq.n	800d4be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d4ba:	4550      	cmp	r0, sl
 800d4bc:	d1bd      	bne.n	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d4be:	8823      	ldrh	r3, [r4, #0]
 800d4c0:	8b21      	ldrh	r1, [r4, #24]
 800d4c2:	2b20      	cmp	r3, #32
 800d4c4:	d001      	beq.n	800d4ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d4c6:	4553      	cmp	r3, sl
 800d4c8:	d131      	bne.n	800d52e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d4ca:	2e00      	cmp	r6, #0
 800d4cc:	bf0a      	itet	eq
 800d4ce:	460d      	moveq	r5, r1
 800d4d0:	4630      	movne	r0, r6
 800d4d2:	2001      	moveq	r0, #1
 800d4d4:	440a      	add	r2, r1
 800d4d6:	8aa3      	ldrh	r3, [r4, #20]
 800d4d8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d4dc:	b292      	uxth	r2, r2
 800d4de:	8322      	strh	r2, [r4, #24]
 800d4e0:	4413      	add	r3, r2
 800d4e2:	2f00      	cmp	r7, #0
 800d4e4:	d03a      	beq.n	800d55c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d4e6:	f1bb 0f00 	cmp.w	fp, #0
 800d4ea:	d102      	bne.n	800d4f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d4ec:	9903      	ldr	r1, [sp, #12]
 800d4ee:	b301      	cbz	r1, 800d532 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d4f0:	b1f8      	cbz	r0, 800d532 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d4f2:	8ba1      	ldrh	r1, [r4, #28]
 800d4f4:	4419      	add	r1, r3
 800d4f6:	458c      	cmp	ip, r1
 800d4f8:	da2a      	bge.n	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d4fa:	8a61      	ldrh	r1, [r4, #18]
 800d4fc:	b341      	cbz	r1, 800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d4fe:	4563      	cmp	r3, ip
 800d500:	dd9b      	ble.n	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d502:	e01c      	b.n	800d53e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d504:	8893      	ldrh	r3, [r2, #4]
 800d506:	8023      	strh	r3, [r4, #0]
 800d508:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d50c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d510:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d514:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d518:	ea48 0800 	orr.w	r8, r8, r0
 800d51c:	68e0      	ldr	r0, [r4, #12]
 800d51e:	6803      	ldr	r3, [r0, #0]
 800d520:	4649      	mov	r1, r9
 800d522:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d524:	4798      	blx	r3
 800d526:	eb08 0200 	add.w	r2, r8, r0
 800d52a:	b292      	uxth	r2, r2
 800d52c:	e7c7      	b.n	800d4be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d52e:	2000      	movs	r0, #0
 800d530:	e7d0      	b.n	800d4d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d532:	4563      	cmp	r3, ip
 800d534:	dd81      	ble.n	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d536:	8a63      	ldrh	r3, [r4, #18]
 800d538:	2b00      	cmp	r3, #0
 800d53a:	f43f af7e 	beq.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d53e:	2301      	movs	r3, #1
 800d540:	77a3      	strb	r3, [r4, #30]
 800d542:	8ba2      	ldrh	r2, [r4, #28]
 800d544:	8b63      	ldrh	r3, [r4, #26]
 800d546:	4413      	add	r3, r2
 800d548:	8363      	strh	r3, [r4, #26]
 800d54a:	b007      	add	sp, #28
 800d54c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d550:	2300      	movs	r3, #0
 800d552:	4611      	mov	r1, r2
 800d554:	4620      	mov	r0, r4
 800d556:	f7ff ff42 	bl	800d3de <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d55a:	e76e      	b.n	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d55c:	4563      	cmp	r3, ip
 800d55e:	dd14      	ble.n	800d58a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d560:	9b02      	ldr	r3, [sp, #8]
 800d562:	b113      	cbz	r3, 800d56a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d564:	2301      	movs	r3, #1
 800d566:	460a      	mov	r2, r1
 800d568:	e783      	b.n	800d472 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d56a:	9b01      	ldr	r3, [sp, #4]
 800d56c:	2b00      	cmp	r3, #0
 800d56e:	f43f af64 	beq.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d572:	2800      	cmp	r0, #0
 800d574:	f47f af61 	bne.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d578:	b116      	cbz	r6, 800d580 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d57a:	2301      	movs	r3, #1
 800d57c:	462a      	mov	r2, r5
 800d57e:	e779      	b.n	800d474 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d580:	8a63      	ldrh	r3, [r4, #18]
 800d582:	2b00      	cmp	r3, #0
 800d584:	f43f af59 	beq.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d588:	e7df      	b.n	800d54a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d58a:	2800      	cmp	r0, #0
 800d58c:	f47f af55 	bne.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d590:	2e00      	cmp	r6, #0
 800d592:	f43f af52 	beq.w	800d43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d596:	2301      	movs	r3, #1
 800d598:	462a      	mov	r2, r5
 800d59a:	e7db      	b.n	800d554 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d59c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d59c:	b530      	push	{r4, r5, lr}
 800d59e:	4605      	mov	r5, r0
 800d5a0:	b08b      	sub	sp, #44	; 0x2c
 800d5a2:	b191      	cbz	r1, 800d5ca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d5a4:	e9cd 3100 	strd	r3, r1, [sp]
 800d5a8:	4613      	mov	r3, r2
 800d5aa:	4601      	mov	r1, r0
 800d5ac:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d5b0:	a802      	add	r0, sp, #8
 800d5b2:	f7ff fd0d 	bl	800cfd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d5b6:	2401      	movs	r4, #1
 800d5b8:	2100      	movs	r1, #0
 800d5ba:	a802      	add	r0, sp, #8
 800d5bc:	f7ff ff1f 	bl	800d3fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d5c0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d5c4:	b163      	cbz	r3, 800d5e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d5c6:	3401      	adds	r4, #1
 800d5c8:	e7f6      	b.n	800d5b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d5ca:	f002 fd43 	bl	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d5ce:	2401      	movs	r4, #1
 800d5d0:	280a      	cmp	r0, #10
 800d5d2:	4628      	mov	r0, r5
 800d5d4:	bf08      	it	eq
 800d5d6:	3401      	addeq	r4, #1
 800d5d8:	f002 fd3c 	bl	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d5dc:	2800      	cmp	r0, #0
 800d5de:	d1f7      	bne.n	800d5d0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d5e0:	b2a0      	uxth	r0, r4
 800d5e2:	b00b      	add	sp, #44	; 0x2c
 800d5e4:	bd30      	pop	{r4, r5, pc}

0800d5e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d5e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5ea:	b0df      	sub	sp, #380	; 0x17c
 800d5ec:	4689      	mov	r9, r1
 800d5ee:	f8dd a1a0 	ldr.w	sl, [sp, #416]	; 0x1a0
 800d5f2:	900a      	str	r0, [sp, #40]	; 0x28
 800d5f4:	461c      	mov	r4, r3
 800d5f6:	f1ba 0f00 	cmp.w	sl, #0
 800d5fa:	f000 80b1 	beq.w	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d5fe:	681b      	ldr	r3, [r3, #0]
 800d600:	2b00      	cmp	r3, #0
 800d602:	f000 80ad 	beq.w	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d606:	7ba3      	ldrb	r3, [r4, #14]
 800d608:	2b00      	cmp	r3, #0
 800d60a:	f000 80a9 	beq.w	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d60e:	6810      	ldr	r0, [r2, #0]
 800d610:	6851      	ldr	r1, [r2, #4]
 800d612:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d616:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800d61a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800d61e:	4643      	mov	r3, r8
 800d620:	c303      	stmia	r3!, {r0, r1}
 800d622:	2500      	movs	r5, #0
 800d624:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d628:	79a2      	ldrb	r2, [r4, #6]
 800d62a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d62e:	a90f      	add	r1, sp, #60	; 0x3c
 800d630:	4640      	mov	r0, r8
 800d632:	950f      	str	r5, [sp, #60]	; 0x3c
 800d634:	f7ff fd42 	bl	800d0bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d638:	a90f      	add	r1, sp, #60	; 0x3c
 800d63a:	4608      	mov	r0, r1
 800d63c:	79a2      	ldrb	r2, [r4, #6]
 800d63e:	af19      	add	r7, sp, #100	; 0x64
 800d640:	f7ff fd3c 	bl	800d0bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d644:	4638      	mov	r0, r7
 800d646:	f002 f8c4 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800d64a:	6820      	ldr	r0, [r4, #0]
 800d64c:	6803      	ldr	r3, [r0, #0]
 800d64e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d650:	4798      	blx	r3
 800d652:	4606      	mov	r6, r0
 800d654:	6820      	ldr	r0, [r4, #0]
 800d656:	6803      	ldr	r3, [r0, #0]
 800d658:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d65a:	4798      	blx	r3
 800d65c:	4633      	mov	r3, r6
 800d65e:	9000      	str	r0, [sp, #0]
 800d660:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800d662:	4651      	mov	r1, sl
 800d664:	4638      	mov	r0, r7
 800d666:	f002 f901 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d66a:	6820      	ldr	r0, [r4, #0]
 800d66c:	7923      	ldrb	r3, [r4, #4]
 800d66e:	9308      	str	r3, [sp, #32]
 800d670:	6803      	ldr	r3, [r0, #0]
 800d672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d674:	4798      	blx	r3
 800d676:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d67a:	181e      	adds	r6, r3, r0
 800d67c:	42ae      	cmp	r6, r5
 800d67e:	dd06      	ble.n	800d68e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800d680:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800d684:	4282      	cmp	r2, r0
 800d686:	bfa4      	itt	ge
 800d688:	189d      	addge	r5, r3, r2
 800d68a:	fb95 f5f6 	sdivge	r5, r5, r6
 800d68e:	a830      	add	r0, sp, #192	; 0xc0
 800d690:	f002 f89f 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800d694:	7c23      	ldrb	r3, [r4, #16]
 800d696:	b17b      	cbz	r3, 800d6b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800d698:	6820      	ldr	r0, [r4, #0]
 800d69a:	6803      	ldr	r3, [r0, #0]
 800d69c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d69e:	4798      	blx	r3
 800d6a0:	4683      	mov	fp, r0
 800d6a2:	6820      	ldr	r0, [r4, #0]
 800d6a4:	6803      	ldr	r3, [r0, #0]
 800d6a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d6a8:	4798      	blx	r3
 800d6aa:	465b      	mov	r3, fp
 800d6ac:	9000      	str	r0, [sp, #0]
 800d6ae:	9a69      	ldr	r2, [sp, #420]	; 0x1a4
 800d6b0:	4651      	mov	r1, sl
 800d6b2:	a830      	add	r0, sp, #192	; 0xc0
 800d6b4:	f002 f8da 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d6b8:	7c21      	ldrb	r1, [r4, #16]
 800d6ba:	9101      	str	r1, [sp, #4]
 800d6bc:	6821      	ldr	r1, [r4, #0]
 800d6be:	7963      	ldrb	r3, [r4, #5]
 800d6c0:	9100      	str	r1, [sp, #0]
 800d6c2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d6c6:	a930      	add	r1, sp, #192	; 0xc0
 800d6c8:	a811      	add	r0, sp, #68	; 0x44
 800d6ca:	f7ff fc81 	bl	800cfd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d6ce:	7c23      	ldrb	r3, [r4, #16]
 800d6d0:	b9bb      	cbnz	r3, 800d702 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x11c>
 800d6d2:	fa1f fa86 	uxth.w	sl, r6
 800d6d6:	2d00      	cmp	r5, #0
 800d6d8:	dd45      	ble.n	800d766 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d6da:	4638      	mov	r0, r7
 800d6dc:	f002 fcba 	bl	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6e0:	2800      	cmp	r0, #0
 800d6e2:	d03d      	beq.n	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d6e4:	280a      	cmp	r0, #10
 800d6e6:	d1f6      	bne.n	800d6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800d6e8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d6ec:	4453      	add	r3, sl
 800d6ee:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d6f2:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d6f6:	eba3 030a 	sub.w	r3, r3, sl
 800d6fa:	3d01      	subs	r5, #1
 800d6fc:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d700:	e7e9      	b.n	800d6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf0>
 800d702:	0073      	lsls	r3, r6, #1
 800d704:	9309      	str	r3, [sp, #36]	; 0x24
 800d706:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800d70a:	fa1f fa86 	uxth.w	sl, r6
 800d70e:	2d00      	cmp	r5, #0
 800d710:	dd29      	ble.n	800d766 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d712:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d716:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d718:	428b      	cmp	r3, r1
 800d71a:	bfd4      	ite	le
 800d71c:	2100      	movle	r1, #0
 800d71e:	2101      	movgt	r1, #1
 800d720:	a811      	add	r0, sp, #68	; 0x44
 800d722:	f7ff fe6c 	bl	800d3fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d726:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800d72a:	3b01      	subs	r3, #1
 800d72c:	b29b      	uxth	r3, r3
 800d72e:	455b      	cmp	r3, fp
 800d730:	930b      	str	r3, [sp, #44]	; 0x2c
 800d732:	d005      	beq.n	800d740 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15a>
 800d734:	7961      	ldrb	r1, [r4, #5]
 800d736:	4638      	mov	r0, r7
 800d738:	f7f6 ff18 	bl	800456c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d73c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d73e:	e7f4      	b.n	800d72a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800d740:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d744:	4453      	add	r3, sl
 800d746:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d74a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d74e:	eba3 030a 	sub.w	r3, r3, sl
 800d752:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d756:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d75a:	3d01      	subs	r5, #1
 800d75c:	2b00      	cmp	r3, #0
 800d75e:	d1d6      	bne.n	800d70e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x128>
 800d760:	b05f      	add	sp, #380	; 0x17c
 800d762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d766:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800d76a:	ad47      	add	r5, sp, #284	; 0x11c
 800d76c:	f04f 0b00 	mov.w	fp, #0
 800d770:	7c23      	ldrb	r3, [r4, #16]
 800d772:	2b00      	cmp	r3, #0
 800d774:	d067      	beq.n	800d846 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800d776:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d77a:	458a      	cmp	sl, r1
 800d77c:	bfd4      	ite	le
 800d77e:	2100      	movle	r1, #0
 800d780:	2101      	movgt	r1, #1
 800d782:	a811      	add	r0, sp, #68	; 0x44
 800d784:	f7ff fe3b 	bl	800d3fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d788:	9b08      	ldr	r3, [sp, #32]
 800d78a:	2b00      	cmp	r3, #0
 800d78c:	d056      	beq.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d78e:	7c23      	ldrb	r3, [r4, #16]
 800d790:	9309      	str	r3, [sp, #36]	; 0x24
 800d792:	225c      	movs	r2, #92	; 0x5c
 800d794:	4639      	mov	r1, r7
 800d796:	4628      	mov	r0, r5
 800d798:	f00f fc7a 	bl	801d090 <memcpy>
 800d79c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d79e:	2b00      	cmp	r3, #0
 800d7a0:	d059      	beq.n	800d856 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800d7a2:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800d7a6:	7922      	ldrb	r2, [r4, #4]
 800d7a8:	2a01      	cmp	r2, #1
 800d7aa:	d13d      	bne.n	800d828 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800d7ac:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800d7b0:	1ac0      	subs	r0, r0, r3
 800d7b2:	2302      	movs	r3, #2
 800d7b4:	fb90 f0f3 	sdiv	r0, r0, r3
 800d7b8:	b200      	sxth	r0, r0
 800d7ba:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d7be:	4418      	add	r0, r3
 800d7c0:	7c23      	ldrb	r3, [r4, #16]
 800d7c2:	f8ad 011c 	strh.w	r0, [sp, #284]	; 0x11c
 800d7c6:	2b00      	cmp	r3, #0
 800d7c8:	d03a      	beq.n	800d840 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800d7ca:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800d7ce:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800d7d2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800d7d6:	9500      	str	r5, [sp, #0]
 800d7d8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d7dc:	e9cd b703 	strd	fp, r7, [sp, #12]
 800d7e0:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800d7e4:	464a      	mov	r2, r9
 800d7e6:	2100      	movs	r1, #0
 800d7e8:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d7ea:	f7ff fc98 	bl	800d11e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d7ee:	2800      	cmp	r0, #0
 800d7f0:	d1b6      	bne.n	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d7f2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d7f6:	b2b2      	uxth	r2, r6
 800d7f8:	4611      	mov	r1, r2
 800d7fa:	4413      	add	r3, r2
 800d7fc:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800d800:	1a52      	subs	r2, r2, r1
 800d802:	7c21      	ldrb	r1, [r4, #16]
 800d804:	b21b      	sxth	r3, r3
 800d806:	b212      	sxth	r2, r2
 800d808:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d80c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800d810:	b109      	cbz	r1, 800d816 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800d812:	42b2      	cmp	r2, r6
 800d814:	dba4      	blt.n	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d816:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800d81a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800d81e:	440a      	add	r2, r1
 800d820:	b212      	sxth	r2, r2
 800d822:	4293      	cmp	r3, r2
 800d824:	dda4      	ble.n	800d770 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18a>
 800d826:	e79b      	b.n	800d760 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x17a>
 800d828:	2a02      	cmp	r2, #2
 800d82a:	d105      	bne.n	800d838 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d82c:	7be2      	ldrb	r2, [r4, #15]
 800d82e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800d832:	1a80      	subs	r0, r0, r2
 800d834:	1ac0      	subs	r0, r0, r3
 800d836:	e7bf      	b.n	800d7b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 800d838:	2000      	movs	r0, #0
 800d83a:	e7be      	b.n	800d7ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800d83c:	7be0      	ldrb	r0, [r4, #15]
 800d83e:	e7bc      	b.n	800d7ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800d840:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d844:	e7c3      	b.n	800d7ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800d846:	9b08      	ldr	r3, [sp, #32]
 800d848:	2b00      	cmp	r3, #0
 800d84a:	d0f7      	beq.n	800d83c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d84c:	225c      	movs	r2, #92	; 0x5c
 800d84e:	4639      	mov	r1, r7
 800d850:	4628      	mov	r0, r5
 800d852:	f00f fc1d 	bl	801d090 <memcpy>
 800d856:	2300      	movs	r3, #0
 800d858:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d85c:	6821      	ldr	r1, [r4, #0]
 800d85e:	4628      	mov	r0, r5
 800d860:	f7ff fbf0 	bl	800d044 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d864:	b203      	sxth	r3, r0
 800d866:	e79e      	b.n	800d7a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c0>

0800d868 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d868:	b510      	push	{r4, lr}
 800d86a:	2b02      	cmp	r3, #2
 800d86c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d870:	d00b      	beq.n	800d88a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d872:	2b03      	cmp	r3, #3
 800d874:	d00e      	beq.n	800d894 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d876:	2b01      	cmp	r3, #1
 800d878:	d001      	beq.n	800d87e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d87a:	1860      	adds	r0, r4, r1
 800d87c:	bd10      	pop	{r4, pc}
 800d87e:	8880      	ldrh	r0, [r0, #4]
 800d880:	4420      	add	r0, r4
 800d882:	b200      	sxth	r0, r0
 800d884:	1a80      	subs	r0, r0, r2
 800d886:	3801      	subs	r0, #1
 800d888:	e7f8      	b.n	800d87c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d88a:	8880      	ldrh	r0, [r0, #4]
 800d88c:	4420      	add	r0, r4
 800d88e:	b200      	sxth	r0, r0
 800d890:	1a40      	subs	r0, r0, r1
 800d892:	e7f8      	b.n	800d886 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d894:	18a0      	adds	r0, r4, r2
 800d896:	e7f1      	b.n	800d87c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d898 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d898:	b510      	push	{r4, lr}
 800d89a:	2b02      	cmp	r3, #2
 800d89c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d8a0:	d006      	beq.n	800d8b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d8a2:	2b03      	cmp	r3, #3
 800d8a4:	d00a      	beq.n	800d8bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d8a6:	2b01      	cmp	r3, #1
 800d8a8:	bf14      	ite	ne
 800d8aa:	18a0      	addne	r0, r4, r2
 800d8ac:	1860      	addeq	r0, r4, r1
 800d8ae:	bd10      	pop	{r4, pc}
 800d8b0:	88c0      	ldrh	r0, [r0, #6]
 800d8b2:	4420      	add	r0, r4
 800d8b4:	b200      	sxth	r0, r0
 800d8b6:	1a80      	subs	r0, r0, r2
 800d8b8:	3801      	subs	r0, #1
 800d8ba:	e7f8      	b.n	800d8ae <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d8bc:	88c0      	ldrh	r0, [r0, #6]
 800d8be:	4420      	add	r0, r4
 800d8c0:	b200      	sxth	r0, r0
 800d8c2:	1a40      	subs	r0, r0, r1
 800d8c4:	e7f8      	b.n	800d8b8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800d8c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d8c8:	4b01      	ldr	r3, [pc, #4]	; (800d8d0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d8ca:	2200      	movs	r2, #0
 800d8cc:	601a      	str	r2, [r3, #0]
 800d8ce:	4770      	bx	lr
 800d8d0:	20012dcc 	.word	0x20012dcc

0800d8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d8d4:	4603      	mov	r3, r0
 800d8d6:	b1c8      	cbz	r0, 800d90c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800d8d8:	0c02      	lsrs	r2, r0, #16
 800d8da:	0412      	lsls	r2, r2, #16
 800d8dc:	b9a2      	cbnz	r2, 800d908 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800d8de:	0403      	lsls	r3, r0, #16
 800d8e0:	2010      	movs	r0, #16
 800d8e2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800d8e6:	bf04      	itt	eq
 800d8e8:	021b      	lsleq	r3, r3, #8
 800d8ea:	3008      	addeq	r0, #8
 800d8ec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800d8f0:	bf04      	itt	eq
 800d8f2:	011b      	lsleq	r3, r3, #4
 800d8f4:	3004      	addeq	r0, #4
 800d8f6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800d8fa:	bf04      	itt	eq
 800d8fc:	009b      	lsleq	r3, r3, #2
 800d8fe:	3002      	addeq	r0, #2
 800d900:	2b00      	cmp	r3, #0
 800d902:	db04      	blt.n	800d90e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800d904:	3001      	adds	r0, #1
 800d906:	4770      	bx	lr
 800d908:	2000      	movs	r0, #0
 800d90a:	e7ea      	b.n	800d8e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800d90c:	2020      	movs	r0, #32
 800d90e:	4770      	bx	lr

0800d910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800d910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d914:	b087      	sub	sp, #28
 800d916:	4681      	mov	r9, r0
 800d918:	4698      	mov	r8, r3
 800d91a:	4610      	mov	r0, r2
 800d91c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800d920:	460d      	mov	r5, r1
 800d922:	b981      	cbnz	r1, 800d946 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800d924:	b14b      	cbz	r3, 800d93a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800d926:	460b      	mov	r3, r1
 800d928:	e9cd 4700 	strd	r4, r7, [sp]
 800d92c:	464a      	mov	r2, r9
 800d92e:	4641      	mov	r1, r8
 800d930:	f7ff ffee 	bl	800d910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d934:	b007      	add	sp, #28
 800d936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d93a:	f04f 33ff 	mov.w	r3, #4294967295
 800d93e:	603b      	str	r3, [r7, #0]
 800d940:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800d944:	e7f6      	b.n	800d934 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d946:	fa32 fa01 	lsrs.w	sl, r2, r1
 800d94a:	d107      	bne.n	800d95c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800d94c:	fb09 f602 	mul.w	r6, r9, r2
 800d950:	fbb6 f0f4 	udiv	r0, r6, r4
 800d954:	fb04 6610 	mls	r6, r4, r0, r6
 800d958:	603e      	str	r6, [r7, #0]
 800d95a:	e7eb      	b.n	800d934 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d95c:	2601      	movs	r6, #1
 800d95e:	408e      	lsls	r6, r1
 800d960:	3e01      	subs	r6, #1
 800d962:	4016      	ands	r6, r2
 800d964:	fa09 fb01 	lsl.w	fp, r9, r1
 800d968:	4630      	mov	r0, r6
 800d96a:	fbbb f3f4 	udiv	r3, fp, r4
 800d96e:	9302      	str	r3, [sp, #8]
 800d970:	fb0a f303 	mul.w	r3, sl, r3
 800d974:	9303      	str	r3, [sp, #12]
 800d976:	f7ff ffad 	bl	800d8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d97a:	464a      	mov	r2, r9
 800d97c:	460b      	mov	r3, r1
 800d97e:	e9cd 4700 	strd	r4, r7, [sp]
 800d982:	4601      	mov	r1, r0
 800d984:	4630      	mov	r0, r6
 800d986:	f7ff ffc3 	bl	800d910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d98a:	9b02      	ldr	r3, [sp, #8]
 800d98c:	fb04 bb13 	mls	fp, r4, r3, fp
 800d990:	4606      	mov	r6, r0
 800d992:	4658      	mov	r0, fp
 800d994:	eb05 0108 	add.w	r1, r5, r8
 800d998:	f7ff ff9c 	bl	800d8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d99c:	ab05      	add	r3, sp, #20
 800d99e:	e9cd 4300 	strd	r4, r3, [sp]
 800d9a2:	465a      	mov	r2, fp
 800d9a4:	4603      	mov	r3, r0
 800d9a6:	4650      	mov	r0, sl
 800d9a8:	f7ff ffb2 	bl	800d910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d9ac:	6839      	ldr	r1, [r7, #0]
 800d9ae:	9a05      	ldr	r2, [sp, #20]
 800d9b0:	9b03      	ldr	r3, [sp, #12]
 800d9b2:	4411      	add	r1, r2
 800d9b4:	fbb1 f2f4 	udiv	r2, r1, r4
 800d9b8:	18d3      	adds	r3, r2, r3
 800d9ba:	441e      	add	r6, r3
 800d9bc:	fb04 1412 	mls	r4, r4, r2, r1
 800d9c0:	4430      	add	r0, r6
 800d9c2:	603c      	str	r4, [r7, #0]
 800d9c4:	e7b6      	b.n	800d934 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800d9c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800d9c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d9ca:	b085      	sub	sp, #20
 800d9cc:	f1b0 0900 	subs.w	r9, r0, #0
 800d9d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d9d2:	461d      	mov	r5, r3
 800d9d4:	bfbf      	itttt	lt
 800d9d6:	6823      	ldrlt	r3, [r4, #0]
 800d9d8:	425b      	neglt	r3, r3
 800d9da:	f1c9 0900 	rsblt	r9, r9, #0
 800d9de:	6023      	strlt	r3, [r4, #0]
 800d9e0:	bfb4      	ite	lt
 800d9e2:	f04f 36ff 	movlt.w	r6, #4294967295
 800d9e6:	2601      	movge	r6, #1
 800d9e8:	2a00      	cmp	r2, #0
 800d9ea:	4617      	mov	r7, r2
 800d9ec:	da04      	bge.n	800d9f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800d9ee:	6823      	ldr	r3, [r4, #0]
 800d9f0:	425b      	negs	r3, r3
 800d9f2:	4257      	negs	r7, r2
 800d9f4:	4276      	negs	r6, r6
 800d9f6:	6023      	str	r3, [r4, #0]
 800d9f8:	2d00      	cmp	r5, #0
 800d9fa:	4638      	mov	r0, r7
 800d9fc:	bfba      	itte	lt
 800d9fe:	426d      	neglt	r5, r5
 800da00:	f04f 38ff 	movlt.w	r8, #4294967295
 800da04:	f04f 0801 	movge.w	r8, #1
 800da08:	f7ff ff64 	bl	800d8d4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800da0c:	ab03      	add	r3, sp, #12
 800da0e:	e9cd 5300 	strd	r5, r3, [sp]
 800da12:	463a      	mov	r2, r7
 800da14:	4603      	mov	r3, r0
 800da16:	4648      	mov	r0, r9
 800da18:	f7ff ff7a 	bl	800d910 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da1c:	6823      	ldr	r3, [r4, #0]
 800da1e:	9a03      	ldr	r2, [sp, #12]
 800da20:	4546      	cmp	r6, r8
 800da22:	441a      	add	r2, r3
 800da24:	fb92 f3f5 	sdiv	r3, r2, r5
 800da28:	4418      	add	r0, r3
 800da2a:	bf18      	it	ne
 800da2c:	4240      	negne	r0, r0
 800da2e:	fb05 2313 	mls	r3, r5, r3, r2
 800da32:	1c72      	adds	r2, r6, #1
 800da34:	6023      	str	r3, [r4, #0]
 800da36:	d105      	bne.n	800da44 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800da38:	2b00      	cmp	r3, #0
 800da3a:	f1c3 0200 	rsb	r2, r3, #0
 800da3e:	db0b      	blt.n	800da58 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800da40:	6022      	str	r2, [r4, #0]
 800da42:	e006      	b.n	800da52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800da44:	2e01      	cmp	r6, #1
 800da46:	d104      	bne.n	800da52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800da48:	2b00      	cmp	r3, #0
 800da4a:	da02      	bge.n	800da52 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800da4c:	442b      	add	r3, r5
 800da4e:	3801      	subs	r0, #1
 800da50:	6023      	str	r3, [r4, #0]
 800da52:	b005      	add	sp, #20
 800da54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800da58:	3801      	subs	r0, #1
 800da5a:	1b52      	subs	r2, r2, r5
 800da5c:	e7f0      	b.n	800da40 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800da60 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800da60:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800da64:	4c1c      	ldr	r4, [pc, #112]	; (800dad8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800da66:	6807      	ldr	r7, [r0, #0]
 800da68:	69a3      	ldr	r3, [r4, #24]
 800da6a:	4605      	mov	r5, r0
 800da6c:	b92b      	cbnz	r3, 800da7a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800da6e:	6840      	ldr	r0, [r0, #4]
 800da70:	e9c5 7000 	strd	r7, r0, [r5]
 800da74:	b004      	add	sp, #16
 800da76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da7a:	68a2      	ldr	r2, [r4, #8]
 800da7c:	6820      	ldr	r0, [r4, #0]
 800da7e:	ae04      	add	r6, sp, #16
 800da80:	f04f 0802 	mov.w	r8, #2
 800da84:	fb93 f1f8 	sdiv	r1, r3, r8
 800da88:	440a      	add	r2, r1
 800da8a:	f846 2d04 	str.w	r2, [r6, #-4]!
 800da8e:	69e1      	ldr	r1, [r4, #28]
 800da90:	9600      	str	r6, [sp, #0]
 800da92:	463a      	mov	r2, r7
 800da94:	f7ff ff97 	bl	800d9c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800da98:	69a3      	ldr	r3, [r4, #24]
 800da9a:	686a      	ldr	r2, [r5, #4]
 800da9c:	6a21      	ldr	r1, [r4, #32]
 800da9e:	9600      	str	r6, [sp, #0]
 800daa0:	4607      	mov	r7, r0
 800daa2:	6860      	ldr	r0, [r4, #4]
 800daa4:	f7ff ff8f 	bl	800d9c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800daa8:	6962      	ldr	r2, [r4, #20]
 800daaa:	69a3      	ldr	r3, [r4, #24]
 800daac:	fb93 f8f8 	sdiv	r8, r3, r8
 800dab0:	4442      	add	r2, r8
 800dab2:	9203      	str	r2, [sp, #12]
 800dab4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dab6:	682a      	ldr	r2, [r5, #0]
 800dab8:	9600      	str	r6, [sp, #0]
 800daba:	4407      	add	r7, r0
 800dabc:	68e0      	ldr	r0, [r4, #12]
 800dabe:	f7ff ff82 	bl	800d9c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dac2:	9600      	str	r6, [sp, #0]
 800dac4:	4680      	mov	r8, r0
 800dac6:	69a3      	ldr	r3, [r4, #24]
 800dac8:	686a      	ldr	r2, [r5, #4]
 800daca:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800dacc:	6920      	ldr	r0, [r4, #16]
 800dace:	f7ff ff7a 	bl	800d9c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dad2:	4440      	add	r0, r8
 800dad4:	e7cc      	b.n	800da70 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800dad6:	bf00      	nop
 800dad8:	20012dd0 	.word	0x20012dd0

0800dadc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dadc:	b510      	push	{r4, lr}
 800dade:	4b07      	ldr	r3, [pc, #28]	; (800dafc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dae0:	781b      	ldrb	r3, [r3, #0]
 800dae2:	2b01      	cmp	r3, #1
 800dae4:	d108      	bne.n	800daf8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dae6:	4b06      	ldr	r3, [pc, #24]	; (800db00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dae8:	880c      	ldrh	r4, [r1, #0]
 800daea:	881b      	ldrh	r3, [r3, #0]
 800daec:	f9b0 2000 	ldrsh.w	r2, [r0]
 800daf0:	3b01      	subs	r3, #1
 800daf2:	1b1b      	subs	r3, r3, r4
 800daf4:	8003      	strh	r3, [r0, #0]
 800daf6:	800a      	strh	r2, [r1, #0]
 800daf8:	bd10      	pop	{r4, pc}
 800dafa:	bf00      	nop
 800dafc:	20012dbc 	.word	0x20012dbc
 800db00:	20012dc0 	.word	0x20012dc0

0800db04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800db04:	b510      	push	{r4, lr}
 800db06:	4b0a      	ldr	r3, [pc, #40]	; (800db30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800db08:	781b      	ldrb	r3, [r3, #0]
 800db0a:	2b01      	cmp	r3, #1
 800db0c:	d10e      	bne.n	800db2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800db0e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800db12:	8843      	ldrh	r3, [r0, #2]
 800db14:	f9b0 4000 	ldrsh.w	r4, [r0]
 800db18:	8044      	strh	r4, [r0, #2]
 800db1a:	18ca      	adds	r2, r1, r3
 800db1c:	4b05      	ldr	r3, [pc, #20]	; (800db34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800db1e:	881b      	ldrh	r3, [r3, #0]
 800db20:	1a9b      	subs	r3, r3, r2
 800db22:	8003      	strh	r3, [r0, #0]
 800db24:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800db28:	80c3      	strh	r3, [r0, #6]
 800db2a:	8081      	strh	r1, [r0, #4]
 800db2c:	bd10      	pop	{r4, pc}
 800db2e:	bf00      	nop
 800db30:	20012dbc 	.word	0x20012dbc
 800db34:	20012db8 	.word	0x20012db8

0800db38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800db38:	b510      	push	{r4, lr}
 800db3a:	4b07      	ldr	r3, [pc, #28]	; (800db58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800db3c:	781b      	ldrb	r3, [r3, #0]
 800db3e:	2b01      	cmp	r3, #1
 800db40:	d108      	bne.n	800db54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800db42:	f9b1 3000 	ldrsh.w	r3, [r1]
 800db46:	f9b0 4000 	ldrsh.w	r4, [r0]
 800db4a:	8003      	strh	r3, [r0, #0]
 800db4c:	8893      	ldrh	r3, [r2, #4]
 800db4e:	3b01      	subs	r3, #1
 800db50:	1b1b      	subs	r3, r3, r4
 800db52:	800b      	strh	r3, [r1, #0]
 800db54:	bd10      	pop	{r4, pc}
 800db56:	bf00      	nop
 800db58:	20012dbc 	.word	0x20012dbc

0800db5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800db5c:	b513      	push	{r0, r1, r4, lr}
 800db5e:	4b08      	ldr	r3, [pc, #32]	; (800db80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800db60:	f9b3 2000 	ldrsh.w	r2, [r3]
 800db64:	4b07      	ldr	r3, [pc, #28]	; (800db84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800db66:	f8ad 2004 	strh.w	r2, [sp, #4]
 800db6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800db6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800db72:	2400      	movs	r4, #0
 800db74:	466a      	mov	r2, sp
 800db76:	9400      	str	r4, [sp, #0]
 800db78:	f7ff ffde 	bl	800db38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800db7c:	b002      	add	sp, #8
 800db7e:	bd10      	pop	{r4, pc}
 800db80:	20012db8 	.word	0x20012db8
 800db84:	20012dba 	.word	0x20012dba

0800db88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800db88:	4b0b      	ldr	r3, [pc, #44]	; (800dbb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800db8a:	781b      	ldrb	r3, [r3, #0]
 800db8c:	2b01      	cmp	r3, #1
 800db8e:	d111      	bne.n	800dbb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800db90:	680b      	ldr	r3, [r1, #0]
 800db92:	ed90 7a00 	vldr	s14, [r0]
 800db96:	6003      	str	r3, [r0, #0]
 800db98:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800db9c:	eddf 6a07 	vldr	s13, [pc, #28]	; 800dbbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800dba0:	ee07 3a90 	vmov	s15, r3
 800dba4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dba8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dbac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dbb0:	edc1 7a00 	vstr	s15, [r1]
 800dbb4:	4770      	bx	lr
 800dbb6:	bf00      	nop
 800dbb8:	20012dbc 	.word	0x20012dbc
 800dbbc:	38d1b717 	.word	0x38d1b717

0800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dbc0:	b510      	push	{r4, lr}
 800dbc2:	4b0a      	ldr	r3, [pc, #40]	; (800dbec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dbc4:	781b      	ldrb	r3, [r3, #0]
 800dbc6:	2b01      	cmp	r3, #1
 800dbc8:	460a      	mov	r2, r1
 800dbca:	d10d      	bne.n	800dbe8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dbcc:	8881      	ldrh	r1, [r0, #4]
 800dbce:	8803      	ldrh	r3, [r0, #0]
 800dbd0:	440b      	add	r3, r1
 800dbd2:	4601      	mov	r1, r0
 800dbd4:	3b01      	subs	r3, #1
 800dbd6:	f821 3b02 	strh.w	r3, [r1], #2
 800dbda:	f7ff ffad 	bl	800db38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dbde:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dbe2:	88c2      	ldrh	r2, [r0, #6]
 800dbe4:	8082      	strh	r2, [r0, #4]
 800dbe6:	80c3      	strh	r3, [r0, #6]
 800dbe8:	bd10      	pop	{r4, pc}
 800dbea:	bf00      	nop
 800dbec:	20012dbc 	.word	0x20012dbc

0800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dbf0:	b507      	push	{r0, r1, r2, lr}
 800dbf2:	4b09      	ldr	r3, [pc, #36]	; (800dc18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dbf4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbf8:	4b08      	ldr	r3, [pc, #32]	; (800dc1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800dbfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dbfe:	2100      	movs	r1, #0
 800dc00:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc04:	9100      	str	r1, [sp, #0]
 800dc06:	4669      	mov	r1, sp
 800dc08:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc0c:	f7ff ffd8 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800dc10:	b003      	add	sp, #12
 800dc12:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc16:	bf00      	nop
 800dc18:	20012db8 	.word	0x20012db8
 800dc1c:	20012dba 	.word	0x20012dba

0800dc20 <_ZN8touchgfx11Application13requestRedrawEv>:
 800dc20:	4b06      	ldr	r3, [pc, #24]	; (800dc3c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dc22:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc26:	4b06      	ldr	r3, [pc, #24]	; (800dc40 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800dc28:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800dc2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc30:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800dc34:	2100      	movs	r1, #0
 800dc36:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800dc3a:	4770      	bx	lr
 800dc3c:	20012db8 	.word	0x20012db8
 800dc40:	20012dba 	.word	0x20012dba

0800dc44 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dc44:	4b03      	ldr	r3, [pc, #12]	; (800dc54 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dc46:	6818      	ldr	r0, [r3, #0]
 800dc48:	b110      	cbz	r0, 800dc50 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800dc4a:	6803      	ldr	r3, [r0, #0]
 800dc4c:	699b      	ldr	r3, [r3, #24]
 800dc4e:	4718      	bx	r3
 800dc50:	4770      	bx	lr
 800dc52:	bf00      	nop
 800dc54:	20012e00 	.word	0x20012e00

0800dc58 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800dc58:	4770      	bx	lr
	...

0800dc5c <_ZN8touchgfx11Application4drawEv>:
 800dc5c:	b507      	push	{r0, r1, r2, lr}
 800dc5e:	4b09      	ldr	r3, [pc, #36]	; (800dc84 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dc60:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc64:	4b08      	ldr	r3, [pc, #32]	; (800dc88 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dc66:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dc6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc72:	6803      	ldr	r3, [r0, #0]
 800dc74:	2100      	movs	r1, #0
 800dc76:	9100      	str	r1, [sp, #0]
 800dc78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dc7a:	4669      	mov	r1, sp
 800dc7c:	4798      	blx	r3
 800dc7e:	b003      	add	sp, #12
 800dc80:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc84:	20012db8 	.word	0x20012db8
 800dc88:	20012dba 	.word	0x20012dba

0800dc8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800dc8c:	4b03      	ldr	r3, [pc, #12]	; (800dc9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800dc8e:	6818      	ldr	r0, [r3, #0]
 800dc90:	b110      	cbz	r0, 800dc98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800dc92:	6803      	ldr	r3, [r0, #0]
 800dc94:	69db      	ldr	r3, [r3, #28]
 800dc96:	4718      	bx	r3
 800dc98:	4770      	bx	lr
 800dc9a:	bf00      	nop
 800dc9c:	20012e00 	.word	0x20012e00

0800dca0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800dca0:	4b03      	ldr	r3, [pc, #12]	; (800dcb0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800dca2:	6818      	ldr	r0, [r3, #0]
 800dca4:	b110      	cbz	r0, 800dcac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800dca6:	6803      	ldr	r3, [r0, #0]
 800dca8:	6a1b      	ldr	r3, [r3, #32]
 800dcaa:	4718      	bx	r3
 800dcac:	4770      	bx	lr
 800dcae:	bf00      	nop
 800dcb0:	20012e00 	.word	0x20012e00

0800dcb4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800dcb4:	4b03      	ldr	r3, [pc, #12]	; (800dcc4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800dcb6:	6818      	ldr	r0, [r3, #0]
 800dcb8:	b110      	cbz	r0, 800dcc0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800dcba:	6803      	ldr	r3, [r0, #0]
 800dcbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dcbe:	4718      	bx	r3
 800dcc0:	4770      	bx	lr
 800dcc2:	bf00      	nop
 800dcc4:	20012e00 	.word	0x20012e00

0800dcc8 <_ZN8touchgfx11Application15handleTickEventEv>:
 800dcc8:	b570      	push	{r4, r5, r6, lr}
 800dcca:	4d34      	ldr	r5, [pc, #208]	; (800dd9c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800dccc:	4604      	mov	r4, r0
 800dcce:	6828      	ldr	r0, [r5, #0]
 800dcd0:	b140      	cbz	r0, 800dce4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dcd2:	7a03      	ldrb	r3, [r0, #8]
 800dcd4:	b933      	cbnz	r3, 800dce4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dcd6:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800dcda:	6803      	ldr	r3, [r0, #0]
 800dcdc:	689b      	ldr	r3, [r3, #8]
 800dcde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dce2:	4718      	bx	r3
 800dce4:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800dce8:	b97b      	cbnz	r3, 800dd0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dcea:	b170      	cbz	r0, 800dd0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dcec:	7a03      	ldrb	r3, [r0, #8]
 800dcee:	b163      	cbz	r3, 800dd0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dcf0:	4b2b      	ldr	r3, [pc, #172]	; (800dda0 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800dcf2:	6818      	ldr	r0, [r3, #0]
 800dcf4:	b110      	cbz	r0, 800dcfc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800dcf6:	6803      	ldr	r3, [r0, #0]
 800dcf8:	691b      	ldr	r3, [r3, #16]
 800dcfa:	4798      	blx	r3
 800dcfc:	6828      	ldr	r0, [r5, #0]
 800dcfe:	6803      	ldr	r3, [r0, #0]
 800dd00:	68db      	ldr	r3, [r3, #12]
 800dd02:	4798      	blx	r3
 800dd04:	2301      	movs	r3, #1
 800dd06:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800dd0a:	2500      	movs	r5, #0
 800dd0c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800dd10:	42a8      	cmp	r0, r5
 800dd12:	dd0c      	ble.n	800dd2e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800dd14:	1963      	adds	r3, r4, r5
 800dd16:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800dd1a:	b132      	cbz	r2, 800dd2a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800dd1c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800dd20:	4413      	add	r3, r2
 800dd22:	6858      	ldr	r0, [r3, #4]
 800dd24:	6803      	ldr	r3, [r0, #0]
 800dd26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dd28:	4798      	blx	r3
 800dd2a:	3501      	adds	r5, #1
 800dd2c:	e7ee      	b.n	800dd0c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dd2e:	2300      	movs	r3, #0
 800dd30:	461a      	mov	r2, r3
 800dd32:	4298      	cmp	r0, r3
 800dd34:	d114      	bne.n	800dd60 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800dd36:	1d25      	adds	r5, r4, #4
 800dd38:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800dd3c:	1e48      	subs	r0, r1, #1
 800dd3e:	b280      	uxth	r0, r0
 800dd40:	4291      	cmp	r1, r2
 800dd42:	dd24      	ble.n	800dd8e <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800dd44:	4288      	cmp	r0, r1
 800dd46:	d2fb      	bcs.n	800dd40 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800dd48:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800dd4c:	3304      	adds	r3, #4
 800dd4e:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800dd52:	428b      	cmp	r3, r1
 800dd54:	d018      	beq.n	800dd88 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800dd56:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800dd5a:	f843 6c04 	str.w	r6, [r3, #-4]
 800dd5e:	e7f8      	b.n	800dd52 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800dd60:	18e1      	adds	r1, r4, r3
 800dd62:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800dd66:	b16d      	cbz	r5, 800dd84 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800dd68:	429a      	cmp	r2, r3
 800dd6a:	d00a      	beq.n	800dd82 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800dd6c:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800dd70:	4431      	add	r1, r6
 800dd72:	684e      	ldr	r6, [r1, #4]
 800dd74:	b291      	uxth	r1, r2
 800dd76:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800dd7a:	604e      	str	r6, [r1, #4]
 800dd7c:	18a1      	adds	r1, r4, r2
 800dd7e:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800dd82:	3201      	adds	r2, #1
 800dd84:	3301      	adds	r3, #1
 800dd86:	e7d4      	b.n	800dd32 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800dd88:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800dd8c:	e7d4      	b.n	800dd38 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800dd8e:	4b04      	ldr	r3, [pc, #16]	; (800dda0 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800dd90:	6818      	ldr	r0, [r3, #0]
 800dd92:	b110      	cbz	r0, 800dd9a <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800dd94:	6803      	ldr	r3, [r0, #0]
 800dd96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dd98:	e7a1      	b.n	800dcde <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800dd9a:	bd70      	pop	{r4, r5, r6, pc}
 800dd9c:	20012e04 	.word	0x20012e04
 800dda0:	20012e00 	.word	0x20012e00

0800dda4 <_ZN8touchgfx11ApplicationD1Ev>:
 800dda4:	4770      	bx	lr

0800dda6 <_ZN8touchgfx11ApplicationD0Ev>:
 800dda6:	b510      	push	{r4, lr}
 800dda8:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ddac:	4604      	mov	r4, r0
 800ddae:	f00e ffc5 	bl	801cd3c <_ZdlPvj>
 800ddb2:	4620      	mov	r0, r4
 800ddb4:	bd10      	pop	{r4, pc}
	...

0800ddb8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ddb8:	b570      	push	{r4, r5, r6, lr}
 800ddba:	4606      	mov	r6, r0
 800ddbc:	460c      	mov	r4, r1
 800ddbe:	b929      	cbnz	r1, 800ddcc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800ddc0:	4b0c      	ldr	r3, [pc, #48]	; (800ddf4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800ddc2:	4a0d      	ldr	r2, [pc, #52]	; (800ddf8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800ddc4:	480d      	ldr	r0, [pc, #52]	; (800ddfc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800ddc6:	2167      	movs	r1, #103	; 0x67
 800ddc8:	f00e ffe6 	bl	801cd98 <__assert_func>
 800ddcc:	4d0c      	ldr	r5, [pc, #48]	; (800de00 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800ddce:	2300      	movs	r3, #0
 800ddd0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ddd4:	6828      	ldr	r0, [r5, #0]
 800ddd6:	b110      	cbz	r0, 800ddde <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800ddd8:	6803      	ldr	r3, [r0, #0]
 800ddda:	695b      	ldr	r3, [r3, #20]
 800dddc:	4798      	blx	r3
 800ddde:	602c      	str	r4, [r5, #0]
 800dde0:	6823      	ldr	r3, [r4, #0]
 800dde2:	4620      	mov	r0, r4
 800dde4:	68db      	ldr	r3, [r3, #12]
 800dde6:	4798      	blx	r3
 800dde8:	6833      	ldr	r3, [r6, #0]
 800ddea:	4630      	mov	r0, r6
 800ddec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ddee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddf2:	4718      	bx	r3
 800ddf4:	080206d4 	.word	0x080206d4
 800ddf8:	080207a4 	.word	0x080207a4
 800ddfc:	080206de 	.word	0x080206de
 800de00:	20012e00 	.word	0x20012e00

0800de04 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800de04:	b510      	push	{r4, lr}
 800de06:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de0a:	888a      	ldrh	r2, [r1, #4]
 800de0c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800de10:	4422      	add	r2, r4
 800de12:	b212      	sxth	r2, r2
 800de14:	4293      	cmp	r3, r2
 800de16:	da15      	bge.n	800de44 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de18:	8882      	ldrh	r2, [r0, #4]
 800de1a:	4413      	add	r3, r2
 800de1c:	b21b      	sxth	r3, r3
 800de1e:	429c      	cmp	r4, r3
 800de20:	da10      	bge.n	800de44 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de22:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800de26:	88c9      	ldrh	r1, [r1, #6]
 800de28:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800de2c:	4419      	add	r1, r3
 800de2e:	b209      	sxth	r1, r1
 800de30:	428a      	cmp	r2, r1
 800de32:	da07      	bge.n	800de44 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de34:	88c0      	ldrh	r0, [r0, #6]
 800de36:	4410      	add	r0, r2
 800de38:	b200      	sxth	r0, r0
 800de3a:	4283      	cmp	r3, r0
 800de3c:	bfac      	ite	ge
 800de3e:	2000      	movge	r0, #0
 800de40:	2001      	movlt	r0, #1
 800de42:	bd10      	pop	{r4, pc}
 800de44:	2000      	movs	r0, #0
 800de46:	e7fc      	b.n	800de42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800de48 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800de48:	b570      	push	{r4, r5, r6, lr}
 800de4a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de4e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800de52:	42ac      	cmp	r4, r5
 800de54:	db18      	blt.n	800de88 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800de56:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800de5a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800de5e:	429a      	cmp	r2, r3
 800de60:	db12      	blt.n	800de88 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800de62:	8886      	ldrh	r6, [r0, #4]
 800de64:	4435      	add	r5, r6
 800de66:	888e      	ldrh	r6, [r1, #4]
 800de68:	4434      	add	r4, r6
 800de6a:	b22d      	sxth	r5, r5
 800de6c:	b224      	sxth	r4, r4
 800de6e:	42a5      	cmp	r5, r4
 800de70:	db0a      	blt.n	800de88 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800de72:	88c0      	ldrh	r0, [r0, #6]
 800de74:	4418      	add	r0, r3
 800de76:	88cb      	ldrh	r3, [r1, #6]
 800de78:	441a      	add	r2, r3
 800de7a:	b200      	sxth	r0, r0
 800de7c:	b212      	sxth	r2, r2
 800de7e:	4290      	cmp	r0, r2
 800de80:	bfb4      	ite	lt
 800de82:	2000      	movlt	r0, #0
 800de84:	2001      	movge	r0, #1
 800de86:	bd70      	pop	{r4, r5, r6, pc}
 800de88:	2000      	movs	r0, #0
 800de8a:	e7fc      	b.n	800de86 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800de8c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800de8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de8e:	4604      	mov	r4, r0
 800de90:	4608      	mov	r0, r1
 800de92:	460d      	mov	r5, r1
 800de94:	f7fc fb0b 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800de98:	b978      	cbnz	r0, 800deba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800de9a:	4620      	mov	r0, r4
 800de9c:	f7fc fb07 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800dea0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800dea4:	b150      	cbz	r0, 800debc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800dea6:	8026      	strh	r6, [r4, #0]
 800dea8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800deac:	8063      	strh	r3, [r4, #2]
 800deae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800deb2:	80a3      	strh	r3, [r4, #4]
 800deb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800deb8:	80e3      	strh	r3, [r4, #6]
 800deba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800debc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800dec0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800dec4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800dec8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800decc:	88ed      	ldrh	r5, [r5, #6]
 800dece:	42b1      	cmp	r1, r6
 800ded0:	460f      	mov	r7, r1
 800ded2:	bfa8      	it	ge
 800ded4:	4637      	movge	r7, r6
 800ded6:	4293      	cmp	r3, r2
 800ded8:	4618      	mov	r0, r3
 800deda:	4466      	add	r6, ip
 800dedc:	bfa8      	it	ge
 800dede:	4610      	movge	r0, r2
 800dee0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800dee4:	8027      	strh	r7, [r4, #0]
 800dee6:	442a      	add	r2, r5
 800dee8:	88e5      	ldrh	r5, [r4, #6]
 800deea:	8060      	strh	r0, [r4, #2]
 800deec:	4461      	add	r1, ip
 800deee:	442b      	add	r3, r5
 800def0:	b236      	sxth	r6, r6
 800def2:	b209      	sxth	r1, r1
 800def4:	b212      	sxth	r2, r2
 800def6:	b21b      	sxth	r3, r3
 800def8:	428e      	cmp	r6, r1
 800defa:	bfac      	ite	ge
 800defc:	ebc7 0106 	rsbge	r1, r7, r6
 800df00:	ebc7 0101 	rsblt	r1, r7, r1
 800df04:	429a      	cmp	r2, r3
 800df06:	bfac      	ite	ge
 800df08:	ebc0 0202 	rsbge	r2, r0, r2
 800df0c:	ebc0 0203 	rsblt	r2, r0, r3
 800df10:	80a1      	strh	r1, [r4, #4]
 800df12:	80e2      	strh	r2, [r4, #6]
 800df14:	e7d1      	b.n	800deba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800df18 <_ZN8touchgfx11Application11getInstanceEv>:
 800df18:	4b01      	ldr	r3, [pc, #4]	; (800df20 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800df1a:	6818      	ldr	r0, [r3, #0]
 800df1c:	4770      	bx	lr
 800df1e:	bf00      	nop
 800df20:	20012e10 	.word	0x20012e10

0800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800df24:	2300      	movs	r3, #0
 800df26:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800df2a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800df2e:	30a8      	adds	r0, #168	; 0xa8
 800df30:	f802 3b01 	strb.w	r3, [r2], #1
 800df34:	4282      	cmp	r2, r0
 800df36:	d1fb      	bne.n	800df30 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800df38:	4770      	bx	lr

0800df3a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800df3a:	4603      	mov	r3, r0
 800df3c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800df40:	2200      	movs	r2, #0
 800df42:	801a      	strh	r2, [r3, #0]
 800df44:	805a      	strh	r2, [r3, #2]
 800df46:	809a      	strh	r2, [r3, #4]
 800df48:	80da      	strh	r2, [r3, #6]
 800df4a:	3308      	adds	r3, #8
 800df4c:	428b      	cmp	r3, r1
 800df4e:	d1f8      	bne.n	800df42 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800df50:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800df54:	4770      	bx	lr
	...

0800df58 <_ZN8touchgfx11ApplicationC1Ev>:
 800df58:	b570      	push	{r4, r5, r6, lr}
 800df5a:	4b1a      	ldr	r3, [pc, #104]	; (800dfc4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800df5c:	6003      	str	r3, [r0, #0]
 800df5e:	2500      	movs	r5, #0
 800df60:	4604      	mov	r4, r0
 800df62:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800df66:	30a8      	adds	r0, #168	; 0xa8
 800df68:	f7ff ffe7 	bl	800df3a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800df6c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800df70:	f7ff ffe3 	bl	800df3a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800df74:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800df78:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800df7c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800df80:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800df84:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800df88:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800df8c:	490e      	ldr	r1, [pc, #56]	; (800dfc8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800df8e:	480f      	ldr	r0, [pc, #60]	; (800dfcc <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800df90:	4e0f      	ldr	r6, [pc, #60]	; (800dfd0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800df92:	f00e fda7 	bl	801cae4 <CRC_Lock>
 800df96:	4b0f      	ldr	r3, [pc, #60]	; (800dfd4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800df98:	b158      	cbz	r0, 800dfb2 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800df9a:	801d      	strh	r5, [r3, #0]
 800df9c:	4a0e      	ldr	r2, [pc, #56]	; (800dfd8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800df9e:	2300      	movs	r3, #0
 800dfa0:	6013      	str	r3, [r2, #0]
 800dfa2:	4a0e      	ldr	r2, [pc, #56]	; (800dfdc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800dfa4:	6033      	str	r3, [r6, #0]
 800dfa6:	4620      	mov	r0, r4
 800dfa8:	6013      	str	r3, [r2, #0]
 800dfaa:	f7ff ffbb 	bl	800df24 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800dfae:	4620      	mov	r0, r4
 800dfb0:	bd70      	pop	{r4, r5, r6, pc}
 800dfb2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800dfb6:	2002      	movs	r0, #2
 800dfb8:	801a      	strh	r2, [r3, #0]
 800dfba:	6030      	str	r0, [r6, #0]
 800dfbc:	f001 fabe 	bl	800f53c <_ZN8touchgfx6Screen4drawEv>
 800dfc0:	e7ec      	b.n	800df9c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800dfc2:	bf00      	nop
 800dfc4:	08020768 	.word	0x08020768
 800dfc8:	b5e8b5cd 	.word	0xb5e8b5cd
 800dfcc:	f407a5c2 	.word	0xf407a5c2
 800dfd0:	20012e00 	.word	0x20012e00
 800dfd4:	20000084 	.word	0x20000084
 800dfd8:	20012e10 	.word	0x20012e10
 800dfdc:	20012e04 	.word	0x20012e04

0800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800dfe0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800dfe4:	428b      	cmp	r3, r1
 800dfe6:	b510      	push	{r4, lr}
 800dfe8:	d90e      	bls.n	800e008 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800dfea:	3b01      	subs	r3, #1
 800dfec:	b29b      	uxth	r3, r3
 800dfee:	428b      	cmp	r3, r1
 800dff0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800dff4:	d908      	bls.n	800e008 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800dff6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800dffa:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800dffe:	681a      	ldr	r2, [r3, #0]
 800e000:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e004:	685a      	ldr	r2, [r3, #4]
 800e006:	6062      	str	r2, [r4, #4]
 800e008:	bd10      	pop	{r4, pc}
	...

0800e00c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e00c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e00e:	466b      	mov	r3, sp
 800e010:	e883 0006 	stmia.w	r3, {r1, r2}
 800e014:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e018:	2a07      	cmp	r2, #7
 800e01a:	4604      	mov	r4, r0
 800e01c:	d906      	bls.n	800e02c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e01e:	4b09      	ldr	r3, [pc, #36]	; (800e044 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e020:	4a09      	ldr	r2, [pc, #36]	; (800e048 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e022:	480a      	ldr	r0, [pc, #40]	; (800e04c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e024:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800e028:	f00e feb6 	bl	801cd98 <__assert_func>
 800e02c:	1c51      	adds	r1, r2, #1
 800e02e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e032:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e036:	cb03      	ldmia	r3!, {r0, r1}
 800e038:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e03c:	6069      	str	r1, [r5, #4]
 800e03e:	b003      	add	sp, #12
 800e040:	bd30      	pop	{r4, r5, pc}
 800e042:	bf00      	nop
 800e044:	08020708 	.word	0x08020708
 800e048:	080207e8 	.word	0x080207e8
 800e04c:	08020737 	.word	0x08020737

0800e050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e054:	b08d      	sub	sp, #52	; 0x34
 800e056:	ac08      	add	r4, sp, #32
 800e058:	4683      	mov	fp, r0
 800e05a:	4620      	mov	r0, r4
 800e05c:	e884 0006 	stmia.w	r4, {r1, r2}
 800e060:	f7fc fa25 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800e064:	2800      	cmp	r0, #0
 800e066:	d16a      	bne.n	800e13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e068:	9402      	str	r4, [sp, #8]
 800e06a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e06e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e072:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800e076:	2400      	movs	r4, #0
 800e078:	9301      	str	r3, [sp, #4]
 800e07a:	36a0      	adds	r6, #160	; 0xa0
 800e07c:	42a5      	cmp	r5, r4
 800e07e:	d00d      	beq.n	800e09c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800e080:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800e084:	9802      	ldr	r0, [sp, #8]
 800e086:	f7ff fedf 	bl	800de48 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e08a:	b128      	cbz	r0, 800e098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800e08c:	1e69      	subs	r1, r5, #1
 800e08e:	1b09      	subs	r1, r1, r4
 800e090:	b289      	uxth	r1, r1
 800e092:	9801      	ldr	r0, [sp, #4]
 800e094:	f7ff ffa4 	bl	800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e098:	3401      	adds	r4, #1
 800e09a:	e7ef      	b.n	800e07c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e09c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e0a0:	9703      	str	r7, [sp, #12]
 800e0a2:	1e7b      	subs	r3, r7, #1
 800e0a4:	9300      	str	r3, [sp, #0]
 800e0a6:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800e0aa:	2400      	movs	r4, #0
 800e0ac:	4655      	mov	r5, sl
 800e0ae:	9704      	str	r7, [sp, #16]
 800e0b0:	4626      	mov	r6, r4
 800e0b2:	9b04      	ldr	r3, [sp, #16]
 800e0b4:	2b00      	cmp	r3, #0
 800e0b6:	d078      	beq.n	800e1aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800e0b8:	9902      	ldr	r1, [sp, #8]
 800e0ba:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e0be:	f7ff fea1 	bl	800de04 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e0c2:	b360      	cbz	r0, 800e11e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800e0c4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800e0c8:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800e0cc:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800e0d0:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800e0d4:	45e6      	cmp	lr, ip
 800e0d6:	db35      	blt.n	800e144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800e0d8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e0dc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e0e0:	4472      	add	r2, lr
 800e0e2:	4463      	add	r3, ip
 800e0e4:	b212      	sxth	r2, r2
 800e0e6:	b21b      	sxth	r3, r3
 800e0e8:	429a      	cmp	r2, r3
 800e0ea:	dc2b      	bgt.n	800e144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800e0ec:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e0f0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e0f4:	fa1f f288 	uxth.w	r2, r8
 800e0f8:	4413      	add	r3, r2
 800e0fa:	b29b      	uxth	r3, r3
 800e0fc:	45c1      	cmp	r9, r8
 800e0fe:	fa0f fe83 	sxth.w	lr, r3
 800e102:	fa1f fc89 	uxth.w	ip, r9
 800e106:	db0f      	blt.n	800e128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800e108:	eba3 030c 	sub.w	r3, r3, ip
 800e10c:	1ac9      	subs	r1, r1, r3
 800e10e:	b209      	sxth	r1, r1
 800e110:	2900      	cmp	r1, #0
 800e112:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e116:	dd12      	ble.n	800e13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e118:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800e11c:	4604      	mov	r4, r0
 800e11e:	9b04      	ldr	r3, [sp, #16]
 800e120:	3b01      	subs	r3, #1
 800e122:	9304      	str	r3, [sp, #16]
 800e124:	3d08      	subs	r5, #8
 800e126:	e7c4      	b.n	800e0b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800e128:	4461      	add	r1, ip
 800e12a:	b209      	sxth	r1, r1
 800e12c:	4571      	cmp	r1, lr
 800e12e:	dc3a      	bgt.n	800e1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e130:	eba2 020c 	sub.w	r2, r2, ip
 800e134:	b212      	sxth	r2, r2
 800e136:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e13a:	2a00      	cmp	r2, #0
 800e13c:	dcee      	bgt.n	800e11c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800e13e:	b00d      	add	sp, #52	; 0x34
 800e140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e144:	45c1      	cmp	r9, r8
 800e146:	db2e      	blt.n	800e1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e148:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e14c:	4499      	add	r9, r3
 800e14e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e152:	4498      	add	r8, r3
 800e154:	fa0f f989 	sxth.w	r9, r9
 800e158:	fa0f f888 	sxth.w	r8, r8
 800e15c:	45c1      	cmp	r9, r8
 800e15e:	dc22      	bgt.n	800e1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e160:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e164:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800e168:	fa1f f28c 	uxth.w	r2, ip
 800e16c:	4413      	add	r3, r2
 800e16e:	b29b      	uxth	r3, r3
 800e170:	45e6      	cmp	lr, ip
 800e172:	fa1f f88e 	uxth.w	r8, lr
 800e176:	fa0f f983 	sxth.w	r9, r3
 800e17a:	db0a      	blt.n	800e192 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800e17c:	eba3 0308 	sub.w	r3, r3, r8
 800e180:	1ac9      	subs	r1, r1, r3
 800e182:	b209      	sxth	r1, r1
 800e184:	2900      	cmp	r1, #0
 800e186:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e18a:	ddd8      	ble.n	800e13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e18c:	f8ad 9020 	strh.w	r9, [sp, #32]
 800e190:	e7c4      	b.n	800e11c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800e192:	4441      	add	r1, r8
 800e194:	b209      	sxth	r1, r1
 800e196:	4549      	cmp	r1, r9
 800e198:	dc05      	bgt.n	800e1a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e19a:	eba2 0208 	sub.w	r2, r2, r8
 800e19e:	b212      	sxth	r2, r2
 800e1a0:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800e1a4:	e7c9      	b.n	800e13a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e1a6:	4606      	mov	r6, r0
 800e1a8:	e7b9      	b.n	800e11e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800e1aa:	2c00      	cmp	r4, #0
 800e1ac:	f47f af7d 	bne.w	800e0aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800e1b0:	2e00      	cmp	r6, #0
 800e1b2:	f000 81dd 	beq.w	800e570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e1b6:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800e1ba:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800e1be:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e1c2:	b2b9      	uxth	r1, r7
 800e1c4:	9104      	str	r1, [sp, #16]
 800e1c6:	9804      	ldr	r0, [sp, #16]
 800e1c8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e1cc:	4401      	add	r1, r0
 800e1ce:	b2b3      	uxth	r3, r6
 800e1d0:	b289      	uxth	r1, r1
 800e1d2:	441a      	add	r2, r3
 800e1d4:	9105      	str	r1, [sp, #20]
 800e1d6:	b292      	uxth	r2, r2
 800e1d8:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800e1dc:	fa0f f882 	sxth.w	r8, r2
 800e1e0:	4655      	mov	r5, sl
 800e1e2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800e1e6:	9b03      	ldr	r3, [sp, #12]
 800e1e8:	2b00      	cmp	r3, #0
 800e1ea:	d054      	beq.n	800e296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800e1ec:	9902      	ldr	r1, [sp, #8]
 800e1ee:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e1f2:	f7ff fe07 	bl	800de04 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e1f6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e1fa:	b1d8      	cbz	r0, 800e234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e1fc:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800e200:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800e204:	4576      	cmp	r6, lr
 800e206:	dc26      	bgt.n	800e256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e208:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800e20c:	44f4      	add	ip, lr
 800e20e:	fa0f fc8c 	sxth.w	ip, ip
 800e212:	45e0      	cmp	r8, ip
 800e214:	db1f      	blt.n	800e256 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e216:	428f      	cmp	r7, r1
 800e218:	fa1f fc81 	uxth.w	ip, r1
 800e21c:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800e220:	dc0f      	bgt.n	800e242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e222:	9805      	ldr	r0, [sp, #20]
 800e224:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800e228:	eba0 0c0c 	sub.w	ip, r0, ip
 800e22c:	eba1 010c 	sub.w	r1, r1, ip
 800e230:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800e234:	4620      	mov	r0, r4
 800e236:	9903      	ldr	r1, [sp, #12]
 800e238:	3901      	subs	r1, #1
 800e23a:	9103      	str	r1, [sp, #12]
 800e23c:	3d08      	subs	r5, #8
 800e23e:	4604      	mov	r4, r0
 800e240:	e7cf      	b.n	800e1e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800e242:	4461      	add	r1, ip
 800e244:	b209      	sxth	r1, r1
 800e246:	4549      	cmp	r1, r9
 800e248:	dcf5      	bgt.n	800e236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e24a:	9904      	ldr	r1, [sp, #16]
 800e24c:	eba1 0c0c 	sub.w	ip, r1, ip
 800e250:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800e254:	e7ee      	b.n	800e234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e256:	428f      	cmp	r7, r1
 800e258:	dced      	bgt.n	800e236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e25a:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800e25e:	4461      	add	r1, ip
 800e260:	b209      	sxth	r1, r1
 800e262:	4589      	cmp	r9, r1
 800e264:	dbe7      	blt.n	800e236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e266:	4576      	cmp	r6, lr
 800e268:	fa1f fc8e 	uxth.w	ip, lr
 800e26c:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800e270:	dc08      	bgt.n	800e284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800e272:	eba2 0c0c 	sub.w	ip, r2, ip
 800e276:	eba1 010c 	sub.w	r1, r1, ip
 800e27a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800e27e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800e282:	e7d7      	b.n	800e234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e284:	4461      	add	r1, ip
 800e286:	b209      	sxth	r1, r1
 800e288:	4588      	cmp	r8, r1
 800e28a:	dbd4      	blt.n	800e236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e28c:	eba3 0c0c 	sub.w	ip, r3, ip
 800e290:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800e294:	e7ce      	b.n	800e234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e296:	2c00      	cmp	r4, #0
 800e298:	f000 816a 	beq.w	800e570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e29c:	9b00      	ldr	r3, [sp, #0]
 800e29e:	3301      	adds	r3, #1
 800e2a0:	f000 8166 	beq.w	800e570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e2a4:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800e2a8:	4621      	mov	r1, r4
 800e2aa:	9802      	ldr	r0, [sp, #8]
 800e2ac:	f7ff fdcc 	bl	800de48 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e2b0:	b120      	cbz	r0, 800e2bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800e2b2:	f8bd 1000 	ldrh.w	r1, [sp]
 800e2b6:	9801      	ldr	r0, [sp, #4]
 800e2b8:	f7ff fe92 	bl	800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e2bc:	9902      	ldr	r1, [sp, #8]
 800e2be:	4620      	mov	r0, r4
 800e2c0:	f7ff fda0 	bl	800de04 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e2c4:	2800      	cmp	r0, #0
 800e2c6:	f000 809b 	beq.w	800e400 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800e2ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800e2ce:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800e2d2:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800e2d6:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800e2da:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800e2de:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800e2e2:	fa1f f288 	uxth.w	r2, r8
 800e2e6:	19d5      	adds	r5, r2, r7
 800e2e8:	fa1f f985 	uxth.w	r9, r5
 800e2ec:	fa0f f589 	sxth.w	r5, r9
 800e2f0:	b2a1      	uxth	r1, r4
 800e2f2:	440b      	add	r3, r1
 800e2f4:	9503      	str	r5, [sp, #12]
 800e2f6:	45a0      	cmp	r8, r4
 800e2f8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e2fc:	9507      	str	r5, [sp, #28]
 800e2fe:	b29b      	uxth	r3, r3
 800e300:	f340 809d 	ble.w	800e43e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e304:	1a52      	subs	r2, r2, r1
 800e306:	b292      	uxth	r2, r2
 800e308:	4584      	cmp	ip, r0
 800e30a:	fa0f fe83 	sxth.w	lr, r3
 800e30e:	b215      	sxth	r5, r2
 800e310:	dd2f      	ble.n	800e372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800e312:	9e00      	ldr	r6, [sp, #0]
 800e314:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e318:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800e31c:	9e03      	ldr	r6, [sp, #12]
 800e31e:	eba6 060e 	sub.w	r6, r6, lr
 800e322:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800e326:	fa1f fc8c 	uxth.w	ip, ip
 800e32a:	b280      	uxth	r0, r0
 800e32c:	ebac 0300 	sub.w	r3, ip, r0
 800e330:	448c      	add	ip, r1
 800e332:	4470      	add	r0, lr
 800e334:	b29b      	uxth	r3, r3
 800e336:	fa0f fc8c 	sxth.w	ip, ip
 800e33a:	b200      	sxth	r0, r0
 800e33c:	b21c      	sxth	r4, r3
 800e33e:	ebac 0000 	sub.w	r0, ip, r0
 800e342:	4366      	muls	r6, r4
 800e344:	4368      	muls	r0, r5
 800e346:	4286      	cmp	r6, r0
 800e348:	db09      	blt.n	800e35e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800e34a:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800e34e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800e352:	4417      	add	r7, r2
 800e354:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e358:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e35c:	e685      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e35e:	440b      	add	r3, r1
 800e360:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e364:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800e368:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800e36c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e370:	e67b      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e372:	9e03      	ldr	r6, [sp, #12]
 800e374:	45b6      	cmp	lr, r6
 800e376:	da28      	bge.n	800e3ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800e378:	9b00      	ldr	r3, [sp, #0]
 800e37a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800e37e:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800e382:	eb04 030c 	add.w	r3, r4, ip
 800e386:	fa1f f883 	uxth.w	r8, r3
 800e38a:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800e38e:	4403      	add	r3, r0
 800e390:	eba3 0308 	sub.w	r3, r3, r8
 800e394:	b29b      	uxth	r3, r3
 800e396:	fa0f f988 	sxth.w	r9, r8
 800e39a:	eba0 000c 	sub.w	r0, r0, ip
 800e39e:	fa0f f883 	sxth.w	r8, r3
 800e3a2:	eba6 060e 	sub.w	r6, r6, lr
 800e3a6:	4368      	muls	r0, r5
 800e3a8:	fb08 f606 	mul.w	r6, r8, r6
 800e3ac:	42b0      	cmp	r0, r6
 800e3ae:	dc06      	bgt.n	800e3be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800e3b0:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800e3b4:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800e3b8:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800e3bc:	e7c9      	b.n	800e352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800e3be:	4423      	add	r3, r4
 800e3c0:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800e3c4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e3c8:	e64f      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e3ca:	9807      	ldr	r0, [sp, #28]
 800e3cc:	eba3 0309 	sub.w	r3, r3, r9
 800e3d0:	b29b      	uxth	r3, r3
 800e3d2:	2806      	cmp	r0, #6
 800e3d4:	fa0f fc83 	sxth.w	ip, r3
 800e3d8:	d818      	bhi.n	800e40c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800e3da:	4652      	mov	r2, sl
 800e3dc:	ab0a      	add	r3, sp, #40	; 0x28
 800e3de:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800e3e2:	6851      	ldr	r1, [r2, #4]
 800e3e4:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800e3e8:	c303      	stmia	r3!, {r0, r1}
 800e3ea:	9b03      	ldr	r3, [sp, #12]
 800e3ec:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800e3f0:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800e3f4:	ab0a      	add	r3, sp, #40	; 0x28
 800e3f6:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e3fa:	9801      	ldr	r0, [sp, #4]
 800e3fc:	f7ff fe06 	bl	800e00c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e400:	9b00      	ldr	r3, [sp, #0]
 800e402:	3b01      	subs	r3, #1
 800e404:	9300      	str	r3, [sp, #0]
 800e406:	f1aa 0a08 	sub.w	sl, sl, #8
 800e40a:	e747      	b.n	800e29c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e40c:	9800      	ldr	r0, [sp, #0]
 800e40e:	45ac      	cmp	ip, r5
 800e410:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e414:	db0c      	blt.n	800e430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800e416:	4417      	add	r7, r2
 800e418:	b2bf      	uxth	r7, r7
 800e41a:	4458      	add	r0, fp
 800e41c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e420:	440f      	add	r7, r1
 800e422:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e426:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800e42a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800e42e:	e61c      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e430:	4458      	add	r0, fp
 800e432:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800e436:	443b      	add	r3, r7
 800e438:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e43c:	e615      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e43e:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800e442:	fa1f f18c 	uxth.w	r1, ip
 800e446:	eb01 0e05 	add.w	lr, r1, r5
 800e44a:	b282      	uxth	r2, r0
 800e44c:	fa1f fe8e 	uxth.w	lr, lr
 800e450:	9204      	str	r2, [sp, #16]
 800e452:	fa0f f28e 	sxth.w	r2, lr
 800e456:	9205      	str	r2, [sp, #20]
 800e458:	9e04      	ldr	r6, [sp, #16]
 800e45a:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800e45e:	4432      	add	r2, r6
 800e460:	b292      	uxth	r2, r2
 800e462:	4584      	cmp	ip, r0
 800e464:	9206      	str	r2, [sp, #24]
 800e466:	da26      	bge.n	800e4b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800e468:	eba3 0309 	sub.w	r3, r3, r9
 800e46c:	eba2 020e 	sub.w	r2, r2, lr
 800e470:	b29b      	uxth	r3, r3
 800e472:	b292      	uxth	r2, r2
 800e474:	fa0f fa83 	sxth.w	sl, r3
 800e478:	b211      	sxth	r1, r2
 800e47a:	eba0 000c 	sub.w	r0, r0, ip
 800e47e:	eba4 0408 	sub.w	r4, r4, r8
 800e482:	fb0a f000 	mul.w	r0, sl, r0
 800e486:	434c      	muls	r4, r1
 800e488:	42a0      	cmp	r0, r4
 800e48a:	9800      	ldr	r0, [sp, #0]
 800e48c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e490:	dc06      	bgt.n	800e4a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800e492:	4458      	add	r0, fp
 800e494:	9a05      	ldr	r2, [sp, #20]
 800e496:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800e49a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800e49e:	e7ca      	b.n	800e436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800e4a0:	eb0b 0300 	add.w	r3, fp, r0
 800e4a4:	9903      	ldr	r1, [sp, #12]
 800e4a6:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800e4aa:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800e4ae:	442a      	add	r2, r5
 800e4b0:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e4b4:	e5d9      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e4b6:	9e04      	ldr	r6, [sp, #16]
 800e4b8:	9a03      	ldr	r2, [sp, #12]
 800e4ba:	1b89      	subs	r1, r1, r6
 800e4bc:	b21e      	sxth	r6, r3
 800e4be:	b289      	uxth	r1, r1
 800e4c0:	4296      	cmp	r6, r2
 800e4c2:	fa0f fc81 	sxth.w	ip, r1
 800e4c6:	dd26      	ble.n	800e516 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800e4c8:	eba3 0309 	sub.w	r3, r3, r9
 800e4cc:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800e4d0:	9e05      	ldr	r6, [sp, #20]
 800e4d2:	b29b      	uxth	r3, r3
 800e4d4:	eba6 0902 	sub.w	r9, r6, r2
 800e4d8:	b218      	sxth	r0, r3
 800e4da:	eba4 0408 	sub.w	r4, r4, r8
 800e4de:	fb0c f404 	mul.w	r4, ip, r4
 800e4e2:	fb00 f909 	mul.w	r9, r0, r9
 800e4e6:	9a00      	ldr	r2, [sp, #0]
 800e4e8:	454c      	cmp	r4, r9
 800e4ea:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e4ee:	db03      	blt.n	800e4f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800e4f0:	445a      	add	r2, fp
 800e4f2:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800e4f6:	e79e      	b.n	800e436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800e4f8:	eb0b 0302 	add.w	r3, fp, r2
 800e4fc:	9a03      	ldr	r2, [sp, #12]
 800e4fe:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800e502:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800e506:	4429      	add	r1, r5
 800e508:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800e50c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e510:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e514:	e5a9      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e516:	9b06      	ldr	r3, [sp, #24]
 800e518:	9c07      	ldr	r4, [sp, #28]
 800e51a:	eba3 020e 	sub.w	r2, r3, lr
 800e51e:	b292      	uxth	r2, r2
 800e520:	2c06      	cmp	r4, #6
 800e522:	b213      	sxth	r3, r2
 800e524:	d80d      	bhi.n	800e542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800e526:	4651      	mov	r1, sl
 800e528:	aa0a      	add	r2, sp, #40	; 0x28
 800e52a:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800e52e:	6849      	ldr	r1, [r1, #4]
 800e530:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800e534:	9b05      	ldr	r3, [sp, #20]
 800e536:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800e53a:	c203      	stmia	r2!, {r0, r1}
 800e53c:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800e540:	e758      	b.n	800e3f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800e542:	9c00      	ldr	r4, [sp, #0]
 800e544:	4563      	cmp	r3, ip
 800e546:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e54a:	db0d      	blt.n	800e568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800e54c:	4429      	add	r1, r5
 800e54e:	9a04      	ldr	r2, [sp, #16]
 800e550:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800e554:	b289      	uxth	r1, r1
 800e556:	445c      	add	r4, fp
 800e558:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e55c:	4411      	add	r1, r2
 800e55e:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800e562:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800e566:	e580      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e568:	445c      	add	r4, fp
 800e56a:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800e56e:	e79e      	b.n	800e4ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800e570:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e574:	2f07      	cmp	r7, #7
 800e576:	d806      	bhi.n	800e586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800e578:	ab08      	add	r3, sp, #32
 800e57a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e57e:	9801      	ldr	r0, [sp, #4]
 800e580:	f7ff fd44 	bl	800e00c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e584:	e5db      	b.n	800e13e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e586:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e58a:	f107 39ff 	add.w	r9, r7, #4294967295
 800e58e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800e592:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800e596:	f04f 35ff 	mov.w	r5, #4294967295
 800e59a:	2400      	movs	r4, #0
 800e59c:	9304      	str	r3, [sp, #16]
 800e59e:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800e5a2:	9300      	str	r3, [sp, #0]
 800e5a4:	f109 32ff 	add.w	r2, r9, #4294967295
 800e5a8:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800e5ac:	9303      	str	r3, [sp, #12]
 800e5ae:	4690      	mov	r8, r2
 800e5b0:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e5b4:	f1b8 3fff 	cmp.w	r8, #4294967295
 800e5b8:	bf14      	ite	ne
 800e5ba:	9904      	ldrne	r1, [sp, #16]
 800e5bc:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800e5c0:	6818      	ldr	r0, [r3, #0]
 800e5c2:	9206      	str	r2, [sp, #24]
 800e5c4:	bf18      	it	ne
 800e5c6:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800e5ca:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800e5ce:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e5d2:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800e5d6:	9305      	str	r3, [sp, #20]
 800e5d8:	fb16 f601 	smulbb	r6, r6, r1
 800e5dc:	6859      	ldr	r1, [r3, #4]
 800e5de:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e5e2:	4671      	mov	r1, lr
 800e5e4:	a80a      	add	r0, sp, #40	; 0x28
 800e5e6:	f7ff fc51 	bl	800de8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e5ea:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800e5ee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e5f2:	9b03      	ldr	r3, [sp, #12]
 800e5f4:	9a00      	ldr	r2, [sp, #0]
 800e5f6:	fb11 f100 	smulbb	r1, r1, r0
 800e5fa:	fb02 6603 	mla	r6, r2, r3, r6
 800e5fe:	1b8e      	subs	r6, r1, r6
 800e600:	2008      	movs	r0, #8
 800e602:	fb91 f1f0 	sdiv	r1, r1, r0
 800e606:	42b1      	cmp	r1, r6
 800e608:	dc21      	bgt.n	800e64e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800e60a:	4556      	cmp	r6, sl
 800e60c:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800e610:	da03      	bge.n	800e61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800e612:	b1e6      	cbz	r6, 800e64e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800e614:	46b2      	mov	sl, r6
 800e616:	4645      	mov	r5, r8
 800e618:	464c      	mov	r4, r9
 800e61a:	f108 38ff 	add.w	r8, r8, #4294967295
 800e61e:	f118 0f02 	cmn.w	r8, #2
 800e622:	d1c7      	bne.n	800e5b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800e624:	f1b2 3fff 	cmp.w	r2, #4294967295
 800e628:	f1a7 0708 	sub.w	r7, r7, #8
 800e62c:	4691      	mov	r9, r2
 800e62e:	d1b6      	bne.n	800e59e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800e630:	9b01      	ldr	r3, [sp, #4]
 800e632:	b2a6      	uxth	r6, r4
 800e634:	00e4      	lsls	r4, r4, #3
 800e636:	1918      	adds	r0, r3, r4
 800e638:	1c6b      	adds	r3, r5, #1
 800e63a:	d10b      	bne.n	800e654 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800e63c:	4601      	mov	r1, r0
 800e63e:	9802      	ldr	r0, [sp, #8]
 800e640:	f7ff fc24 	bl	800de8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e644:	4631      	mov	r1, r6
 800e646:	9801      	ldr	r0, [sp, #4]
 800e648:	f7ff fcca 	bl	800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e64c:	e50d      	b.n	800e06a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e64e:	4645      	mov	r5, r8
 800e650:	464c      	mov	r4, r9
 800e652:	e7ed      	b.n	800e630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800e654:	9b01      	ldr	r3, [sp, #4]
 800e656:	00ed      	lsls	r5, r5, #3
 800e658:	1959      	adds	r1, r3, r5
 800e65a:	f7ff fc17 	bl	800de8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e65e:	9b02      	ldr	r3, [sp, #8]
 800e660:	cb03      	ldmia	r3!, {r0, r1}
 800e662:	445d      	add	r5, fp
 800e664:	445c      	add	r4, fp
 800e666:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800e66a:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800e66e:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800e672:	9b02      	ldr	r3, [sp, #8]
 800e674:	6861      	ldr	r1, [r4, #4]
 800e676:	c303      	stmia	r3!, {r0, r1}
 800e678:	e7e4      	b.n	800e644 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800e67c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e67c:	b530      	push	{r4, r5, lr}
 800e67e:	4b1d      	ldr	r3, [pc, #116]	; (800e6f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e680:	b085      	sub	sp, #20
 800e682:	460c      	mov	r4, r1
 800e684:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e688:	4b1b      	ldr	r3, [pc, #108]	; (800e6f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e68a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e68e:	2100      	movs	r1, #0
 800e690:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e694:	9100      	str	r1, [sp, #0]
 800e696:	4605      	mov	r5, r0
 800e698:	6861      	ldr	r1, [r4, #4]
 800e69a:	6820      	ldr	r0, [r4, #0]
 800e69c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e6a0:	ab02      	add	r3, sp, #8
 800e6a2:	c303      	stmia	r3!, {r0, r1}
 800e6a4:	4669      	mov	r1, sp
 800e6a6:	a802      	add	r0, sp, #8
 800e6a8:	f7fb febe 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800e6ac:	ab02      	add	r3, sp, #8
 800e6ae:	cb03      	ldmia	r3!, {r0, r1}
 800e6b0:	4b12      	ldr	r3, [pc, #72]	; (800e6fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e6b2:	6020      	str	r0, [r4, #0]
 800e6b4:	6818      	ldr	r0, [r3, #0]
 800e6b6:	6061      	str	r1, [r4, #4]
 800e6b8:	b138      	cbz	r0, 800e6ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e6ba:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800e6be:	b133      	cbz	r3, 800e6ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e6c0:	6821      	ldr	r1, [r4, #0]
 800e6c2:	6862      	ldr	r2, [r4, #4]
 800e6c4:	4628      	mov	r0, r5
 800e6c6:	f7ff fcc3 	bl	800e050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e6ca:	b005      	add	sp, #20
 800e6cc:	bd30      	pop	{r4, r5, pc}
 800e6ce:	6803      	ldr	r3, [r0, #0]
 800e6d0:	4621      	mov	r1, r4
 800e6d2:	689b      	ldr	r3, [r3, #8]
 800e6d4:	4798      	blx	r3
 800e6d6:	4b0a      	ldr	r3, [pc, #40]	; (800e700 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e6d8:	6818      	ldr	r0, [r3, #0]
 800e6da:	b118      	cbz	r0, 800e6e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e6dc:	6803      	ldr	r3, [r0, #0]
 800e6de:	4621      	mov	r1, r4
 800e6e0:	689b      	ldr	r3, [r3, #8]
 800e6e2:	4798      	blx	r3
 800e6e4:	4b07      	ldr	r3, [pc, #28]	; (800e704 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e6e6:	6818      	ldr	r0, [r3, #0]
 800e6e8:	6803      	ldr	r3, [r0, #0]
 800e6ea:	4621      	mov	r1, r4
 800e6ec:	699b      	ldr	r3, [r3, #24]
 800e6ee:	4798      	blx	r3
 800e6f0:	e7eb      	b.n	800e6ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e6f2:	bf00      	nop
 800e6f4:	20012db8 	.word	0x20012db8
 800e6f8:	20012dba 	.word	0x20012dba
 800e6fc:	20012e00 	.word	0x20012e00
 800e700:	20012dfc 	.word	0x20012dfc
 800e704:	20012dc4 	.word	0x20012dc4

0800e708 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e70c:	4604      	mov	r4, r0
 800e70e:	b09b      	sub	sp, #108	; 0x6c
 800e710:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800e714:	b129      	cbz	r1, 800e722 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e716:	2300      	movs	r3, #0
 800e718:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e71c:	b01b      	add	sp, #108	; 0x6c
 800e71e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e722:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e726:	4630      	mov	r0, r6
 800e728:	f7fb fec1 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800e72c:	4605      	mov	r5, r0
 800e72e:	b940      	cbnz	r0, 800e742 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800e730:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e734:	4620      	mov	r0, r4
 800e736:	f7ff fc8b 	bl	800e050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e73a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e73e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e742:	4ba7      	ldr	r3, [pc, #668]	; (800e9e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800e744:	681b      	ldr	r3, [r3, #0]
 800e746:	b33b      	cbz	r3, 800e798 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e748:	4da6      	ldr	r5, [pc, #664]	; (800e9e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800e74a:	4628      	mov	r0, r5
 800e74c:	f7fb feaf 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800e750:	4606      	mov	r6, r0
 800e752:	bb08      	cbnz	r0, 800e798 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e754:	4628      	mov	r0, r5
 800e756:	f7ff f9d5 	bl	800db04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e75a:	6829      	ldr	r1, [r5, #0]
 800e75c:	686a      	ldr	r2, [r5, #4]
 800e75e:	4620      	mov	r0, r4
 800e760:	f7ff fc76 	bl	800e050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e764:	802e      	strh	r6, [r5, #0]
 800e766:	806e      	strh	r6, [r5, #2]
 800e768:	80ae      	strh	r6, [r5, #4]
 800e76a:	80ee      	strh	r6, [r5, #6]
 800e76c:	4f9e      	ldr	r7, [pc, #632]	; (800e9e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800e76e:	a809      	add	r0, sp, #36	; 0x24
 800e770:	f7ff fbe3 	bl	800df3a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e774:	883d      	ldrh	r5, [r7, #0]
 800e776:	462e      	mov	r6, r5
 800e778:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e77c:	42b3      	cmp	r3, r6
 800e77e:	d910      	bls.n	800e7a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800e780:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e784:	a809      	add	r0, sp, #36	; 0x24
 800e786:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e78a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e78e:	3601      	adds	r6, #1
 800e790:	f7ff fc3c 	bl	800e00c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e794:	b2b6      	uxth	r6, r6
 800e796:	e7ef      	b.n	800e778 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e798:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e79c:	2b00      	cmp	r3, #0
 800e79e:	d1e5      	bne.n	800e76c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800e7a0:	e7bc      	b.n	800e71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e7a2:	462e      	mov	r6, r5
 800e7a4:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e7a8:	42b3      	cmp	r3, r6
 800e7aa:	d90b      	bls.n	800e7c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800e7ac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e7b0:	4620      	mov	r0, r4
 800e7b2:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e7b6:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e7ba:	3601      	adds	r6, #1
 800e7bc:	f7ff fc48 	bl	800e050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e7c0:	b2b6      	uxth	r6, r6
 800e7c2:	e7ef      	b.n	800e7a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e7c4:	4a89      	ldr	r2, [pc, #548]	; (800e9ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800e7c6:	6813      	ldr	r3, [r2, #0]
 800e7c8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e7cc:	2b01      	cmp	r3, #1
 800e7ce:	4690      	mov	r8, r2
 800e7d0:	f040 8094 	bne.w	800e8fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800e7d4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e7d8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e7dc:	33aa      	adds	r3, #170	; 0xaa
 800e7de:	f04f 0900 	mov.w	r9, #0
 800e7e2:	42a8      	cmp	r0, r5
 800e7e4:	f103 0308 	add.w	r3, r3, #8
 800e7e8:	dd0a      	ble.n	800e800 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800e7ea:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e7ee:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e7f2:	440a      	add	r2, r1
 800e7f4:	b212      	sxth	r2, r2
 800e7f6:	4591      	cmp	r9, r2
 800e7f8:	bfb8      	it	lt
 800e7fa:	4691      	movlt	r9, r2
 800e7fc:	3501      	adds	r5, #1
 800e7fe:	e7f0      	b.n	800e7e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800e800:	4b7b      	ldr	r3, [pc, #492]	; (800e9f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800e802:	4e7c      	ldr	r6, [pc, #496]	; (800e9f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800e804:	881d      	ldrh	r5, [r3, #0]
 800e806:	2300      	movs	r3, #0
 800e808:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e80c:	2d0f      	cmp	r5, #15
 800e80e:	bf8c      	ite	hi
 800e810:	08ed      	lsrhi	r5, r5, #3
 800e812:	2501      	movls	r5, #1
 800e814:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e818:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e81c:	f8d8 0000 	ldr.w	r0, [r8]
 800e820:	440b      	add	r3, r1
 800e822:	b21b      	sxth	r3, r3
 800e824:	4599      	cmp	r9, r3
 800e826:	6802      	ldr	r2, [r0, #0]
 800e828:	dd4b      	ble.n	800e8c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800e82a:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800e82e:	4798      	blx	r3
 800e830:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e834:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e838:	4413      	add	r3, r2
 800e83a:	b21b      	sxth	r3, r3
 800e83c:	195a      	adds	r2, r3, r5
 800e83e:	4290      	cmp	r0, r2
 800e840:	da07      	bge.n	800e852 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e842:	4581      	cmp	r9, r0
 800e844:	dd05      	ble.n	800e852 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e846:	4298      	cmp	r0, r3
 800e848:	da33      	bge.n	800e8b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	dd31      	ble.n	800e8b2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e84e:	4648      	mov	r0, r9
 800e850:	e004      	b.n	800e85c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800e852:	4298      	cmp	r0, r3
 800e854:	dbfb      	blt.n	800e84e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800e856:	4548      	cmp	r0, r9
 800e858:	bfa8      	it	ge
 800e85a:	4648      	movge	r0, r9
 800e85c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800e860:	f8b7 a000 	ldrh.w	sl, [r7]
 800e864:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e868:	2100      	movs	r1, #0
 800e86a:	1ac0      	subs	r0, r0, r3
 800e86c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e870:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e874:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e878:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e87c:	4553      	cmp	r3, sl
 800e87e:	d9c9      	bls.n	800e814 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e880:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e884:	ab07      	add	r3, sp, #28
 800e886:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e88a:	6851      	ldr	r1, [r2, #4]
 800e88c:	c303      	stmia	r3!, {r0, r1}
 800e88e:	a807      	add	r0, sp, #28
 800e890:	a905      	add	r1, sp, #20
 800e892:	f7fb fdc9 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800e896:	a807      	add	r0, sp, #28
 800e898:	f7fb fe09 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800e89c:	b920      	cbnz	r0, 800e8a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800e89e:	6823      	ldr	r3, [r4, #0]
 800e8a0:	a907      	add	r1, sp, #28
 800e8a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e8a4:	4620      	mov	r0, r4
 800e8a6:	4798      	blx	r3
 800e8a8:	f10a 0a01 	add.w	sl, sl, #1
 800e8ac:	fa1f fa8a 	uxth.w	sl, sl
 800e8b0:	e7e2      	b.n	800e878 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800e8b2:	f8d8 0000 	ldr.w	r0, [r8]
 800e8b6:	6803      	ldr	r3, [r0, #0]
 800e8b8:	2101      	movs	r1, #1
 800e8ba:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e8be:	4798      	blx	r3
 800e8c0:	e7a8      	b.n	800e814 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e8c2:	6a13      	ldr	r3, [r2, #32]
 800e8c4:	4798      	blx	r3
 800e8c6:	4b4c      	ldr	r3, [pc, #304]	; (800e9f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800e8c8:	781b      	ldrb	r3, [r3, #0]
 800e8ca:	2b00      	cmp	r3, #0
 800e8cc:	f43f af26 	beq.w	800e71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8d0:	2300      	movs	r3, #0
 800e8d2:	883d      	ldrh	r5, [r7, #0]
 800e8d4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e8d8:	34ea      	adds	r4, #234	; 0xea
 800e8da:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e8de:	42ab      	cmp	r3, r5
 800e8e0:	f67f af1c 	bls.w	800e71c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8e4:	ab1a      	add	r3, sp, #104	; 0x68
 800e8e6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e8ea:	3b44      	subs	r3, #68	; 0x44
 800e8ec:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e8f0:	4620      	mov	r0, r4
 800e8f2:	3501      	adds	r5, #1
 800e8f4:	f7ff fb8a 	bl	800e00c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e8f8:	b2ad      	uxth	r5, r5
 800e8fa:	e7ee      	b.n	800e8da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800e8fc:	2b02      	cmp	r3, #2
 800e8fe:	f040 813e 	bne.w	800eb7e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800e902:	4b3e      	ldr	r3, [pc, #248]	; (800e9fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800e904:	781b      	ldrb	r3, [r3, #0]
 800e906:	2b01      	cmp	r3, #1
 800e908:	d02c      	beq.n	800e964 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800e90a:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800e90e:	883a      	ldrh	r2, [r7, #0]
 800e910:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800e914:	3201      	adds	r2, #1
 800e916:	b292      	uxth	r2, r2
 800e918:	2900      	cmp	r1, #0
 800e91a:	d0d4      	beq.n	800e8c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800e91c:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800e920:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800e924:	441d      	add	r5, r3
 800e926:	b22d      	sxth	r5, r5
 800e928:	4610      	mov	r0, r2
 800e92a:	f04f 0a00 	mov.w	sl, #0
 800e92e:	b283      	uxth	r3, r0
 800e930:	4299      	cmp	r1, r3
 800e932:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800e936:	f240 80c5 	bls.w	800eac4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800e93a:	4426      	add	r6, r4
 800e93c:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800e940:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800e944:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800e948:	4573      	cmp	r3, lr
 800e94a:	4684      	mov	ip, r0
 800e94c:	f340 80a7 	ble.w	800ea9e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800e950:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800e954:	4475      	add	r5, lr
 800e956:	b22d      	sxth	r5, r5
 800e958:	429d      	cmp	r5, r3
 800e95a:	bfa8      	it	ge
 800e95c:	461d      	movge	r5, r3
 800e95e:	3001      	adds	r0, #1
 800e960:	46e2      	mov	sl, ip
 800e962:	e7e4      	b.n	800e92e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800e964:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800e968:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800e96c:	f1bb 0f00 	cmp.w	fp, #0
 800e970:	d0a9      	beq.n	800e8c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800e972:	883b      	ldrh	r3, [r7, #0]
 800e974:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800e978:	3301      	adds	r3, #1
 800e97a:	b29b      	uxth	r3, r3
 800e97c:	2600      	movs	r6, #0
 800e97e:	b299      	uxth	r1, r3
 800e980:	458b      	cmp	fp, r1
 800e982:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800e986:	d93b      	bls.n	800ea00 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800e988:	4425      	add	r5, r4
 800e98a:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800e98e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800e992:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800e996:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800e99a:	4408      	add	r0, r1
 800e99c:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800e9a0:	4471      	add	r1, lr
 800e9a2:	b200      	sxth	r0, r0
 800e9a4:	b209      	sxth	r1, r1
 800e9a6:	4288      	cmp	r0, r1
 800e9a8:	469c      	mov	ip, r3
 800e9aa:	da06      	bge.n	800e9ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800e9ac:	4586      	cmp	lr, r0
 800e9ae:	4672      	mov	r2, lr
 800e9b0:	bfb8      	it	lt
 800e9b2:	4602      	movlt	r2, r0
 800e9b4:	3301      	adds	r3, #1
 800e9b6:	4666      	mov	r6, ip
 800e9b8:	e7e1      	b.n	800e97e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800e9ba:	d10b      	bne.n	800e9d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800e9bc:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800e9c0:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800e9c4:	458c      	cmp	ip, r1
 800e9c6:	bfb4      	ite	lt
 800e9c8:	469c      	movlt	ip, r3
 800e9ca:	46b4      	movge	ip, r6
 800e9cc:	4572      	cmp	r2, lr
 800e9ce:	bfb8      	it	lt
 800e9d0:	4672      	movlt	r2, lr
 800e9d2:	e7ef      	b.n	800e9b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800e9d4:	428a      	cmp	r2, r1
 800e9d6:	bfb8      	it	lt
 800e9d8:	460a      	movlt	r2, r1
 800e9da:	46b4      	mov	ip, r6
 800e9dc:	e7ea      	b.n	800e9b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800e9de:	bf00      	nop
 800e9e0:	20012dfc 	.word	0x20012dfc
 800e9e4:	20012e08 	.word	0x20012e08
 800e9e8:	20000084 	.word	0x20000084
 800e9ec:	20012dc4 	.word	0x20012dc4
 800e9f0:	20012dba 	.word	0x20012dba
 800e9f4:	20012db8 	.word	0x20012db8
 800e9f8:	20012dc2 	.word	0x20012dc2
 800e9fc:	20012dbc 	.word	0x20012dbc
 800ea00:	1961      	adds	r1, r4, r5
 800ea02:	ab07      	add	r3, sp, #28
 800ea04:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800ea08:	6849      	ldr	r1, [r1, #4]
 800ea0a:	c303      	stmia	r3!, {r0, r1}
 800ea0c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800ea10:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ea14:	2b13      	cmp	r3, #19
 800ea16:	bfd8      	it	le
 800ea18:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800ea1c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ea20:	440b      	add	r3, r1
 800ea22:	1a9b      	subs	r3, r3, r2
 800ea24:	a807      	add	r0, sp, #28
 800ea26:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ea2a:	f7ff f8e1 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ea2e:	a807      	add	r0, sp, #28
 800ea30:	f7fb fd3d 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800ea34:	2800      	cmp	r0, #0
 800ea36:	d197      	bne.n	800e968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800ea38:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ea3c:	f8d8 0000 	ldr.w	r0, [r8]
 800ea40:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ea44:	f8d0 e000 	ldr.w	lr, [r0]
 800ea48:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ea4c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ea50:	f1bc 0f14 	cmp.w	ip, #20
 800ea54:	bfa8      	it	ge
 800ea56:	f04f 0c14 	movge.w	ip, #20
 800ea5a:	fa1f fc8c 	uxth.w	ip, ip
 800ea5e:	f8cd c000 	str.w	ip, [sp]
 800ea62:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 800ea66:	47d0      	blx	sl
 800ea68:	4682      	mov	sl, r0
 800ea6a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ea6e:	a807      	add	r0, sp, #28
 800ea70:	f7ff f848 	bl	800db04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ea74:	6823      	ldr	r3, [r4, #0]
 800ea76:	4425      	add	r5, r4
 800ea78:	4620      	mov	r0, r4
 800ea7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ea7c:	a907      	add	r1, sp, #28
 800ea7e:	4798      	blx	r3
 800ea80:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800ea84:	eba0 000a 	sub.w	r0, r0, sl
 800ea88:	b200      	sxth	r0, r0
 800ea8a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800ea8e:	2800      	cmp	r0, #0
 800ea90:	f47f af6a 	bne.w	800e968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800ea94:	b2b1      	uxth	r1, r6
 800ea96:	4648      	mov	r0, r9
 800ea98:	f7ff faa2 	bl	800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ea9c:	e764      	b.n	800e968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800ea9e:	d10c      	bne.n	800eaba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800eaa0:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800eaa4:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800eaa8:	45b4      	cmp	ip, r6
 800eaaa:	bfb4      	ite	lt
 800eaac:	4684      	movlt	ip, r0
 800eaae:	46d4      	movge	ip, sl
 800eab0:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800eab4:	4433      	add	r3, r6
 800eab6:	b21b      	sxth	r3, r3
 800eab8:	e74e      	b.n	800e958 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800eaba:	4575      	cmp	r5, lr
 800eabc:	bfa8      	it	ge
 800eabe:	4675      	movge	r5, lr
 800eac0:	46d4      	mov	ip, sl
 800eac2:	e74c      	b.n	800e95e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800eac4:	eb0b 0006 	add.w	r0, fp, r6
 800eac8:	4426      	add	r6, r4
 800eaca:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800eace:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800ead2:	f1b9 0f13 	cmp.w	r9, #19
 800ead6:	bfde      	ittt	le
 800ead8:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800eadc:	444d      	addle	r5, r9
 800eade:	b22d      	sxthle	r5, r5
 800eae0:	f7fb fce5 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800eae4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800eae8:	2800      	cmp	r0, #0
 800eaea:	f47f af15 	bne.w	800e918 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800eaee:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800eaf2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800eaf6:	eba5 050c 	sub.w	r5, r5, ip
 800eafa:	fa1f f28c 	uxth.w	r2, ip
 800eafe:	fa1f f989 	uxth.w	r9, r9
 800eb02:	eb02 0009 	add.w	r0, r2, r9
 800eb06:	2d14      	cmp	r5, #20
 800eb08:	bfa8      	it	ge
 800eb0a:	2514      	movge	r5, #20
 800eb0c:	b200      	sxth	r0, r0
 800eb0e:	fa1f fe85 	uxth.w	lr, r5
 800eb12:	eba0 000c 	sub.w	r0, r0, ip
 800eb16:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800eb1a:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800eb1e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800eb22:	4586      	cmp	lr, r0
 800eb24:	f8d8 0000 	ldr.w	r0, [r8]
 800eb28:	f8ad c01e 	strh.w	ip, [sp, #30]
 800eb2c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eb30:	bfb8      	it	lt
 800eb32:	46f1      	movlt	r9, lr
 800eb34:	6805      	ldr	r5, [r0, #0]
 800eb36:	f8cd 9000 	str.w	r9, [sp]
 800eb3a:	b29b      	uxth	r3, r3
 800eb3c:	b289      	uxth	r1, r1
 800eb3e:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 800eb42:	47a8      	blx	r5
 800eb44:	6823      	ldr	r3, [r4, #0]
 800eb46:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800eb4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eb4c:	a907      	add	r1, sp, #28
 800eb4e:	4620      	mov	r0, r4
 800eb50:	4798      	blx	r3
 800eb52:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800eb56:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800eb5a:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800eb5e:	1a5b      	subs	r3, r3, r1
 800eb60:	440a      	add	r2, r1
 800eb62:	b21b      	sxth	r3, r3
 800eb64:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800eb68:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800eb6c:	2b00      	cmp	r3, #0
 800eb6e:	f47f aece 	bne.w	800e90e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800eb72:	fa1f f18a 	uxth.w	r1, sl
 800eb76:	4658      	mov	r0, fp
 800eb78:	f7ff fa32 	bl	800dfe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eb7c:	e6c7      	b.n	800e90e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800eb7e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800eb82:	42ab      	cmp	r3, r5
 800eb84:	f67f ae9f 	bls.w	800e8c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800eb88:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800eb8c:	ab07      	add	r3, sp, #28
 800eb8e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800eb92:	6851      	ldr	r1, [r2, #4]
 800eb94:	c303      	stmia	r3!, {r0, r1}
 800eb96:	a807      	add	r0, sp, #28
 800eb98:	f7fb fc89 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb9c:	b920      	cbnz	r0, 800eba8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800eb9e:	6823      	ldr	r3, [r4, #0]
 800eba0:	a907      	add	r1, sp, #28
 800eba2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eba4:	4620      	mov	r0, r4
 800eba6:	4798      	blx	r3
 800eba8:	3501      	adds	r5, #1
 800ebaa:	b2ad      	uxth	r5, r5
 800ebac:	e7e7      	b.n	800eb7e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800ebae:	bf00      	nop

0800ebb0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ebb0:	4b03      	ldr	r3, [pc, #12]	; (800ebc0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ebb2:	2200      	movs	r2, #0
 800ebb4:	801a      	strh	r2, [r3, #0]
 800ebb6:	805a      	strh	r2, [r3, #2]
 800ebb8:	809a      	strh	r2, [r3, #4]
 800ebba:	80da      	strh	r2, [r3, #6]
 800ebbc:	4770      	bx	lr
 800ebbe:	bf00      	nop
 800ebc0:	20012e08 	.word	0x20012e08

0800ebc4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ebc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebc8:	4606      	mov	r6, r0
 800ebca:	b09b      	sub	sp, #108	; 0x6c
 800ebcc:	a803      	add	r0, sp, #12
 800ebce:	4614      	mov	r4, r2
 800ebd0:	468a      	mov	sl, r1
 800ebd2:	461d      	mov	r5, r3
 800ebd4:	f000 fdfd 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800ebd8:	6833      	ldr	r3, [r6, #0]
 800ebda:	4630      	mov	r0, r6
 800ebdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ebde:	4798      	blx	r3
 800ebe0:	6833      	ldr	r3, [r6, #0]
 800ebe2:	4607      	mov	r7, r0
 800ebe4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ebe6:	4630      	mov	r0, r6
 800ebe8:	4798      	blx	r3
 800ebea:	462a      	mov	r2, r5
 800ebec:	9000      	str	r0, [sp, #0]
 800ebee:	4621      	mov	r1, r4
 800ebf0:	463b      	mov	r3, r7
 800ebf2:	a803      	add	r0, sp, #12
 800ebf4:	f000 fe3a 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ebf8:	2500      	movs	r5, #0
 800ebfa:	462c      	mov	r4, r5
 800ebfc:	46a9      	mov	r9, r5
 800ebfe:	46a8      	mov	r8, r5
 800ec00:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ec04:	2300      	movs	r3, #0
 800ec06:	9302      	str	r3, [sp, #8]
 800ec08:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ec0c:	429c      	cmp	r4, r3
 800ec0e:	d002      	beq.n	800ec16 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ec10:	455c      	cmp	r4, fp
 800ec12:	bf18      	it	ne
 800ec14:	4625      	movne	r5, r4
 800ec16:	ab02      	add	r3, sp, #8
 800ec18:	4632      	mov	r2, r6
 800ec1a:	4651      	mov	r1, sl
 800ec1c:	a803      	add	r0, sp, #12
 800ec1e:	f001 f921 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec22:	4604      	mov	r4, r0
 800ec24:	b108      	cbz	r0, 800ec2a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ec26:	280a      	cmp	r0, #10
 800ec28:	d10a      	bne.n	800ec40 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ec2a:	45c1      	cmp	r9, r8
 800ec2c:	bf38      	it	cc
 800ec2e:	46c1      	movcc	r9, r8
 800ec30:	f04f 0800 	mov.w	r8, #0
 800ec34:	2c00      	cmp	r4, #0
 800ec36:	d1e5      	bne.n	800ec04 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec38:	4648      	mov	r0, r9
 800ec3a:	b01b      	add	sp, #108	; 0x6c
 800ec3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec40:	9a02      	ldr	r2, [sp, #8]
 800ec42:	2a00      	cmp	r2, #0
 800ec44:	d0de      	beq.n	800ec04 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ec46:	7b57      	ldrb	r7, [r2, #13]
 800ec48:	6833      	ldr	r3, [r6, #0]
 800ec4a:	8894      	ldrh	r4, [r2, #4]
 800ec4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ec4e:	007f      	lsls	r7, r7, #1
 800ec50:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ec54:	7a97      	ldrb	r7, [r2, #10]
 800ec56:	4629      	mov	r1, r5
 800ec58:	4307      	orrs	r7, r0
 800ec5a:	4630      	mov	r0, r6
 800ec5c:	4798      	blx	r3
 800ec5e:	4438      	add	r0, r7
 800ec60:	4480      	add	r8, r0
 800ec62:	fa1f f888 	uxth.w	r8, r8
 800ec66:	e7e5      	b.n	800ec34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ec68 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ec68:	b508      	push	{r3, lr}
 800ec6a:	6803      	ldr	r3, [r0, #0]
 800ec6c:	68db      	ldr	r3, [r3, #12]
 800ec6e:	4798      	blx	r3
 800ec70:	b128      	cbz	r0, 800ec7e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ec72:	7b43      	ldrb	r3, [r0, #13]
 800ec74:	7a80      	ldrb	r0, [r0, #10]
 800ec76:	005b      	lsls	r3, r3, #1
 800ec78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ec7c:	4318      	orrs	r0, r3
 800ec7e:	bd08      	pop	{r3, pc}

0800ec80 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ec80:	b40e      	push	{r1, r2, r3}
 800ec82:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec84:	b09c      	sub	sp, #112	; 0x70
 800ec86:	ab21      	add	r3, sp, #132	; 0x84
 800ec88:	4605      	mov	r5, r0
 800ec8a:	f853 4b04 	ldr.w	r4, [r3], #4
 800ec8e:	9303      	str	r3, [sp, #12]
 800ec90:	a805      	add	r0, sp, #20
 800ec92:	f000 fd9e 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800ec96:	682b      	ldr	r3, [r5, #0]
 800ec98:	4628      	mov	r0, r5
 800ec9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ec9c:	4798      	blx	r3
 800ec9e:	682b      	ldr	r3, [r5, #0]
 800eca0:	4606      	mov	r6, r0
 800eca2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eca4:	4628      	mov	r0, r5
 800eca6:	4798      	blx	r3
 800eca8:	4633      	mov	r3, r6
 800ecaa:	ae1c      	add	r6, sp, #112	; 0x70
 800ecac:	4621      	mov	r1, r4
 800ecae:	9000      	str	r0, [sp, #0]
 800ecb0:	9a03      	ldr	r2, [sp, #12]
 800ecb2:	2400      	movs	r4, #0
 800ecb4:	a805      	add	r0, sp, #20
 800ecb6:	f000 fdd9 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ecba:	f846 4d60 	str.w	r4, [r6, #-96]!
 800ecbe:	462a      	mov	r2, r5
 800ecc0:	4633      	mov	r3, r6
 800ecc2:	4621      	mov	r1, r4
 800ecc4:	a805      	add	r0, sp, #20
 800ecc6:	f001 f8cd 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ecca:	b1f0      	cbz	r0, 800ed0a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800eccc:	280a      	cmp	r0, #10
 800ecce:	d018      	beq.n	800ed02 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ecd0:	9f04      	ldr	r7, [sp, #16]
 800ecd2:	b1b7      	cbz	r7, 800ed02 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800ecd4:	7b78      	ldrb	r0, [r7, #13]
 800ecd6:	7a3b      	ldrb	r3, [r7, #8]
 800ecd8:	88aa      	ldrh	r2, [r5, #4]
 800ecda:	00c1      	lsls	r1, r0, #3
 800ecdc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ece0:	4319      	orrs	r1, r3
 800ece2:	0643      	lsls	r3, r0, #25
 800ece4:	bf44      	itt	mi
 800ece6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800ecea:	b219      	sxthmi	r1, r3
 800ecec:	0100      	lsls	r0, r0, #4
 800ecee:	79fb      	ldrb	r3, [r7, #7]
 800ecf0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ecf4:	4303      	orrs	r3, r0
 800ecf6:	4413      	add	r3, r2
 800ecf8:	1a5b      	subs	r3, r3, r1
 800ecfa:	b29b      	uxth	r3, r3
 800ecfc:	42a3      	cmp	r3, r4
 800ecfe:	bfc8      	it	gt
 800ed00:	b21c      	sxthgt	r4, r3
 800ed02:	4633      	mov	r3, r6
 800ed04:	462a      	mov	r2, r5
 800ed06:	2100      	movs	r1, #0
 800ed08:	e7dc      	b.n	800ecc4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800ed0a:	b2a0      	uxth	r0, r4
 800ed0c:	b01c      	add	sp, #112	; 0x70
 800ed0e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ed12:	b003      	add	sp, #12
 800ed14:	4770      	bx	lr

0800ed16 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800ed16:	b40e      	push	{r1, r2, r3}
 800ed18:	b570      	push	{r4, r5, r6, lr}
 800ed1a:	b09b      	sub	sp, #108	; 0x6c
 800ed1c:	ab1f      	add	r3, sp, #124	; 0x7c
 800ed1e:	4604      	mov	r4, r0
 800ed20:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed24:	9302      	str	r3, [sp, #8]
 800ed26:	a803      	add	r0, sp, #12
 800ed28:	f000 fd53 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800ed2c:	6823      	ldr	r3, [r4, #0]
 800ed2e:	4620      	mov	r0, r4
 800ed30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed32:	4798      	blx	r3
 800ed34:	6823      	ldr	r3, [r4, #0]
 800ed36:	4606      	mov	r6, r0
 800ed38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ed3a:	4620      	mov	r0, r4
 800ed3c:	4798      	blx	r3
 800ed3e:	4633      	mov	r3, r6
 800ed40:	9000      	str	r0, [sp, #0]
 800ed42:	9a02      	ldr	r2, [sp, #8]
 800ed44:	4629      	mov	r1, r5
 800ed46:	a803      	add	r0, sp, #12
 800ed48:	f000 fd90 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ed4c:	a803      	add	r0, sp, #12
 800ed4e:	f001 f981 	bl	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed52:	2401      	movs	r4, #1
 800ed54:	b2a3      	uxth	r3, r4
 800ed56:	b140      	cbz	r0, 800ed6a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800ed58:	280a      	cmp	r0, #10
 800ed5a:	bf08      	it	eq
 800ed5c:	3301      	addeq	r3, #1
 800ed5e:	a803      	add	r0, sp, #12
 800ed60:	bf08      	it	eq
 800ed62:	b21c      	sxtheq	r4, r3
 800ed64:	f001 f976 	bl	8010054 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ed68:	e7f4      	b.n	800ed54 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800ed6a:	4618      	mov	r0, r3
 800ed6c:	b01b      	add	sp, #108	; 0x6c
 800ed6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed72:	b003      	add	sp, #12
 800ed74:	4770      	bx	lr

0800ed76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ed76:	b40e      	push	{r1, r2, r3}
 800ed78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed7a:	b09c      	sub	sp, #112	; 0x70
 800ed7c:	ab21      	add	r3, sp, #132	; 0x84
 800ed7e:	4604      	mov	r4, r0
 800ed80:	f853 5b04 	ldr.w	r5, [r3], #4
 800ed84:	9303      	str	r3, [sp, #12]
 800ed86:	a805      	add	r0, sp, #20
 800ed88:	f000 fd23 	bl	800f7d2 <_ZN8touchgfx12TextProviderC1Ev>
 800ed8c:	6823      	ldr	r3, [r4, #0]
 800ed8e:	4620      	mov	r0, r4
 800ed90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed92:	4798      	blx	r3
 800ed94:	6823      	ldr	r3, [r4, #0]
 800ed96:	4606      	mov	r6, r0
 800ed98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ed9a:	4620      	mov	r0, r4
 800ed9c:	4798      	blx	r3
 800ed9e:	4633      	mov	r3, r6
 800eda0:	4629      	mov	r1, r5
 800eda2:	9000      	str	r0, [sp, #0]
 800eda4:	9a03      	ldr	r2, [sp, #12]
 800eda6:	a805      	add	r0, sp, #20
 800eda8:	ad1c      	add	r5, sp, #112	; 0x70
 800edaa:	f000 fd5f 	bl	800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800edae:	2100      	movs	r1, #0
 800edb0:	f845 1d60 	str.w	r1, [r5, #-96]!
 800edb4:	4622      	mov	r2, r4
 800edb6:	462b      	mov	r3, r5
 800edb8:	a805      	add	r0, sp, #20
 800edba:	f001 f853 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edbe:	26ff      	movs	r6, #255	; 0xff
 800edc0:	b1d8      	cbz	r0, 800edfa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800edc2:	280a      	cmp	r0, #10
 800edc4:	d012      	beq.n	800edec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800edc6:	9804      	ldr	r0, [sp, #16]
 800edc8:	b180      	cbz	r0, 800edec <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800edca:	7b47      	ldrb	r7, [r0, #13]
 800edcc:	7922      	ldrb	r2, [r4, #4]
 800edce:	00fb      	lsls	r3, r7, #3
 800edd0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800edd4:	7a03      	ldrb	r3, [r0, #8]
 800edd6:	430b      	orrs	r3, r1
 800edd8:	0679      	lsls	r1, r7, #25
 800edda:	bf44      	itt	mi
 800eddc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ede0:	b21b      	sxthmi	r3, r3
 800ede2:	1ad3      	subs	r3, r2, r3
 800ede4:	b2db      	uxtb	r3, r3
 800ede6:	429e      	cmp	r6, r3
 800ede8:	bf28      	it	cs
 800edea:	461e      	movcs	r6, r3
 800edec:	462b      	mov	r3, r5
 800edee:	4622      	mov	r2, r4
 800edf0:	2100      	movs	r1, #0
 800edf2:	a805      	add	r0, sp, #20
 800edf4:	f001 f836 	bl	800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edf8:	e7e2      	b.n	800edc0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800edfa:	4630      	mov	r0, r6
 800edfc:	b01c      	add	sp, #112	; 0x70
 800edfe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ee02:	b003      	add	sp, #12
 800ee04:	4770      	bx	lr

0800ee06 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800ee06:	b513      	push	{r0, r1, r4, lr}
 800ee08:	1d01      	adds	r1, r0, #4
 800ee0a:	4603      	mov	r3, r0
 800ee0c:	c903      	ldmia	r1, {r0, r1}
 800ee0e:	466a      	mov	r2, sp
 800ee10:	e882 0003 	stmia.w	r2, {r0, r1}
 800ee14:	2100      	movs	r1, #0
 800ee16:	9100      	str	r1, [sp, #0]
 800ee18:	6819      	ldr	r1, [r3, #0]
 800ee1a:	4618      	mov	r0, r3
 800ee1c:	690c      	ldr	r4, [r1, #16]
 800ee1e:	4611      	mov	r1, r2
 800ee20:	47a0      	blx	r4
 800ee22:	b002      	add	sp, #8
 800ee24:	bd10      	pop	{r4, pc}

0800ee26 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800ee26:	b538      	push	{r3, r4, r5, lr}
 800ee28:	680b      	ldr	r3, [r1, #0]
 800ee2a:	460c      	mov	r4, r1
 800ee2c:	68db      	ldr	r3, [r3, #12]
 800ee2e:	4605      	mov	r5, r0
 800ee30:	4798      	blx	r3
 800ee32:	6823      	ldr	r3, [r4, #0]
 800ee34:	4620      	mov	r0, r4
 800ee36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ee38:	4629      	mov	r1, r5
 800ee3a:	4798      	blx	r3
 800ee3c:	4628      	mov	r0, r5
 800ee3e:	bd38      	pop	{r3, r4, r5, pc}

0800ee40 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ee40:	b410      	push	{r4}
 800ee42:	880a      	ldrh	r2, [r1, #0]
 800ee44:	8884      	ldrh	r4, [r0, #4]
 800ee46:	4422      	add	r2, r4
 800ee48:	800a      	strh	r2, [r1, #0]
 800ee4a:	88c4      	ldrh	r4, [r0, #6]
 800ee4c:	884a      	ldrh	r2, [r1, #2]
 800ee4e:	4422      	add	r2, r4
 800ee50:	804a      	strh	r2, [r1, #2]
 800ee52:	6940      	ldr	r0, [r0, #20]
 800ee54:	b120      	cbz	r0, 800ee60 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ee56:	6803      	ldr	r3, [r0, #0]
 800ee58:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ee5e:	4718      	bx	r3
 800ee60:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee64:	4770      	bx	lr

0800ee66 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ee66:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee68:	460b      	mov	r3, r1
 800ee6a:	b085      	sub	sp, #20
 800ee6c:	4604      	mov	r4, r0
 800ee6e:	b901      	cbnz	r1, 800ee72 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ee70:	b322      	cbz	r2, 800eebc <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800ee72:	1d27      	adds	r7, r4, #4
 800ee74:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ee78:	466e      	mov	r6, sp
 800ee7a:	e886 0003 	stmia.w	r6, {r0, r1}
 800ee7e:	88a1      	ldrh	r1, [r4, #4]
 800ee80:	88e5      	ldrh	r5, [r4, #6]
 800ee82:	4419      	add	r1, r3
 800ee84:	6823      	ldr	r3, [r4, #0]
 800ee86:	442a      	add	r2, r5
 800ee88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee8a:	b209      	sxth	r1, r1
 800ee8c:	4620      	mov	r0, r4
 800ee8e:	b215      	sxth	r5, r2
 800ee90:	4798      	blx	r3
 800ee92:	6823      	ldr	r3, [r4, #0]
 800ee94:	4629      	mov	r1, r5
 800ee96:	4620      	mov	r0, r4
 800ee98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ee9a:	4798      	blx	r3
 800ee9c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800eea0:	ad02      	add	r5, sp, #8
 800eea2:	e885 0003 	stmia.w	r5, {r0, r1}
 800eea6:	6960      	ldr	r0, [r4, #20]
 800eea8:	b150      	cbz	r0, 800eec0 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800eeaa:	6803      	ldr	r3, [r0, #0]
 800eeac:	4631      	mov	r1, r6
 800eeae:	691b      	ldr	r3, [r3, #16]
 800eeb0:	4798      	blx	r3
 800eeb2:	6960      	ldr	r0, [r4, #20]
 800eeb4:	6803      	ldr	r3, [r0, #0]
 800eeb6:	691b      	ldr	r3, [r3, #16]
 800eeb8:	4629      	mov	r1, r5
 800eeba:	4798      	blx	r3
 800eebc:	b005      	add	sp, #20
 800eebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eec0:	f7ff f82a 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800eec4:	6803      	ldr	r3, [r0, #0]
 800eec6:	4631      	mov	r1, r6
 800eec8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eeca:	4798      	blx	r3
 800eecc:	f7ff f824 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800eed0:	6803      	ldr	r3, [r0, #0]
 800eed2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eed4:	e7f0      	b.n	800eeb8 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800eed6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800eed6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eed8:	8882      	ldrh	r2, [r0, #4]
 800eeda:	880b      	ldrh	r3, [r1, #0]
 800eedc:	4413      	add	r3, r2
 800eede:	800b      	strh	r3, [r1, #0]
 800eee0:	88c2      	ldrh	r2, [r0, #6]
 800eee2:	884b      	ldrh	r3, [r1, #2]
 800eee4:	4413      	add	r3, r2
 800eee6:	4602      	mov	r2, r0
 800eee8:	804b      	strh	r3, [r1, #2]
 800eeea:	4605      	mov	r5, r0
 800eeec:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800eef0:	460c      	mov	r4, r1
 800eef2:	6851      	ldr	r1, [r2, #4]
 800eef4:	466b      	mov	r3, sp
 800eef6:	c303      	stmia	r3!, {r0, r1}
 800eef8:	4621      	mov	r1, r4
 800eefa:	4668      	mov	r0, sp
 800eefc:	f7fb fa94 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800ef00:	466b      	mov	r3, sp
 800ef02:	cb03      	ldmia	r3!, {r0, r1}
 800ef04:	6020      	str	r0, [r4, #0]
 800ef06:	6061      	str	r1, [r4, #4]
 800ef08:	6968      	ldr	r0, [r5, #20]
 800ef0a:	b128      	cbz	r0, 800ef18 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800ef0c:	6803      	ldr	r3, [r0, #0]
 800ef0e:	691b      	ldr	r3, [r3, #16]
 800ef10:	4621      	mov	r1, r4
 800ef12:	4798      	blx	r3
 800ef14:	b003      	add	sp, #12
 800ef16:	bd30      	pop	{r4, r5, pc}
 800ef18:	f7fe fffe 	bl	800df18 <_ZN8touchgfx11Application11getInstanceEv>
 800ef1c:	6803      	ldr	r3, [r0, #0]
 800ef1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ef20:	e7f6      	b.n	800ef10 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800ef22 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800ef22:	b570      	push	{r4, r5, r6, lr}
 800ef24:	8882      	ldrh	r2, [r0, #4]
 800ef26:	880b      	ldrh	r3, [r1, #0]
 800ef28:	4413      	add	r3, r2
 800ef2a:	800b      	strh	r3, [r1, #0]
 800ef2c:	88c2      	ldrh	r2, [r0, #6]
 800ef2e:	884b      	ldrh	r3, [r1, #2]
 800ef30:	460c      	mov	r4, r1
 800ef32:	4413      	add	r3, r2
 800ef34:	804b      	strh	r3, [r1, #2]
 800ef36:	4605      	mov	r5, r0
 800ef38:	1d01      	adds	r1, r0, #4
 800ef3a:	4620      	mov	r0, r4
 800ef3c:	f7fb fa74 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800ef40:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800ef44:	2b00      	cmp	r3, #0
 800ef46:	dd0b      	ble.n	800ef60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ef48:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ef4c:	2b00      	cmp	r3, #0
 800ef4e:	dd07      	ble.n	800ef60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ef50:	6968      	ldr	r0, [r5, #20]
 800ef52:	b128      	cbz	r0, 800ef60 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800ef54:	6803      	ldr	r3, [r0, #0]
 800ef56:	4621      	mov	r1, r4
 800ef58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ef5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef5e:	4718      	bx	r3
 800ef60:	bd70      	pop	{r4, r5, r6, pc}

0800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ef62:	b510      	push	{r4, lr}
 800ef64:	4604      	mov	r4, r0
 800ef66:	4608      	mov	r0, r1
 800ef68:	2300      	movs	r3, #0
 800ef6a:	8023      	strh	r3, [r4, #0]
 800ef6c:	8063      	strh	r3, [r4, #2]
 800ef6e:	6803      	ldr	r3, [r0, #0]
 800ef70:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ef74:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ef78:	80a1      	strh	r1, [r4, #4]
 800ef7a:	80e2      	strh	r2, [r4, #6]
 800ef7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ef7e:	4621      	mov	r1, r4
 800ef80:	4798      	blx	r3
 800ef82:	4620      	mov	r0, r4
 800ef84:	bd10      	pop	{r4, pc}
	...

0800ef88 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ef88:	b530      	push	{r4, r5, lr}
 800ef8a:	8083      	strh	r3, [r0, #4]
 800ef8c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ef90:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ef94:	7183      	strb	r3, [r0, #6]
 800ef96:	79c3      	ldrb	r3, [r0, #7]
 800ef98:	6101      	str	r1, [r0, #16]
 800ef9a:	f365 0306 	bfi	r3, r5, #0, #7
 800ef9e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800efa2:	8282      	strh	r2, [r0, #20]
 800efa4:	f365 13c7 	bfi	r3, r5, #7, #1
 800efa8:	71c3      	strb	r3, [r0, #7]
 800efaa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800efae:	7203      	strb	r3, [r0, #8]
 800efb0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800efb4:	7243      	strb	r3, [r0, #9]
 800efb6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800efba:	8143      	strh	r3, [r0, #10]
 800efbc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800efc0:	8183      	strh	r3, [r0, #12]
 800efc2:	4b01      	ldr	r3, [pc, #4]	; (800efc8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800efc4:	6003      	str	r3, [r0, #0]
 800efc6:	bd30      	pop	{r4, r5, pc}
 800efc8:	080208bc 	.word	0x080208bc

0800efcc <_ZNK8touchgfx9ConstFont4findEt>:
 800efcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800efce:	6904      	ldr	r4, [r0, #16]
 800efd0:	b3bc      	cbz	r4, 800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efd2:	88a3      	ldrh	r3, [r4, #4]
 800efd4:	8a82      	ldrh	r2, [r0, #20]
 800efd6:	1acb      	subs	r3, r1, r3
 800efd8:	f102 32ff 	add.w	r2, r2, #4294967295
 800efdc:	d431      	bmi.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800efde:	4293      	cmp	r3, r2
 800efe0:	dd0c      	ble.n	800effc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800efe2:	230e      	movs	r3, #14
 800efe4:	fb03 4302 	mla	r3, r3, r2, r4
 800efe8:	889b      	ldrh	r3, [r3, #4]
 800efea:	1a5b      	subs	r3, r3, r1
 800efec:	1ad3      	subs	r3, r2, r3
 800efee:	429a      	cmp	r2, r3
 800eff0:	db27      	blt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800eff2:	2b00      	cmp	r3, #0
 800eff4:	bfbc      	itt	lt
 800eff6:	2302      	movlt	r3, #2
 800eff8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800effc:	2500      	movs	r5, #0
 800effe:	260e      	movs	r6, #14
 800f000:	4295      	cmp	r5, r2
 800f002:	dc1e      	bgt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f004:	fb06 4003 	mla	r0, r6, r3, r4
 800f008:	8887      	ldrh	r7, [r0, #4]
 800f00a:	42b9      	cmp	r1, r7
 800f00c:	d01a      	beq.n	800f044 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f00e:	d20d      	bcs.n	800f02c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f010:	1e5a      	subs	r2, r3, #1
 800f012:	4295      	cmp	r5, r2
 800f014:	dc15      	bgt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f016:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f01a:	1a5b      	subs	r3, r3, r1
 800f01c:	1ad3      	subs	r3, r2, r3
 800f01e:	429a      	cmp	r2, r3
 800f020:	db0f      	blt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f022:	429d      	cmp	r5, r3
 800f024:	ddec      	ble.n	800f000 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f026:	1953      	adds	r3, r2, r5
 800f028:	105b      	asrs	r3, r3, #1
 800f02a:	e7e9      	b.n	800f000 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f02c:	1c5d      	adds	r5, r3, #1
 800f02e:	42aa      	cmp	r2, r5
 800f030:	db07      	blt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f032:	8a43      	ldrh	r3, [r0, #18]
 800f034:	1acb      	subs	r3, r1, r3
 800f036:	442b      	add	r3, r5
 800f038:	429d      	cmp	r5, r3
 800f03a:	dc02      	bgt.n	800f042 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f03c:	429a      	cmp	r2, r3
 800f03e:	dadf      	bge.n	800f000 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f040:	e7f1      	b.n	800f026 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f042:	2000      	movs	r0, #0
 800f044:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f046 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f046:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f048:	4604      	mov	r4, r0
 800f04a:	4617      	mov	r7, r2
 800f04c:	461e      	mov	r6, r3
 800f04e:	b911      	cbnz	r1, 800f056 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f050:	2500      	movs	r5, #0
 800f052:	4628      	mov	r0, r5
 800f054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f056:	290a      	cmp	r1, #10
 800f058:	d0fa      	beq.n	800f050 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f05a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f05e:	4291      	cmp	r1, r2
 800f060:	d0f6      	beq.n	800f050 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f062:	f242 020b 	movw	r2, #8203	; 0x200b
 800f066:	4291      	cmp	r1, r2
 800f068:	d0f2      	beq.n	800f050 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f06a:	f7ff ffaf 	bl	800efcc <_ZNK8touchgfx9ConstFont4findEt>
 800f06e:	4605      	mov	r5, r0
 800f070:	b950      	cbnz	r0, 800f088 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f072:	6823      	ldr	r3, [r4, #0]
 800f074:	4620      	mov	r0, r4
 800f076:	691b      	ldr	r3, [r3, #16]
 800f078:	4798      	blx	r3
 800f07a:	4601      	mov	r1, r0
 800f07c:	4620      	mov	r0, r4
 800f07e:	f7ff ffa5 	bl	800efcc <_ZNK8touchgfx9ConstFont4findEt>
 800f082:	4605      	mov	r5, r0
 800f084:	2800      	cmp	r0, #0
 800f086:	d0e3      	beq.n	800f050 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f088:	6823      	ldr	r3, [r4, #0]
 800f08a:	4629      	mov	r1, r5
 800f08c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f08e:	4620      	mov	r0, r4
 800f090:	4798      	blx	r3
 800f092:	6038      	str	r0, [r7, #0]
 800f094:	6823      	ldr	r3, [r4, #0]
 800f096:	4620      	mov	r0, r4
 800f098:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f09a:	4798      	blx	r3
 800f09c:	7030      	strb	r0, [r6, #0]
 800f09e:	e7d8      	b.n	800f052 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f0a0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800f0a0:	b538      	push	{r3, r4, r5, lr}
 800f0a2:	4605      	mov	r5, r0
 800f0a4:	f002 f91e 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f0a8:	4604      	mov	r4, r0
 800f0aa:	4628      	mov	r0, r5
 800f0ac:	f002 f856 	bl	801115c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800f0b0:	2800      	cmp	r0, #0
 800f0b2:	bf14      	ite	ne
 800f0b4:	2002      	movne	r0, #2
 800f0b6:	2000      	moveq	r0, #0
 800f0b8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800f0bc:	b280      	uxth	r0, r0
 800f0be:	bd38      	pop	{r3, r4, r5, pc}

0800f0c0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800f0c0:	b538      	push	{r3, r4, r5, lr}
 800f0c2:	4605      	mov	r5, r0
 800f0c4:	f002 f90e 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f0c8:	4604      	mov	r4, r0
 800f0ca:	4628      	mov	r0, r5
 800f0cc:	f002 f846 	bl	801115c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800f0d0:	2800      	cmp	r0, #0
 800f0d2:	bf14      	ite	ne
 800f0d4:	2002      	movne	r0, #2
 800f0d6:	2000      	moveq	r0, #0
 800f0d8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800f0dc:	f040 0001 	orr.w	r0, r0, #1
 800f0e0:	b280      	uxth	r0, r0
 800f0e2:	bd38      	pop	{r3, r4, r5, pc}

0800f0e4 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800f0e4:	2000      	movs	r0, #0
 800f0e6:	4770      	bx	lr

0800f0e8 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800f0e8:	2001      	movs	r0, #1
 800f0ea:	4770      	bx	lr

0800f0ec <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800f0ec:	2002      	movs	r0, #2
 800f0ee:	4770      	bx	lr

0800f0f0 <_ZN8touchgfx6ScreenD1Ev>:
 800f0f0:	4770      	bx	lr

0800f0f2 <_ZN8touchgfx12GestureEventD1Ev>:
 800f0f2:	4770      	bx	lr

0800f0f4 <_ZN8touchgfx9DragEventD1Ev>:
 800f0f4:	4770      	bx	lr

0800f0f6 <_ZN8touchgfx10ClickEventD1Ev>:
 800f0f6:	4770      	bx	lr

0800f0f8 <_ZN8touchgfx10ClickEventD0Ev>:
 800f0f8:	b510      	push	{r4, lr}
 800f0fa:	210c      	movs	r1, #12
 800f0fc:	4604      	mov	r4, r0
 800f0fe:	f00d fe1d 	bl	801cd3c <_ZdlPvj>
 800f102:	4620      	mov	r0, r4
 800f104:	bd10      	pop	{r4, pc}

0800f106 <_ZN8touchgfx9DragEventD0Ev>:
 800f106:	b510      	push	{r4, lr}
 800f108:	2110      	movs	r1, #16
 800f10a:	4604      	mov	r4, r0
 800f10c:	f00d fe16 	bl	801cd3c <_ZdlPvj>
 800f110:	4620      	mov	r0, r4
 800f112:	bd10      	pop	{r4, pc}

0800f114 <_ZN8touchgfx12GestureEventD0Ev>:
 800f114:	b510      	push	{r4, lr}
 800f116:	210c      	movs	r1, #12
 800f118:	4604      	mov	r4, r0
 800f11a:	f00d fe0f 	bl	801cd3c <_ZdlPvj>
 800f11e:	4620      	mov	r0, r4
 800f120:	bd10      	pop	{r4, pc}

0800f122 <_ZN8touchgfx6ScreenD0Ev>:
 800f122:	b510      	push	{r4, lr}
 800f124:	213c      	movs	r1, #60	; 0x3c
 800f126:	4604      	mov	r4, r0
 800f128:	f00d fe08 	bl	801cd3c <_ZdlPvj>
 800f12c:	4620      	mov	r0, r4
 800f12e:	bd10      	pop	{r4, pc}

0800f130 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f130:	b530      	push	{r4, r5, lr}
 800f132:	460d      	mov	r5, r1
 800f134:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f136:	b087      	sub	sp, #28
 800f138:	4604      	mov	r4, r0
 800f13a:	b301      	cbz	r1, 800f17e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f13c:	a801      	add	r0, sp, #4
 800f13e:	f7ff ff10 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f142:	892a      	ldrh	r2, [r5, #8]
 800f144:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f148:	7928      	ldrb	r0, [r5, #4]
 800f14a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f14e:	f88d 0010 	strb.w	r0, [sp, #16]
 800f152:	1ad2      	subs	r2, r2, r3
 800f154:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f156:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f158:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f15c:	441a      	add	r2, r3
 800f15e:	896b      	ldrh	r3, [r5, #10]
 800f160:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f164:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f168:	1b5b      	subs	r3, r3, r5
 800f16a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f16c:	442b      	add	r3, r5
 800f16e:	4d05      	ldr	r5, [pc, #20]	; (800f184 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f170:	9503      	str	r5, [sp, #12]
 800f172:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f176:	6803      	ldr	r3, [r0, #0]
 800f178:	a903      	add	r1, sp, #12
 800f17a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f17c:	4798      	blx	r3
 800f17e:	b007      	add	sp, #28
 800f180:	bd30      	pop	{r4, r5, pc}
 800f182:	bf00      	nop
 800f184:	0802093c 	.word	0x0802093c

0800f188 <_ZNK8touchgfx4Rect9intersectEss>:
 800f188:	b510      	push	{r4, lr}
 800f18a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f18e:	428b      	cmp	r3, r1
 800f190:	dc10      	bgt.n	800f1b4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f192:	8884      	ldrh	r4, [r0, #4]
 800f194:	4423      	add	r3, r4
 800f196:	b21b      	sxth	r3, r3
 800f198:	4299      	cmp	r1, r3
 800f19a:	da0b      	bge.n	800f1b4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f19c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f1a0:	4293      	cmp	r3, r2
 800f1a2:	dc07      	bgt.n	800f1b4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f1a4:	88c0      	ldrh	r0, [r0, #6]
 800f1a6:	4418      	add	r0, r3
 800f1a8:	b200      	sxth	r0, r0
 800f1aa:	4282      	cmp	r2, r0
 800f1ac:	bfac      	ite	ge
 800f1ae:	2000      	movge	r0, #0
 800f1b0:	2001      	movlt	r0, #1
 800f1b2:	bd10      	pop	{r4, pc}
 800f1b4:	2000      	movs	r0, #0
 800f1b6:	e7fc      	b.n	800f1b2 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800f1b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f1b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f1ba:	460c      	mov	r4, r1
 800f1bc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f1be:	b089      	sub	sp, #36	; 0x24
 800f1c0:	4605      	mov	r5, r0
 800f1c2:	2900      	cmp	r1, #0
 800f1c4:	d054      	beq.n	800f270 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800f1c6:	4668      	mov	r0, sp
 800f1c8:	f7ff fecb 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f1cc:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800f1ce:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800f1d0:	8922      	ldrh	r2, [r4, #8]
 800f1d2:	88e1      	ldrh	r1, [r4, #6]
 800f1d4:	443a      	add	r2, r7
 800f1d6:	4431      	add	r1, r6
 800f1d8:	b212      	sxth	r2, r2
 800f1da:	b209      	sxth	r1, r1
 800f1dc:	4668      	mov	r0, sp
 800f1de:	f7ff ffd3 	bl	800f188 <_ZNK8touchgfx4Rect9intersectEss>
 800f1e2:	b1d0      	cbz	r0, 800f21a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f1e4:	89a2      	ldrh	r2, [r4, #12]
 800f1e6:	8961      	ldrh	r1, [r4, #10]
 800f1e8:	443a      	add	r2, r7
 800f1ea:	4431      	add	r1, r6
 800f1ec:	b212      	sxth	r2, r2
 800f1ee:	b209      	sxth	r1, r1
 800f1f0:	4668      	mov	r0, sp
 800f1f2:	f7ff ffc9 	bl	800f188 <_ZNK8touchgfx4Rect9intersectEss>
 800f1f6:	4603      	mov	r3, r0
 800f1f8:	b978      	cbnz	r0, 800f21a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f1fa:	4a1e      	ldr	r2, [pc, #120]	; (800f274 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800f1fc:	9204      	str	r2, [sp, #16]
 800f1fe:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f200:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f204:	2202      	movs	r2, #2
 800f206:	f88d 2014 	strb.w	r2, [sp, #20]
 800f20a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f20e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f212:	6803      	ldr	r3, [r0, #0]
 800f214:	a904      	add	r1, sp, #16
 800f216:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f218:	4798      	blx	r3
 800f21a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800f21c:	a802      	add	r0, sp, #8
 800f21e:	f7ff fea0 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f222:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f226:	88e0      	ldrh	r0, [r4, #6]
 800f228:	8961      	ldrh	r1, [r4, #10]
 800f22a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f22e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800f232:	8923      	ldrh	r3, [r4, #8]
 800f234:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f236:	7927      	ldrb	r7, [r4, #4]
 800f238:	f88d 7014 	strb.w	r7, [sp, #20]
 800f23c:	1a80      	subs	r0, r0, r2
 800f23e:	1a89      	subs	r1, r1, r2
 800f240:	89a2      	ldrh	r2, [r4, #12]
 800f242:	4c0d      	ldr	r4, [pc, #52]	; (800f278 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800f244:	9404      	str	r4, [sp, #16]
 800f246:	4460      	add	r0, ip
 800f248:	eba3 030e 	sub.w	r3, r3, lr
 800f24c:	eba2 020e 	sub.w	r2, r2, lr
 800f250:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f254:	4433      	add	r3, r6
 800f256:	4461      	add	r1, ip
 800f258:	4432      	add	r2, r6
 800f25a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f25c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800f260:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f264:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f268:	6803      	ldr	r3, [r0, #0]
 800f26a:	a904      	add	r1, sp, #16
 800f26c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f26e:	4798      	blx	r3
 800f270:	b009      	add	sp, #36	; 0x24
 800f272:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f274:	08020914 	.word	0x08020914
 800f278:	08020928 	.word	0x08020928

0800f27c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f280:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800f284:	790b      	ldrb	r3, [r1, #4]
 800f286:	b0a1      	sub	sp, #132	; 0x84
 800f288:	4604      	mov	r4, r0
 800f28a:	460d      	mov	r5, r1
 800f28c:	f1b9 0f00 	cmp.w	r9, #0
 800f290:	d00f      	beq.n	800f2b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800f292:	2b00      	cmp	r3, #0
 800f294:	f040 80a0 	bne.w	800f3d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f298:	b021      	add	sp, #132	; 0x84
 800f29a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f29e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f2a2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f2a6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f2aa:	1d20      	adds	r0, r4, #4
 800f2ac:	f7fb f802 	bl	800a2b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f2b0:	e092      	b.n	800f3d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f2b2:	2b00      	cmp	r3, #0
 800f2b4:	d1f0      	bne.n	800f298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f2b6:	4b5e      	ldr	r3, [pc, #376]	; (800f430 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800f2b8:	681b      	ldr	r3, [r3, #0]
 800f2ba:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800f2be:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800f2c2:	f1ba 0f03 	cmp.w	sl, #3
 800f2c6:	ddea      	ble.n	800f29e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800f2c8:	f1ba 0f0c 	cmp.w	sl, #12
 800f2cc:	f04f 0303 	mov.w	r3, #3
 800f2d0:	bfdc      	itt	le
 800f2d2:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800f2d6:	fb92 f3f3 	sdivle	r3, r2, r3
 800f2da:	9301      	str	r3, [sp, #4]
 800f2dc:	4b55      	ldr	r3, [pc, #340]	; (800f434 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800f2de:	4956      	ldr	r1, [pc, #344]	; (800f438 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800f2e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2e4:	4b55      	ldr	r3, [pc, #340]	; (800f43c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800f2e6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f2ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2ee:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f2f2:	ab0e      	add	r3, sp, #56	; 0x38
 800f2f4:	2248      	movs	r2, #72	; 0x48
 800f2f6:	2600      	movs	r6, #0
 800f2f8:	4618      	mov	r0, r3
 800f2fa:	960a      	str	r6, [sp, #40]	; 0x28
 800f2fc:	f00d fec8 	bl	801d090 <memcpy>
 800f300:	f04f 32ff 	mov.w	r2, #4294967295
 800f304:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800f308:	f8cd a008 	str.w	sl, [sp, #8]
 800f30c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f310:	fb93 f3f2 	sdiv	r3, r3, r2
 800f314:	b29b      	uxth	r3, r3
 800f316:	46b3      	mov	fp, r6
 800f318:	9303      	str	r3, [sp, #12]
 800f31a:	2300      	movs	r3, #0
 800f31c:	9309      	str	r3, [sp, #36]	; 0x24
 800f31e:	9b07      	ldr	r3, [sp, #28]
 800f320:	9a03      	ldr	r2, [sp, #12]
 800f322:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800f326:	88ef      	ldrh	r7, [r5, #6]
 800f328:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800f32c:	fb13 f302 	smulbb	r3, r3, r2
 800f330:	b29b      	uxth	r3, r3
 800f332:	9304      	str	r3, [sp, #16]
 800f334:	9b07      	ldr	r3, [sp, #28]
 800f336:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f33a:	a80a      	add	r0, sp, #40	; 0x28
 800f33c:	685b      	ldr	r3, [r3, #4]
 800f33e:	fb13 f302 	smulbb	r3, r3, r2
 800f342:	b29b      	uxth	r3, r3
 800f344:	9305      	str	r3, [sp, #20]
 800f346:	9b04      	ldr	r3, [sp, #16]
 800f348:	441f      	add	r7, r3
 800f34a:	9b05      	ldr	r3, [sp, #20]
 800f34c:	4498      	add	r8, r3
 800f34e:	b23f      	sxth	r7, r7
 800f350:	fa0f f888 	sxth.w	r8, r8
 800f354:	4642      	mov	r2, r8
 800f356:	4639      	mov	r1, r7
 800f358:	f7ff ff16 	bl	800f188 <_ZNK8touchgfx4Rect9intersectEss>
 800f35c:	b380      	cbz	r0, 800f3c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f35e:	4639      	mov	r1, r7
 800f360:	ab09      	add	r3, sp, #36	; 0x24
 800f362:	4642      	mov	r2, r8
 800f364:	1d20      	adds	r0, r4, #4
 800f366:	f7fa ffa5 	bl	800a2b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f36a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f36c:	b341      	cbz	r1, 800f3c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f36e:	4549      	cmp	r1, r9
 800f370:	d026      	beq.n	800f3c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f372:	a80c      	add	r0, sp, #48	; 0x30
 800f374:	f7ff fdf5 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f378:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f37c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f380:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800f384:	2002      	movs	r0, #2
 800f386:	fb92 f2f0 	sdiv	r2, r2, r0
 800f38a:	440a      	add	r2, r1
 800f38c:	1a99      	subs	r1, r3, r2
 800f38e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800f392:	fb93 f3f0 	sdiv	r3, r3, r0
 800f396:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800f39a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f39e:	4403      	add	r3, r0
 800f3a0:	1ad3      	subs	r3, r2, r3
 800f3a2:	435b      	muls	r3, r3
 800f3a4:	9a06      	ldr	r2, [sp, #24]
 800f3a6:	fb01 3301 	mla	r3, r1, r1, r3
 800f3aa:	4293      	cmp	r3, r2
 800f3ac:	d208      	bcs.n	800f3c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f3ae:	9a04      	ldr	r2, [sp, #16]
 800f3b0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f3b4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f3b6:	9a05      	ldr	r2, [sp, #20]
 800f3b8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800f3bc:	86e2      	strh	r2, [r4, #54]	; 0x36
 800f3be:	9306      	str	r3, [sp, #24]
 800f3c0:	f10b 0b02 	add.w	fp, fp, #2
 800f3c4:	f1bb 0f08 	cmp.w	fp, #8
 800f3c8:	dda7      	ble.n	800f31a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f3ca:	9b02      	ldr	r3, [sp, #8]
 800f3cc:	4453      	add	r3, sl
 800f3ce:	9302      	str	r3, [sp, #8]
 800f3d0:	9b01      	ldr	r3, [sp, #4]
 800f3d2:	3601      	adds	r6, #1
 800f3d4:	42b3      	cmp	r3, r6
 800f3d6:	d199      	bne.n	800f30c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800f3d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f3da:	2900      	cmp	r1, #0
 800f3dc:	f43f af5c 	beq.w	800f298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f3e0:	a80c      	add	r0, sp, #48	; 0x30
 800f3e2:	f7ff fdbe 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f3e6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800f3ea:	88ea      	ldrh	r2, [r5, #6]
 800f3ec:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800f3f0:	7929      	ldrb	r1, [r5, #4]
 800f3f2:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800f3f6:	1ad2      	subs	r2, r2, r3
 800f3f8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f3fa:	441a      	add	r2, r3
 800f3fc:	892b      	ldrh	r3, [r5, #8]
 800f3fe:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f402:	1a1b      	subs	r3, r3, r0
 800f404:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800f406:	4403      	add	r3, r0
 800f408:	480d      	ldr	r0, [pc, #52]	; (800f440 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800f40a:	900e      	str	r0, [sp, #56]	; 0x38
 800f40c:	2600      	movs	r6, #0
 800f40e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f410:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800f414:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800f418:	6803      	ldr	r3, [r0, #0]
 800f41a:	a90e      	add	r1, sp, #56	; 0x38
 800f41c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f41e:	4798      	blx	r3
 800f420:	792b      	ldrb	r3, [r5, #4]
 800f422:	2b00      	cmp	r3, #0
 800f424:	f43f af38 	beq.w	800f298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f428:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f42c:	e734      	b.n	800f298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f42e:	bf00      	nop
 800f430:	20012dc4 	.word	0x20012dc4
 800f434:	20012db8 	.word	0x20012db8
 800f438:	0801e09c 	.word	0x0801e09c
 800f43c:	20012dba 	.word	0x20012dba
 800f440:	08020914 	.word	0x08020914

0800f444 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f444:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f446:	4604      	mov	r4, r0
 800f448:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f44c:	3201      	adds	r2, #1
 800f44e:	d112      	bne.n	800f476 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f450:	6803      	ldr	r3, [r0, #0]
 800f452:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f456:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f45a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f45e:	2500      	movs	r5, #0
 800f460:	9500      	str	r5, [sp, #0]
 800f462:	466d      	mov	r5, sp
 800f464:	4629      	mov	r1, r5
 800f466:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f46a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f46c:	4798      	blx	r3
 800f46e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f472:	e884 0003 	stmia.w	r4, {r0, r1}
 800f476:	4620      	mov	r0, r4
 800f478:	b003      	add	sp, #12
 800f47a:	bd30      	pop	{r4, r5, pc}

0800f47c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f47c:	b513      	push	{r0, r1, r4, lr}
 800f47e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f482:	3301      	adds	r3, #1
 800f484:	4604      	mov	r4, r0
 800f486:	d109      	bne.n	800f49c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f488:	4601      	mov	r1, r0
 800f48a:	4668      	mov	r0, sp
 800f48c:	f7ff fd69 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f490:	f8bd 3000 	ldrh.w	r3, [sp]
 800f494:	8423      	strh	r3, [r4, #32]
 800f496:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f49a:	8463      	strh	r3, [r4, #34]	; 0x22
 800f49c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f4a0:	b002      	add	sp, #8
 800f4a2:	bd10      	pop	{r4, pc}

0800f4a4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f4a4:	b513      	push	{r0, r1, r4, lr}
 800f4a6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f4aa:	3301      	adds	r3, #1
 800f4ac:	4604      	mov	r4, r0
 800f4ae:	d109      	bne.n	800f4c4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f4b0:	4601      	mov	r1, r0
 800f4b2:	4668      	mov	r0, sp
 800f4b4:	f7ff fd55 	bl	800ef62 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4b8:	f8bd 3000 	ldrh.w	r3, [sp]
 800f4bc:	8423      	strh	r3, [r4, #32]
 800f4be:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4c2:	8463      	strh	r3, [r4, #34]	; 0x22
 800f4c4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f4c8:	b002      	add	sp, #8
 800f4ca:	bd10      	pop	{r4, pc}

0800f4cc <_ZN8touchgfx6ScreenC1Ev>:
 800f4cc:	b570      	push	{r4, r5, r6, lr}
 800f4ce:	4605      	mov	r5, r0
 800f4d0:	4b16      	ldr	r3, [pc, #88]	; (800f52c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f4d2:	f845 3b04 	str.w	r3, [r5], #4
 800f4d6:	2300      	movs	r3, #0
 800f4d8:	8103      	strh	r3, [r0, #8]
 800f4da:	8143      	strh	r3, [r0, #10]
 800f4dc:	8183      	strh	r3, [r0, #12]
 800f4de:	81c3      	strh	r3, [r0, #14]
 800f4e0:	8203      	strh	r3, [r0, #16]
 800f4e2:	8243      	strh	r3, [r0, #18]
 800f4e4:	8283      	strh	r3, [r0, #20]
 800f4e6:	82c3      	strh	r3, [r0, #22]
 800f4e8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f4ec:	6203      	str	r3, [r0, #32]
 800f4ee:	8483      	strh	r3, [r0, #36]	; 0x24
 800f4f0:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f4f2:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f4f6:	4a0e      	ldr	r2, [pc, #56]	; (800f530 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f4f8:	6343      	str	r3, [r0, #52]	; 0x34
 800f4fa:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f4fe:	4b0d      	ldr	r3, [pc, #52]	; (800f534 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f500:	6042      	str	r2, [r0, #4]
 800f502:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f506:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800f508:	4a0b      	ldr	r2, [pc, #44]	; (800f538 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f50a:	4604      	mov	r4, r0
 800f50c:	2101      	movs	r1, #1
 800f50e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f512:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f516:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f51a:	4628      	mov	r0, r5
 800f51c:	4798      	blx	r3
 800f51e:	6863      	ldr	r3, [r4, #4]
 800f520:	4628      	mov	r0, r5
 800f522:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f524:	4631      	mov	r1, r6
 800f526:	4798      	blx	r3
 800f528:	4620      	mov	r0, r4
 800f52a:	bd70      	pop	{r4, r5, r6, pc}
 800f52c:	08020950 	.word	0x08020950
 800f530:	0801fa34 	.word	0x0801fa34
 800f534:	20012dba 	.word	0x20012dba
 800f538:	20012db8 	.word	0x20012db8

0800f53c <_ZN8touchgfx6Screen4drawEv>:
 800f53c:	b507      	push	{r0, r1, r2, lr}
 800f53e:	4b09      	ldr	r3, [pc, #36]	; (800f564 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f540:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f544:	4b08      	ldr	r3, [pc, #32]	; (800f568 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f546:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f54a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f54e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f552:	6803      	ldr	r3, [r0, #0]
 800f554:	2100      	movs	r1, #0
 800f556:	9100      	str	r1, [sp, #0]
 800f558:	689b      	ldr	r3, [r3, #8]
 800f55a:	4669      	mov	r1, sp
 800f55c:	4798      	blx	r3
 800f55e:	b003      	add	sp, #12
 800f560:	f85d fb04 	ldr.w	pc, [sp], #4
 800f564:	20012db8 	.word	0x20012db8
 800f568:	20012dba 	.word	0x20012dba

0800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f56c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f570:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f574:	2b00      	cmp	r3, #0
 800f576:	b089      	sub	sp, #36	; 0x24
 800f578:	4680      	mov	r8, r0
 800f57a:	460c      	mov	r4, r1
 800f57c:	4615      	mov	r5, r2
 800f57e:	dd0e      	ble.n	800f59e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f580:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f584:	2b00      	cmp	r3, #0
 800f586:	dd0a      	ble.n	800f59e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f588:	4628      	mov	r0, r5
 800f58a:	f7ff ff5b 	bl	800f444 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f58e:	4621      	mov	r1, r4
 800f590:	f7fe fc38 	bl	800de04 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f594:	69eb      	ldr	r3, [r5, #28]
 800f596:	b928      	cbnz	r0, 800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f598:	461d      	mov	r5, r3
 800f59a:	2b00      	cmp	r3, #0
 800f59c:	d1f4      	bne.n	800f588 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f59e:	b009      	add	sp, #36	; 0x24
 800f5a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5a4:	ae04      	add	r6, sp, #16
 800f5a6:	2b00      	cmp	r3, #0
 800f5a8:	f000 80b5 	beq.w	800f716 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f5ac:	682b      	ldr	r3, [r5, #0]
 800f5ae:	4629      	mov	r1, r5
 800f5b0:	68db      	ldr	r3, [r3, #12]
 800f5b2:	a802      	add	r0, sp, #8
 800f5b4:	4798      	blx	r3
 800f5b6:	4628      	mov	r0, r5
 800f5b8:	f7ff ff60 	bl	800f47c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f5bc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f5c0:	4407      	add	r7, r0
 800f5c2:	4628      	mov	r0, r5
 800f5c4:	f7ff ff6e 	bl	800f4a4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f5c8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f5cc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f5d0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f5d4:	4418      	add	r0, r3
 800f5d6:	4621      	mov	r1, r4
 800f5d8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f5dc:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f5e0:	b23f      	sxth	r7, r7
 800f5e2:	4630      	mov	r0, r6
 800f5e4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f5e8:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f5ec:	f7fa ff1c 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800f5f0:	4628      	mov	r0, r5
 800f5f2:	f7ff ff27 	bl	800f444 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f5f6:	4602      	mov	r2, r0
 800f5f8:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f5fc:	ab06      	add	r3, sp, #24
 800f5fe:	e883 0003 	stmia.w	r3, {r0, r1}
 800f602:	4611      	mov	r1, r2
 800f604:	4618      	mov	r0, r3
 800f606:	f7fa ff0f 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800f60a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f60e:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f612:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f616:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f61a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f61e:	4299      	cmp	r1, r3
 800f620:	d10b      	bne.n	800f63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f622:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f626:	4552      	cmp	r2, sl
 800f628:	d107      	bne.n	800f63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f62a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f62e:	455a      	cmp	r2, fp
 800f630:	d103      	bne.n	800f63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f632:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f636:	454a      	cmp	r2, r9
 800f638:	d06d      	beq.n	800f716 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f63a:	f1bb 0f00 	cmp.w	fp, #0
 800f63e:	dd65      	ble.n	800f70c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f640:	f1b9 0f00 	cmp.w	r9, #0
 800f644:	dd62      	ble.n	800f70c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f646:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f64a:	fa1f f08a 	uxth.w	r0, sl
 800f64e:	4552      	cmp	r2, sl
 800f650:	9000      	str	r0, [sp, #0]
 800f652:	da12      	bge.n	800f67a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f654:	9301      	str	r3, [sp, #4]
 800f656:	9b00      	ldr	r3, [sp, #0]
 800f658:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f65c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f660:	1a9a      	subs	r2, r3, r2
 800f662:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f666:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f66a:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f66e:	69ea      	ldr	r2, [r5, #28]
 800f670:	4631      	mov	r1, r6
 800f672:	4640      	mov	r0, r8
 800f674:	f7ff ff7a 	bl	800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f678:	9b01      	ldr	r3, [sp, #4]
 800f67a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f67e:	429a      	cmp	r2, r3
 800f680:	b29f      	uxth	r7, r3
 800f682:	da0d      	bge.n	800f6a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f684:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f688:	1aba      	subs	r2, r7, r2
 800f68a:	f8ad a012 	strh.w	sl, [sp, #18]
 800f68e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f692:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f696:	69ea      	ldr	r2, [r5, #28]
 800f698:	4631      	mov	r1, r6
 800f69a:	4640      	mov	r0, r8
 800f69c:	f7ff ff66 	bl	800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6a0:	8822      	ldrh	r2, [r4, #0]
 800f6a2:	88a3      	ldrh	r3, [r4, #4]
 800f6a4:	445f      	add	r7, fp
 800f6a6:	4413      	add	r3, r2
 800f6a8:	b29b      	uxth	r3, r3
 800f6aa:	b2bf      	uxth	r7, r7
 800f6ac:	b23a      	sxth	r2, r7
 800f6ae:	b219      	sxth	r1, r3
 800f6b0:	4291      	cmp	r1, r2
 800f6b2:	dd0d      	ble.n	800f6d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f6b4:	1bdb      	subs	r3, r3, r7
 800f6b6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f6ba:	f8ad a012 	strh.w	sl, [sp, #18]
 800f6be:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f6c2:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f6c6:	69ea      	ldr	r2, [r5, #28]
 800f6c8:	4631      	mov	r1, r6
 800f6ca:	4640      	mov	r0, r8
 800f6cc:	f7ff ff4e 	bl	800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6d0:	88e2      	ldrh	r2, [r4, #6]
 800f6d2:	8863      	ldrh	r3, [r4, #2]
 800f6d4:	4413      	add	r3, r2
 800f6d6:	9a00      	ldr	r2, [sp, #0]
 800f6d8:	444a      	add	r2, r9
 800f6da:	b29b      	uxth	r3, r3
 800f6dc:	fa1f f982 	uxth.w	r9, r2
 800f6e0:	fa0f f289 	sxth.w	r2, r9
 800f6e4:	b219      	sxth	r1, r3
 800f6e6:	428a      	cmp	r2, r1
 800f6e8:	da15      	bge.n	800f716 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f6ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f6ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f6f2:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f6f6:	eba3 0309 	sub.w	r3, r3, r9
 800f6fa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f6fe:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f702:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f706:	69ea      	ldr	r2, [r5, #28]
 800f708:	4631      	mov	r1, r6
 800f70a:	e001      	b.n	800f710 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f70c:	69ea      	ldr	r2, [r5, #28]
 800f70e:	4621      	mov	r1, r4
 800f710:	4640      	mov	r0, r8
 800f712:	f7ff ff2b 	bl	800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f716:	4628      	mov	r0, r5
 800f718:	f7ff fe94 	bl	800f444 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f71c:	6861      	ldr	r1, [r4, #4]
 800f71e:	4602      	mov	r2, r0
 800f720:	6820      	ldr	r0, [r4, #0]
 800f722:	4633      	mov	r3, r6
 800f724:	c303      	stmia	r3!, {r0, r1}
 800f726:	4611      	mov	r1, r2
 800f728:	4630      	mov	r0, r6
 800f72a:	f7fa fe7d 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800f72e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f732:	2b00      	cmp	r3, #0
 800f734:	f77f af33 	ble.w	800f59e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f738:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f73c:	2b00      	cmp	r3, #0
 800f73e:	f77f af2e 	ble.w	800f59e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f742:	4628      	mov	r0, r5
 800f744:	f7ff fe9a 	bl	800f47c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f748:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f74c:	1a18      	subs	r0, r3, r0
 800f74e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f752:	4628      	mov	r0, r5
 800f754:	f7ff fea6 	bl	800f4a4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f758:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f75c:	1a18      	subs	r0, r3, r0
 800f75e:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f762:	682b      	ldr	r3, [r5, #0]
 800f764:	4631      	mov	r1, r6
 800f766:	689b      	ldr	r3, [r3, #8]
 800f768:	4628      	mov	r0, r5
 800f76a:	4798      	blx	r3
 800f76c:	e717      	b.n	800f59e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f76e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f76e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f770:	aa02      	add	r2, sp, #8
 800f772:	2300      	movs	r3, #0
 800f774:	f842 3d04 	str.w	r3, [r2, #-4]!
 800f778:	4604      	mov	r4, r0
 800f77a:	3004      	adds	r0, #4
 800f77c:	460d      	mov	r5, r1
 800f77e:	f7fa ff2b 	bl	800a5d8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f782:	9a01      	ldr	r2, [sp, #4]
 800f784:	b11a      	cbz	r2, 800f78e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800f786:	4629      	mov	r1, r5
 800f788:	4620      	mov	r0, r4
 800f78a:	f7ff feef 	bl	800f56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f78e:	b003      	add	sp, #12
 800f790:	bd30      	pop	{r4, r5, pc}

0800f792 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f792:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f794:	4602      	mov	r2, r0
 800f796:	4604      	mov	r4, r0
 800f798:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f79c:	460d      	mov	r5, r1
 800f79e:	6851      	ldr	r1, [r2, #4]
 800f7a0:	466b      	mov	r3, sp
 800f7a2:	c303      	stmia	r3!, {r0, r1}
 800f7a4:	4629      	mov	r1, r5
 800f7a6:	4668      	mov	r0, sp
 800f7a8:	f7fa fe3e 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 800f7ac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f7b0:	4669      	mov	r1, sp
 800f7b2:	b123      	cbz	r3, 800f7be <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800f7b4:	4620      	mov	r0, r4
 800f7b6:	f7ff ffda 	bl	800f76e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f7ba:	b003      	add	sp, #12
 800f7bc:	bd30      	pop	{r4, r5, pc}
 800f7be:	1d20      	adds	r0, r4, #4
 800f7c0:	f7fa fed1 	bl	800a566 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f7c4:	e7f9      	b.n	800f7ba <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800f7c6 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f7c6:	680a      	ldr	r2, [r1, #0]
 800f7c8:	460b      	mov	r3, r1
 800f7ca:	6992      	ldr	r2, [r2, #24]
 800f7cc:	1d01      	adds	r1, r0, #4
 800f7ce:	4618      	mov	r0, r3
 800f7d0:	4710      	bx	r2

0800f7d2 <_ZN8touchgfx12TextProviderC1Ev>:
 800f7d2:	b538      	push	{r3, r4, r5, lr}
 800f7d4:	2500      	movs	r5, #0
 800f7d6:	4604      	mov	r4, r0
 800f7d8:	e9c0 5500 	strd	r5, r5, [r0]
 800f7dc:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800f7e0:	7405      	strb	r5, [r0, #16]
 800f7e2:	82c5      	strh	r5, [r0, #22]
 800f7e4:	8305      	strh	r5, [r0, #24]
 800f7e6:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800f7e8:	8605      	strh	r5, [r0, #48]	; 0x30
 800f7ea:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f7ec:	8705      	strh	r5, [r0, #56]	; 0x38
 800f7ee:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 800f7f2:	220e      	movs	r2, #14
 800f7f4:	4629      	mov	r1, r5
 800f7f6:	3044      	adds	r0, #68	; 0x44
 800f7f8:	f00d fc58 	bl	801d0ac <memset>
 800f7fc:	2301      	movs	r3, #1
 800f7fe:	4620      	mov	r0, r4
 800f800:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 800f804:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800f808:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 800f80c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800f810:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 800f814:	f7f4 feec 	bl	80045f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f818:	4620      	mov	r0, r4
 800f81a:	bd38      	pop	{r3, r4, r5, pc}

0800f81c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f81c:	b530      	push	{r4, r5, lr}
 800f81e:	2500      	movs	r5, #0
 800f820:	2401      	movs	r4, #1
 800f822:	6843      	ldr	r3, [r0, #4]
 800f824:	b913      	cbnz	r3, 800f82c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f826:	6803      	ldr	r3, [r0, #0]
 800f828:	b1f3      	cbz	r3, 800f868 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f82a:	6043      	str	r3, [r0, #4]
 800f82c:	7c03      	ldrb	r3, [r0, #16]
 800f82e:	b143      	cbz	r3, 800f842 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f830:	68c3      	ldr	r3, [r0, #12]
 800f832:	b12b      	cbz	r3, 800f840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f834:	881a      	ldrh	r2, [r3, #0]
 800f836:	b11a      	cbz	r2, 800f840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f838:	1c9a      	adds	r2, r3, #2
 800f83a:	60c2      	str	r2, [r0, #12]
 800f83c:	8818      	ldrh	r0, [r3, #0]
 800f83e:	bd30      	pop	{r4, r5, pc}
 800f840:	7405      	strb	r5, [r0, #16]
 800f842:	6843      	ldr	r3, [r0, #4]
 800f844:	8819      	ldrh	r1, [r3, #0]
 800f846:	b179      	cbz	r1, 800f868 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800f848:	1c9a      	adds	r2, r3, #2
 800f84a:	2902      	cmp	r1, #2
 800f84c:	6042      	str	r2, [r0, #4]
 800f84e:	d1f5      	bne.n	800f83c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f850:	6883      	ldr	r3, [r0, #8]
 800f852:	1d1a      	adds	r2, r3, #4
 800f854:	6082      	str	r2, [r0, #8]
 800f856:	681b      	ldr	r3, [r3, #0]
 800f858:	60c3      	str	r3, [r0, #12]
 800f85a:	2b00      	cmp	r3, #0
 800f85c:	d0e1      	beq.n	800f822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f85e:	881b      	ldrh	r3, [r3, #0]
 800f860:	2b00      	cmp	r3, #0
 800f862:	d0de      	beq.n	800f822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f864:	7404      	strb	r4, [r0, #16]
 800f866:	e7dc      	b.n	800f822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f868:	2000      	movs	r0, #0
 800f86a:	e7e8      	b.n	800f83e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f86c <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f86c:	b410      	push	{r4}
 800f86e:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f870:	9b01      	ldr	r3, [sp, #4]
 800f872:	6403      	str	r3, [r0, #64]	; 0x40
 800f874:	2300      	movs	r3, #0
 800f876:	6082      	str	r2, [r0, #8]
 800f878:	6001      	str	r1, [r0, #0]
 800f87a:	6043      	str	r3, [r0, #4]
 800f87c:	60c3      	str	r3, [r0, #12]
 800f87e:	7403      	strb	r3, [r0, #16]
 800f880:	8603      	strh	r3, [r0, #48]	; 0x30
 800f882:	8303      	strh	r3, [r0, #24]
 800f884:	8703      	strh	r3, [r0, #56]	; 0x38
 800f886:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f88a:	f7f4 beb1 	b.w	80045f0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f88e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f88e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f890:	4605      	mov	r5, r0
 800f892:	4608      	mov	r0, r1
 800f894:	b1e9      	cbz	r1, 800f8d2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800f896:	f105 0444 	add.w	r4, r5, #68	; 0x44
 800f89a:	460b      	mov	r3, r1
 800f89c:	f101 0708 	add.w	r7, r1, #8
 800f8a0:	4622      	mov	r2, r4
 800f8a2:	6818      	ldr	r0, [r3, #0]
 800f8a4:	6859      	ldr	r1, [r3, #4]
 800f8a6:	4626      	mov	r6, r4
 800f8a8:	c603      	stmia	r6!, {r0, r1}
 800f8aa:	3308      	adds	r3, #8
 800f8ac:	42bb      	cmp	r3, r7
 800f8ae:	4634      	mov	r4, r6
 800f8b0:	d1f7      	bne.n	800f8a2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f8b2:	6818      	ldr	r0, [r3, #0]
 800f8b4:	6030      	str	r0, [r6, #0]
 800f8b6:	889b      	ldrh	r3, [r3, #4]
 800f8b8:	80b3      	strh	r3, [r6, #4]
 800f8ba:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 800f8be:	015b      	lsls	r3, r3, #5
 800f8c0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f8c4:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 800f8c8:	430b      	orrs	r3, r1
 800f8ca:	425b      	negs	r3, r3
 800f8cc:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 800f8d0:	4610      	mov	r0, r2
 800f8d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f8d4:	b538      	push	{r3, r4, r5, lr}
 800f8d6:	460c      	mov	r4, r1
 800f8d8:	6811      	ldr	r1, [r2, #0]
 800f8da:	4610      	mov	r0, r2
 800f8dc:	68cd      	ldr	r5, [r1, #12]
 800f8de:	4619      	mov	r1, r3
 800f8e0:	47a8      	blx	r5
 800f8e2:	2800      	cmp	r0, #0
 800f8e4:	bf08      	it	eq
 800f8e6:	4620      	moveq	r0, r4
 800f8e8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800f8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f8ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f8ee:	4604      	mov	r4, r0
 800f8f0:	4615      	mov	r5, r2
 800f8f2:	4608      	mov	r0, r1
 800f8f4:	b93a      	cbnz	r2, 800f906 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f8f6:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800f8fa:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 800f8fe:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 800f902:	4628      	mov	r0, r5
 800f904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f906:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f90a:	8893      	ldrh	r3, [r2, #4]
 800f90c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f910:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f914:	79ee      	ldrb	r6, [r5, #7]
 800f916:	4316      	orrs	r6, r2
 800f918:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800f91c:	189a      	adds	r2, r3, r2
 800f91e:	b291      	uxth	r1, r2
 800f920:	291d      	cmp	r1, #29
 800f922:	b2b7      	uxth	r7, r6
 800f924:	f200 8083 	bhi.w	800fa2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f928:	2201      	movs	r2, #1
 800f92a:	408a      	lsls	r2, r1
 800f92c:	4978      	ldr	r1, [pc, #480]	; (800fb10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800f92e:	420a      	tst	r2, r1
 800f930:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800f934:	d12d      	bne.n	800f992 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800f936:	f412 7f60 	tst.w	r2, #896	; 0x380
 800f93a:	d078      	beq.n	800fa2e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800f93c:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800f940:	462b      	mov	r3, r5
 800f942:	f105 0e08 	add.w	lr, r5, #8
 800f946:	4615      	mov	r5, r2
 800f948:	6818      	ldr	r0, [r3, #0]
 800f94a:	6859      	ldr	r1, [r3, #4]
 800f94c:	4694      	mov	ip, r2
 800f94e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f952:	3308      	adds	r3, #8
 800f954:	4573      	cmp	r3, lr
 800f956:	4662      	mov	r2, ip
 800f958:	d1f6      	bne.n	800f948 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800f95a:	6818      	ldr	r0, [r3, #0]
 800f95c:	f8cc 0000 	str.w	r0, [ip]
 800f960:	889b      	ldrh	r3, [r3, #4]
 800f962:	f8ac 3004 	strh.w	r3, [ip, #4]
 800f966:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 800f96a:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800f96e:	b2b3      	uxth	r3, r6
 800f970:	1aca      	subs	r2, r1, r3
 800f972:	b292      	uxth	r2, r2
 800f974:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800f978:	10d2      	asrs	r2, r2, #3
 800f97a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800f97e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800f982:	4302      	orrs	r2, r0
 800f984:	1bcf      	subs	r7, r1, r7
 800f986:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800f98a:	1afb      	subs	r3, r7, r3
 800f98c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800f990:	e7b7      	b.n	800f902 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800f992:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f994:	b92b      	cbnz	r3, 800f9a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800f996:	4b5f      	ldr	r3, [pc, #380]	; (800fb14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800f998:	4a5f      	ldr	r2, [pc, #380]	; (800fb18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800f99a:	4860      	ldr	r0, [pc, #384]	; (800fb1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800f99c:	21bf      	movs	r1, #191	; 0xbf
 800f99e:	f00d f9fb 	bl	801cd98 <__assert_func>
 800f9a2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800f9a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f9a8:	8b59      	ldrh	r1, [r3, #26]
 800f9aa:	f640 6333 	movw	r3, #3635	; 0xe33
 800f9ae:	4299      	cmp	r1, r3
 800f9b0:	d110      	bne.n	800f9d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800f9b2:	6803      	ldr	r3, [r0, #0]
 800f9b4:	68db      	ldr	r3, [r3, #12]
 800f9b6:	4798      	blx	r3
 800f9b8:	7b41      	ldrb	r1, [r0, #13]
 800f9ba:	00cb      	lsls	r3, r1, #3
 800f9bc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f9c0:	7a03      	ldrb	r3, [r0, #8]
 800f9c2:	0648      	lsls	r0, r1, #25
 800f9c4:	ea43 0302 	orr.w	r3, r3, r2
 800f9c8:	bf44      	itt	mi
 800f9ca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800f9ce:	b21b      	sxthmi	r3, r3
 800f9d0:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f9d4:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800f9d8:	443b      	add	r3, r7
 800f9da:	4433      	add	r3, r6
 800f9dc:	b29b      	uxth	r3, r3
 800f9de:	f104 0644 	add.w	r6, r4, #68	; 0x44
 800f9e2:	462a      	mov	r2, r5
 800f9e4:	f105 0c08 	add.w	ip, r5, #8
 800f9e8:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f9ec:	4635      	mov	r5, r6
 800f9ee:	6810      	ldr	r0, [r2, #0]
 800f9f0:	6851      	ldr	r1, [r2, #4]
 800f9f2:	4637      	mov	r7, r6
 800f9f4:	c703      	stmia	r7!, {r0, r1}
 800f9f6:	3208      	adds	r2, #8
 800f9f8:	4562      	cmp	r2, ip
 800f9fa:	463e      	mov	r6, r7
 800f9fc:	d1f7      	bne.n	800f9ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800f9fe:	6810      	ldr	r0, [r2, #0]
 800fa00:	6038      	str	r0, [r7, #0]
 800fa02:	8892      	ldrh	r2, [r2, #4]
 800fa04:	80ba      	strh	r2, [r7, #4]
 800fa06:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800fa0a:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800fa0e:	10db      	asrs	r3, r3, #3
 800fa10:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fa14:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fa18:	4313      	orrs	r3, r2
 800fa1a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800fa1e:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 800fa22:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 800fa26:	1a9b      	subs	r3, r3, r2
 800fa28:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800fa2c:	e769      	b.n	800f902 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fa2e:	f023 0204 	bic.w	r2, r3, #4
 800fa32:	f640 611b 	movw	r1, #3611	; 0xe1b
 800fa36:	428a      	cmp	r2, r1
 800fa38:	d003      	beq.n	800fa42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800fa3a:	f640 621d 	movw	r2, #3613	; 0xe1d
 800fa3e:	4293      	cmp	r3, r2
 800fa40:	d120      	bne.n	800fa84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800fa42:	3b01      	subs	r3, #1
 800fa44:	4602      	mov	r2, r0
 800fa46:	b29b      	uxth	r3, r3
 800fa48:	4629      	mov	r1, r5
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	f7ff ff42 	bl	800f8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fa50:	7b41      	ldrb	r1, [r0, #13]
 800fa52:	00cb      	lsls	r3, r1, #3
 800fa54:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fa58:	7a03      	ldrb	r3, [r0, #8]
 800fa5a:	0649      	lsls	r1, r1, #25
 800fa5c:	ea43 0302 	orr.w	r3, r3, r2
 800fa60:	bf44      	itt	mi
 800fa62:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fa66:	b21b      	sxthmi	r3, r3
 800fa68:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fa6c:	7b6b      	ldrb	r3, [r5, #13]
 800fa6e:	7aaa      	ldrb	r2, [r5, #10]
 800fa70:	005b      	lsls	r3, r3, #1
 800fa72:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fa76:	4313      	orrs	r3, r2
 800fa78:	115a      	asrs	r2, r3, #5
 800fa7a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fa7e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800fa82:	e036      	b.n	800faf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800fa84:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fa88:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800fa8c:	7a2a      	ldrb	r2, [r5, #8]
 800fa8e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800fa92:	ea42 0201 	orr.w	r2, r2, r1
 800fa96:	bf1c      	itt	ne
 800fa98:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800fa9c:	b212      	sxthne	r2, r2
 800fa9e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800faa2:	f640 6109 	movw	r1, #3593	; 0xe09
 800faa6:	f023 0210 	bic.w	r2, r3, #16
 800faaa:	428a      	cmp	r2, r1
 800faac:	d003      	beq.n	800fab6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800faae:	f640 6213 	movw	r2, #3603	; 0xe13
 800fab2:	4293      	cmp	r3, r2
 800fab4:	d12a      	bne.n	800fb0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800fab6:	7b6e      	ldrb	r6, [r5, #13]
 800fab8:	0076      	lsls	r6, r6, #1
 800faba:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fabe:	7aae      	ldrb	r6, [r5, #10]
 800fac0:	4316      	orrs	r6, r2
 800fac2:	f640 6213 	movw	r2, #3603	; 0xe13
 800fac6:	4293      	cmp	r3, r2
 800fac8:	bf18      	it	ne
 800faca:	f103 33ff 	addne.w	r3, r3, #4294967295
 800face:	4602      	mov	r2, r0
 800fad0:	bf14      	ite	ne
 800fad2:	b29b      	uxthne	r3, r3
 800fad4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800fad8:	4629      	mov	r1, r5
 800fada:	4620      	mov	r0, r4
 800fadc:	f7ff fefa 	bl	800f8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fae0:	7b43      	ldrb	r3, [r0, #13]
 800fae2:	7a82      	ldrb	r2, [r0, #10]
 800fae4:	005b      	lsls	r3, r3, #1
 800fae6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800faea:	4313      	orrs	r3, r2
 800faec:	1af6      	subs	r6, r6, r3
 800faee:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 800faf2:	7b69      	ldrb	r1, [r5, #13]
 800faf4:	00cb      	lsls	r3, r1, #3
 800faf6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fafa:	7a2b      	ldrb	r3, [r5, #8]
 800fafc:	4313      	orrs	r3, r2
 800fafe:	064a      	lsls	r2, r1, #25
 800fb00:	bf44      	itt	mi
 800fb02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fb06:	b21b      	sxthmi	r3, r3
 800fb08:	1bdb      	subs	r3, r3, r7
 800fb0a:	e73f      	b.n	800f98c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800fb0c:	2300      	movs	r3, #0
 800fb0e:	e7b6      	b.n	800fa7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800fb10:	3fc00079 	.word	0x3fc00079
 800fb14:	0801f27c 	.word	0x0801f27c
 800fb18:	08020bab 	.word	0x08020bab
 800fb1c:	0801f34e 	.word	0x0801f34e

0800fb20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fb20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fb24:	4604      	mov	r4, r0
 800fb26:	b942      	cbnz	r2, 800fb3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fb28:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800fb2c:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800fb30:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 800fb34:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800fb38:	e046      	b.n	800fbc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fb3a:	7b51      	ldrb	r1, [r2, #13]
 800fb3c:	8893      	ldrh	r3, [r2, #4]
 800fb3e:	010f      	lsls	r7, r1, #4
 800fb40:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fb44:	79d7      	ldrb	r7, [r2, #7]
 800fb46:	4307      	orrs	r7, r0
 800fb48:	2f04      	cmp	r7, #4
 800fb4a:	b2bd      	uxth	r5, r7
 800fb4c:	bfcc      	ite	gt
 800fb4e:	08bf      	lsrgt	r7, r7, #2
 800fb50:	2701      	movle	r7, #1
 800fb52:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800fb56:	f200 80ab 	bhi.w	800fcb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800fb5a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800fb5e:	4283      	cmp	r3, r0
 800fb60:	d216      	bcs.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb62:	f240 605b 	movw	r0, #1627	; 0x65b
 800fb66:	4283      	cmp	r3, r0
 800fb68:	d859      	bhi.n	800fc1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800fb6a:	f240 6057 	movw	r0, #1623	; 0x657
 800fb6e:	4283      	cmp	r3, r0
 800fb70:	d20e      	bcs.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb72:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fb76:	d24a      	bcs.n	800fc0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800fb78:	f240 604e 	movw	r0, #1614	; 0x64e
 800fb7c:	4283      	cmp	r3, r0
 800fb7e:	d207      	bcs.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fb80:	f240 601a 	movw	r0, #1562	; 0x61a
 800fb84:	4283      	cmp	r3, r0
 800fb86:	d02a      	beq.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fb88:	d821      	bhi.n	800fbce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800fb8a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800fb8e:	d35b      	bcc.n	800fc48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fb90:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 800fb94:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fb98:	f040 80d0 	bne.w	800fd3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fb9c:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 800fba0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fba4:	f040 80ca 	bne.w	800fd3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fba8:	00cb      	lsls	r3, r1, #3
 800fbaa:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fbae:	7a13      	ldrb	r3, [r2, #8]
 800fbb0:	0649      	lsls	r1, r1, #25
 800fbb2:	ea43 0300 	orr.w	r3, r3, r0
 800fbb6:	bf44      	itt	mi
 800fbb8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fbbc:	b21b      	sxthmi	r3, r3
 800fbbe:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fbc2:	1b5d      	subs	r5, r3, r5
 800fbc4:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800fbc8:	4610      	mov	r0, r2
 800fbca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fbce:	f240 604b 	movw	r0, #1611	; 0x64b
 800fbd2:	4283      	cmp	r3, r0
 800fbd4:	d338      	bcc.n	800fc48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fbd6:	f240 604c 	movw	r0, #1612	; 0x64c
 800fbda:	4283      	cmp	r3, r0
 800fbdc:	d9d8      	bls.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fbde:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800fbe2:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 800fbe6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fbea:	f040 80f1 	bne.w	800fdd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fbee:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fbf2:	f040 80ed 	bne.w	800fdd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fbf6:	00cb      	lsls	r3, r1, #3
 800fbf8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fbfc:	7a13      	ldrb	r3, [r2, #8]
 800fbfe:	064e      	lsls	r6, r1, #25
 800fc00:	ea43 0300 	orr.w	r3, r3, r0
 800fc04:	bf44      	itt	mi
 800fc06:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc0a:	b21b      	sxthmi	r3, r3
 800fc0c:	e7d9      	b.n	800fbc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800fc0e:	f240 6054 	movw	r0, #1620	; 0x654
 800fc12:	4283      	cmp	r3, r0
 800fc14:	d8e3      	bhi.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc16:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fc1a:	d9e0      	bls.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc1c:	e7b8      	b.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc1e:	f240 6074 	movw	r0, #1652	; 0x674
 800fc22:	4283      	cmp	r3, r0
 800fc24:	d0b4      	beq.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc26:	d82d      	bhi.n	800fc84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800fc28:	f240 605e 	movw	r0, #1630	; 0x65e
 800fc2c:	4283      	cmp	r3, r0
 800fc2e:	d804      	bhi.n	800fc3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800fc30:	f240 605d 	movw	r0, #1629	; 0x65d
 800fc34:	4283      	cmp	r3, r0
 800fc36:	d3d2      	bcc.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc38:	e7aa      	b.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc3a:	f240 605f 	movw	r0, #1631	; 0x65f
 800fc3e:	4283      	cmp	r3, r0
 800fc40:	d0cd      	beq.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fc42:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fc46:	d0a3      	beq.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc48:	00cb      	lsls	r3, r1, #3
 800fc4a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fc4e:	7a13      	ldrb	r3, [r2, #8]
 800fc50:	0649      	lsls	r1, r1, #25
 800fc52:	ea43 0300 	orr.w	r3, r3, r0
 800fc56:	bf44      	itt	mi
 800fc58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc5c:	b21b      	sxthmi	r3, r3
 800fc5e:	1b5d      	subs	r5, r3, r5
 800fc60:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fc64:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800fc68:	7b53      	ldrb	r3, [r2, #13]
 800fc6a:	015b      	lsls	r3, r3, #5
 800fc6c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fc70:	7993      	ldrb	r3, [r2, #6]
 800fc72:	430b      	orrs	r3, r1
 800fc74:	005b      	lsls	r3, r3, #1
 800fc76:	2105      	movs	r1, #5
 800fc78:	fb93 f3f1 	sdiv	r3, r3, r1
 800fc7c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fc80:	440b      	add	r3, r1
 800fc82:	e757      	b.n	800fb34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fc84:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800fc88:	4283      	cmp	r3, r0
 800fc8a:	d809      	bhi.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800fc8c:	f240 60df 	movw	r0, #1759	; 0x6df
 800fc90:	4283      	cmp	r3, r0
 800fc92:	f4bf af7d 	bcs.w	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fc96:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800fc9a:	2b05      	cmp	r3, #5
 800fc9c:	d8d4      	bhi.n	800fc48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fc9e:	e777      	b.n	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fca0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800fca4:	4283      	cmp	r3, r0
 800fca6:	d09a      	beq.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fca8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800fcac:	4283      	cmp	r3, r0
 800fcae:	e7ca      	b.n	800fc46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800fcb0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800fcb4:	d22b      	bcs.n	800fd0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800fcb6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800fcba:	4283      	cmp	r3, r0
 800fcbc:	d28f      	bcs.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fcbe:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800fcc2:	4283      	cmp	r3, r0
 800fcc4:	d816      	bhi.n	800fcf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800fcc6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800fcca:	4283      	cmp	r3, r0
 800fccc:	f4bf af60 	bcs.w	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fcd0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800fcd4:	4283      	cmp	r3, r0
 800fcd6:	d80a      	bhi.n	800fcee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800fcd8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800fcdc:	4283      	cmp	r3, r0
 800fcde:	f4bf af57 	bcs.w	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fce2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800fce6:	4283      	cmp	r3, r0
 800fce8:	f43f af79 	beq.w	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fcec:	e7ac      	b.n	800fc48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fcee:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800fcf2:	e7f8      	b.n	800fce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800fcf4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800fcf8:	4283      	cmp	r3, r0
 800fcfa:	d802      	bhi.n	800fd02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800fcfc:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800fd00:	e798      	b.n	800fc34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800fd02:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800fd06:	4283      	cmp	r3, r0
 800fd08:	f47f af42 	bne.w	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd0c:	e767      	b.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd0e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800fd12:	4283      	cmp	r3, r0
 800fd14:	f43f af63 	beq.w	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd18:	d802      	bhi.n	800fd20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800fd1a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800fd1e:	e7f2      	b.n	800fd06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800fd20:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800fd24:	4283      	cmp	r3, r0
 800fd26:	d805      	bhi.n	800fd34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800fd28:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800fd2c:	4283      	cmp	r3, r0
 800fd2e:	f4ff af2f 	bcc.w	800fb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fd32:	e754      	b.n	800fbde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fd34:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800fd38:	4283      	cmp	r3, r0
 800fd3a:	e7af      	b.n	800fc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800fd3c:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 800fd40:	4617      	mov	r7, r2
 800fd42:	f102 0808 	add.w	r8, r2, #8
 800fd46:	4666      	mov	r6, ip
 800fd48:	6838      	ldr	r0, [r7, #0]
 800fd4a:	6879      	ldr	r1, [r7, #4]
 800fd4c:	46e6      	mov	lr, ip
 800fd4e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fd52:	3708      	adds	r7, #8
 800fd54:	4547      	cmp	r7, r8
 800fd56:	46f4      	mov	ip, lr
 800fd58:	d1f6      	bne.n	800fd48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800fd5a:	6838      	ldr	r0, [r7, #0]
 800fd5c:	f8ce 0000 	str.w	r0, [lr]
 800fd60:	88b9      	ldrh	r1, [r7, #4]
 800fd62:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fd66:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800fd6a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fd6e:	d009      	beq.n	800fd84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800fd70:	7b51      	ldrb	r1, [r2, #13]
 800fd72:	7992      	ldrb	r2, [r2, #6]
 800fd74:	0149      	lsls	r1, r1, #5
 800fd76:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fd7a:	4311      	orrs	r1, r2
 800fd7c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fd80:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800fd84:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fd88:	d00d      	beq.n	800fda6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800fd8a:	442b      	add	r3, r5
 800fd8c:	b29b      	uxth	r3, r3
 800fd8e:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800fd92:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800fd96:	10db      	asrs	r3, r3, #3
 800fd98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fd9c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fda0:	4313      	orrs	r3, r2
 800fda2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800fda6:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800fdaa:	00cb      	lsls	r3, r1, #3
 800fdac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fdb0:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800fdb4:	064f      	lsls	r7, r1, #25
 800fdb6:	ea43 0302 	orr.w	r3, r3, r2
 800fdba:	bf44      	itt	mi
 800fdbc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fdc0:	b21b      	sxthmi	r3, r3
 800fdc2:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fdc6:	1b5d      	subs	r5, r3, r5
 800fdc8:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800fdcc:	4632      	mov	r2, r6
 800fdce:	e6fb      	b.n	800fbc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fdd0:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 800fdd4:	4694      	mov	ip, r2
 800fdd6:	f102 0908 	add.w	r9, r2, #8
 800fdda:	4676      	mov	r6, lr
 800fddc:	f8dc 0000 	ldr.w	r0, [ip]
 800fde0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fde4:	46f0      	mov	r8, lr
 800fde6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800fdea:	f10c 0c08 	add.w	ip, ip, #8
 800fdee:	45cc      	cmp	ip, r9
 800fdf0:	46c6      	mov	lr, r8
 800fdf2:	d1f3      	bne.n	800fddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800fdf4:	f8dc 0000 	ldr.w	r0, [ip]
 800fdf8:	f8c8 0000 	str.w	r0, [r8]
 800fdfc:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800fe00:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fe04:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800fe08:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fe0c:	d009      	beq.n	800fe22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800fe0e:	7b51      	ldrb	r1, [r2, #13]
 800fe10:	7992      	ldrb	r2, [r2, #6]
 800fe12:	0149      	lsls	r1, r1, #5
 800fe14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fe18:	4311      	orrs	r1, r2
 800fe1a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fe1e:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800fe22:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fe26:	d00d      	beq.n	800fe44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800fe28:	1bdb      	subs	r3, r3, r7
 800fe2a:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800fe2e:	b29b      	uxth	r3, r3
 800fe30:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800fe34:	10db      	asrs	r3, r3, #3
 800fe36:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fe3a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fe3e:	4313      	orrs	r3, r2
 800fe40:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800fe44:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800fe48:	00cb      	lsls	r3, r1, #3
 800fe4a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fe4e:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800fe52:	0648      	lsls	r0, r1, #25
 800fe54:	ea43 0302 	orr.w	r3, r3, r2
 800fe58:	bf44      	itt	mi
 800fe5a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fe5e:	b21b      	sxthmi	r3, r3
 800fe60:	e7b1      	b.n	800fdc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800fe64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800fe64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe68:	461e      	mov	r6, r3
 800fe6a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fe6c:	4604      	mov	r4, r0
 800fe6e:	4617      	mov	r7, r2
 800fe70:	b92b      	cbnz	r3, 800fe7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800fe72:	4b25      	ldr	r3, [pc, #148]	; (800ff08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800fe74:	4a25      	ldr	r2, [pc, #148]	; (800ff0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800fe76:	4826      	ldr	r0, [pc, #152]	; (800ff10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800fe78:	21bf      	movs	r1, #191	; 0xbf
 800fe7a:	f00c ff8d 	bl	801cd98 <__assert_func>
 800fe7e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fe80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800fe84:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800fe88:	f7f4 fb70 	bl	800456c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fe8c:	4605      	mov	r5, r0
 800fe8e:	b918      	cbnz	r0, 800fe98 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800fe90:	6030      	str	r0, [r6, #0]
 800fe92:	4628      	mov	r0, r5
 800fe94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe98:	683b      	ldr	r3, [r7, #0]
 800fe9a:	4601      	mov	r1, r0
 800fe9c:	68db      	ldr	r3, [r3, #12]
 800fe9e:	4638      	mov	r0, r7
 800fea0:	4798      	blx	r3
 800fea2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fea6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800feaa:	4602      	mov	r2, r0
 800feac:	6030      	str	r0, [r6, #0]
 800feae:	d213      	bcs.n	800fed8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800feb0:	4643      	mov	r3, r8
 800feb2:	4639      	mov	r1, r7
 800feb4:	4620      	mov	r0, r4
 800feb6:	f7ff fe33 	bl	800fb20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800feba:	6030      	str	r0, [r6, #0]
 800febc:	6833      	ldr	r3, [r6, #0]
 800febe:	b143      	cbz	r3, 800fed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800fec0:	7b5a      	ldrb	r2, [r3, #13]
 800fec2:	7a9b      	ldrb	r3, [r3, #10]
 800fec4:	0052      	lsls	r2, r2, #1
 800fec6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800feca:	4313      	orrs	r3, r2
 800fecc:	bf0c      	ite	eq
 800fece:	2301      	moveq	r3, #1
 800fed0:	2300      	movne	r3, #0
 800fed2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fed6:	e7dc      	b.n	800fe92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800fed8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800fedc:	b29b      	uxth	r3, r3
 800fede:	2b7f      	cmp	r3, #127	; 0x7f
 800fee0:	d804      	bhi.n	800feec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800fee2:	4639      	mov	r1, r7
 800fee4:	4620      	mov	r0, r4
 800fee6:	f7ff fd01 	bl	800f8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800feea:	e7e6      	b.n	800feba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800feec:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800fef0:	2b00      	cmp	r3, #0
 800fef2:	d0e3      	beq.n	800febc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fef4:	f640 1302 	movw	r3, #2306	; 0x902
 800fef8:	429d      	cmp	r5, r3
 800fefa:	d1df      	bne.n	800febc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800fefc:	4601      	mov	r1, r0
 800fefe:	4620      	mov	r0, r4
 800ff00:	f7ff fcc5 	bl	800f88e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ff04:	e7d9      	b.n	800feba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800ff06:	bf00      	nop
 800ff08:	0801f27c 	.word	0x0801f27c
 800ff0c:	08020bab 	.word	0x08020bab
 800ff10:	0801f34e 	.word	0x0801f34e

0800ff14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ff14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ff18:	461e      	mov	r6, r3
 800ff1a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ff1c:	4604      	mov	r4, r0
 800ff1e:	4617      	mov	r7, r2
 800ff20:	b92b      	cbnz	r3, 800ff2e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800ff22:	4b26      	ldr	r3, [pc, #152]	; (800ffbc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800ff24:	4a26      	ldr	r2, [pc, #152]	; (800ffc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800ff26:	4827      	ldr	r0, [pc, #156]	; (800ffc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800ff28:	21bf      	movs	r1, #191	; 0xbf
 800ff2a:	f00c ff35 	bl	801cd98 <__assert_func>
 800ff2e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ff30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ff34:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800ff38:	f7f4 fb18 	bl	800456c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ff3c:	4605      	mov	r5, r0
 800ff3e:	b918      	cbnz	r0, 800ff48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800ff40:	6030      	str	r0, [r6, #0]
 800ff42:	4628      	mov	r0, r5
 800ff44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ff48:	683b      	ldr	r3, [r7, #0]
 800ff4a:	4601      	mov	r1, r0
 800ff4c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800ff50:	4638      	mov	r0, r7
 800ff52:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ff56:	47c8      	blx	r9
 800ff58:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ff5c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ff60:	4602      	mov	r2, r0
 800ff62:	6030      	str	r0, [r6, #0]
 800ff64:	d213      	bcs.n	800ff8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800ff66:	4643      	mov	r3, r8
 800ff68:	4639      	mov	r1, r7
 800ff6a:	4620      	mov	r0, r4
 800ff6c:	f7ff fdd8 	bl	800fb20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ff70:	6030      	str	r0, [r6, #0]
 800ff72:	6833      	ldr	r3, [r6, #0]
 800ff74:	b143      	cbz	r3, 800ff88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800ff76:	7b5a      	ldrb	r2, [r3, #13]
 800ff78:	7a9b      	ldrb	r3, [r3, #10]
 800ff7a:	0052      	lsls	r2, r2, #1
 800ff7c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ff80:	4313      	orrs	r3, r2
 800ff82:	bf0c      	ite	eq
 800ff84:	2301      	moveq	r3, #1
 800ff86:	2300      	movne	r3, #0
 800ff88:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ff8c:	e7d9      	b.n	800ff42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800ff8e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ff92:	b29b      	uxth	r3, r3
 800ff94:	2b7f      	cmp	r3, #127	; 0x7f
 800ff96:	d804      	bhi.n	800ffa2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800ff98:	4639      	mov	r1, r7
 800ff9a:	4620      	mov	r0, r4
 800ff9c:	f7ff fca6 	bl	800f8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ffa0:	e7e6      	b.n	800ff70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ffa2:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800ffa6:	2b00      	cmp	r3, #0
 800ffa8:	d0e3      	beq.n	800ff72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ffaa:	f640 1302 	movw	r3, #2306	; 0x902
 800ffae:	429d      	cmp	r5, r3
 800ffb0:	d1df      	bne.n	800ff72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800ffb2:	4601      	mov	r1, r0
 800ffb4:	4620      	mov	r0, r4
 800ffb6:	f7ff fc6a 	bl	800f88e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ffba:	e7d9      	b.n	800ff70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800ffbc:	0801f27c 	.word	0x0801f27c
 800ffc0:	08020bab 	.word	0x08020bab
 800ffc4:	0801f34e 	.word	0x0801f34e

0800ffc8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ffc8:	b510      	push	{r4, lr}
 800ffca:	4604      	mov	r4, r0
 800ffcc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800ffce:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ffd0:	b9d9      	cbnz	r1, 801000a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800ffd2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ffd4:	2b0a      	cmp	r3, #10
 800ffd6:	d036      	beq.n	8010046 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800ffd8:	4620      	mov	r0, r4
 800ffda:	f7ff fc1f 	bl	800f81c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800ffde:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ffe0:	2b09      	cmp	r3, #9
 800ffe2:	d906      	bls.n	800fff2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800ffe4:	4b18      	ldr	r3, [pc, #96]	; (8010048 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800ffe6:	4a19      	ldr	r2, [pc, #100]	; (801004c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800ffe8:	4819      	ldr	r0, [pc, #100]	; (8010050 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800ffea:	f240 1103 	movw	r1, #259	; 0x103
 800ffee:	f00c fed3 	bl	801cd98 <__assert_func>
 800fff2:	1c5a      	adds	r2, r3, #1
 800fff4:	8622      	strh	r2, [r4, #48]	; 0x30
 800fff6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800fff8:	4413      	add	r3, r2
 800fffa:	b29b      	uxth	r3, r3
 800fffc:	2b09      	cmp	r3, #9
 800fffe:	bf88      	it	hi
 8010000:	3b0a      	subhi	r3, #10
 8010002:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010006:	8358      	strh	r0, [r3, #26]
 8010008:	e7e3      	b.n	800ffd2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 801000a:	2b0a      	cmp	r3, #10
 801000c:	d01b      	beq.n	8010046 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 801000e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010010:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8010014:	3901      	subs	r1, #1
 8010016:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8010018:	8721      	strh	r1, [r4, #56]	; 0x38
 801001a:	1c51      	adds	r1, r2, #1
 801001c:	b289      	uxth	r1, r1
 801001e:	2901      	cmp	r1, #1
 8010020:	bf8a      	itet	hi
 8010022:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010026:	86e1      	strhls	r1, [r4, #54]	; 0x36
 8010028:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 801002a:	2b09      	cmp	r3, #9
 801002c:	d8da      	bhi.n	800ffe4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 801002e:	1c5a      	adds	r2, r3, #1
 8010030:	8622      	strh	r2, [r4, #48]	; 0x30
 8010032:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8010034:	4413      	add	r3, r2
 8010036:	b29b      	uxth	r3, r3
 8010038:	2b09      	cmp	r3, #9
 801003a:	bf88      	it	hi
 801003c:	3b0a      	subhi	r3, #10
 801003e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010042:	8358      	strh	r0, [r3, #26]
 8010044:	e7c2      	b.n	800ffcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010046:	bd10      	pop	{r4, pc}
 8010048:	0802097c 	.word	0x0802097c
 801004c:	08020d01 	.word	0x08020d01
 8010050:	0801f34e 	.word	0x0801f34e

08010054 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8010054:	b538      	push	{r3, r4, r5, lr}
 8010056:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8010058:	4604      	mov	r4, r0
 801005a:	b92a      	cbnz	r2, 8010068 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801005c:	4b13      	ldr	r3, [pc, #76]	; (80100ac <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801005e:	4a14      	ldr	r2, [pc, #80]	; (80100b0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8010060:	4814      	ldr	r0, [pc, #80]	; (80100b4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8010062:	21d4      	movs	r1, #212	; 0xd4
 8010064:	f00c fe98 	bl	801cd98 <__assert_func>
 8010068:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801006a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801006e:	3a01      	subs	r2, #1
 8010070:	8b4d      	ldrh	r5, [r1, #26]
 8010072:	8602      	strh	r2, [r0, #48]	; 0x30
 8010074:	1c5a      	adds	r2, r3, #1
 8010076:	b292      	uxth	r2, r2
 8010078:	2a09      	cmp	r2, #9
 801007a:	bf86      	itte	hi
 801007c:	3b09      	subhi	r3, #9
 801007e:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 8010080:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 8010082:	f7ff ffa1 	bl	800ffc8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010086:	8b23      	ldrh	r3, [r4, #24]
 8010088:	2b01      	cmp	r3, #1
 801008a:	bf9c      	itt	ls
 801008c:	3301      	addls	r3, #1
 801008e:	8323      	strhls	r3, [r4, #24]
 8010090:	8ae3      	ldrh	r3, [r4, #22]
 8010092:	b90b      	cbnz	r3, 8010098 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8010094:	2302      	movs	r3, #2
 8010096:	82e3      	strh	r3, [r4, #22]
 8010098:	8ae3      	ldrh	r3, [r4, #22]
 801009a:	3b01      	subs	r3, #1
 801009c:	b29b      	uxth	r3, r3
 801009e:	82e3      	strh	r3, [r4, #22]
 80100a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80100a4:	4628      	mov	r0, r5
 80100a6:	8265      	strh	r5, [r4, #18]
 80100a8:	bd38      	pop	{r3, r4, r5, pc}
 80100aa:	bf00      	nop
 80100ac:	0801f27c 	.word	0x0801f27c
 80100b0:	08020c56 	.word	0x08020c56
 80100b4:	0801f34e 	.word	0x0801f34e

080100b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80100b8:	b538      	push	{r3, r4, r5, lr}
 80100ba:	428a      	cmp	r2, r1
 80100bc:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 80100be:	d90c      	bls.n	80100da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 80100c0:	b92c      	cbnz	r4, 80100ce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 80100c2:	4b1c      	ldr	r3, [pc, #112]	; (8010134 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 80100c4:	4a1c      	ldr	r2, [pc, #112]	; (8010138 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 80100c6:	21e0      	movs	r1, #224	; 0xe0
 80100c8:	481c      	ldr	r0, [pc, #112]	; (801013c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 80100ca:	f00c fe65 	bl	801cd98 <__assert_func>
 80100ce:	3c01      	subs	r4, #1
 80100d0:	8604      	strh	r4, [r0, #48]	; 0x30
 80100d2:	4b1b      	ldr	r3, [pc, #108]	; (8010140 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 80100d4:	4a1b      	ldr	r2, [pc, #108]	; (8010144 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 80100d6:	21c4      	movs	r1, #196	; 0xc4
 80100d8:	e7f6      	b.n	80100c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80100da:	428c      	cmp	r4, r1
 80100dc:	d203      	bcs.n	80100e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 80100de:	4b1a      	ldr	r3, [pc, #104]	; (8010148 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 80100e0:	4a1a      	ldr	r2, [pc, #104]	; (801014c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 80100e2:	21ca      	movs	r1, #202	; 0xca
 80100e4:	e7f0      	b.n	80100c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80100e6:	1a64      	subs	r4, r4, r1
 80100e8:	8604      	strh	r4, [r0, #48]	; 0x30
 80100ea:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 80100ec:	4421      	add	r1, r4
 80100ee:	b289      	uxth	r1, r1
 80100f0:	2909      	cmp	r1, #9
 80100f2:	bf88      	it	hi
 80100f4:	390a      	subhi	r1, #10
 80100f6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80100f8:	250a      	movs	r5, #10
 80100fa:	b1ba      	cbz	r2, 801012c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 80100fc:	3a01      	subs	r2, #1
 80100fe:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 8010100:	b292      	uxth	r2, r2
 8010102:	2909      	cmp	r1, #9
 8010104:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8010108:	d903      	bls.n	8010112 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801010a:	4b11      	ldr	r3, [pc, #68]	; (8010150 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801010c:	4a11      	ldr	r2, [pc, #68]	; (8010154 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801010e:	21e5      	movs	r1, #229	; 0xe5
 8010110:	e7da      	b.n	80100c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010112:	3101      	adds	r1, #1
 8010114:	8601      	strh	r1, [r0, #48]	; 0x30
 8010116:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 8010118:	b901      	cbnz	r1, 801011c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801011a:	85c5      	strh	r5, [r0, #46]	; 0x2e
 801011c:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 801011e:	3901      	subs	r1, #1
 8010120:	b289      	uxth	r1, r1
 8010122:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010124:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8010128:	834c      	strh	r4, [r1, #26]
 801012a:	e7e6      	b.n	80100fa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801012c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010130:	f7ff bf4a 	b.w	800ffc8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010134:	0801f27c 	.word	0x0801f27c
 8010138:	08020a2f 	.word	0x08020a2f
 801013c:	0801f34e 	.word	0x0801f34e
 8010140:	0801f37a 	.word	0x0801f37a
 8010144:	08020ad9 	.word	0x08020ad9
 8010148:	08020988 	.word	0x08020988
 801014c:	08020db0 	.word	0x08020db0
 8010150:	08020994 	.word	0x08020994
 8010154:	080209a7 	.word	0x080209a7

08010158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8010158:	3a01      	subs	r2, #1
 801015a:	b570      	push	{r4, r5, r6, lr}
 801015c:	b292      	uxth	r2, r2
 801015e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010162:	42b2      	cmp	r2, r6
 8010164:	d019      	beq.n	801019a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8010166:	8b04      	ldrh	r4, [r0, #24]
 8010168:	f831 5b02 	ldrh.w	r5, [r1], #2
 801016c:	4294      	cmp	r4, r2
 801016e:	d805      	bhi.n	801017c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8010170:	4b19      	ldr	r3, [pc, #100]	; (80101d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8010172:	4a1a      	ldr	r2, [pc, #104]	; (80101dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8010174:	481a      	ldr	r0, [pc, #104]	; (80101e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8010176:	21c4      	movs	r1, #196	; 0xc4
 8010178:	f00c fe0e 	bl	801cd98 <__assert_func>
 801017c:	8ac4      	ldrh	r4, [r0, #22]
 801017e:	4414      	add	r4, r2
 8010180:	b2a4      	uxth	r4, r4
 8010182:	2c01      	cmp	r4, #1
 8010184:	bf88      	it	hi
 8010186:	3c02      	subhi	r4, #2
 8010188:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801018c:	3a01      	subs	r2, #1
 801018e:	8a64      	ldrh	r4, [r4, #18]
 8010190:	42ac      	cmp	r4, r5
 8010192:	b292      	uxth	r2, r2
 8010194:	d0e5      	beq.n	8010162 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8010196:	2000      	movs	r0, #0
 8010198:	bd70      	pop	{r4, r5, r6, pc}
 801019a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801019e:	2400      	movs	r4, #0
 80101a0:	4413      	add	r3, r2
 80101a2:	b2a2      	uxth	r2, r4
 80101a4:	429a      	cmp	r2, r3
 80101a6:	da14      	bge.n	80101d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 80101a8:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 80101aa:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80101ae:	4296      	cmp	r6, r2
 80101b0:	d802      	bhi.n	80101b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 80101b2:	4b09      	ldr	r3, [pc, #36]	; (80101d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80101b4:	4a0b      	ldr	r2, [pc, #44]	; (80101e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 80101b6:	e7dd      	b.n	8010174 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 80101b8:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 80101ba:	4432      	add	r2, r6
 80101bc:	b292      	uxth	r2, r2
 80101be:	2a09      	cmp	r2, #9
 80101c0:	bf88      	it	hi
 80101c2:	3a0a      	subhi	r2, #10
 80101c4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80101c8:	3401      	adds	r4, #1
 80101ca:	8b52      	ldrh	r2, [r2, #26]
 80101cc:	42aa      	cmp	r2, r5
 80101ce:	d0e8      	beq.n	80101a2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 80101d0:	e7e1      	b.n	8010196 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 80101d2:	2001      	movs	r0, #1
 80101d4:	e7e0      	b.n	8010198 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 80101d6:	bf00      	nop
 80101d8:	0801f37a 	.word	0x0801f37a
 80101dc:	08020e34 	.word	0x08020e34
 80101e0:	0801f34e 	.word	0x0801f34e
 80101e4:	08020ad9 	.word	0x08020ad9

080101e8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80101e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101ec:	4605      	mov	r5, r0
 80101ee:	4616      	mov	r6, r2
 80101f0:	1c8c      	adds	r4, r1, #2
 80101f2:	8809      	ldrh	r1, [r1, #0]
 80101f4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80101f8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80101fc:	42b3      	cmp	r3, r6
 80101fe:	d124      	bne.n	801024a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010200:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010204:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8010208:	f001 070f 	and.w	r7, r1, #15
 801020c:	f8cd 8000 	str.w	r8, [sp]
 8010210:	464b      	mov	r3, r9
 8010212:	4652      	mov	r2, sl
 8010214:	4621      	mov	r1, r4
 8010216:	4628      	mov	r0, r5
 8010218:	f7ff ff9e 	bl	8010158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801021c:	4683      	mov	fp, r0
 801021e:	b168      	cbz	r0, 801023c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8010220:	eb0a 0109 	add.w	r1, sl, r9
 8010224:	4441      	add	r1, r8
 8010226:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801022a:	463a      	mov	r2, r7
 801022c:	4649      	mov	r1, r9
 801022e:	4628      	mov	r0, r5
 8010230:	f7ff ff42 	bl	80100b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8010234:	4658      	mov	r0, fp
 8010236:	b003      	add	sp, #12
 8010238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801023c:	eb07 010a 	add.w	r1, r7, sl
 8010240:	4449      	add	r1, r9
 8010242:	4441      	add	r1, r8
 8010244:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010248:	e7d2      	b.n	80101f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801024a:	f04f 0b00 	mov.w	fp, #0
 801024e:	e7f1      	b.n	8010234 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08010250 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8010250:	b570      	push	{r4, r5, r6, lr}
 8010252:	8810      	ldrh	r0, [r2, #0]
 8010254:	4298      	cmp	r0, r3
 8010256:	d817      	bhi.n	8010288 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010258:	1e48      	subs	r0, r1, #1
 801025a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801025e:	4298      	cmp	r0, r3
 8010260:	d312      	bcc.n	8010288 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010262:	2400      	movs	r4, #0
 8010264:	428c      	cmp	r4, r1
 8010266:	d20f      	bcs.n	8010288 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010268:	1860      	adds	r0, r4, r1
 801026a:	1040      	asrs	r0, r0, #1
 801026c:	0085      	lsls	r5, r0, #2
 801026e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8010272:	42b3      	cmp	r3, r6
 8010274:	d902      	bls.n	801027c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8010276:	3001      	adds	r0, #1
 8010278:	b284      	uxth	r4, r0
 801027a:	e7f3      	b.n	8010264 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801027c:	d201      	bcs.n	8010282 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801027e:	b281      	uxth	r1, r0
 8010280:	e7f0      	b.n	8010264 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010282:	442a      	add	r2, r5
 8010284:	8850      	ldrh	r0, [r2, #2]
 8010286:	bd70      	pop	{r4, r5, r6, pc}
 8010288:	2000      	movs	r0, #0
 801028a:	e7fc      	b.n	8010286 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801028c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801028c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010290:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8010292:	886f      	ldrh	r7, [r5, #2]
 8010294:	4604      	mov	r4, r0
 8010296:	087f      	lsrs	r7, r7, #1
 8010298:	260b      	movs	r6, #11
 801029a:	3e01      	subs	r6, #1
 801029c:	d01b      	beq.n	80102d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801029e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80102a0:	b92b      	cbnz	r3, 80102ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80102a2:	4b0e      	ldr	r3, [pc, #56]	; (80102dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80102a4:	4a0e      	ldr	r2, [pc, #56]	; (80102e0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80102a6:	480f      	ldr	r0, [pc, #60]	; (80102e4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 80102a8:	21bf      	movs	r1, #191	; 0xbf
 80102aa:	f00c fd75 	bl	801cd98 <__assert_func>
 80102ae:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80102b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80102b4:	462a      	mov	r2, r5
 80102b6:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80102ba:	4639      	mov	r1, r7
 80102bc:	4643      	mov	r3, r8
 80102be:	4620      	mov	r0, r4
 80102c0:	f7ff ffc6 	bl	8010250 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80102c4:	b138      	cbz	r0, 80102d6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80102c6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80102ca:	4642      	mov	r2, r8
 80102cc:	4620      	mov	r0, r4
 80102ce:	f7ff ff8b 	bl	80101e8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80102d2:	2800      	cmp	r0, #0
 80102d4:	d1e1      	bne.n	801029a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80102d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80102da:	bf00      	nop
 80102dc:	0801f27c 	.word	0x0801f27c
 80102e0:	08020bab 	.word	0x08020bab
 80102e4:	0801f34e 	.word	0x0801f34e

080102e8 <_ZN8touchgfx8ceil28_4El>:
 80102e8:	f110 030f 	adds.w	r3, r0, #15
 80102ec:	d401      	bmi.n	80102f2 <_ZN8touchgfx8ceil28_4El+0xa>
 80102ee:	1118      	asrs	r0, r3, #4
 80102f0:	4770      	bx	lr
 80102f2:	f1c0 0001 	rsb	r0, r0, #1
 80102f6:	f010 000f 	ands.w	r0, r0, #15
 80102fa:	bf18      	it	ne
 80102fc:	2001      	movne	r0, #1
 80102fe:	2210      	movs	r2, #16
 8010300:	fb93 f3f2 	sdiv	r3, r3, r2
 8010304:	1a18      	subs	r0, r3, r0
 8010306:	4770      	bx	lr

08010308 <_ZN8touchgfx11floorDivModEllRlS0_>:
 8010308:	2900      	cmp	r1, #0
 801030a:	b538      	push	{r3, r4, r5, lr}
 801030c:	dc05      	bgt.n	801031a <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 801030e:	4b0f      	ldr	r3, [pc, #60]	; (801034c <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 8010310:	4a0f      	ldr	r2, [pc, #60]	; (8010350 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 8010312:	4810      	ldr	r0, [pc, #64]	; (8010354 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 8010314:	21f7      	movs	r1, #247	; 0xf7
 8010316:	f00c fd3f 	bl	801cd98 <__assert_func>
 801031a:	2800      	cmp	r0, #0
 801031c:	db06      	blt.n	801032c <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 801031e:	fb90 f4f1 	sdiv	r4, r0, r1
 8010322:	6014      	str	r4, [r2, #0]
 8010324:	fb01 0114 	mls	r1, r1, r4, r0
 8010328:	6019      	str	r1, [r3, #0]
 801032a:	bd38      	pop	{r3, r4, r5, pc}
 801032c:	4240      	negs	r0, r0
 801032e:	fb90 f4f1 	sdiv	r4, r0, r1
 8010332:	4265      	negs	r5, r4
 8010334:	fb01 0014 	mls	r0, r1, r4, r0
 8010338:	6015      	str	r5, [r2, #0]
 801033a:	6018      	str	r0, [r3, #0]
 801033c:	2800      	cmp	r0, #0
 801033e:	d0f4      	beq.n	801032a <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 8010340:	6810      	ldr	r0, [r2, #0]
 8010342:	3801      	subs	r0, #1
 8010344:	6010      	str	r0, [r2, #0]
 8010346:	6818      	ldr	r0, [r3, #0]
 8010348:	1a09      	subs	r1, r1, r0
 801034a:	e7ed      	b.n	8010328 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 801034c:	08020f05 	.word	0x08020f05
 8010350:	08020f44 	.word	0x08020f44
 8010354:	08020f15 	.word	0x08020f15

08010358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8010358:	b570      	push	{r4, r5, r6, lr}
 801035a:	694a      	ldr	r2, [r1, #20]
 801035c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801035e:	684b      	ldr	r3, [r1, #4]
 8010360:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010362:	1b54      	subs	r4, r2, r5
 8010364:	f000 8106 	beq.w	8010574 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010368:	1b9b      	subs	r3, r3, r6
 801036a:	d003      	beq.n	8010374 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801036c:	4363      	muls	r3, r4
 801036e:	2210      	movs	r2, #16
 8010370:	fb93 f3f2 	sdiv	r3, r3, r2
 8010374:	680c      	ldr	r4, [r1, #0]
 8010376:	698a      	ldr	r2, [r1, #24]
 8010378:	1b65      	subs	r5, r4, r5
 801037a:	f000 80fd 	beq.w	8010578 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801037e:	1b92      	subs	r2, r2, r6
 8010380:	d003      	beq.n	801038a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010382:	436a      	muls	r2, r5
 8010384:	2410      	movs	r4, #16
 8010386:	fb92 f2f4 	sdiv	r2, r2, r4
 801038a:	1a9b      	subs	r3, r3, r2
 801038c:	ee07 3a90 	vmov	s15, r3
 8010390:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80105b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010394:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010398:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801039c:	ee67 7a84 	vmul.f32	s15, s15, s8
 80103a0:	460a      	mov	r2, r1
 80103a2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80103a6:	4603      	mov	r3, r0
 80103a8:	f100 040c 	add.w	r4, r0, #12
 80103ac:	eeb1 6a43 	vneg.f32	s12, s6
 80103b0:	edd2 7a02 	vldr	s15, [r2, #8]
 80103b4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80103b8:	3214      	adds	r2, #20
 80103ba:	ece3 6a01 	vstmia	r3!, {s13}
 80103be:	ed52 7a02 	vldr	s15, [r2, #-8]
 80103c2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80103c6:	429c      	cmp	r4, r3
 80103c8:	edc3 7a02 	vstr	s15, [r3, #8]
 80103cc:	ed52 7a01 	vldr	s15, [r2, #-4]
 80103d0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80103d4:	edc3 7a05 	vstr	s15, [r3, #20]
 80103d8:	d1ea      	bne.n	80103b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80103da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80103dc:	698b      	ldr	r3, [r1, #24]
 80103de:	edd0 4a02 	vldr	s9, [r0, #8]
 80103e2:	edd0 3a00 	vldr	s7, [r0]
 80103e6:	edd0 6a01 	vldr	s13, [r0, #4]
 80103ea:	ed90 5a05 	vldr	s10, [r0, #20]
 80103ee:	ed90 2a03 	vldr	s4, [r0, #12]
 80103f2:	edd0 5a04 	vldr	s11, [r0, #16]
 80103f6:	ed90 1a07 	vldr	s2, [r0, #28]
 80103fa:	edd0 2a06 	vldr	s5, [r0, #24]
 80103fe:	1a9b      	subs	r3, r3, r2
 8010400:	ee07 3a90 	vmov	s15, r3
 8010404:	684b      	ldr	r3, [r1, #4]
 8010406:	1a9b      	subs	r3, r3, r2
 8010408:	ee07 3a10 	vmov	s14, r3
 801040c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010410:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8010414:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010418:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801041c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010420:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8010424:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010428:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801042c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010430:	ee32 5a45 	vsub.f32	s10, s4, s10
 8010434:	ee67 7a83 	vmul.f32	s15, s15, s6
 8010438:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801043c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801043e:	694a      	ldr	r2, [r1, #20]
 8010440:	1b13      	subs	r3, r2, r4
 8010442:	ee07 3a10 	vmov	s14, r3
 8010446:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801044a:	680b      	ldr	r3, [r1, #0]
 801044c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010450:	1b1b      	subs	r3, r3, r4
 8010452:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8010456:	ee07 3a10 	vmov	s14, r3
 801045a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801045e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010462:	eee6 4a87 	vfma.f32	s9, s13, s14
 8010466:	ee64 4a86 	vmul.f32	s9, s9, s12
 801046a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801046e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010470:	698b      	ldr	r3, [r1, #24]
 8010472:	1a9b      	subs	r3, r3, r2
 8010474:	ee06 3a90 	vmov	s13, r3
 8010478:	684b      	ldr	r3, [r1, #4]
 801047a:	1a9b      	subs	r3, r3, r2
 801047c:	ee07 3a10 	vmov	s14, r3
 8010480:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010484:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010488:	ee66 6a84 	vmul.f32	s13, s13, s8
 801048c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010490:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010494:	eee5 6a87 	vfma.f32	s13, s11, s14
 8010498:	ee66 6a83 	vmul.f32	s13, s13, s6
 801049c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80104a0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80104a2:	694a      	ldr	r2, [r1, #20]
 80104a4:	1b13      	subs	r3, r2, r4
 80104a6:	ee07 3a10 	vmov	s14, r3
 80104aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80104ae:	680b      	ldr	r3, [r1, #0]
 80104b0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80104b4:	1b1b      	subs	r3, r3, r4
 80104b6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80104ba:	ee07 3a10 	vmov	s14, r3
 80104be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80104c2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80104c6:	eea5 5a87 	vfma.f32	s10, s11, s14
 80104ca:	edd0 5a08 	vldr	s11, [r0, #32]
 80104ce:	ee25 5a06 	vmul.f32	s10, s10, s12
 80104d2:	ee31 1a65 	vsub.f32	s2, s2, s11
 80104d6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80104da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80104dc:	698b      	ldr	r3, [r1, #24]
 80104de:	1a9b      	subs	r3, r3, r2
 80104e0:	ee07 3a10 	vmov	s14, r3
 80104e4:	684b      	ldr	r3, [r1, #4]
 80104e6:	1a9b      	subs	r3, r3, r2
 80104e8:	ee01 3a90 	vmov	s3, r3
 80104ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80104f0:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80104f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80104f8:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80104fc:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8010500:	ee61 1a84 	vmul.f32	s3, s3, s8
 8010504:	eea1 7a21 	vfma.f32	s14, s2, s3
 8010508:	ee27 7a03 	vmul.f32	s14, s14, s6
 801050c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8010510:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010512:	694a      	ldr	r2, [r1, #20]
 8010514:	1b13      	subs	r3, r2, r4
 8010516:	ee03 3a10 	vmov	s6, r3
 801051a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801051e:	680b      	ldr	r3, [r1, #0]
 8010520:	ee23 3a04 	vmul.f32	s6, s6, s8
 8010524:	1b1b      	subs	r3, r3, r4
 8010526:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801052a:	ee03 3a10 	vmov	s6, r3
 801052e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8010532:	ee23 4a04 	vmul.f32	s8, s6, s8
 8010536:	eee1 5a04 	vfma.f32	s11, s2, s8
 801053a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801053e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8010542:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8010546:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801054a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801054e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010552:	dd13      	ble.n	801057c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8010554:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010558:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801055c:	63c3      	str	r3, [r0, #60]	; 0x3c
 801055e:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010562:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010566:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801056a:	dd15      	ble.n	8010598 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801056c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010570:	6403      	str	r3, [r0, #64]	; 0x40
 8010572:	bd70      	pop	{r4, r5, r6, pc}
 8010574:	4623      	mov	r3, r4
 8010576:	e6fd      	b.n	8010374 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010578:	462a      	mov	r2, r5
 801057a:	e706      	b.n	801038a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801057c:	d502      	bpl.n	8010584 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801057e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010582:	e7e9      	b.n	8010558 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010584:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8010588:	eea3 2a85 	vfma.f32	s4, s7, s10
 801058c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010594:	dade      	bge.n	8010554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8010596:	e7f2      	b.n	801057e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8010598:	d502      	bpl.n	80105a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801059a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801059e:	e7e7      	b.n	8010570 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80105a0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80105a4:	eee3 4a86 	vfma.f32	s9, s7, s12
 80105a8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80105ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80105b0:	dadc      	bge.n	801056c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80105b2:	e7f2      	b.n	801059a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80105b4:	3d800000 	.word	0x3d800000

080105b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80105b8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105bc:	f04f 0814 	mov.w	r8, #20
 80105c0:	fb08 f903 	mul.w	r9, r8, r3
 80105c4:	eb02 0a09 	add.w	sl, r2, r9
 80105c8:	4604      	mov	r4, r0
 80105ca:	f8da 0004 	ldr.w	r0, [sl, #4]
 80105ce:	4617      	mov	r7, r2
 80105d0:	460d      	mov	r5, r1
 80105d2:	461e      	mov	r6, r3
 80105d4:	f7ff fe88 	bl	80102e8 <_ZN8touchgfx8ceil28_4El>
 80105d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80105da:	6160      	str	r0, [r4, #20]
 80105dc:	fb08 f803 	mul.w	r8, r8, r3
 80105e0:	eb07 0b08 	add.w	fp, r7, r8
 80105e4:	9001      	str	r0, [sp, #4]
 80105e6:	f8db 0004 	ldr.w	r0, [fp, #4]
 80105ea:	f7ff fe7d 	bl	80102e8 <_ZN8touchgfx8ceil28_4El>
 80105ee:	9a01      	ldr	r2, [sp, #4]
 80105f0:	1a80      	subs	r0, r0, r2
 80105f2:	61a0      	str	r0, [r4, #24]
 80105f4:	2800      	cmp	r0, #0
 80105f6:	f000 8088 	beq.w	801070a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 80105fa:	f857 3009 	ldr.w	r3, [r7, r9]
 80105fe:	f857 c008 	ldr.w	ip, [r7, r8]
 8010602:	f8da 1004 	ldr.w	r1, [sl, #4]
 8010606:	f8db 0004 	ldr.w	r0, [fp, #4]
 801060a:	ebac 0c03 	sub.w	ip, ip, r3
 801060e:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8010612:	fb0b f202 	mul.w	r2, fp, r2
 8010616:	fb0c 2211 	mls	r2, ip, r1, r2
 801061a:	1a40      	subs	r0, r0, r1
 801061c:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8010620:	fb00 2003 	mla	r0, r0, r3, r2
 8010624:	3801      	subs	r0, #1
 8010626:	f104 0310 	add.w	r3, r4, #16
 801062a:	4622      	mov	r2, r4
 801062c:	4641      	mov	r1, r8
 801062e:	4440      	add	r0, r8
 8010630:	f7ff fe6a 	bl	8010308 <_ZN8touchgfx11floorDivModEllRlS0_>
 8010634:	f104 0308 	add.w	r3, r4, #8
 8010638:	1d22      	adds	r2, r4, #4
 801063a:	4641      	mov	r1, r8
 801063c:	4658      	mov	r0, fp
 801063e:	f7ff fe63 	bl	8010308 <_ZN8touchgfx11floorDivModEllRlS0_>
 8010642:	f8c4 800c 	str.w	r8, [r4, #12]
 8010646:	f8da 3004 	ldr.w	r3, [sl, #4]
 801064a:	6962      	ldr	r2, [r4, #20]
 801064c:	eddf 6a31 	vldr	s13, [pc, #196]	; 8010714 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8010650:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8010654:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8010658:	ee07 3a10 	vmov	s14, r3
 801065c:	6822      	ldr	r2, [r4, #0]
 801065e:	f857 3009 	ldr.w	r3, [r7, r9]
 8010662:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8010666:	ee07 3a90 	vmov	s15, r3
 801066a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801066e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010672:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8010676:	ee27 7a26 	vmul.f32	s14, s14, s13
 801067a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801067e:	edd3 6a00 	vldr	s13, [r3]
 8010682:	eee6 6a07 	vfma.f32	s13, s12, s14
 8010686:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801068a:	eee6 6a27 	vfma.f32	s13, s12, s15
 801068e:	edc4 6a07 	vstr	s13, [r4, #28]
 8010692:	edd4 6a01 	vldr	s13, [r4, #4]
 8010696:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 801069a:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801069e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80106a2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80106a6:	ed84 6a08 	vstr	s12, [r4, #32]
 80106aa:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80106ac:	6262      	str	r2, [r4, #36]	; 0x24
 80106ae:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 80106b2:	ed93 6a03 	vldr	s12, [r3, #12]
 80106b6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80106ba:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 80106be:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80106c2:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 80106c6:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 80106ca:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 80106ce:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80106d2:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 80106d6:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 80106d8:	6322      	str	r2, [r4, #48]	; 0x30
 80106da:	ed93 6a06 	vldr	s12, [r3, #24]
 80106de:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 80106e2:	eea5 6a87 	vfma.f32	s12, s11, s14
 80106e6:	eeb0 7a46 	vmov.f32	s14, s12
 80106ea:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 80106ee:	eea6 7a27 	vfma.f32	s14, s12, s15
 80106f2:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 80106f6:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 80106fa:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 80106fe:	eee6 7a87 	vfma.f32	s15, s13, s14
 8010702:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8010706:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8010708:	63e3      	str	r3, [r4, #60]	; 0x3c
 801070a:	4620      	mov	r0, r4
 801070c:	b003      	add	sp, #12
 801070e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010712:	bf00      	nop
 8010714:	3d800000 	.word	0x3d800000

08010718 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8010718:	4602      	mov	r2, r0
 801071a:	b148      	cbz	r0, 8010730 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801071c:	2300      	movs	r3, #0
 801071e:	b298      	uxth	r0, r3
 8010720:	3301      	adds	r3, #1
 8010722:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010726:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801072a:	2900      	cmp	r1, #0
 801072c:	d1f7      	bne.n	801071e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801072e:	4770      	bx	lr
 8010730:	4770      	bx	lr

08010732 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8010732:	b530      	push	{r4, r5, lr}
 8010734:	4604      	mov	r4, r0
 8010736:	b159      	cbz	r1, 8010750 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8010738:	b148      	cbz	r0, 801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801073a:	2300      	movs	r3, #0
 801073c:	b298      	uxth	r0, r3
 801073e:	4282      	cmp	r2, r0
 8010740:	d905      	bls.n	801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8010742:	5ccd      	ldrb	r5, [r1, r3]
 8010744:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8010748:	3301      	adds	r3, #1
 801074a:	2d00      	cmp	r5, #0
 801074c:	d1f6      	bne.n	801073c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801074e:	bd30      	pop	{r4, r5, pc}
 8010750:	4608      	mov	r0, r1
 8010752:	e7fc      	b.n	801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08010754 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8010754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010756:	b08b      	sub	sp, #44	; 0x2c
 8010758:	468c      	mov	ip, r1
 801075a:	2100      	movs	r1, #0
 801075c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8010760:	ae01      	add	r6, sp, #4
 8010762:	211f      	movs	r1, #31
 8010764:	fbb0 f7f3 	udiv	r7, r0, r3
 8010768:	fb03 0517 	mls	r5, r3, r7, r0
 801076c:	b2ec      	uxtb	r4, r5
 801076e:	2d09      	cmp	r5, #9
 8010770:	bfd4      	ite	le
 8010772:	3430      	addle	r4, #48	; 0x30
 8010774:	3457      	addgt	r4, #87	; 0x57
 8010776:	b2e4      	uxtb	r4, r4
 8010778:	558c      	strb	r4, [r1, r6]
 801077a:	4638      	mov	r0, r7
 801077c:	1e4c      	subs	r4, r1, #1
 801077e:	b92f      	cbnz	r7, 801078c <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8010780:	4431      	add	r1, r6
 8010782:	4660      	mov	r0, ip
 8010784:	f7ff ffd5 	bl	8010732 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010788:	b00b      	add	sp, #44	; 0x2c
 801078a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801078c:	4621      	mov	r1, r4
 801078e:	e7e9      	b.n	8010764 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08010790 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8010790:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010792:	4607      	mov	r7, r0
 8010794:	b08b      	sub	sp, #44	; 0x2c
 8010796:	4608      	mov	r0, r1
 8010798:	b341      	cbz	r1, 80107ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801079a:	1e99      	subs	r1, r3, #2
 801079c:	2922      	cmp	r1, #34	; 0x22
 801079e:	d825      	bhi.n	80107ec <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80107a0:	2100      	movs	r1, #0
 80107a2:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80107a6:	463c      	mov	r4, r7
 80107a8:	261f      	movs	r6, #31
 80107aa:	f10d 0c04 	add.w	ip, sp, #4
 80107ae:	fb94 fef3 	sdiv	lr, r4, r3
 80107b2:	fb03 441e 	mls	r4, r3, lr, r4
 80107b6:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80107ba:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80107be:	b2ec      	uxtb	r4, r5
 80107c0:	2d09      	cmp	r5, #9
 80107c2:	bfd4      	ite	le
 80107c4:	3430      	addle	r4, #48	; 0x30
 80107c6:	3457      	addgt	r4, #87	; 0x57
 80107c8:	b2e4      	uxtb	r4, r4
 80107ca:	f80c 4006 	strb.w	r4, [ip, r6]
 80107ce:	4674      	mov	r4, lr
 80107d0:	1e71      	subs	r1, r6, #1
 80107d2:	b96c      	cbnz	r4, 80107f0 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80107d4:	2f00      	cmp	r7, #0
 80107d6:	da05      	bge.n	80107e4 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80107d8:	ab0a      	add	r3, sp, #40	; 0x28
 80107da:	4419      	add	r1, r3
 80107dc:	232d      	movs	r3, #45	; 0x2d
 80107de:	f801 3c24 	strb.w	r3, [r1, #-36]
 80107e2:	1eb1      	subs	r1, r6, #2
 80107e4:	3101      	adds	r1, #1
 80107e6:	4461      	add	r1, ip
 80107e8:	f7ff ffa3 	bl	8010732 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80107ec:	b00b      	add	sp, #44	; 0x2c
 80107ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107f0:	460e      	mov	r6, r1
 80107f2:	e7dc      	b.n	80107ae <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080107f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80107f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107f8:	4691      	mov	r9, r2
 80107fa:	b085      	sub	sp, #20
 80107fc:	6802      	ldr	r2, [r0, #0]
 80107fe:	9201      	str	r2, [sp, #4]
 8010800:	4688      	mov	r8, r1
 8010802:	4683      	mov	fp, r0
 8010804:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8010808:	9103      	str	r1, [sp, #12]
 801080a:	4610      	mov	r0, r2
 801080c:	461c      	mov	r4, r3
 801080e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8010812:	9302      	str	r3, [sp, #8]
 8010814:	f7ff ff80 	bl	8010718 <_ZN8touchgfx7Unicode6strlenEPKt>
 8010818:	f1b8 0f00 	cmp.w	r8, #0
 801081c:	bf0c      	ite	eq
 801081e:	4684      	moveq	ip, r0
 8010820:	f100 0c01 	addne.w	ip, r0, #1
 8010824:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8010828:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801082c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801082e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010830:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8010834:	9903      	ldr	r1, [sp, #12]
 8010836:	fa1f fc8c 	uxth.w	ip, ip
 801083a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801083e:	d041      	beq.n	80108c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8010840:	d834      	bhi.n	80108ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8010842:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8010846:	d059      	beq.n	80108fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8010848:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801084c:	d03a      	beq.n	80108c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801084e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8010852:	d034      	beq.n	80108be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010854:	2400      	movs	r4, #0
 8010856:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801085a:	3a01      	subs	r2, #1
 801085c:	b169      	cbz	r1, 801087a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801085e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010860:	458c      	cmp	ip, r1
 8010862:	da09      	bge.n	8010878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010864:	eba1 010c 	sub.w	r1, r1, ip
 8010868:	b289      	uxth	r1, r1
 801086a:	b933      	cbnz	r3, 801087a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801086c:	2e00      	cmp	r6, #0
 801086e:	d051      	beq.n	8010914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010870:	2800      	cmp	r0, #0
 8010872:	d04f      	beq.n	8010914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010874:	440c      	add	r4, r1
 8010876:	b2a4      	uxth	r4, r4
 8010878:	2100      	movs	r1, #0
 801087a:	682b      	ldr	r3, [r5, #0]
 801087c:	4293      	cmp	r3, r2
 801087e:	da07      	bge.n	8010890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010880:	f1b8 0f00 	cmp.w	r8, #0
 8010884:	d004      	beq.n	8010890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8010886:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801088a:	682b      	ldr	r3, [r5, #0]
 801088c:	3301      	adds	r3, #1
 801088e:	602b      	str	r3, [r5, #0]
 8010890:	2730      	movs	r7, #48	; 0x30
 8010892:	2c00      	cmp	r4, #0
 8010894:	d04e      	beq.n	8010934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010896:	682e      	ldr	r6, [r5, #0]
 8010898:	3c01      	subs	r4, #1
 801089a:	42b2      	cmp	r2, r6
 801089c:	b2a4      	uxth	r4, r4
 801089e:	dd49      	ble.n	8010934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80108a0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80108a4:	682b      	ldr	r3, [r5, #0]
 80108a6:	3301      	adds	r3, #1
 80108a8:	602b      	str	r3, [r5, #0]
 80108aa:	e7f2      	b.n	8010892 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80108ac:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80108b0:	d01d      	beq.n	80108ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80108b2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80108b6:	d002      	beq.n	80108be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80108b8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80108bc:	e7c9      	b.n	8010852 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80108be:	4684      	mov	ip, r0
 80108c0:	f04f 0800 	mov.w	r8, #0
 80108c4:	2c00      	cmp	r4, #0
 80108c6:	d0c6      	beq.n	8010856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80108c8:	b947      	cbnz	r7, 80108dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80108ca:	2801      	cmp	r0, #1
 80108cc:	d106      	bne.n	80108dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80108ce:	8814      	ldrh	r4, [r2, #0]
 80108d0:	2c30      	cmp	r4, #48	; 0x30
 80108d2:	bf02      	ittt	eq
 80108d4:	3202      	addeq	r2, #2
 80108d6:	f8cb 2000 	streq.w	r2, [fp]
 80108da:	4638      	moveq	r0, r7
 80108dc:	45bc      	cmp	ip, r7
 80108de:	da14      	bge.n	801090a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80108e0:	b2bf      	uxth	r7, r7
 80108e2:	eba7 040c 	sub.w	r4, r7, ip
 80108e6:	b2a4      	uxth	r4, r4
 80108e8:	46bc      	mov	ip, r7
 80108ea:	2600      	movs	r6, #0
 80108ec:	e7b3      	b.n	8010856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80108ee:	4684      	mov	ip, r0
 80108f0:	b16c      	cbz	r4, 801090e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80108f2:	42b8      	cmp	r0, r7
 80108f4:	dd00      	ble.n	80108f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80108f6:	b2b8      	uxth	r0, r7
 80108f8:	2400      	movs	r4, #0
 80108fa:	e003      	b.n	8010904 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80108fc:	f04f 0c01 	mov.w	ip, #1
 8010900:	2400      	movs	r4, #0
 8010902:	4660      	mov	r0, ip
 8010904:	4626      	mov	r6, r4
 8010906:	46a0      	mov	r8, r4
 8010908:	e7a5      	b.n	8010856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801090a:	2400      	movs	r4, #0
 801090c:	e7ed      	b.n	80108ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801090e:	4626      	mov	r6, r4
 8010910:	46a0      	mov	r8, r4
 8010912:	e7a0      	b.n	8010856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010914:	2900      	cmp	r1, #0
 8010916:	d0b0      	beq.n	801087a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010918:	2720      	movs	r7, #32
 801091a:	682e      	ldr	r6, [r5, #0]
 801091c:	2900      	cmp	r1, #0
 801091e:	d0ac      	beq.n	801087a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010920:	3901      	subs	r1, #1
 8010922:	4296      	cmp	r6, r2
 8010924:	b289      	uxth	r1, r1
 8010926:	daa7      	bge.n	8010878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010928:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801092c:	682b      	ldr	r3, [r5, #0]
 801092e:	3301      	adds	r3, #1
 8010930:	602b      	str	r3, [r5, #0]
 8010932:	e7f2      	b.n	801091a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8010934:	b188      	cbz	r0, 801095a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010936:	682b      	ldr	r3, [r5, #0]
 8010938:	3801      	subs	r0, #1
 801093a:	429a      	cmp	r2, r3
 801093c:	b280      	uxth	r0, r0
 801093e:	dd0c      	ble.n	801095a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010940:	f8db 3000 	ldr.w	r3, [fp]
 8010944:	1c9c      	adds	r4, r3, #2
 8010946:	f8cb 4000 	str.w	r4, [fp]
 801094a:	881c      	ldrh	r4, [r3, #0]
 801094c:	682b      	ldr	r3, [r5, #0]
 801094e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8010952:	682b      	ldr	r3, [r5, #0]
 8010954:	3301      	adds	r3, #1
 8010956:	602b      	str	r3, [r5, #0]
 8010958:	e7ec      	b.n	8010934 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801095a:	2620      	movs	r6, #32
 801095c:	b151      	cbz	r1, 8010974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801095e:	6828      	ldr	r0, [r5, #0]
 8010960:	3901      	subs	r1, #1
 8010962:	4282      	cmp	r2, r0
 8010964:	b289      	uxth	r1, r1
 8010966:	dd05      	ble.n	8010974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010968:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801096c:	682b      	ldr	r3, [r5, #0]
 801096e:	3301      	adds	r3, #1
 8010970:	602b      	str	r3, [r5, #0]
 8010972:	e7f3      	b.n	801095c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8010974:	b005      	add	sp, #20
 8010976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801097a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801097a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801097e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8010982:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8010986:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801098a:	2400      	movs	r4, #0
 801098c:	8014      	strh	r4, [r2, #0]
 801098e:	701c      	strb	r4, [r3, #0]
 8010990:	f888 4000 	strb.w	r4, [r8]
 8010994:	f88c 4000 	strb.w	r4, [ip]
 8010998:	f88e 4000 	strb.w	r4, [lr]
 801099c:	703c      	strb	r4, [r7, #0]
 801099e:	6804      	ldr	r4, [r0, #0]
 80109a0:	b1a4      	cbz	r4, 80109cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80109a2:	8824      	ldrh	r4, [r4, #0]
 80109a4:	f04f 0901 	mov.w	r9, #1
 80109a8:	b314      	cbz	r4, 80109f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80109aa:	2c2b      	cmp	r4, #43	; 0x2b
 80109ac:	d001      	beq.n	80109b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80109ae:	2c20      	cmp	r4, #32
 80109b0:	d110      	bne.n	80109d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80109b2:	8014      	strh	r4, [r2, #0]
 80109b4:	6804      	ldr	r4, [r0, #0]
 80109b6:	b10c      	cbz	r4, 80109bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80109b8:	3402      	adds	r4, #2
 80109ba:	6004      	str	r4, [r0, #0]
 80109bc:	680c      	ldr	r4, [r1, #0]
 80109be:	b10c      	cbz	r4, 80109c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80109c0:	3401      	adds	r4, #1
 80109c2:	600c      	str	r4, [r1, #0]
 80109c4:	6804      	ldr	r4, [r0, #0]
 80109c6:	b17c      	cbz	r4, 80109e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80109c8:	8824      	ldrh	r4, [r4, #0]
 80109ca:	e7ed      	b.n	80109a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80109cc:	680c      	ldr	r4, [r1, #0]
 80109ce:	b17c      	cbz	r4, 80109f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80109d0:	7824      	ldrb	r4, [r4, #0]
 80109d2:	e7e7      	b.n	80109a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80109d4:	2c2d      	cmp	r4, #45	; 0x2d
 80109d6:	d102      	bne.n	80109de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80109d8:	f883 9000 	strb.w	r9, [r3]
 80109dc:	e7ea      	b.n	80109b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80109de:	2c23      	cmp	r4, #35	; 0x23
 80109e0:	d107      	bne.n	80109f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80109e2:	f888 9000 	strb.w	r9, [r8]
 80109e6:	e7e5      	b.n	80109b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80109e8:	680c      	ldr	r4, [r1, #0]
 80109ea:	b10c      	cbz	r4, 80109f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80109ec:	7824      	ldrb	r4, [r4, #0]
 80109ee:	e7db      	b.n	80109a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80109f0:	2400      	movs	r4, #0
 80109f2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80109f6:	2b09      	cmp	r3, #9
 80109f8:	d901      	bls.n	80109fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80109fa:	2c2a      	cmp	r4, #42	; 0x2a
 80109fc:	d122      	bne.n	8010a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80109fe:	2301      	movs	r3, #1
 8010a00:	2c30      	cmp	r4, #48	; 0x30
 8010a02:	f88e 3000 	strb.w	r3, [lr]
 8010a06:	d10d      	bne.n	8010a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010a08:	f88c 3000 	strb.w	r3, [ip]
 8010a0c:	6803      	ldr	r3, [r0, #0]
 8010a0e:	b10b      	cbz	r3, 8010a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010a10:	3302      	adds	r3, #2
 8010a12:	6003      	str	r3, [r0, #0]
 8010a14:	680b      	ldr	r3, [r1, #0]
 8010a16:	b10b      	cbz	r3, 8010a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8010a18:	3301      	adds	r3, #1
 8010a1a:	600b      	str	r3, [r1, #0]
 8010a1c:	6803      	ldr	r3, [r0, #0]
 8010a1e:	2b00      	cmp	r3, #0
 8010a20:	d02f      	beq.n	8010a82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8010a22:	881c      	ldrh	r4, [r3, #0]
 8010a24:	2c2a      	cmp	r4, #42	; 0x2a
 8010a26:	d135      	bne.n	8010a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010a28:	f04f 33ff 	mov.w	r3, #4294967295
 8010a2c:	6033      	str	r3, [r6, #0]
 8010a2e:	6803      	ldr	r3, [r0, #0]
 8010a30:	b10b      	cbz	r3, 8010a36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8010a32:	3302      	adds	r3, #2
 8010a34:	6003      	str	r3, [r0, #0]
 8010a36:	680b      	ldr	r3, [r1, #0]
 8010a38:	b10b      	cbz	r3, 8010a3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8010a3a:	3301      	adds	r3, #1
 8010a3c:	600b      	str	r3, [r1, #0]
 8010a3e:	6803      	ldr	r3, [r0, #0]
 8010a40:	b31b      	cbz	r3, 8010a8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8010a42:	881c      	ldrh	r4, [r3, #0]
 8010a44:	2c2e      	cmp	r4, #46	; 0x2e
 8010a46:	d11a      	bne.n	8010a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010a48:	2301      	movs	r3, #1
 8010a4a:	703b      	strb	r3, [r7, #0]
 8010a4c:	6803      	ldr	r3, [r0, #0]
 8010a4e:	b10b      	cbz	r3, 8010a54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8010a50:	3302      	adds	r3, #2
 8010a52:	6003      	str	r3, [r0, #0]
 8010a54:	680b      	ldr	r3, [r1, #0]
 8010a56:	b10b      	cbz	r3, 8010a5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8010a58:	3301      	adds	r3, #1
 8010a5a:	600b      	str	r3, [r1, #0]
 8010a5c:	6803      	ldr	r3, [r0, #0]
 8010a5e:	2b00      	cmp	r3, #0
 8010a60:	d036      	beq.n	8010ad0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8010a62:	881b      	ldrh	r3, [r3, #0]
 8010a64:	2b2a      	cmp	r3, #42	; 0x2a
 8010a66:	d137      	bne.n	8010ad8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010a68:	f04f 33ff 	mov.w	r3, #4294967295
 8010a6c:	602b      	str	r3, [r5, #0]
 8010a6e:	6803      	ldr	r3, [r0, #0]
 8010a70:	b10b      	cbz	r3, 8010a76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8010a72:	3302      	adds	r3, #2
 8010a74:	6003      	str	r3, [r0, #0]
 8010a76:	680b      	ldr	r3, [r1, #0]
 8010a78:	b10b      	cbz	r3, 8010a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010a7a:	3301      	adds	r3, #1
 8010a7c:	600b      	str	r3, [r1, #0]
 8010a7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a82:	680c      	ldr	r4, [r1, #0]
 8010a84:	b134      	cbz	r4, 8010a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010a86:	7824      	ldrb	r4, [r4, #0]
 8010a88:	e7cc      	b.n	8010a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010a8a:	680b      	ldr	r3, [r1, #0]
 8010a8c:	2b00      	cmp	r3, #0
 8010a8e:	d0f6      	beq.n	8010a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010a90:	781c      	ldrb	r4, [r3, #0]
 8010a92:	e7d7      	b.n	8010a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010a94:	2300      	movs	r3, #0
 8010a96:	6033      	str	r3, [r6, #0]
 8010a98:	220a      	movs	r2, #10
 8010a9a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8010a9e:	fa1f f38c 	uxth.w	r3, ip
 8010aa2:	2b09      	cmp	r3, #9
 8010aa4:	d8ce      	bhi.n	8010a44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010aa6:	6833      	ldr	r3, [r6, #0]
 8010aa8:	fb02 c303 	mla	r3, r2, r3, ip
 8010aac:	6033      	str	r3, [r6, #0]
 8010aae:	6803      	ldr	r3, [r0, #0]
 8010ab0:	b10b      	cbz	r3, 8010ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8010ab2:	3302      	adds	r3, #2
 8010ab4:	6003      	str	r3, [r0, #0]
 8010ab6:	680b      	ldr	r3, [r1, #0]
 8010ab8:	b10b      	cbz	r3, 8010abe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8010aba:	3301      	adds	r3, #1
 8010abc:	600b      	str	r3, [r1, #0]
 8010abe:	6803      	ldr	r3, [r0, #0]
 8010ac0:	b10b      	cbz	r3, 8010ac6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8010ac2:	881c      	ldrh	r4, [r3, #0]
 8010ac4:	e7e9      	b.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010ac6:	680c      	ldr	r4, [r1, #0]
 8010ac8:	2c00      	cmp	r4, #0
 8010aca:	d0e6      	beq.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010acc:	7824      	ldrb	r4, [r4, #0]
 8010ace:	e7e4      	b.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010ad0:	680b      	ldr	r3, [r1, #0]
 8010ad2:	b10b      	cbz	r3, 8010ad8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010ad4:	781b      	ldrb	r3, [r3, #0]
 8010ad6:	e7c5      	b.n	8010a64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8010ad8:	2200      	movs	r2, #0
 8010ada:	602a      	str	r2, [r5, #0]
 8010adc:	240a      	movs	r4, #10
 8010ade:	3b30      	subs	r3, #48	; 0x30
 8010ae0:	b29e      	uxth	r6, r3
 8010ae2:	2e09      	cmp	r6, #9
 8010ae4:	682a      	ldr	r2, [r5, #0]
 8010ae6:	d813      	bhi.n	8010b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8010ae8:	fb04 3302 	mla	r3, r4, r2, r3
 8010aec:	602b      	str	r3, [r5, #0]
 8010aee:	6803      	ldr	r3, [r0, #0]
 8010af0:	b10b      	cbz	r3, 8010af6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8010af2:	3302      	adds	r3, #2
 8010af4:	6003      	str	r3, [r0, #0]
 8010af6:	680b      	ldr	r3, [r1, #0]
 8010af8:	b10b      	cbz	r3, 8010afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8010afa:	3301      	adds	r3, #1
 8010afc:	600b      	str	r3, [r1, #0]
 8010afe:	6803      	ldr	r3, [r0, #0]
 8010b00:	b10b      	cbz	r3, 8010b06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8010b02:	881b      	ldrh	r3, [r3, #0]
 8010b04:	e7eb      	b.n	8010ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b06:	680b      	ldr	r3, [r1, #0]
 8010b08:	2b00      	cmp	r3, #0
 8010b0a:	d0e8      	beq.n	8010ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b0c:	781b      	ldrb	r3, [r3, #0]
 8010b0e:	e7e6      	b.n	8010ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b10:	2a06      	cmp	r2, #6
 8010b12:	bfa8      	it	ge
 8010b14:	2206      	movge	r2, #6
 8010b16:	602a      	str	r2, [r5, #0]
 8010b18:	e7b1      	b.n	8010a7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08010b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8010b1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b1e:	b0a3      	sub	sp, #140	; 0x8c
 8010b20:	2600      	movs	r6, #0
 8010b22:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8010b26:	4607      	mov	r7, r0
 8010b28:	4688      	mov	r8, r1
 8010b2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8010b2e:	4631      	mov	r1, r6
 8010b30:	2242      	movs	r2, #66	; 0x42
 8010b32:	4648      	mov	r0, r9
 8010b34:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8010b36:	960d      	str	r6, [sp, #52]	; 0x34
 8010b38:	f00c fab8 	bl	801d0ac <memset>
 8010b3c:	b15f      	cbz	r7, 8010b56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8010b3e:	f108 3aff 	add.w	sl, r8, #4294967295
 8010b42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010b44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010b46:	b152      	cbz	r2, 8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8010b48:	8812      	ldrh	r2, [r2, #0]
 8010b4a:	b10a      	cbz	r2, 8010b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010b4c:	459a      	cmp	sl, r3
 8010b4e:	dc2e      	bgt.n	8010bae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8010b50:	2200      	movs	r2, #0
 8010b52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010b56:	4638      	mov	r0, r7
 8010b58:	b023      	add	sp, #140	; 0x8c
 8010b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b5e:	9a08      	ldr	r2, [sp, #32]
 8010b60:	2a00      	cmp	r2, #0
 8010b62:	d0f5      	beq.n	8010b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010b64:	7812      	ldrb	r2, [r2, #0]
 8010b66:	e7f0      	b.n	8010b4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8010b68:	2d00      	cmp	r5, #0
 8010b6a:	d0ea      	beq.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b6c:	782a      	ldrb	r2, [r5, #0]
 8010b6e:	b142      	cbz	r2, 8010b82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8010b70:	2a25      	cmp	r2, #37	; 0x25
 8010b72:	d001      	beq.n	8010b78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8010b74:	459a      	cmp	sl, r3
 8010b76:	dc08      	bgt.n	8010b8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010b78:	f1bb 0f00 	cmp.w	fp, #0
 8010b7c:	d121      	bne.n	8010bc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8010b7e:	2d00      	cmp	r5, #0
 8010b80:	d0df      	beq.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b82:	782a      	ldrb	r2, [r5, #0]
 8010b84:	f04f 0b00 	mov.w	fp, #0
 8010b88:	e01d      	b.n	8010bc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8010b8a:	f1bb 0f00 	cmp.w	fp, #0
 8010b8e:	d078      	beq.n	8010c82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8010b90:	f8bb 2000 	ldrh.w	r2, [fp]
 8010b94:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010b98:	f1bb 0f00 	cmp.w	fp, #0
 8010b9c:	d002      	beq.n	8010ba4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8010b9e:	f10b 0202 	add.w	r2, fp, #2
 8010ba2:	9209      	str	r2, [sp, #36]	; 0x24
 8010ba4:	b10d      	cbz	r5, 8010baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8010ba6:	3501      	adds	r5, #1
 8010ba8:	9508      	str	r5, [sp, #32]
 8010baa:	3301      	adds	r3, #1
 8010bac:	930d      	str	r3, [sp, #52]	; 0x34
 8010bae:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8010bb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010bb4:	f1bb 0f00 	cmp.w	fp, #0
 8010bb8:	d0d6      	beq.n	8010b68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8010bba:	f8bb 2000 	ldrh.w	r2, [fp]
 8010bbe:	2a00      	cmp	r2, #0
 8010bc0:	d1d6      	bne.n	8010b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8010bc2:	f8bb 2000 	ldrh.w	r2, [fp]
 8010bc6:	2a00      	cmp	r2, #0
 8010bc8:	d0bb      	beq.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010bca:	459a      	cmp	sl, r3
 8010bcc:	ddb9      	ble.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010bce:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8010bd2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8010bd6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8010bda:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8010bde:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8010be2:	960e      	str	r6, [sp, #56]	; 0x38
 8010be4:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8010be8:	960f      	str	r6, [sp, #60]	; 0x3c
 8010bea:	f1bb 0f00 	cmp.w	fp, #0
 8010bee:	d002      	beq.n	8010bf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8010bf0:	f10b 0302 	add.w	r3, fp, #2
 8010bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8010bf6:	b10d      	cbz	r5, 8010bfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8010bf8:	1c6b      	adds	r3, r5, #1
 8010bfa:	9308      	str	r3, [sp, #32]
 8010bfc:	ab0f      	add	r3, sp, #60	; 0x3c
 8010bfe:	9305      	str	r3, [sp, #20]
 8010c00:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8010c04:	9304      	str	r3, [sp, #16]
 8010c06:	ab0e      	add	r3, sp, #56	; 0x38
 8010c08:	9303      	str	r3, [sp, #12]
 8010c0a:	ab0c      	add	r3, sp, #48	; 0x30
 8010c0c:	9302      	str	r3, [sp, #8]
 8010c0e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8010c12:	9301      	str	r3, [sp, #4]
 8010c14:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010c18:	9300      	str	r3, [sp, #0]
 8010c1a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8010c1e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8010c22:	a908      	add	r1, sp, #32
 8010c24:	a809      	add	r0, sp, #36	; 0x24
 8010c26:	f7ff fea8 	bl	801097a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8010c2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c2c:	2b00      	cmp	r3, #0
 8010c2e:	bfbe      	ittt	lt
 8010c30:	6823      	ldrlt	r3, [r4, #0]
 8010c32:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010c36:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010c38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010c3a:	bfb8      	it	lt
 8010c3c:	3404      	addlt	r4, #4
 8010c3e:	2b00      	cmp	r3, #0
 8010c40:	bfb8      	it	lt
 8010c42:	6823      	ldrlt	r3, [r4, #0]
 8010c44:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010c48:	bfbe      	ittt	lt
 8010c4a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010c4e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8010c50:	3404      	addlt	r4, #4
 8010c52:	b1d9      	cbz	r1, 8010c8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8010c54:	880b      	ldrh	r3, [r1, #0]
 8010c56:	2b69      	cmp	r3, #105	; 0x69
 8010c58:	d01f      	beq.n	8010c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010c5a:	d82f      	bhi.n	8010cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8010c5c:	2b58      	cmp	r3, #88	; 0x58
 8010c5e:	d01c      	beq.n	8010c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010c60:	d818      	bhi.n	8010c94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8010c62:	2b25      	cmp	r3, #37	; 0x25
 8010c64:	d034      	beq.n	8010cd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8010c66:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8010c6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c6c:	f1bb 0f00 	cmp.w	fp, #0
 8010c70:	f000 80b8 	beq.w	8010de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8010c74:	f8bb 5000 	ldrh.w	r5, [fp]
 8010c78:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8010c7c:	3301      	adds	r3, #1
 8010c7e:	930d      	str	r3, [sp, #52]	; 0x34
 8010c80:	e029      	b.n	8010cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8010c82:	b10d      	cbz	r5, 8010c88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8010c84:	782a      	ldrb	r2, [r5, #0]
 8010c86:	e785      	b.n	8010b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010c88:	462a      	mov	r2, r5
 8010c8a:	e783      	b.n	8010b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010c8c:	2a00      	cmp	r2, #0
 8010c8e:	d0ea      	beq.n	8010c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8010c90:	7813      	ldrb	r3, [r2, #0]
 8010c92:	e7e0      	b.n	8010c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8010c94:	3b63      	subs	r3, #99	; 0x63
 8010c96:	2b01      	cmp	r3, #1
 8010c98:	d8e5      	bhi.n	8010c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8010c9a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8010c9e:	b329      	cbz	r1, 8010cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8010ca0:	880b      	ldrh	r3, [r1, #0]
 8010ca2:	2b69      	cmp	r3, #105	; 0x69
 8010ca4:	d063      	beq.n	8010d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8010ca6:	d825      	bhi.n	8010cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8010ca8:	2b63      	cmp	r3, #99	; 0x63
 8010caa:	d038      	beq.n	8010d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8010cac:	2b64      	cmp	r3, #100	; 0x64
 8010cae:	d05e      	beq.n	8010d6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8010cb0:	2b58      	cmp	r3, #88	; 0x58
 8010cb2:	d07b      	beq.n	8010dac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8010cb4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8010cb8:	4625      	mov	r5, r4
 8010cba:	e036      	b.n	8010d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8010cbc:	2b73      	cmp	r3, #115	; 0x73
 8010cbe:	d0ec      	beq.n	8010c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010cc0:	d802      	bhi.n	8010cc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8010cc2:	2b6f      	cmp	r3, #111	; 0x6f
 8010cc4:	d1cf      	bne.n	8010c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8010cc6:	e7e8      	b.n	8010c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010cc8:	2b75      	cmp	r3, #117	; 0x75
 8010cca:	d0e6      	beq.n	8010c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8010ccc:	2b78      	cmp	r3, #120	; 0x78
 8010cce:	e7f9      	b.n	8010cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8010cd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010cd2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8010cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010cd8:	b10b      	cbz	r3, 8010cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8010cda:	3302      	adds	r3, #2
 8010cdc:	9309      	str	r3, [sp, #36]	; 0x24
 8010cde:	9b08      	ldr	r3, [sp, #32]
 8010ce0:	2b00      	cmp	r3, #0
 8010ce2:	f43f af2e 	beq.w	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010ce6:	3301      	adds	r3, #1
 8010ce8:	9308      	str	r3, [sp, #32]
 8010cea:	e72a      	b.n	8010b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010cec:	2a00      	cmp	r2, #0
 8010cee:	d0e1      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8010cf0:	7813      	ldrb	r3, [r2, #0]
 8010cf2:	e7d6      	b.n	8010ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8010cf4:	2b73      	cmp	r3, #115	; 0x73
 8010cf6:	d036      	beq.n	8010d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8010cf8:	d807      	bhi.n	8010d0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8010cfa:	2b6f      	cmp	r3, #111	; 0x6f
 8010cfc:	d1da      	bne.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8010cfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d00:	1d25      	adds	r5, r4, #4
 8010d02:	eba8 0202 	sub.w	r2, r8, r2
 8010d06:	2308      	movs	r3, #8
 8010d08:	e04a      	b.n	8010da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8010d0a:	2b75      	cmp	r3, #117	; 0x75
 8010d0c:	d043      	beq.n	8010d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8010d0e:	2b78      	cmp	r3, #120	; 0x78
 8010d10:	d1d0      	bne.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8010d12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d14:	1d25      	adds	r5, r4, #4
 8010d16:	eba8 0202 	sub.w	r2, r8, r2
 8010d1a:	2310      	movs	r3, #16
 8010d1c:	e040      	b.n	8010da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8010d1e:	7823      	ldrb	r3, [r4, #0]
 8010d20:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8010d24:	1d25      	adds	r5, r4, #4
 8010d26:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8010d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010d2c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8010d30:	2b00      	cmp	r3, #0
 8010d32:	d052      	beq.n	8010dda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8010d34:	881a      	ldrh	r2, [r3, #0]
 8010d36:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8010d3a:	a80d      	add	r0, sp, #52	; 0x34
 8010d3c:	9005      	str	r0, [sp, #20]
 8010d3e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8010d42:	9004      	str	r0, [sp, #16]
 8010d44:	980e      	ldr	r0, [sp, #56]	; 0x38
 8010d46:	9003      	str	r0, [sp, #12]
 8010d48:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8010d4c:	9002      	str	r0, [sp, #8]
 8010d4e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010d50:	9001      	str	r0, [sp, #4]
 8010d52:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8010d56:	9000      	str	r0, [sp, #0]
 8010d58:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8010d5c:	a810      	add	r0, sp, #64	; 0x40
 8010d5e:	f7ff fd49 	bl	80107f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010d62:	462c      	mov	r4, r5
 8010d64:	e7b7      	b.n	8010cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8010d66:	6823      	ldr	r3, [r4, #0]
 8010d68:	1d25      	adds	r5, r4, #4
 8010d6a:	9310      	str	r3, [sp, #64]	; 0x40
 8010d6c:	e7dd      	b.n	8010d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8010d6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d70:	6820      	ldr	r0, [r4, #0]
 8010d72:	eba8 0202 	sub.w	r2, r8, r2
 8010d76:	230a      	movs	r3, #10
 8010d78:	b292      	uxth	r2, r2
 8010d7a:	4649      	mov	r1, r9
 8010d7c:	f7ff fd08 	bl	8010790 <_ZN8touchgfx7Unicode4itoaElPtti>
 8010d80:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010d84:	2b2d      	cmp	r3, #45	; 0x2d
 8010d86:	f104 0504 	add.w	r5, r4, #4
 8010d8a:	d1ce      	bne.n	8010d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8010d8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010d90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d92:	3302      	adds	r3, #2
 8010d94:	e7e9      	b.n	8010d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8010d96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d98:	1d25      	adds	r5, r4, #4
 8010d9a:	eba8 0202 	sub.w	r2, r8, r2
 8010d9e:	230a      	movs	r3, #10
 8010da0:	b292      	uxth	r2, r2
 8010da2:	4649      	mov	r1, r9
 8010da4:	6820      	ldr	r0, [r4, #0]
 8010da6:	f7ff fcd5 	bl	8010754 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8010daa:	e7be      	b.n	8010d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8010dac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010dae:	6820      	ldr	r0, [r4, #0]
 8010db0:	eba8 0202 	sub.w	r2, r8, r2
 8010db4:	b292      	uxth	r2, r2
 8010db6:	2310      	movs	r3, #16
 8010db8:	4649      	mov	r1, r9
 8010dba:	f7ff fccb 	bl	8010754 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8010dbe:	1d25      	adds	r5, r4, #4
 8010dc0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8010dc4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8010dc8:	2b00      	cmp	r3, #0
 8010dca:	d0ae      	beq.n	8010d2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8010dcc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8010dd0:	2919      	cmp	r1, #25
 8010dd2:	d8f7      	bhi.n	8010dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8010dd4:	3b20      	subs	r3, #32
 8010dd6:	8013      	strh	r3, [r2, #0]
 8010dd8:	e7f4      	b.n	8010dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8010dda:	9a08      	ldr	r2, [sp, #32]
 8010ddc:	2a00      	cmp	r2, #0
 8010dde:	d0aa      	beq.n	8010d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8010de0:	7812      	ldrb	r2, [r2, #0]
 8010de2:	e7a8      	b.n	8010d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8010de4:	2d00      	cmp	r5, #0
 8010de6:	f43f af47 	beq.w	8010c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8010dea:	782d      	ldrb	r5, [r5, #0]
 8010dec:	e744      	b.n	8010c78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08010dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8010dee:	b507      	push	{r0, r1, r2, lr}
 8010df0:	9300      	str	r3, [sp, #0]
 8010df2:	4613      	mov	r3, r2
 8010df4:	2200      	movs	r2, #0
 8010df6:	f7ff fe90 	bl	8010b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8010dfa:	b003      	add	sp, #12
 8010dfc:	f85d fb04 	ldr.w	pc, [sp], #4

08010e00 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010e00:	b40c      	push	{r2, r3}
 8010e02:	b507      	push	{r0, r1, r2, lr}
 8010e04:	ab04      	add	r3, sp, #16
 8010e06:	f853 2b04 	ldr.w	r2, [r3], #4
 8010e0a:	9301      	str	r3, [sp, #4]
 8010e0c:	f7ff ffef 	bl	8010dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010e10:	b003      	add	sp, #12
 8010e12:	f85d eb04 	ldr.w	lr, [sp], #4
 8010e16:	b002      	add	sp, #8
 8010e18:	4770      	bx	lr
	...

08010e1c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010e1c:	4b01      	ldr	r3, [pc, #4]	; (8010e24 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010e1e:	6018      	str	r0, [r3, #0]
 8010e20:	4770      	bx	lr
 8010e22:	bf00      	nop
 8010e24:	20012e24 	.word	0x20012e24

08010e28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010e28:	4b06      	ldr	r3, [pc, #24]	; (8010e44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010e2a:	881a      	ldrh	r2, [r3, #0]
 8010e2c:	4282      	cmp	r2, r0
 8010e2e:	d807      	bhi.n	8010e40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010e30:	4b05      	ldr	r3, [pc, #20]	; (8010e48 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010e32:	881b      	ldrh	r3, [r3, #0]
 8010e34:	4413      	add	r3, r2
 8010e36:	4298      	cmp	r0, r3
 8010e38:	bfac      	ite	ge
 8010e3a:	2000      	movge	r0, #0
 8010e3c:	2001      	movlt	r0, #1
 8010e3e:	4770      	bx	lr
 8010e40:	2000      	movs	r0, #0
 8010e42:	4770      	bx	lr
 8010e44:	20012e44 	.word	0x20012e44
 8010e48:	20012e48 	.word	0x20012e48

08010e4c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010e4c:	b508      	push	{r3, lr}
 8010e4e:	4601      	mov	r1, r0
 8010e50:	f7ff ffea 	bl	8010e28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010e54:	b118      	cbz	r0, 8010e5e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010e56:	4b02      	ldr	r3, [pc, #8]	; (8010e60 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010e58:	681b      	ldr	r3, [r3, #0]
 8010e5a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010e5e:	bd08      	pop	{r3, pc}
 8010e60:	20012e28 	.word	0x20012e28

08010e64 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010e64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e68:	4d28      	ldr	r5, [pc, #160]	; (8010f0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010e6a:	682b      	ldr	r3, [r5, #0]
 8010e6c:	2b00      	cmp	r3, #0
 8010e6e:	d04a      	beq.n	8010f06 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8010e70:	4a27      	ldr	r2, [pc, #156]	; (8010f10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010e72:	4e28      	ldr	r6, [pc, #160]	; (8010f14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010e74:	8810      	ldrh	r0, [r2, #0]
 8010e76:	f8b6 8000 	ldrh.w	r8, [r6]
 8010e7a:	4c27      	ldr	r4, [pc, #156]	; (8010f18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010e7c:	4f27      	ldr	r7, [pc, #156]	; (8010f1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010e7e:	4440      	add	r0, r8
 8010e80:	1c41      	adds	r1, r0, #1
 8010e82:	f021 0101 	bic.w	r1, r1, #1
 8010e86:	0409      	lsls	r1, r1, #16
 8010e88:	0c09      	lsrs	r1, r1, #16
 8010e8a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8010e8e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8010e92:	eb03 020e 	add.w	r2, r3, lr
 8010e96:	eb0e 010c 	add.w	r1, lr, ip
 8010e9a:	6022      	str	r2, [r4, #0]
 8010e9c:	185a      	adds	r2, r3, r1
 8010e9e:	603a      	str	r2, [r7, #0]
 8010ea0:	220e      	movs	r2, #14
 8010ea2:	fb02 f208 	mul.w	r2, r2, r8
 8010ea6:	3203      	adds	r2, #3
 8010ea8:	f022 0203 	bic.w	r2, r2, #3
 8010eac:	4411      	add	r1, r2
 8010eae:	440b      	add	r3, r1
 8010eb0:	491b      	ldr	r1, [pc, #108]	; (8010f20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8010eb2:	600b      	str	r3, [r1, #0]
 8010eb4:	491b      	ldr	r1, [pc, #108]	; (8010f24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8010eb6:	2300      	movs	r3, #0
 8010eb8:	800b      	strh	r3, [r1, #0]
 8010eba:	491b      	ldr	r1, [pc, #108]	; (8010f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 8010ebc:	6809      	ldr	r1, [r1, #0]
 8010ebe:	eba1 010e 	sub.w	r1, r1, lr
 8010ec2:	eba1 010c 	sub.w	r1, r1, ip
 8010ec6:	1a8a      	subs	r2, r1, r2
 8010ec8:	4918      	ldr	r1, [pc, #96]	; (8010f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 8010eca:	600a      	str	r2, [r1, #0]
 8010ecc:	4a18      	ldr	r2, [pc, #96]	; (8010f30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 8010ece:	469c      	mov	ip, r3
 8010ed0:	8013      	strh	r3, [r2, #0]
 8010ed2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010ed6:	4283      	cmp	r3, r0
 8010ed8:	d10d      	bne.n	8010ef6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 8010eda:	8835      	ldrh	r5, [r6, #0]
 8010edc:	6838      	ldr	r0, [r7, #0]
 8010ede:	2300      	movs	r3, #0
 8010ee0:	240e      	movs	r4, #14
 8010ee2:	429d      	cmp	r5, r3
 8010ee4:	d90f      	bls.n	8010f06 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8010ee6:	fb04 0203 	mla	r2, r4, r3, r0
 8010eea:	3301      	adds	r3, #1
 8010eec:	7b11      	ldrb	r1, [r2, #12]
 8010eee:	f36f 1145 	bfc	r1, #5, #1
 8010ef2:	7311      	strb	r1, [r2, #12]
 8010ef4:	e7f5      	b.n	8010ee2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8010ef6:	682a      	ldr	r2, [r5, #0]
 8010ef8:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010efc:	6822      	ldr	r2, [r4, #0]
 8010efe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8010f02:	3301      	adds	r3, #1
 8010f04:	e7e7      	b.n	8010ed6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 8010f06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f0a:	bf00      	nop
 8010f0c:	20012e28 	.word	0x20012e28
 8010f10:	20012e44 	.word	0x20012e44
 8010f14:	20012e48 	.word	0x20012e48
 8010f18:	20012e3c 	.word	0x20012e3c
 8010f1c:	20012e2c 	.word	0x20012e2c
 8010f20:	20012e34 	.word	0x20012e34
 8010f24:	20012e46 	.word	0x20012e46
 8010f28:	20012e30 	.word	0x20012e30
 8010f2c:	20012e40 	.word	0x20012e40
 8010f30:	20012e38 	.word	0x20012e38

08010f34 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010f34:	b510      	push	{r4, lr}
 8010f36:	4b10      	ldr	r3, [pc, #64]	; (8010f78 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8010f38:	681b      	ldr	r3, [r3, #0]
 8010f3a:	b9db      	cbnz	r3, 8010f74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010f3c:	b1d1      	cbz	r1, 8010f74 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010f3e:	4b0f      	ldr	r3, [pc, #60]	; (8010f7c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8010f40:	801a      	strh	r2, [r3, #0]
 8010f42:	4b0f      	ldr	r3, [pc, #60]	; (8010f80 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8010f44:	881b      	ldrh	r3, [r3, #0]
 8010f46:	b292      	uxth	r2, r2
 8010f48:	240e      	movs	r4, #14
 8010f4a:	4413      	add	r3, r2
 8010f4c:	4362      	muls	r2, r4
 8010f4e:	2406      	movs	r4, #6
 8010f50:	fb04 2203 	mla	r2, r4, r3, r2
 8010f54:	428a      	cmp	r2, r1
 8010f56:	d305      	bcc.n	8010f64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8010f58:	4b0a      	ldr	r3, [pc, #40]	; (8010f84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8010f5a:	4a0b      	ldr	r2, [pc, #44]	; (8010f88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8010f5c:	480b      	ldr	r0, [pc, #44]	; (8010f8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8010f5e:	2135      	movs	r1, #53	; 0x35
 8010f60:	f00b ff1a 	bl	801cd98 <__assert_func>
 8010f64:	4b0a      	ldr	r3, [pc, #40]	; (8010f90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8010f66:	6019      	str	r1, [r3, #0]
 8010f68:	4b0a      	ldr	r3, [pc, #40]	; (8010f94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8010f6a:	6018      	str	r0, [r3, #0]
 8010f6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f70:	f7ff bf78 	b.w	8010e64 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010f74:	bd10      	pop	{r4, pc}
 8010f76:	bf00      	nop
 8010f78:	20012e34 	.word	0x20012e34
 8010f7c:	20012e48 	.word	0x20012e48
 8010f80:	20012e44 	.word	0x20012e44
 8010f84:	08020fe2 	.word	0x08020fe2
 8010f88:	0802103b 	.word	0x0802103b
 8010f8c:	08020fbd 	.word	0x08020fbd
 8010f90:	20012e30 	.word	0x20012e30
 8010f94:	20012e28 	.word	0x20012e28

08010f98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010f98:	b470      	push	{r4, r5, r6}
 8010f9a:	4c07      	ldr	r4, [pc, #28]	; (8010fb8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010f9c:	6826      	ldr	r6, [r4, #0]
 8010f9e:	4605      	mov	r5, r0
 8010fa0:	4610      	mov	r0, r2
 8010fa2:	9a03      	ldr	r2, [sp, #12]
 8010fa4:	b936      	cbnz	r6, 8010fb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010fa6:	6025      	str	r5, [r4, #0]
 8010fa8:	4c04      	ldr	r4, [pc, #16]	; (8010fbc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010faa:	8021      	strh	r1, [r4, #0]
 8010fac:	bc70      	pop	{r4, r5, r6}
 8010fae:	4619      	mov	r1, r3
 8010fb0:	f7ff bfc0 	b.w	8010f34 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010fb4:	bc70      	pop	{r4, r5, r6}
 8010fb6:	4770      	bx	lr
 8010fb8:	20012e4c 	.word	0x20012e4c
 8010fbc:	20012e44 	.word	0x20012e44

08010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010fc0:	b508      	push	{r3, lr}
 8010fc2:	4b14      	ldr	r3, [pc, #80]	; (8011014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010fc4:	6819      	ldr	r1, [r3, #0]
 8010fc6:	b931      	cbnz	r1, 8010fd6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8010fc8:	4b13      	ldr	r3, [pc, #76]	; (8011018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010fca:	4a14      	ldr	r2, [pc, #80]	; (801101c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010fcc:	4814      	ldr	r0, [pc, #80]	; (8011020 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010fce:	f240 4186 	movw	r1, #1158	; 0x486
 8010fd2:	f00b fee1 	bl	801cd98 <__assert_func>
 8010fd6:	4a13      	ldr	r2, [pc, #76]	; (8011024 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010fd8:	8803      	ldrh	r3, [r0, #0]
 8010fda:	8812      	ldrh	r2, [r2, #0]
 8010fdc:	4293      	cmp	r3, r2
 8010fde:	d204      	bcs.n	8010fea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8010fe0:	2214      	movs	r2, #20
 8010fe2:	fb02 1303 	mla	r3, r2, r3, r1
 8010fe6:	8918      	ldrh	r0, [r3, #8]
 8010fe8:	bd08      	pop	{r3, pc}
 8010fea:	490f      	ldr	r1, [pc, #60]	; (8011028 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010fec:	8809      	ldrh	r1, [r1, #0]
 8010fee:	4411      	add	r1, r2
 8010ff0:	428b      	cmp	r3, r1
 8010ff2:	da06      	bge.n	8011002 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8010ff4:	1a9b      	subs	r3, r3, r2
 8010ff6:	4a0d      	ldr	r2, [pc, #52]	; (801102c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8010ff8:	6812      	ldr	r2, [r2, #0]
 8010ffa:	210e      	movs	r1, #14
 8010ffc:	fb01 2303 	mla	r3, r1, r3, r2
 8011000:	e7f1      	b.n	8010fe6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8011002:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011006:	4293      	cmp	r3, r2
 8011008:	bf0a      	itet	eq
 801100a:	4b09      	ldreq	r3, [pc, #36]	; (8011030 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801100c:	2000      	movne	r0, #0
 801100e:	8818      	ldrheq	r0, [r3, #0]
 8011010:	e7ea      	b.n	8010fe8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8011012:	bf00      	nop
 8011014:	20012e4c 	.word	0x20012e4c
 8011018:	0801f4d0 	.word	0x0801f4d0
 801101c:	080210e8 	.word	0x080210e8
 8011020:	08020fbd 	.word	0x08020fbd
 8011024:	20012e44 	.word	0x20012e44
 8011028:	20012e48 	.word	0x20012e48
 801102c:	20012e2c 	.word	0x20012e2c
 8011030:	20012db8 	.word	0x20012db8

08011034 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011034:	b508      	push	{r3, lr}
 8011036:	4b14      	ldr	r3, [pc, #80]	; (8011088 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8011038:	6819      	ldr	r1, [r3, #0]
 801103a:	b931      	cbnz	r1, 801104a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801103c:	4b13      	ldr	r3, [pc, #76]	; (801108c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801103e:	4a14      	ldr	r2, [pc, #80]	; (8011090 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8011040:	4814      	ldr	r0, [pc, #80]	; (8011094 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011042:	f240 419a 	movw	r1, #1178	; 0x49a
 8011046:	f00b fea7 	bl	801cd98 <__assert_func>
 801104a:	4a13      	ldr	r2, [pc, #76]	; (8011098 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801104c:	8803      	ldrh	r3, [r0, #0]
 801104e:	8812      	ldrh	r2, [r2, #0]
 8011050:	4293      	cmp	r3, r2
 8011052:	d204      	bcs.n	801105e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8011054:	2214      	movs	r2, #20
 8011056:	fb02 1303 	mla	r3, r2, r3, r1
 801105a:	8958      	ldrh	r0, [r3, #10]
 801105c:	bd08      	pop	{r3, pc}
 801105e:	490f      	ldr	r1, [pc, #60]	; (801109c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8011060:	8809      	ldrh	r1, [r1, #0]
 8011062:	4411      	add	r1, r2
 8011064:	428b      	cmp	r3, r1
 8011066:	da06      	bge.n	8011076 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8011068:	1a9b      	subs	r3, r3, r2
 801106a:	4a0d      	ldr	r2, [pc, #52]	; (80110a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801106c:	6812      	ldr	r2, [r2, #0]
 801106e:	210e      	movs	r1, #14
 8011070:	fb01 2303 	mla	r3, r1, r3, r2
 8011074:	e7f1      	b.n	801105a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8011076:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801107a:	4293      	cmp	r3, r2
 801107c:	bf0a      	itet	eq
 801107e:	4b09      	ldreq	r3, [pc, #36]	; (80110a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8011080:	2000      	movne	r0, #0
 8011082:	8818      	ldrheq	r0, [r3, #0]
 8011084:	e7ea      	b.n	801105c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8011086:	bf00      	nop
 8011088:	20012e4c 	.word	0x20012e4c
 801108c:	0801f4d0 	.word	0x0801f4d0
 8011090:	08021114 	.word	0x08021114
 8011094:	08020fbd 	.word	0x08020fbd
 8011098:	20012e44 	.word	0x20012e44
 801109c:	20012e48 	.word	0x20012e48
 80110a0:	20012e2c 	.word	0x20012e2c
 80110a4:	20012dba 	.word	0x20012dba

080110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80110a8:	b510      	push	{r4, lr}
 80110aa:	4b23      	ldr	r3, [pc, #140]	; (8011138 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80110ac:	681c      	ldr	r4, [r3, #0]
 80110ae:	b934      	cbnz	r4, 80110be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 80110b0:	4b22      	ldr	r3, [pc, #136]	; (801113c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80110b2:	4a23      	ldr	r2, [pc, #140]	; (8011140 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80110b4:	4823      	ldr	r0, [pc, #140]	; (8011144 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80110b6:	f240 41ae 	movw	r1, #1198	; 0x4ae
 80110ba:	f00b fe6d 	bl	801cd98 <__assert_func>
 80110be:	4a22      	ldr	r2, [pc, #136]	; (8011148 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80110c0:	880b      	ldrh	r3, [r1, #0]
 80110c2:	8812      	ldrh	r2, [r2, #0]
 80110c4:	4293      	cmp	r3, r2
 80110c6:	d211      	bcs.n	80110ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 80110c8:	2214      	movs	r2, #20
 80110ca:	fb02 4303 	mla	r3, r2, r3, r4
 80110ce:	8a1a      	ldrh	r2, [r3, #16]
 80110d0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80110d4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80110d8:	8a5b      	ldrh	r3, [r3, #18]
 80110da:	8004      	strh	r4, [r0, #0]
 80110dc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80110e0:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80110e4:	8041      	strh	r1, [r0, #2]
 80110e6:	8082      	strh	r2, [r0, #4]
 80110e8:	80c3      	strh	r3, [r0, #6]
 80110ea:	e00e      	b.n	801110a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80110ec:	4917      	ldr	r1, [pc, #92]	; (801114c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 80110ee:	8809      	ldrh	r1, [r1, #0]
 80110f0:	4411      	add	r1, r2
 80110f2:	428b      	cmp	r3, r1
 80110f4:	da0a      	bge.n	801110c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 80110f6:	1a9b      	subs	r3, r3, r2
 80110f8:	4a15      	ldr	r2, [pc, #84]	; (8011150 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 80110fa:	6812      	ldr	r2, [r2, #0]
 80110fc:	210e      	movs	r1, #14
 80110fe:	fb01 2303 	mla	r3, r1, r3, r2
 8011102:	681a      	ldr	r2, [r3, #0]
 8011104:	6002      	str	r2, [r0, #0]
 8011106:	685a      	ldr	r2, [r3, #4]
 8011108:	6042      	str	r2, [r0, #4]
 801110a:	bd10      	pop	{r4, pc}
 801110c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011110:	4293      	cmp	r3, r2
 8011112:	d10b      	bne.n	801112c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8011114:	4b0f      	ldr	r3, [pc, #60]	; (8011154 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8011116:	f9b3 1000 	ldrsh.w	r1, [r3]
 801111a:	4b0f      	ldr	r3, [pc, #60]	; (8011158 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801111c:	8081      	strh	r1, [r0, #4]
 801111e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011122:	80c2      	strh	r2, [r0, #6]
 8011124:	2300      	movs	r3, #0
 8011126:	8003      	strh	r3, [r0, #0]
 8011128:	8043      	strh	r3, [r0, #2]
 801112a:	e7ee      	b.n	801110a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801112c:	2300      	movs	r3, #0
 801112e:	8003      	strh	r3, [r0, #0]
 8011130:	8043      	strh	r3, [r0, #2]
 8011132:	8083      	strh	r3, [r0, #4]
 8011134:	e7d8      	b.n	80110e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8011136:	bf00      	nop
 8011138:	20012e4c 	.word	0x20012e4c
 801113c:	0801f4d0 	.word	0x0801f4d0
 8011140:	08021081 	.word	0x08021081
 8011144:	08020fbd 	.word	0x08020fbd
 8011148:	20012e44 	.word	0x20012e44
 801114c:	20012e48 	.word	0x20012e48
 8011150:	20012e2c 	.word	0x20012e2c
 8011154:	20012db8 	.word	0x20012db8
 8011158:	20012dba 	.word	0x20012dba

0801115c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801115c:	4b18      	ldr	r3, [pc, #96]	; (80111c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801115e:	681b      	ldr	r3, [r3, #0]
 8011160:	b34b      	cbz	r3, 80111b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8011162:	4a18      	ldr	r2, [pc, #96]	; (80111c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011164:	8800      	ldrh	r0, [r0, #0]
 8011166:	8812      	ldrh	r2, [r2, #0]
 8011168:	4290      	cmp	r0, r2
 801116a:	d211      	bcs.n	8011190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801116c:	2214      	movs	r2, #20
 801116e:	fb02 3300 	mla	r3, r2, r0, r3
 8011172:	8a1a      	ldrh	r2, [r3, #16]
 8011174:	8919      	ldrh	r1, [r3, #8]
 8011176:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801117a:	428a      	cmp	r2, r1
 801117c:	db1d      	blt.n	80111ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801117e:	8a58      	ldrh	r0, [r3, #18]
 8011180:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8011184:	895b      	ldrh	r3, [r3, #10]
 8011186:	4298      	cmp	r0, r3
 8011188:	bfac      	ite	ge
 801118a:	2000      	movge	r0, #0
 801118c:	2001      	movlt	r0, #1
 801118e:	4770      	bx	lr
 8011190:	4b0d      	ldr	r3, [pc, #52]	; (80111c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8011192:	881b      	ldrh	r3, [r3, #0]
 8011194:	4413      	add	r3, r2
 8011196:	4298      	cmp	r0, r3
 8011198:	da0d      	bge.n	80111b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801119a:	4b0c      	ldr	r3, [pc, #48]	; (80111cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801119c:	681b      	ldr	r3, [r3, #0]
 801119e:	1a80      	subs	r0, r0, r2
 80111a0:	220e      	movs	r2, #14
 80111a2:	fb02 3300 	mla	r3, r2, r0, r3
 80111a6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80111aa:	891a      	ldrh	r2, [r3, #8]
 80111ac:	4291      	cmp	r1, r2
 80111ae:	db04      	blt.n	80111ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80111b0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80111b4:	e7e6      	b.n	8011184 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 80111b6:	2000      	movs	r0, #0
 80111b8:	4770      	bx	lr
 80111ba:	2001      	movs	r0, #1
 80111bc:	4770      	bx	lr
 80111be:	bf00      	nop
 80111c0:	20012e4c 	.word	0x20012e4c
 80111c4:	20012e44 	.word	0x20012e44
 80111c8:	20012e48 	.word	0x20012e48
 80111cc:	20012e2c 	.word	0x20012e2c

080111d0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80111d0:	b508      	push	{r3, lr}
 80111d2:	4b12      	ldr	r3, [pc, #72]	; (801121c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80111d4:	6819      	ldr	r1, [r3, #0]
 80111d6:	b931      	cbnz	r1, 80111e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80111d8:	4b11      	ldr	r3, [pc, #68]	; (8011220 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80111da:	4a12      	ldr	r2, [pc, #72]	; (8011224 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80111dc:	4812      	ldr	r0, [pc, #72]	; (8011228 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80111de:	f240 41d2 	movw	r1, #1234	; 0x4d2
 80111e2:	f00b fdd9 	bl	801cd98 <__assert_func>
 80111e6:	8803      	ldrh	r3, [r0, #0]
 80111e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80111ec:	4293      	cmp	r3, r2
 80111ee:	d012      	beq.n	8011216 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80111f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80111f4:	4293      	cmp	r3, r2
 80111f6:	d103      	bne.n	8011200 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 80111f8:	4b0c      	ldr	r3, [pc, #48]	; (801122c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80111fa:	681b      	ldr	r3, [r3, #0]
 80111fc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80111fe:	bd08      	pop	{r3, pc}
 8011200:	4a0b      	ldr	r2, [pc, #44]	; (8011230 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8011202:	6812      	ldr	r2, [r2, #0]
 8011204:	b11a      	cbz	r2, 801120e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8011206:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801120a:	2800      	cmp	r0, #0
 801120c:	d1f7      	bne.n	80111fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801120e:	2214      	movs	r2, #20
 8011210:	4353      	muls	r3, r2
 8011212:	58c8      	ldr	r0, [r1, r3]
 8011214:	e7f3      	b.n	80111fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8011216:	2000      	movs	r0, #0
 8011218:	e7f1      	b.n	80111fe <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801121a:	bf00      	nop
 801121c:	20012e4c 	.word	0x20012e4c
 8011220:	0801f4d0 	.word	0x0801f4d0
 8011224:	080210b7 	.word	0x080210b7
 8011228:	08020fbd 	.word	0x08020fbd
 801122c:	20012dc4 	.word	0x20012dc4
 8011230:	20012e28 	.word	0x20012e28

08011234 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011234:	8802      	ldrh	r2, [r0, #0]
 8011236:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801123a:	429a      	cmp	r2, r3
 801123c:	d845      	bhi.n	80112ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801123e:	4b24      	ldr	r3, [pc, #144]	; (80112d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011240:	8818      	ldrh	r0, [r3, #0]
 8011242:	4282      	cmp	r2, r0
 8011244:	d221      	bcs.n	801128a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8011246:	4b23      	ldr	r3, [pc, #140]	; (80112d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011248:	6819      	ldr	r1, [r3, #0]
 801124a:	2314      	movs	r3, #20
 801124c:	fb03 1302 	mla	r3, r3, r2, r1
 8011250:	6858      	ldr	r0, [r3, #4]
 8011252:	2800      	cmp	r0, #0
 8011254:	d03a      	beq.n	80112cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8011256:	4920      	ldr	r1, [pc, #128]	; (80112d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8011258:	6809      	ldr	r1, [r1, #0]
 801125a:	2900      	cmp	r1, #0
 801125c:	d036      	beq.n	80112cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801125e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8011262:	2900      	cmp	r1, #0
 8011264:	d032      	beq.n	80112cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8011266:	891a      	ldrh	r2, [r3, #8]
 8011268:	8958      	ldrh	r0, [r3, #10]
 801126a:	4350      	muls	r0, r2
 801126c:	7c5a      	ldrb	r2, [r3, #17]
 801126e:	7cdb      	ldrb	r3, [r3, #19]
 8011270:	0952      	lsrs	r2, r2, #5
 8011272:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8011276:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801127a:	2b0b      	cmp	r3, #11
 801127c:	bf18      	it	ne
 801127e:	0040      	lslne	r0, r0, #1
 8011280:	3003      	adds	r0, #3
 8011282:	f020 0003 	bic.w	r0, r0, #3
 8011286:	4408      	add	r0, r1
 8011288:	4770      	bx	lr
 801128a:	4b14      	ldr	r3, [pc, #80]	; (80112dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801128c:	881b      	ldrh	r3, [r3, #0]
 801128e:	4403      	add	r3, r0
 8011290:	429a      	cmp	r2, r3
 8011292:	da1a      	bge.n	80112ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8011294:	4b12      	ldr	r3, [pc, #72]	; (80112e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8011296:	681b      	ldr	r3, [r3, #0]
 8011298:	1a10      	subs	r0, r2, r0
 801129a:	210e      	movs	r1, #14
 801129c:	fb01 3000 	mla	r0, r1, r0, r3
 80112a0:	7b03      	ldrb	r3, [r0, #12]
 80112a2:	f003 031f 	and.w	r3, r3, #31
 80112a6:	2b0b      	cmp	r3, #11
 80112a8:	d10b      	bne.n	80112c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80112aa:	8903      	ldrh	r3, [r0, #8]
 80112ac:	8940      	ldrh	r0, [r0, #10]
 80112ae:	4358      	muls	r0, r3
 80112b0:	4b09      	ldr	r3, [pc, #36]	; (80112d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80112b2:	6819      	ldr	r1, [r3, #0]
 80112b4:	3003      	adds	r0, #3
 80112b6:	f020 0303 	bic.w	r3, r0, #3
 80112ba:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80112be:	4418      	add	r0, r3
 80112c0:	4770      	bx	lr
 80112c2:	2b0d      	cmp	r3, #13
 80112c4:	d101      	bne.n	80112ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80112c6:	300d      	adds	r0, #13
 80112c8:	4770      	bx	lr
 80112ca:	2000      	movs	r0, #0
 80112cc:	4770      	bx	lr
 80112ce:	bf00      	nop
 80112d0:	20012e44 	.word	0x20012e44
 80112d4:	20012e4c 	.word	0x20012e4c
 80112d8:	20012e28 	.word	0x20012e28
 80112dc:	20012e48 	.word	0x20012e48
 80112e0:	20012e2c 	.word	0x20012e2c

080112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80112e4:	b510      	push	{r4, lr}
 80112e6:	4b17      	ldr	r3, [pc, #92]	; (8011344 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80112e8:	6819      	ldr	r1, [r3, #0]
 80112ea:	8803      	ldrh	r3, [r0, #0]
 80112ec:	b1e9      	cbz	r1, 801132a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 80112ee:	4a16      	ldr	r2, [pc, #88]	; (8011348 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80112f0:	8812      	ldrh	r2, [r2, #0]
 80112f2:	429a      	cmp	r2, r3
 80112f4:	d90a      	bls.n	801130c <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 80112f6:	2214      	movs	r2, #20
 80112f8:	fb02 1303 	mla	r3, r2, r3, r1
 80112fc:	7c58      	ldrb	r0, [r3, #17]
 80112fe:	0942      	lsrs	r2, r0, #5
 8011300:	7cd8      	ldrb	r0, [r3, #19]
 8011302:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8011306:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801130a:	bd10      	pop	{r4, pc}
 801130c:	490f      	ldr	r1, [pc, #60]	; (801134c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801130e:	8809      	ldrh	r1, [r1, #0]
 8011310:	4411      	add	r1, r2
 8011312:	428b      	cmp	r3, r1
 8011314:	da09      	bge.n	801132a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8011316:	1a9b      	subs	r3, r3, r2
 8011318:	4a0d      	ldr	r2, [pc, #52]	; (8011350 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801131a:	6812      	ldr	r2, [r2, #0]
 801131c:	210e      	movs	r1, #14
 801131e:	fb01 2303 	mla	r3, r1, r3, r2
 8011322:	7b18      	ldrb	r0, [r3, #12]
 8011324:	f000 001f 	and.w	r0, r0, #31
 8011328:	e7ef      	b.n	801130a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801132a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801132e:	4293      	cmp	r3, r2
 8011330:	d106      	bne.n	8011340 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8011332:	f7f9 fb51 	bl	800a9d8 <_ZN8touchgfx3HAL3lcdEv>
 8011336:	6803      	ldr	r3, [r0, #0]
 8011338:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801133c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801133e:	4718      	bx	r3
 8011340:	2000      	movs	r0, #0
 8011342:	e7e2      	b.n	801130a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8011344:	20012e4c 	.word	0x20012e4c
 8011348:	20012e44 	.word	0x20012e44
 801134c:	20012e48 	.word	0x20012e48
 8011350:	20012e2c 	.word	0x20012e2c

08011354 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011354:	2010      	movs	r0, #16
 8011356:	4770      	bx	lr

08011358 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011358:	2000      	movs	r0, #0
 801135a:	4770      	bx	lr

0801135c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801135c:	2bff      	cmp	r3, #255	; 0xff
 801135e:	d050      	beq.n	8011402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011360:	2a0b      	cmp	r2, #11
 8011362:	d04a      	beq.n	80113fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011364:	d80e      	bhi.n	8011384 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8011366:	2a03      	cmp	r2, #3
 8011368:	d03f      	beq.n	80113ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801136a:	d804      	bhi.n	8011376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801136c:	2a01      	cmp	r2, #1
 801136e:	d03e      	beq.n	80113ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011370:	d93f      	bls.n	80113f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8011372:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8011374:	4770      	bx	lr
 8011376:	2a09      	cmp	r2, #9
 8011378:	d03f      	beq.n	80113fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801137a:	d83c      	bhi.n	80113f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801137c:	2a08      	cmp	r2, #8
 801137e:	d03a      	beq.n	80113f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011380:	2000      	movs	r0, #0
 8011382:	4770      	bx	lr
 8011384:	2a2f      	cmp	r2, #47	; 0x2f
 8011386:	d024      	beq.n	80113d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011388:	d80d      	bhi.n	80113a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801138a:	2a2d      	cmp	r2, #45	; 0x2d
 801138c:	d014      	beq.n	80113b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801138e:	d826      	bhi.n	80113de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011390:	2a2c      	cmp	r2, #44	; 0x2c
 8011392:	d1f5      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011394:	684b      	ldr	r3, [r1, #4]
 8011396:	781b      	ldrb	r3, [r3, #0]
 8011398:	2b01      	cmp	r3, #1
 801139a:	d018      	beq.n	80113ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801139c:	d323      	bcc.n	80113e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801139e:	2b02      	cmp	r3, #2
 80113a0:	d1ee      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113a2:	6880      	ldr	r0, [r0, #8]
 80113a4:	4770      	bx	lr
 80113a6:	2a31      	cmp	r2, #49	; 0x31
 80113a8:	d004      	beq.n	80113b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80113aa:	d328      	bcc.n	80113fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80113ac:	2a32      	cmp	r2, #50	; 0x32
 80113ae:	d026      	beq.n	80113fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80113b0:	2a33      	cmp	r2, #51	; 0x33
 80113b2:	d1e5      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113b4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80113b6:	4770      	bx	lr
 80113b8:	684b      	ldr	r3, [r1, #4]
 80113ba:	781b      	ldrb	r3, [r3, #0]
 80113bc:	2b01      	cmp	r3, #1
 80113be:	d004      	beq.n	80113ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80113c0:	d30b      	bcc.n	80113da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80113c2:	2b02      	cmp	r3, #2
 80113c4:	d1dc      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113c6:	6900      	ldr	r0, [r0, #16]
 80113c8:	4770      	bx	lr
 80113ca:	6a00      	ldr	r0, [r0, #32]
 80113cc:	4770      	bx	lr
 80113ce:	6980      	ldr	r0, [r0, #24]
 80113d0:	4770      	bx	lr
 80113d2:	684b      	ldr	r3, [r1, #4]
 80113d4:	781b      	ldrb	r3, [r3, #0]
 80113d6:	2b00      	cmp	r3, #0
 80113d8:	d1d2      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113da:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80113dc:	4770      	bx	lr
 80113de:	684b      	ldr	r3, [r1, #4]
 80113e0:	781b      	ldrb	r3, [r3, #0]
 80113e2:	2b00      	cmp	r3, #0
 80113e4:	d1cc      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113e6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80113e8:	4770      	bx	lr
 80113ea:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80113ec:	4770      	bx	lr
 80113ee:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80113f0:	4770      	bx	lr
 80113f2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80113f4:	4770      	bx	lr
 80113f6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80113f8:	4770      	bx	lr
 80113fa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80113fc:	4770      	bx	lr
 80113fe:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8011400:	4770      	bx	lr
 8011402:	2a0b      	cmp	r2, #11
 8011404:	d049      	beq.n	801149a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011406:	d80e      	bhi.n	8011426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8011408:	2a03      	cmp	r2, #3
 801140a:	d040      	beq.n	801148e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801140c:	d804      	bhi.n	8011418 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801140e:	2a01      	cmp	r2, #1
 8011410:	d03f      	beq.n	8011492 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8011412:	d940      	bls.n	8011496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8011414:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8011416:	4770      	bx	lr
 8011418:	2a09      	cmp	r2, #9
 801141a:	d03e      	beq.n	801149a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801141c:	d801      	bhi.n	8011422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801141e:	2a08      	cmp	r2, #8
 8011420:	d1ae      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011422:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8011424:	4770      	bx	lr
 8011426:	2a2f      	cmp	r2, #47	; 0x2f
 8011428:	d024      	beq.n	8011474 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801142a:	d80d      	bhi.n	8011448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801142c:	2a2d      	cmp	r2, #45	; 0x2d
 801142e:	d014      	beq.n	801145a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8011430:	d826      	bhi.n	8011480 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8011432:	2a2c      	cmp	r2, #44	; 0x2c
 8011434:	d1a4      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011436:	684b      	ldr	r3, [r1, #4]
 8011438:	781b      	ldrb	r3, [r3, #0]
 801143a:	2b01      	cmp	r3, #1
 801143c:	d018      	beq.n	8011470 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801143e:	d324      	bcc.n	801148a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011440:	2b02      	cmp	r3, #2
 8011442:	d19d      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011444:	68c0      	ldr	r0, [r0, #12]
 8011446:	4770      	bx	lr
 8011448:	2a31      	cmp	r2, #49	; 0x31
 801144a:	d004      	beq.n	8011456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801144c:	d327      	bcc.n	801149e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801144e:	2a32      	cmp	r2, #50	; 0x32
 8011450:	d025      	beq.n	801149e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011452:	2a33      	cmp	r2, #51	; 0x33
 8011454:	d194      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011456:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8011458:	4770      	bx	lr
 801145a:	684b      	ldr	r3, [r1, #4]
 801145c:	781b      	ldrb	r3, [r3, #0]
 801145e:	2b01      	cmp	r3, #1
 8011460:	d004      	beq.n	801146c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011462:	d30b      	bcc.n	801147c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8011464:	2b02      	cmp	r3, #2
 8011466:	d18b      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011468:	6940      	ldr	r0, [r0, #20]
 801146a:	4770      	bx	lr
 801146c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801146e:	4770      	bx	lr
 8011470:	69c0      	ldr	r0, [r0, #28]
 8011472:	4770      	bx	lr
 8011474:	684b      	ldr	r3, [r1, #4]
 8011476:	781b      	ldrb	r3, [r3, #0]
 8011478:	2b00      	cmp	r3, #0
 801147a:	d181      	bne.n	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801147c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801147e:	4770      	bx	lr
 8011480:	684b      	ldr	r3, [r1, #4]
 8011482:	781b      	ldrb	r3, [r3, #0]
 8011484:	2b00      	cmp	r3, #0
 8011486:	f47f af7b 	bne.w	8011380 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801148a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801148c:	4770      	bx	lr
 801148e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011490:	4770      	bx	lr
 8011492:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011494:	4770      	bx	lr
 8011496:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8011498:	4770      	bx	lr
 801149a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801149c:	4770      	bx	lr
 801149e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80114a0:	4770      	bx	lr

080114a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80114a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80114a6:	b087      	sub	sp, #28
 80114a8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80114aa:	9205      	str	r2, [sp, #20]
 80114ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80114b0:	9202      	str	r2, [sp, #8]
 80114b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80114b6:	9101      	str	r1, [sp, #4]
 80114b8:	6841      	ldr	r1, [r0, #4]
 80114ba:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80114be:	fb01 2404 	mla	r4, r1, r4, r2
 80114c2:	6802      	ldr	r2, [r0, #0]
 80114c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80114c8:	f8de 2000 	ldr.w	r2, [lr]
 80114cc:	9203      	str	r2, [sp, #12]
 80114ce:	f8de 2004 	ldr.w	r2, [lr, #4]
 80114d2:	3204      	adds	r2, #4
 80114d4:	9204      	str	r2, [sp, #16]
 80114d6:	9a02      	ldr	r2, [sp, #8]
 80114d8:	43d6      	mvns	r6, r2
 80114da:	b2f6      	uxtb	r6, r6
 80114dc:	9a01      	ldr	r2, [sp, #4]
 80114de:	2a00      	cmp	r2, #0
 80114e0:	dc03      	bgt.n	80114ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80114e2:	9a05      	ldr	r2, [sp, #20]
 80114e4:	2a00      	cmp	r2, #0
 80114e6:	f340 8129 	ble.w	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80114ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80114ec:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80114f0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80114f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80114f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80114fa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80114fe:	2b00      	cmp	r3, #0
 8011500:	dd0e      	ble.n	8011520 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011502:	1408      	asrs	r0, r1, #16
 8011504:	d405      	bmi.n	8011512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011506:	4560      	cmp	r0, ip
 8011508:	da03      	bge.n	8011512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801150a:	1410      	asrs	r0, r2, #16
 801150c:	d401      	bmi.n	8011512 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801150e:	42b8      	cmp	r0, r7
 8011510:	db07      	blt.n	8011522 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011512:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011514:	4401      	add	r1, r0
 8011516:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011518:	3b01      	subs	r3, #1
 801151a:	4402      	add	r2, r0
 801151c:	3402      	adds	r4, #2
 801151e:	e7ee      	b.n	80114fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011520:	d071      	beq.n	8011606 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011522:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011524:	1e58      	subs	r0, r3, #1
 8011526:	fb05 1500 	mla	r5, r5, r0, r1
 801152a:	142d      	asrs	r5, r5, #16
 801152c:	d45f      	bmi.n	80115ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801152e:	4565      	cmp	r5, ip
 8011530:	da5d      	bge.n	80115ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011532:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011534:	fb05 2000 	mla	r0, r5, r0, r2
 8011538:	1400      	asrs	r0, r0, #16
 801153a:	d458      	bmi.n	80115ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801153c:	42b8      	cmp	r0, r7
 801153e:	da56      	bge.n	80115ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011540:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011544:	4699      	mov	r9, r3
 8011546:	46a2      	mov	sl, r4
 8011548:	f1b9 0f00 	cmp.w	r9, #0
 801154c:	dd57      	ble.n	80115fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801154e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011552:	9803      	ldr	r0, [sp, #12]
 8011554:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8011558:	140d      	asrs	r5, r1, #16
 801155a:	fb07 000c 	mla	r0, r7, ip, r0
 801155e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011562:	5d40      	ldrb	r0, [r0, r5]
 8011564:	9d04      	ldr	r5, [sp, #16]
 8011566:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801156a:	f8ba 5000 	ldrh.w	r5, [sl]
 801156e:	122f      	asrs	r7, r5, #8
 8011570:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011574:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011578:	fb17 f706 	smulbb	r7, r7, r6
 801157c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011580:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011584:	00ed      	lsls	r5, r5, #3
 8011586:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801158a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801158e:	10c7      	asrs	r7, r0, #3
 8011590:	b2ed      	uxtb	r5, r5
 8011592:	00c0      	lsls	r0, r0, #3
 8011594:	fb18 f806 	smulbb	r8, r8, r6
 8011598:	fb15 f506 	smulbb	r5, r5, r6
 801159c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80115a0:	b2c0      	uxtb	r0, r0
 80115a2:	fa1f fc8c 	uxth.w	ip, ip
 80115a6:	fb07 870b 	mla	r7, r7, fp, r8
 80115aa:	fb00 500b 	mla	r0, r0, fp, r5
 80115ae:	b280      	uxth	r0, r0
 80115b0:	b2bf      	uxth	r7, r7
 80115b2:	f10c 0501 	add.w	r5, ip, #1
 80115b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80115ba:	f107 0801 	add.w	r8, r7, #1
 80115be:	1c45      	adds	r5, r0, #1
 80115c0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80115c4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80115c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80115ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80115ce:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80115d2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80115d6:	ea45 0c0c 	orr.w	ip, r5, ip
 80115da:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80115de:	4401      	add	r1, r0
 80115e0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80115e2:	ea4c 0c08 	orr.w	ip, ip, r8
 80115e6:	f82a cb02 	strh.w	ip, [sl], #2
 80115ea:	4402      	add	r2, r0
 80115ec:	e7ac      	b.n	8011548 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80115ee:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80115f2:	f04f 0800 	mov.w	r8, #0
 80115f6:	eb03 0008 	add.w	r0, r3, r8
 80115fa:	2800      	cmp	r0, #0
 80115fc:	dc41      	bgt.n	8011682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80115fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011602:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011606:	9b01      	ldr	r3, [sp, #4]
 8011608:	2b00      	cmp	r3, #0
 801160a:	f340 8097 	ble.w	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801160e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011612:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011616:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801161a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801161c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011620:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011624:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011628:	eef0 6a62 	vmov.f32	s13, s5
 801162c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011630:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011634:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011638:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801163c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011640:	eef0 6a43 	vmov.f32	s13, s6
 8011644:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011648:	ee12 2a90 	vmov	r2, s5
 801164c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011650:	fb92 f3f3 	sdiv	r3, r2, r3
 8011654:	ee13 2a10 	vmov	r2, s6
 8011658:	9313      	str	r3, [sp, #76]	; 0x4c
 801165a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801165c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011660:	9314      	str	r3, [sp, #80]	; 0x50
 8011662:	9b01      	ldr	r3, [sp, #4]
 8011664:	9a05      	ldr	r2, [sp, #20]
 8011666:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801166a:	3b01      	subs	r3, #1
 801166c:	9301      	str	r3, [sp, #4]
 801166e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011672:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011674:	eeb0 3a67 	vmov.f32	s6, s15
 8011678:	bf08      	it	eq
 801167a:	4613      	moveq	r3, r2
 801167c:	eef0 2a47 	vmov.f32	s5, s14
 8011680:	e72c      	b.n	80114dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011682:	140f      	asrs	r7, r1, #16
 8011684:	d453      	bmi.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011686:	f8de 5008 	ldr.w	r5, [lr, #8]
 801168a:	42bd      	cmp	r5, r7
 801168c:	dd4f      	ble.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801168e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011692:	d44c      	bmi.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011694:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011698:	4560      	cmp	r0, ip
 801169a:	dd48      	ble.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801169c:	9803      	ldr	r0, [sp, #12]
 801169e:	b22d      	sxth	r5, r5
 80116a0:	fb0c 0505 	mla	r5, ip, r5, r0
 80116a4:	5de8      	ldrb	r0, [r5, r7]
 80116a6:	9d04      	ldr	r5, [sp, #16]
 80116a8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80116ac:	f06f 0501 	mvn.w	r5, #1
 80116b0:	fb05 fb08 	mul.w	fp, r5, r8
 80116b4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80116b8:	f834 500b 	ldrh.w	r5, [r4, fp]
 80116bc:	122f      	asrs	r7, r5, #8
 80116be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116c2:	fb17 f706 	smulbb	r7, r7, r6
 80116c6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80116ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80116ce:	00ed      	lsls	r5, r5, #3
 80116d0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80116d4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80116d8:	10c7      	asrs	r7, r0, #3
 80116da:	b2ed      	uxtb	r5, r5
 80116dc:	00c0      	lsls	r0, r0, #3
 80116de:	fb19 f906 	smulbb	r9, r9, r6
 80116e2:	fb15 f506 	smulbb	r5, r5, r6
 80116e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80116ea:	b2c0      	uxtb	r0, r0
 80116ec:	fa1f fc8c 	uxth.w	ip, ip
 80116f0:	fb07 970a 	mla	r7, r7, sl, r9
 80116f4:	fb00 500a 	mla	r0, r0, sl, r5
 80116f8:	b2bf      	uxth	r7, r7
 80116fa:	b280      	uxth	r0, r0
 80116fc:	f10c 0501 	add.w	r5, ip, #1
 8011700:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011704:	f107 0901 	add.w	r9, r7, #1
 8011708:	1c45      	adds	r5, r0, #1
 801170a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801170e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011712:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011716:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801171a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801171e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011722:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011726:	ea4c 0c09 	orr.w	ip, ip, r9
 801172a:	f824 c00b 	strh.w	ip, [r4, fp]
 801172e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011730:	4401      	add	r1, r0
 8011732:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011734:	f108 38ff 	add.w	r8, r8, #4294967295
 8011738:	4402      	add	r2, r0
 801173a:	e75c      	b.n	80115f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801173c:	b007      	add	sp, #28
 801173e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011742:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011746:	b085      	sub	sp, #20
 8011748:	4693      	mov	fp, r2
 801174a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801174c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801174e:	6870      	ldr	r0, [r6, #4]
 8011750:	9100      	str	r1, [sp, #0]
 8011752:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011756:	fb00 2404 	mla	r4, r0, r4, r2
 801175a:	6832      	ldr	r2, [r6, #0]
 801175c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011760:	682a      	ldr	r2, [r5, #0]
 8011762:	9201      	str	r2, [sp, #4]
 8011764:	686a      	ldr	r2, [r5, #4]
 8011766:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801176a:	3204      	adds	r2, #4
 801176c:	9202      	str	r2, [sp, #8]
 801176e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011772:	9a00      	ldr	r2, [sp, #0]
 8011774:	2a00      	cmp	r2, #0
 8011776:	dc03      	bgt.n	8011780 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011778:	f1bb 0f00 	cmp.w	fp, #0
 801177c:	f340 80a0 	ble.w	80118c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011780:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011782:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011786:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801178a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801178e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011790:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011794:	2b00      	cmp	r3, #0
 8011796:	dd0c      	ble.n	80117b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011798:	1406      	asrs	r6, r0, #16
 801179a:	d405      	bmi.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801179c:	454e      	cmp	r6, r9
 801179e:	da03      	bge.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80117a0:	1416      	asrs	r6, r2, #16
 80117a2:	d401      	bmi.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80117a4:	4546      	cmp	r6, r8
 80117a6:	db05      	blt.n	80117b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80117a8:	4470      	add	r0, lr
 80117aa:	4462      	add	r2, ip
 80117ac:	3b01      	subs	r3, #1
 80117ae:	3402      	adds	r4, #2
 80117b0:	e7f0      	b.n	8011794 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80117b2:	d00f      	beq.n	80117d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80117b4:	1e5e      	subs	r6, r3, #1
 80117b6:	fb0e 0706 	mla	r7, lr, r6, r0
 80117ba:	143f      	asrs	r7, r7, #16
 80117bc:	d541      	bpl.n	8011842 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80117be:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80117c2:	4698      	mov	r8, r3
 80117c4:	9603      	str	r6, [sp, #12]
 80117c6:	f1b8 0f00 	cmp.w	r8, #0
 80117ca:	dc59      	bgt.n	8011880 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80117cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80117d4:	9b00      	ldr	r3, [sp, #0]
 80117d6:	2b00      	cmp	r3, #0
 80117d8:	dd72      	ble.n	80118c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80117da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80117e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117f0:	eeb0 6a62 	vmov.f32	s12, s5
 80117f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011800:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011808:	eeb0 6a43 	vmov.f32	s12, s6
 801180c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011810:	ee12 2a90 	vmov	r2, s5
 8011814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011818:	fb92 fef3 	sdiv	lr, r2, r3
 801181c:	ee13 2a10 	vmov	r2, s6
 8011820:	fb92 fcf3 	sdiv	ip, r2, r3
 8011824:	9b00      	ldr	r3, [sp, #0]
 8011826:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801182a:	3b01      	subs	r3, #1
 801182c:	9300      	str	r3, [sp, #0]
 801182e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011832:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011834:	eeb0 3a67 	vmov.f32	s6, s15
 8011838:	bf08      	it	eq
 801183a:	465b      	moveq	r3, fp
 801183c:	eef0 2a47 	vmov.f32	s5, s14
 8011840:	e797      	b.n	8011772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011842:	454f      	cmp	r7, r9
 8011844:	dabb      	bge.n	80117be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011846:	fb0c 2606 	mla	r6, ip, r6, r2
 801184a:	1436      	asrs	r6, r6, #16
 801184c:	d4b7      	bmi.n	80117be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801184e:	4546      	cmp	r6, r8
 8011850:	dab5      	bge.n	80117be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011852:	461e      	mov	r6, r3
 8011854:	46a0      	mov	r8, r4
 8011856:	2e00      	cmp	r6, #0
 8011858:	ddb8      	ble.n	80117cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801185a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801185e:	9901      	ldr	r1, [sp, #4]
 8011860:	1417      	asrs	r7, r2, #16
 8011862:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011866:	fb0a 1707 	mla	r7, sl, r7, r1
 801186a:	9902      	ldr	r1, [sp, #8]
 801186c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8011870:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011874:	f828 7b02 	strh.w	r7, [r8], #2
 8011878:	4470      	add	r0, lr
 801187a:	4462      	add	r2, ip
 801187c:	3e01      	subs	r6, #1
 801187e:	e7ea      	b.n	8011856 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8011880:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011884:	d417      	bmi.n	80118b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011886:	68ae      	ldr	r6, [r5, #8]
 8011888:	454e      	cmp	r6, r9
 801188a:	dd14      	ble.n	80118b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801188c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011890:	d411      	bmi.n	80118b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011892:	68ef      	ldr	r7, [r5, #12]
 8011894:	4557      	cmp	r7, sl
 8011896:	dd0e      	ble.n	80118b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011898:	9f01      	ldr	r7, [sp, #4]
 801189a:	b236      	sxth	r6, r6
 801189c:	fb0a 7606 	mla	r6, sl, r6, r7
 80118a0:	9f02      	ldr	r7, [sp, #8]
 80118a2:	f816 6009 	ldrb.w	r6, [r6, r9]
 80118a6:	f06f 0101 	mvn.w	r1, #1
 80118aa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80118ae:	fb01 f608 	mul.w	r6, r1, r8
 80118b2:	9903      	ldr	r1, [sp, #12]
 80118b4:	538f      	strh	r7, [r1, r6]
 80118b6:	4470      	add	r0, lr
 80118b8:	4462      	add	r2, ip
 80118ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80118be:	e782      	b.n	80117c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80118c0:	b005      	add	sp, #20
 80118c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080118c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80118c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118ca:	b087      	sub	sp, #28
 80118cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80118ce:	9205      	str	r2, [sp, #20]
 80118d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80118d4:	9203      	str	r2, [sp, #12]
 80118d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80118da:	9102      	str	r1, [sp, #8]
 80118dc:	6861      	ldr	r1, [r4, #4]
 80118de:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80118e2:	fb01 2000 	mla	r0, r1, r0, r2
 80118e6:	6822      	ldr	r2, [r4, #0]
 80118e8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80118ec:	9200      	str	r2, [sp, #0]
 80118ee:	f8dc 2000 	ldr.w	r2, [ip]
 80118f2:	9204      	str	r2, [sp, #16]
 80118f4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80118f8:	3204      	adds	r2, #4
 80118fa:	9201      	str	r2, [sp, #4]
 80118fc:	9a03      	ldr	r2, [sp, #12]
 80118fe:	43d5      	mvns	r5, r2
 8011900:	b2ed      	uxtb	r5, r5
 8011902:	9a02      	ldr	r2, [sp, #8]
 8011904:	2a00      	cmp	r2, #0
 8011906:	dc03      	bgt.n	8011910 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011908:	9a05      	ldr	r2, [sp, #20]
 801190a:	2a00      	cmp	r2, #0
 801190c:	f340 812c 	ble.w	8011b68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011910:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011912:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8011916:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801191a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801191e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011920:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011924:	2b00      	cmp	r3, #0
 8011926:	dd10      	ble.n	801194a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011928:	140c      	asrs	r4, r1, #16
 801192a:	d405      	bmi.n	8011938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801192c:	4574      	cmp	r4, lr
 801192e:	da03      	bge.n	8011938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011930:	1414      	asrs	r4, r2, #16
 8011932:	d401      	bmi.n	8011938 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011934:	42bc      	cmp	r4, r7
 8011936:	db09      	blt.n	801194c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8011938:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801193a:	9800      	ldr	r0, [sp, #0]
 801193c:	4421      	add	r1, r4
 801193e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011940:	3002      	adds	r0, #2
 8011942:	4422      	add	r2, r4
 8011944:	3b01      	subs	r3, #1
 8011946:	9000      	str	r0, [sp, #0]
 8011948:	e7ec      	b.n	8011924 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801194a:	d071      	beq.n	8011a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801194c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801194e:	1e5c      	subs	r4, r3, #1
 8011950:	fb06 1604 	mla	r6, r6, r4, r1
 8011954:	1436      	asrs	r6, r6, #16
 8011956:	d45d      	bmi.n	8011a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011958:	4576      	cmp	r6, lr
 801195a:	da5b      	bge.n	8011a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801195c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801195e:	fb06 2404 	mla	r4, r6, r4, r2
 8011962:	1424      	asrs	r4, r4, #16
 8011964:	d456      	bmi.n	8011a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011966:	42bc      	cmp	r4, r7
 8011968:	da54      	bge.n	8011a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801196a:	f8dd 9000 	ldr.w	r9, [sp]
 801196e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8011972:	4698      	mov	r8, r3
 8011974:	f1b8 0f00 	cmp.w	r8, #0
 8011978:	dd54      	ble.n	8011a24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801197a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801197e:	9804      	ldr	r0, [sp, #16]
 8011980:	1414      	asrs	r4, r2, #16
 8011982:	fb07 0404 	mla	r4, r7, r4, r0
 8011986:	140e      	asrs	r6, r1, #16
 8011988:	9801      	ldr	r0, [sp, #4]
 801198a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801198e:	f8b9 4000 	ldrh.w	r4, [r9]
 8011992:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011996:	eb00 0b0e 	add.w	fp, r0, lr
 801199a:	1227      	asrs	r7, r4, #8
 801199c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80119a0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80119a4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80119a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80119aa:	fb16 f60a 	smulbb	r6, r6, sl
 80119ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80119b2:	fb07 6705 	mla	r7, r7, r5, r6
 80119b6:	10e6      	asrs	r6, r4, #3
 80119b8:	00e4      	lsls	r4, r4, #3
 80119ba:	b2e4      	uxtb	r4, r4
 80119bc:	fb1b fb0a 	smulbb	fp, fp, sl
 80119c0:	fb14 f405 	smulbb	r4, r4, r5
 80119c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80119c8:	b2bf      	uxth	r7, r7
 80119ca:	fb06 b605 	mla	r6, r6, r5, fp
 80119ce:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80119d2:	b2b6      	uxth	r6, r6
 80119d4:	fa1f fe8e 	uxth.w	lr, lr
 80119d8:	1c7c      	adds	r4, r7, #1
 80119da:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80119de:	f106 0b01 	add.w	fp, r6, #1
 80119e2:	f10e 0401 	add.w	r4, lr, #1
 80119e6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80119ea:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80119ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80119f2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80119f6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80119fa:	4327      	orrs	r7, r4
 80119fc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011a00:	4401      	add	r1, r0
 8011a02:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011a04:	ea47 070b 	orr.w	r7, r7, fp
 8011a08:	f829 7b02 	strh.w	r7, [r9], #2
 8011a0c:	4402      	add	r2, r0
 8011a0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011a12:	e7af      	b.n	8011974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8011a14:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8011a18:	f04f 0e00 	mov.w	lr, #0
 8011a1c:	eb03 040e 	add.w	r4, r3, lr
 8011a20:	2c00      	cmp	r4, #0
 8011a22:	dc43      	bgt.n	8011aac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8011a24:	9a00      	ldr	r2, [sp, #0]
 8011a26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011a2a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011a2e:	9300      	str	r3, [sp, #0]
 8011a30:	9b02      	ldr	r3, [sp, #8]
 8011a32:	2b00      	cmp	r3, #0
 8011a34:	f340 8098 	ble.w	8011b68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8011a38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011a3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011a40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011a44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011a4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011a4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a52:	eef0 6a62 	vmov.f32	s13, s5
 8011a56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a62:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8011a66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a6a:	eef0 6a43 	vmov.f32	s13, s6
 8011a6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a72:	ee12 2a90 	vmov	r2, s5
 8011a76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a7e:	ee13 2a10 	vmov	r2, s6
 8011a82:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a86:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a8a:	9314      	str	r3, [sp, #80]	; 0x50
 8011a8c:	9b02      	ldr	r3, [sp, #8]
 8011a8e:	9a05      	ldr	r2, [sp, #20]
 8011a90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011a94:	3b01      	subs	r3, #1
 8011a96:	9302      	str	r3, [sp, #8]
 8011a98:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011a9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a9e:	eeb0 3a67 	vmov.f32	s6, s15
 8011aa2:	bf08      	it	eq
 8011aa4:	4613      	moveq	r3, r2
 8011aa6:	eef0 2a47 	vmov.f32	s5, s14
 8011aaa:	e72a      	b.n	8011902 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011aac:	140f      	asrs	r7, r1, #16
 8011aae:	d454      	bmi.n	8011b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011ab0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011ab4:	42be      	cmp	r6, r7
 8011ab6:	dd50      	ble.n	8011b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011ab8:	ea5f 4822 	movs.w	r8, r2, asr #16
 8011abc:	d44d      	bmi.n	8011b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011abe:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011ac2:	4544      	cmp	r4, r8
 8011ac4:	dd49      	ble.n	8011b5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011ac6:	9c04      	ldr	r4, [sp, #16]
 8011ac8:	b236      	sxth	r6, r6
 8011aca:	fb08 4606 	mla	r6, r8, r6, r4
 8011ace:	f06f 0001 	mvn.w	r0, #1
 8011ad2:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011ad6:	9c01      	ldr	r4, [sp, #4]
 8011ad8:	fb00 fa0e 	mul.w	sl, r0, lr
 8011adc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011ae0:	9800      	ldr	r0, [sp, #0]
 8011ae2:	eb04 0b08 	add.w	fp, r4, r8
 8011ae6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8011aea:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011aee:	9801      	ldr	r0, [sp, #4]
 8011af0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011af4:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011af8:	9800      	ldr	r0, [sp, #0]
 8011afa:	1227      	asrs	r7, r4, #8
 8011afc:	fb16 f609 	smulbb	r6, r6, r9
 8011b00:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011b04:	fb07 6705 	mla	r7, r7, r5, r6
 8011b08:	10e6      	asrs	r6, r4, #3
 8011b0a:	00e4      	lsls	r4, r4, #3
 8011b0c:	b2e4      	uxtb	r4, r4
 8011b0e:	fb1b fb09 	smulbb	fp, fp, r9
 8011b12:	fb14 f405 	smulbb	r4, r4, r5
 8011b16:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011b1a:	b2bf      	uxth	r7, r7
 8011b1c:	fb06 b605 	mla	r6, r6, r5, fp
 8011b20:	fb08 4809 	mla	r8, r8, r9, r4
 8011b24:	b2b6      	uxth	r6, r6
 8011b26:	fa1f f888 	uxth.w	r8, r8
 8011b2a:	1c7c      	adds	r4, r7, #1
 8011b2c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011b30:	f106 0b01 	add.w	fp, r6, #1
 8011b34:	f108 0401 	add.w	r4, r8, #1
 8011b38:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011b3c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011b40:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011b44:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011b48:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011b4c:	4327      	orrs	r7, r4
 8011b4e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011b52:	ea47 070b 	orr.w	r7, r7, fp
 8011b56:	f820 700a 	strh.w	r7, [r0, sl]
 8011b5a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011b5c:	4401      	add	r1, r0
 8011b5e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011b60:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011b64:	4402      	add	r2, r0
 8011b66:	e759      	b.n	8011a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011b68:	b007      	add	sp, #28
 8011b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011b70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011b70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b74:	b085      	sub	sp, #20
 8011b76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b7a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011b7c:	9203      	str	r2, [sp, #12]
 8011b7e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011b82:	6870      	ldr	r0, [r6, #4]
 8011b84:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011b86:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8011b8a:	686f      	ldr	r7, [r5, #4]
 8011b8c:	9101      	str	r1, [sp, #4]
 8011b8e:	fb00 2404 	mla	r4, r0, r4, r2
 8011b92:	6832      	ldr	r2, [r6, #0]
 8011b94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011b98:	682a      	ldr	r2, [r5, #0]
 8011b9a:	9202      	str	r2, [sp, #8]
 8011b9c:	3704      	adds	r7, #4
 8011b9e:	9a01      	ldr	r2, [sp, #4]
 8011ba0:	2a00      	cmp	r2, #0
 8011ba2:	dc03      	bgt.n	8011bac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011ba4:	9a03      	ldr	r2, [sp, #12]
 8011ba6:	2a00      	cmp	r2, #0
 8011ba8:	f340 80cc 	ble.w	8011d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011bac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011bae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011bb2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011bb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011bba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011bbc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011bc0:	2b00      	cmp	r3, #0
 8011bc2:	dd0d      	ble.n	8011be0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011bc4:	1406      	asrs	r6, r0, #16
 8011bc6:	d405      	bmi.n	8011bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011bc8:	454e      	cmp	r6, r9
 8011bca:	da03      	bge.n	8011bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011bcc:	1416      	asrs	r6, r2, #16
 8011bce:	d401      	bmi.n	8011bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011bd0:	4546      	cmp	r6, r8
 8011bd2:	db06      	blt.n	8011be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011bd4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011bd6:	4460      	add	r0, ip
 8011bd8:	4432      	add	r2, r6
 8011bda:	3b01      	subs	r3, #1
 8011bdc:	3402      	adds	r4, #2
 8011bde:	e7ef      	b.n	8011bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011be0:	d00f      	beq.n	8011c02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011be2:	1e5e      	subs	r6, r3, #1
 8011be4:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011be8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8011bec:	d543      	bpl.n	8011c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8011bee:	4698      	mov	r8, r3
 8011bf0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011bf4:	f1b8 0f00 	cmp.w	r8, #0
 8011bf8:	dc71      	bgt.n	8011cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8011bfa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011bfe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011c02:	9b01      	ldr	r3, [sp, #4]
 8011c04:	2b00      	cmp	r3, #0
 8011c06:	f340 809d 	ble.w	8011d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011c0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011c0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011c12:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011c18:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011c1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011c20:	eeb0 6a62 	vmov.f32	s12, s5
 8011c24:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011c28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c2c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011c30:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011c34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011c38:	eeb0 6a43 	vmov.f32	s12, s6
 8011c3c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011c40:	ee12 2a90 	vmov	r2, s5
 8011c44:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011c48:	fb92 fcf3 	sdiv	ip, r2, r3
 8011c4c:	ee13 2a10 	vmov	r2, s6
 8011c50:	fb92 f3f3 	sdiv	r3, r2, r3
 8011c54:	9312      	str	r3, [sp, #72]	; 0x48
 8011c56:	9b01      	ldr	r3, [sp, #4]
 8011c58:	9a03      	ldr	r2, [sp, #12]
 8011c5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011c5e:	3b01      	subs	r3, #1
 8011c60:	9301      	str	r3, [sp, #4]
 8011c62:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011c66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011c68:	eeb0 3a67 	vmov.f32	s6, s15
 8011c6c:	bf08      	it	eq
 8011c6e:	4613      	moveq	r3, r2
 8011c70:	eef0 2a47 	vmov.f32	s5, s14
 8011c74:	e793      	b.n	8011b9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011c76:	45ce      	cmp	lr, r9
 8011c78:	dab9      	bge.n	8011bee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c7a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011c7c:	fb01 2606 	mla	r6, r1, r6, r2
 8011c80:	1436      	asrs	r6, r6, #16
 8011c82:	d4b4      	bmi.n	8011bee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c84:	4546      	cmp	r6, r8
 8011c86:	dab2      	bge.n	8011bee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c88:	4698      	mov	r8, r3
 8011c8a:	46a2      	mov	sl, r4
 8011c8c:	f1b8 0f00 	cmp.w	r8, #0
 8011c90:	ddb3      	ble.n	8011bfa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011c92:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011c96:	9902      	ldr	r1, [sp, #8]
 8011c98:	1416      	asrs	r6, r2, #16
 8011c9a:	fb09 1606 	mla	r6, r9, r6, r1
 8011c9e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011ca2:	492a      	ldr	r1, [pc, #168]	; (8011d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011ca4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011ca8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011cac:	eb07 0b0e 	add.w	fp, r7, lr
 8011cb0:	4460      	add	r0, ip
 8011cb2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011cb6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011cba:	00f6      	lsls	r6, r6, #3
 8011cbc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011cc0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011cc4:	ea49 0606 	orr.w	r6, r9, r6
 8011cc8:	f817 900e 	ldrb.w	r9, [r7, lr]
 8011ccc:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011cce:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011cd2:	f82a 6b02 	strh.w	r6, [sl], #2
 8011cd6:	440a      	add	r2, r1
 8011cd8:	f108 38ff 	add.w	r8, r8, #4294967295
 8011cdc:	e7d6      	b.n	8011c8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011cde:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011ce2:	d429      	bmi.n	8011d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011ce4:	68ae      	ldr	r6, [r5, #8]
 8011ce6:	454e      	cmp	r6, r9
 8011ce8:	dd26      	ble.n	8011d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011cea:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8011cee:	d423      	bmi.n	8011d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011cf0:	68e9      	ldr	r1, [r5, #12]
 8011cf2:	4559      	cmp	r1, fp
 8011cf4:	dd20      	ble.n	8011d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011cf6:	9902      	ldr	r1, [sp, #8]
 8011cf8:	fa0f fe86 	sxth.w	lr, r6
 8011cfc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011d00:	f06f 0101 	mvn.w	r1, #1
 8011d04:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011d08:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011d0c:	eb07 060e 	add.w	r6, r7, lr
 8011d10:	fb01 f908 	mul.w	r9, r1, r8
 8011d14:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011d18:	7876      	ldrb	r6, [r6, #1]
 8011d1a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8011d1e:	00f6      	lsls	r6, r6, #3
 8011d20:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011d24:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011d28:	ea4b 0606 	orr.w	r6, fp, r6
 8011d2c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011d30:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011d34:	f82a 6009 	strh.w	r6, [sl, r9]
 8011d38:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011d3a:	4460      	add	r0, ip
 8011d3c:	440a      	add	r2, r1
 8011d3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011d42:	e757      	b.n	8011bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011d44:	b005      	add	sp, #20
 8011d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d4a:	bf00      	nop
 8011d4c:	fffff800 	.word	0xfffff800

08011d50 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d54:	b087      	sub	sp, #28
 8011d56:	468b      	mov	fp, r1
 8011d58:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011d5a:	9204      	str	r2, [sp, #16]
 8011d5c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011d60:	9205      	str	r2, [sp, #20]
 8011d62:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d66:	6841      	ldr	r1, [r0, #4]
 8011d68:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011d6c:	fb01 2404 	mla	r4, r1, r4, r2
 8011d70:	6802      	ldr	r2, [r0, #0]
 8011d72:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d76:	f8dc 2000 	ldr.w	r2, [ip]
 8011d7a:	9201      	str	r2, [sp, #4]
 8011d7c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011d80:	3204      	adds	r2, #4
 8011d82:	9202      	str	r2, [sp, #8]
 8011d84:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d88:	f1bb 0f00 	cmp.w	fp, #0
 8011d8c:	dc03      	bgt.n	8011d96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011d8e:	9a04      	ldr	r2, [sp, #16]
 8011d90:	2a00      	cmp	r2, #0
 8011d92:	f340 8138 	ble.w	8012006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011d96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d98:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011d9c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011da0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011da4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011da6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011daa:	2b00      	cmp	r3, #0
 8011dac:	dd0e      	ble.n	8011dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011dae:	1402      	asrs	r2, r0, #16
 8011db0:	d405      	bmi.n	8011dbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011db2:	42ba      	cmp	r2, r7
 8011db4:	da03      	bge.n	8011dbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011db6:	140a      	asrs	r2, r1, #16
 8011db8:	d401      	bmi.n	8011dbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011dba:	42b2      	cmp	r2, r6
 8011dbc:	db07      	blt.n	8011dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011dbe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011dc0:	4410      	add	r0, r2
 8011dc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011dc4:	3b01      	subs	r3, #1
 8011dc6:	4411      	add	r1, r2
 8011dc8:	3402      	adds	r4, #2
 8011dca:	e7ee      	b.n	8011daa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8011dcc:	d019      	beq.n	8011e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011dce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011dd0:	1e5a      	subs	r2, r3, #1
 8011dd2:	fb05 0502 	mla	r5, r5, r2, r0
 8011dd6:	142d      	asrs	r5, r5, #16
 8011dd8:	d409      	bmi.n	8011dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011dda:	42bd      	cmp	r5, r7
 8011ddc:	da07      	bge.n	8011dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011dde:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011de0:	fb05 1202 	mla	r2, r5, r2, r1
 8011de4:	1412      	asrs	r2, r2, #16
 8011de6:	d402      	bmi.n	8011dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011de8:	42b2      	cmp	r2, r6
 8011dea:	f2c0 80ac 	blt.w	8011f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8011dee:	f04f 0e00 	mov.w	lr, #0
 8011df2:	eb03 020e 	add.w	r2, r3, lr
 8011df6:	2a00      	cmp	r2, #0
 8011df8:	dc3e      	bgt.n	8011e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011dfa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011dfe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011e02:	f1bb 0f00 	cmp.w	fp, #0
 8011e06:	f340 80fe 	ble.w	8012006 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011e0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e12:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011e16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e18:	f1bb 0b01 	subs.w	fp, fp, #1
 8011e1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011e24:	eeb0 6a62 	vmov.f32	s12, s5
 8011e28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e34:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011e38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e3c:	eeb0 6a43 	vmov.f32	s12, s6
 8011e40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e44:	ee12 2a90 	vmov	r2, s5
 8011e48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e50:	ee13 2a10 	vmov	r2, s6
 8011e54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e58:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e60:	9a04      	ldr	r2, [sp, #16]
 8011e62:	9314      	str	r3, [sp, #80]	; 0x50
 8011e64:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e6a:	eeb0 3a67 	vmov.f32	s6, s15
 8011e6e:	bf08      	it	eq
 8011e70:	4613      	moveq	r3, r2
 8011e72:	eef0 2a47 	vmov.f32	s5, s14
 8011e76:	e787      	b.n	8011d88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011e78:	1406      	asrs	r6, r0, #16
 8011e7a:	d45d      	bmi.n	8011f38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e7c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011e80:	42b5      	cmp	r5, r6
 8011e82:	dd59      	ble.n	8011f38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e84:	140f      	asrs	r7, r1, #16
 8011e86:	d457      	bmi.n	8011f38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e88:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011e8c:	42ba      	cmp	r2, r7
 8011e8e:	dd53      	ble.n	8011f38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e90:	9a01      	ldr	r2, [sp, #4]
 8011e92:	b22d      	sxth	r5, r5
 8011e94:	fb07 2505 	mla	r5, r7, r5, r2
 8011e98:	5daa      	ldrb	r2, [r5, r6]
 8011e9a:	9d02      	ldr	r5, [sp, #8]
 8011e9c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011ea0:	0e2e      	lsrs	r6, r5, #24
 8011ea2:	d049      	beq.n	8011f38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011ea4:	f06f 0201 	mvn.w	r2, #1
 8011ea8:	fb02 f20e 	mul.w	r2, r2, lr
 8011eac:	9203      	str	r2, [sp, #12]
 8011eae:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011eb2:	9a05      	ldr	r2, [sp, #20]
 8011eb4:	4356      	muls	r6, r2
 8011eb6:	1c72      	adds	r2, r6, #1
 8011eb8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011ebc:	1212      	asrs	r2, r2, #8
 8011ebe:	fa1f f982 	uxth.w	r9, r2
 8011ec2:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011ec6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011eca:	43d2      	mvns	r2, r2
 8011ecc:	b2d2      	uxtb	r2, r2
 8011ece:	fb16 f609 	smulbb	r6, r6, r9
 8011ed2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011ed6:	fb07 6702 	mla	r7, r7, r2, r6
 8011eda:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011ede:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011ee2:	b2ed      	uxtb	r5, r5
 8011ee4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011ee8:	fa5f f888 	uxtb.w	r8, r8
 8011eec:	fb15 f509 	smulbb	r5, r5, r9
 8011ef0:	fb08 5502 	mla	r5, r8, r2, r5
 8011ef4:	b2bf      	uxth	r7, r7
 8011ef6:	fb1a fa09 	smulbb	sl, sl, r9
 8011efa:	b2ad      	uxth	r5, r5
 8011efc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011f00:	fb06 a602 	mla	r6, r6, r2, sl
 8011f04:	1c7a      	adds	r2, r7, #1
 8011f06:	f105 0a01 	add.w	sl, r5, #1
 8011f0a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011f0e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011f12:	b2b6      	uxth	r6, r6
 8011f14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011f18:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011f1c:	ea4a 0707 	orr.w	r7, sl, r7
 8011f20:	f106 0a01 	add.w	sl, r6, #1
 8011f24:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011f28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011f2c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011f30:	9a03      	ldr	r2, [sp, #12]
 8011f32:	ea47 070a 	orr.w	r7, r7, sl
 8011f36:	52a7      	strh	r7, [r4, r2]
 8011f38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f3a:	4410      	add	r0, r2
 8011f3c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f3e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011f42:	4411      	add	r1, r2
 8011f44:	e755      	b.n	8011df2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011f46:	f04f 0800 	mov.w	r8, #0
 8011f4a:	eba3 0208 	sub.w	r2, r3, r8
 8011f4e:	2a00      	cmp	r2, #0
 8011f50:	f77f af53 	ble.w	8011dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011f54:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8011f58:	9f01      	ldr	r7, [sp, #4]
 8011f5a:	140a      	asrs	r2, r1, #16
 8011f5c:	1405      	asrs	r5, r0, #16
 8011f5e:	fb06 7202 	mla	r2, r6, r2, r7
 8011f62:	5d52      	ldrb	r2, [r2, r5]
 8011f64:	9d02      	ldr	r5, [sp, #8]
 8011f66:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011f6a:	0e2e      	lsrs	r6, r5, #24
 8011f6c:	d044      	beq.n	8011ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8011f6e:	9a05      	ldr	r2, [sp, #20]
 8011f70:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011f74:	4356      	muls	r6, r2
 8011f76:	1c72      	adds	r2, r6, #1
 8011f78:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011f7c:	1212      	asrs	r2, r2, #8
 8011f7e:	fa1f f982 	uxth.w	r9, r2
 8011f82:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011f86:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011f8a:	43d2      	mvns	r2, r2
 8011f8c:	b2d2      	uxtb	r2, r2
 8011f8e:	fb16 f609 	smulbb	r6, r6, r9
 8011f92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011f96:	fb07 6702 	mla	r7, r7, r2, r6
 8011f9a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011f9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011fa2:	b2ed      	uxtb	r5, r5
 8011fa4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011fa8:	fa5f fe8e 	uxtb.w	lr, lr
 8011fac:	fb15 f509 	smulbb	r5, r5, r9
 8011fb0:	fb0e 5502 	mla	r5, lr, r2, r5
 8011fb4:	b2bf      	uxth	r7, r7
 8011fb6:	fb1a fa09 	smulbb	sl, sl, r9
 8011fba:	b2ad      	uxth	r5, r5
 8011fbc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011fc0:	fb06 a602 	mla	r6, r6, r2, sl
 8011fc4:	1c7a      	adds	r2, r7, #1
 8011fc6:	f105 0a01 	add.w	sl, r5, #1
 8011fca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011fce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011fd2:	b2b6      	uxth	r6, r6
 8011fd4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011fd8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011fdc:	ea4a 0707 	orr.w	r7, sl, r7
 8011fe0:	f106 0a01 	add.w	sl, r6, #1
 8011fe4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011fe8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011fec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011ff0:	ea47 070a 	orr.w	r7, r7, sl
 8011ff4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011ff8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ffa:	4410      	add	r0, r2
 8011ffc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ffe:	f108 0801 	add.w	r8, r8, #1
 8012002:	4411      	add	r1, r2
 8012004:	e7a1      	b.n	8011f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8012006:	b007      	add	sp, #28
 8012008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801200c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801200c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012010:	b085      	sub	sp, #20
 8012012:	468b      	mov	fp, r1
 8012014:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012016:	9203      	str	r2, [sp, #12]
 8012018:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801201c:	6841      	ldr	r1, [r0, #4]
 801201e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012022:	fb01 2404 	mla	r4, r1, r4, r2
 8012026:	6802      	ldr	r2, [r0, #0]
 8012028:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801202c:	f8de 2000 	ldr.w	r2, [lr]
 8012030:	9200      	str	r2, [sp, #0]
 8012032:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012036:	3204      	adds	r2, #4
 8012038:	9201      	str	r2, [sp, #4]
 801203a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801203e:	f1bb 0f00 	cmp.w	fp, #0
 8012042:	dc03      	bgt.n	801204c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012044:	9a03      	ldr	r2, [sp, #12]
 8012046:	2a00      	cmp	r2, #0
 8012048:	f340 8153 	ble.w	80122f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801204c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801204e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012052:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012056:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801205a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801205c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012060:	2b00      	cmp	r3, #0
 8012062:	dd0e      	ble.n	8012082 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012064:	1408      	asrs	r0, r1, #16
 8012066:	d405      	bmi.n	8012074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012068:	42b8      	cmp	r0, r7
 801206a:	da03      	bge.n	8012074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801206c:	1410      	asrs	r0, r2, #16
 801206e:	d401      	bmi.n	8012074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012070:	42b0      	cmp	r0, r6
 8012072:	db07      	blt.n	8012084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012074:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012076:	4401      	add	r1, r0
 8012078:	9812      	ldr	r0, [sp, #72]	; 0x48
 801207a:	3b01      	subs	r3, #1
 801207c:	4402      	add	r2, r0
 801207e:	3402      	adds	r4, #2
 8012080:	e7ee      	b.n	8012060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012082:	d017      	beq.n	80120b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012084:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012086:	1e58      	subs	r0, r3, #1
 8012088:	fb05 1500 	mla	r5, r5, r0, r1
 801208c:	142d      	asrs	r5, r5, #16
 801208e:	d409      	bmi.n	80120a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012090:	42bd      	cmp	r5, r7
 8012092:	da07      	bge.n	80120a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012094:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012096:	fb05 2000 	mla	r0, r5, r0, r2
 801209a:	1400      	asrs	r0, r0, #16
 801209c:	d402      	bmi.n	80120a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801209e:	42b0      	cmp	r0, r6
 80120a0:	f2c0 80bc 	blt.w	801221c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80120a4:	2600      	movs	r6, #0
 80120a6:	1998      	adds	r0, r3, r6
 80120a8:	2800      	cmp	r0, #0
 80120aa:	dc3e      	bgt.n	801212a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80120ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80120b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80120b4:	f1bb 0f00 	cmp.w	fp, #0
 80120b8:	f340 811b 	ble.w	80122f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80120bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80120c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80120c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80120c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80120ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80120ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80120d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80120d6:	eeb0 6a62 	vmov.f32	s12, s5
 80120da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80120de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80120e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80120e6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80120ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80120ee:	eeb0 6a43 	vmov.f32	s12, s6
 80120f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80120f6:	ee12 2a90 	vmov	r2, s5
 80120fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80120fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8012102:	ee13 2a10 	vmov	r2, s6
 8012106:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801210a:	9311      	str	r3, [sp, #68]	; 0x44
 801210c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801210e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012112:	9a03      	ldr	r2, [sp, #12]
 8012114:	9312      	str	r3, [sp, #72]	; 0x48
 8012116:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801211a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801211c:	eeb0 3a67 	vmov.f32	s6, s15
 8012120:	bf08      	it	eq
 8012122:	4613      	moveq	r3, r2
 8012124:	eef0 2a47 	vmov.f32	s5, s14
 8012128:	e789      	b.n	801203e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801212a:	140f      	asrs	r7, r1, #16
 801212c:	d45e      	bmi.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801212e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012132:	42bd      	cmp	r5, r7
 8012134:	dd5a      	ble.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012136:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801213a:	d457      	bmi.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801213c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012140:	4560      	cmp	r0, ip
 8012142:	dd53      	ble.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012144:	9800      	ldr	r0, [sp, #0]
 8012146:	b22d      	sxth	r5, r5
 8012148:	fb0c 0505 	mla	r5, ip, r5, r0
 801214c:	5de8      	ldrb	r0, [r5, r7]
 801214e:	9d01      	ldr	r5, [sp, #4]
 8012150:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8012154:	0e07      	lsrs	r7, r0, #24
 8012156:	2fff      	cmp	r7, #255	; 0xff
 8012158:	d04e      	beq.n	80121f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801215a:	b2fd      	uxtb	r5, r7
 801215c:	2f00      	cmp	r7, #0
 801215e:	d045      	beq.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012160:	f06f 0701 	mvn.w	r7, #1
 8012164:	4377      	muls	r7, r6
 8012166:	fa1f f985 	uxth.w	r9, r5
 801216a:	f834 8007 	ldrh.w	r8, [r4, r7]
 801216e:	9702      	str	r7, [sp, #8]
 8012170:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012174:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8012178:	43ed      	mvns	r5, r5
 801217a:	b2ed      	uxtb	r5, r5
 801217c:	fb17 f709 	smulbb	r7, r7, r9
 8012180:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012184:	fb0c 7c05 	mla	ip, ip, r5, r7
 8012188:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801218c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012190:	b2c0      	uxtb	r0, r0
 8012192:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012196:	fa5f f888 	uxtb.w	r8, r8
 801219a:	fb10 f009 	smulbb	r0, r0, r9
 801219e:	fb08 0005 	mla	r0, r8, r5, r0
 80121a2:	b280      	uxth	r0, r0
 80121a4:	fa1f fc8c 	uxth.w	ip, ip
 80121a8:	fb1a fa09 	smulbb	sl, sl, r9
 80121ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80121b0:	fb07 a705 	mla	r7, r7, r5, sl
 80121b4:	f100 0a01 	add.w	sl, r0, #1
 80121b8:	f10c 0501 	add.w	r5, ip, #1
 80121bc:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80121c0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80121c4:	b2bf      	uxth	r7, r7
 80121c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80121ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80121ce:	ea4a 0c0c 	orr.w	ip, sl, ip
 80121d2:	f107 0a01 	add.w	sl, r7, #1
 80121d6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80121da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80121de:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80121e2:	9802      	ldr	r0, [sp, #8]
 80121e4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80121e8:	f824 c000 	strh.w	ip, [r4, r0]
 80121ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80121ee:	4401      	add	r1, r0
 80121f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80121f2:	3e01      	subs	r6, #1
 80121f4:	4402      	add	r2, r0
 80121f6:	e756      	b.n	80120a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80121f8:	f06f 0501 	mvn.w	r5, #1
 80121fc:	fb05 f706 	mul.w	r7, r5, r6
 8012200:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8012204:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012208:	0945      	lsrs	r5, r0, #5
 801220a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801220e:	ea4c 0505 	orr.w	r5, ip, r5
 8012212:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012216:	4305      	orrs	r5, r0
 8012218:	53e5      	strh	r5, [r4, r7]
 801221a:	e7e7      	b.n	80121ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801221c:	f04f 0800 	mov.w	r8, #0
 8012220:	eba3 0008 	sub.w	r0, r3, r8
 8012224:	2800      	cmp	r0, #0
 8012226:	f77f af41 	ble.w	80120ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801222a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801222e:	9f00      	ldr	r7, [sp, #0]
 8012230:	1410      	asrs	r0, r2, #16
 8012232:	140d      	asrs	r5, r1, #16
 8012234:	fb06 7000 	mla	r0, r6, r0, r7
 8012238:	5d40      	ldrb	r0, [r0, r5]
 801223a:	9d01      	ldr	r5, [sp, #4]
 801223c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8012240:	0e06      	lsrs	r6, r0, #24
 8012242:	2eff      	cmp	r6, #255	; 0xff
 8012244:	d048      	beq.n	80122d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8012246:	b2f5      	uxtb	r5, r6
 8012248:	2e00      	cmp	r6, #0
 801224a:	d03e      	beq.n	80122ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801224c:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8012250:	fa1f f985 	uxth.w	r9, r5
 8012254:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012258:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801225c:	43ed      	mvns	r5, r5
 801225e:	b2ed      	uxtb	r5, r5
 8012260:	fb16 f609 	smulbb	r6, r6, r9
 8012264:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012268:	fb07 6705 	mla	r7, r7, r5, r6
 801226c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012270:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012274:	b2c0      	uxtb	r0, r0
 8012276:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801227a:	fa5f fc8c 	uxtb.w	ip, ip
 801227e:	fb10 f009 	smulbb	r0, r0, r9
 8012282:	fb0c 0005 	mla	r0, ip, r5, r0
 8012286:	b2bf      	uxth	r7, r7
 8012288:	fb1a fa09 	smulbb	sl, sl, r9
 801228c:	b280      	uxth	r0, r0
 801228e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012292:	fb06 a605 	mla	r6, r6, r5, sl
 8012296:	1c7d      	adds	r5, r7, #1
 8012298:	f100 0a01 	add.w	sl, r0, #1
 801229c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80122a0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80122a4:	b2b6      	uxth	r6, r6
 80122a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80122aa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80122ae:	ea4a 0707 	orr.w	r7, sl, r7
 80122b2:	f106 0a01 	add.w	sl, r6, #1
 80122b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80122ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80122be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80122c2:	ea47 070a 	orr.w	r7, r7, sl
 80122c6:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80122ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 80122cc:	4401      	add	r1, r0
 80122ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 80122d0:	f108 0801 	add.w	r8, r8, #1
 80122d4:	4402      	add	r2, r0
 80122d6:	e7a3      	b.n	8012220 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80122d8:	4d07      	ldr	r5, [pc, #28]	; (80122f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80122da:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 80122de:	0945      	lsrs	r5, r0, #5
 80122e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80122e4:	4335      	orrs	r5, r6
 80122e6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80122ea:	4305      	orrs	r5, r0
 80122ec:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80122f0:	e7eb      	b.n	80122ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80122f2:	b005      	add	sp, #20
 80122f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122f8:	fffff800 	.word	0xfffff800

080122fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80122fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012300:	b087      	sub	sp, #28
 8012302:	468b      	mov	fp, r1
 8012304:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012306:	9204      	str	r2, [sp, #16]
 8012308:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801230c:	9205      	str	r2, [sp, #20]
 801230e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8012312:	6861      	ldr	r1, [r4, #4]
 8012314:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8012318:	fb01 2000 	mla	r0, r1, r0, r2
 801231c:	6822      	ldr	r2, [r4, #0]
 801231e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012322:	f8de 2000 	ldr.w	r2, [lr]
 8012326:	9201      	str	r2, [sp, #4]
 8012328:	f8de 2004 	ldr.w	r2, [lr, #4]
 801232c:	9202      	str	r2, [sp, #8]
 801232e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012332:	f1bb 0f00 	cmp.w	fp, #0
 8012336:	dc03      	bgt.n	8012340 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012338:	9a04      	ldr	r2, [sp, #16]
 801233a:	2a00      	cmp	r2, #0
 801233c:	f340 8142 	ble.w	80125c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012340:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012342:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012346:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801234a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801234e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012350:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012354:	2b00      	cmp	r3, #0
 8012356:	dd0e      	ble.n	8012376 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012358:	140c      	asrs	r4, r1, #16
 801235a:	d405      	bmi.n	8012368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801235c:	42bc      	cmp	r4, r7
 801235e:	da03      	bge.n	8012368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012360:	1414      	asrs	r4, r2, #16
 8012362:	d401      	bmi.n	8012368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012364:	42b4      	cmp	r4, r6
 8012366:	db07      	blt.n	8012378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012368:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801236a:	4421      	add	r1, r4
 801236c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801236e:	3b01      	subs	r3, #1
 8012370:	4422      	add	r2, r4
 8012372:	3002      	adds	r0, #2
 8012374:	e7ee      	b.n	8012354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8012376:	d019      	beq.n	80123ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012378:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801237a:	1e5c      	subs	r4, r3, #1
 801237c:	fb05 1504 	mla	r5, r5, r4, r1
 8012380:	142d      	asrs	r5, r5, #16
 8012382:	d409      	bmi.n	8012398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012384:	42bd      	cmp	r5, r7
 8012386:	da07      	bge.n	8012398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012388:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801238a:	fb05 2404 	mla	r4, r5, r4, r2
 801238e:	1424      	asrs	r4, r4, #16
 8012390:	d402      	bmi.n	8012398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012392:	42b4      	cmp	r4, r6
 8012394:	f2c0 80b1 	blt.w	80124fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012398:	f04f 0800 	mov.w	r8, #0
 801239c:	eb03 0408 	add.w	r4, r3, r8
 80123a0:	2c00      	cmp	r4, #0
 80123a2:	dc3e      	bgt.n	8012422 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80123a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80123a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80123ac:	f1bb 0f00 	cmp.w	fp, #0
 80123b0:	f340 8108 	ble.w	80125c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80123b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80123b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80123bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80123c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80123c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80123c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80123ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80123ce:	eeb0 6a62 	vmov.f32	s12, s5
 80123d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80123d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80123da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80123de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80123e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80123e6:	eeb0 6a43 	vmov.f32	s12, s6
 80123ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80123ee:	ee12 2a90 	vmov	r2, s5
 80123f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80123f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80123fa:	ee13 2a10 	vmov	r2, s6
 80123fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012402:	9313      	str	r3, [sp, #76]	; 0x4c
 8012404:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012406:	fb92 f3f3 	sdiv	r3, r2, r3
 801240a:	9a04      	ldr	r2, [sp, #16]
 801240c:	9314      	str	r3, [sp, #80]	; 0x50
 801240e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012412:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012414:	eeb0 3a67 	vmov.f32	s6, s15
 8012418:	bf08      	it	eq
 801241a:	4613      	moveq	r3, r2
 801241c:	eef0 2a47 	vmov.f32	s5, s14
 8012420:	e787      	b.n	8012332 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8012422:	140e      	asrs	r6, r1, #16
 8012424:	d462      	bmi.n	80124ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012426:	f8de 5008 	ldr.w	r5, [lr, #8]
 801242a:	42b5      	cmp	r5, r6
 801242c:	dd5e      	ble.n	80124ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801242e:	1417      	asrs	r7, r2, #16
 8012430:	d45c      	bmi.n	80124ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012432:	f8de 400c 	ldr.w	r4, [lr, #12]
 8012436:	42bc      	cmp	r4, r7
 8012438:	dd58      	ble.n	80124ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801243a:	b22d      	sxth	r5, r5
 801243c:	fb07 6505 	mla	r5, r7, r5, r6
 8012440:	9c02      	ldr	r4, [sp, #8]
 8012442:	5d66      	ldrb	r6, [r4, r5]
 8012444:	2e00      	cmp	r6, #0
 8012446:	d051      	beq.n	80124ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012448:	9c01      	ldr	r4, [sp, #4]
 801244a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801244e:	f06f 0401 	mvn.w	r4, #1
 8012452:	fb04 f408 	mul.w	r4, r4, r8
 8012456:	9403      	str	r4, [sp, #12]
 8012458:	5b05      	ldrh	r5, [r0, r4]
 801245a:	9c05      	ldr	r4, [sp, #20]
 801245c:	4366      	muls	r6, r4
 801245e:	1c74      	adds	r4, r6, #1
 8012460:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012464:	1224      	asrs	r4, r4, #8
 8012466:	b2a7      	uxth	r7, r4
 8012468:	122e      	asrs	r6, r5, #8
 801246a:	43e4      	mvns	r4, r4
 801246c:	b2e4      	uxtb	r4, r4
 801246e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012472:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012476:	fb16 f604 	smulbb	r6, r6, r4
 801247a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801247e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012482:	00ed      	lsls	r5, r5, #3
 8012484:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012488:	b2ed      	uxtb	r5, r5
 801248a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801248e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012492:	fb15 f504 	smulbb	r5, r5, r4
 8012496:	fa5f f989 	uxtb.w	r9, r9
 801249a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801249e:	fb09 5507 	mla	r5, r9, r7, r5
 80124a2:	fb1a fa04 	smulbb	sl, sl, r4
 80124a6:	fa1f fc8c 	uxth.w	ip, ip
 80124aa:	b2ad      	uxth	r5, r5
 80124ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80124b0:	fb06 a607 	mla	r6, r6, r7, sl
 80124b4:	f10c 0401 	add.w	r4, ip, #1
 80124b8:	f105 0a01 	add.w	sl, r5, #1
 80124bc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80124c0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80124c4:	b2b6      	uxth	r6, r6
 80124c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80124ca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80124ce:	ea4a 0c0c 	orr.w	ip, sl, ip
 80124d2:	f106 0a01 	add.w	sl, r6, #1
 80124d6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80124da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80124de:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80124e2:	9c03      	ldr	r4, [sp, #12]
 80124e4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80124e8:	f820 c004 	strh.w	ip, [r0, r4]
 80124ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80124ee:	4421      	add	r1, r4
 80124f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80124f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80124f6:	4422      	add	r2, r4
 80124f8:	e750      	b.n	801239c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80124fa:	f04f 0900 	mov.w	r9, #0
 80124fe:	eba3 0409 	sub.w	r4, r3, r9
 8012502:	2c00      	cmp	r4, #0
 8012504:	f77f af4e 	ble.w	80123a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012508:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801250c:	140d      	asrs	r5, r1, #16
 801250e:	1414      	asrs	r4, r2, #16
 8012510:	fb06 5404 	mla	r4, r6, r4, r5
 8012514:	9d02      	ldr	r5, [sp, #8]
 8012516:	5d2e      	ldrb	r6, [r5, r4]
 8012518:	2e00      	cmp	r6, #0
 801251a:	d04c      	beq.n	80125b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801251c:	9d01      	ldr	r5, [sp, #4]
 801251e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8012522:	9c05      	ldr	r4, [sp, #20]
 8012524:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012528:	4366      	muls	r6, r4
 801252a:	1c74      	adds	r4, r6, #1
 801252c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012530:	1224      	asrs	r4, r4, #8
 8012532:	b2a7      	uxth	r7, r4
 8012534:	122e      	asrs	r6, r5, #8
 8012536:	43e4      	mvns	r4, r4
 8012538:	b2e4      	uxtb	r4, r4
 801253a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801253e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012542:	fb16 f604 	smulbb	r6, r6, r4
 8012546:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801254a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801254e:	00ed      	lsls	r5, r5, #3
 8012550:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012554:	b2ed      	uxtb	r5, r5
 8012556:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801255a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801255e:	fb15 f504 	smulbb	r5, r5, r4
 8012562:	fa5f f888 	uxtb.w	r8, r8
 8012566:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801256a:	fb08 5507 	mla	r5, r8, r7, r5
 801256e:	fb1a fa04 	smulbb	sl, sl, r4
 8012572:	fa1f fc8c 	uxth.w	ip, ip
 8012576:	b2ad      	uxth	r5, r5
 8012578:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801257c:	fb06 a607 	mla	r6, r6, r7, sl
 8012580:	f10c 0401 	add.w	r4, ip, #1
 8012584:	f105 0a01 	add.w	sl, r5, #1
 8012588:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801258c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012590:	b2b6      	uxth	r6, r6
 8012592:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012596:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801259a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801259e:	f106 0a01 	add.w	sl, r6, #1
 80125a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80125a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80125aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80125ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 80125b2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80125b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80125b8:	4421      	add	r1, r4
 80125ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80125bc:	f109 0901 	add.w	r9, r9, #1
 80125c0:	4422      	add	r2, r4
 80125c2:	e79c      	b.n	80124fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80125c4:	b007      	add	sp, #28
 80125c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080125ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80125ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125ce:	b085      	sub	sp, #20
 80125d0:	468b      	mov	fp, r1
 80125d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80125d4:	9203      	str	r2, [sp, #12]
 80125d6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80125da:	6861      	ldr	r1, [r4, #4]
 80125dc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80125e0:	fb01 2000 	mla	r0, r1, r0, r2
 80125e4:	6822      	ldr	r2, [r4, #0]
 80125e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80125ea:	f8d8 2000 	ldr.w	r2, [r8]
 80125ee:	9200      	str	r2, [sp, #0]
 80125f0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80125f4:	9201      	str	r2, [sp, #4]
 80125f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80125fa:	f1bb 0f00 	cmp.w	fp, #0
 80125fe:	dc03      	bgt.n	8012608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012600:	9a03      	ldr	r2, [sp, #12]
 8012602:	2a00      	cmp	r2, #0
 8012604:	f340 8146 	ble.w	8012894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012608:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801260a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801260e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012612:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012616:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012618:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801261c:	2b00      	cmp	r3, #0
 801261e:	dd0e      	ble.n	801263e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012620:	140c      	asrs	r4, r1, #16
 8012622:	d405      	bmi.n	8012630 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012624:	42bc      	cmp	r4, r7
 8012626:	da03      	bge.n	8012630 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012628:	1414      	asrs	r4, r2, #16
 801262a:	d401      	bmi.n	8012630 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801262c:	42b4      	cmp	r4, r6
 801262e:	db07      	blt.n	8012640 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012630:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012632:	4421      	add	r1, r4
 8012634:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012636:	3b01      	subs	r3, #1
 8012638:	4422      	add	r2, r4
 801263a:	3002      	adds	r0, #2
 801263c:	e7ee      	b.n	801261c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801263e:	d017      	beq.n	8012670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012640:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012642:	1e5c      	subs	r4, r3, #1
 8012644:	fb05 1504 	mla	r5, r5, r4, r1
 8012648:	142d      	asrs	r5, r5, #16
 801264a:	d409      	bmi.n	8012660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801264c:	42bd      	cmp	r5, r7
 801264e:	da07      	bge.n	8012660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012650:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012652:	fb05 2404 	mla	r4, r5, r4, r2
 8012656:	1424      	asrs	r4, r4, #16
 8012658:	d402      	bmi.n	8012660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801265a:	42b4      	cmp	r4, r6
 801265c:	f2c0 80b3 	blt.w	80127c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012660:	2600      	movs	r6, #0
 8012662:	199c      	adds	r4, r3, r6
 8012664:	2c00      	cmp	r4, #0
 8012666:	dc3e      	bgt.n	80126e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012668:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801266c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012670:	f1bb 0f00 	cmp.w	fp, #0
 8012674:	f340 810e 	ble.w	8012894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012678:	ee30 0a04 	vadd.f32	s0, s0, s8
 801267c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012680:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012684:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012686:	f1bb 0b01 	subs.w	fp, fp, #1
 801268a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801268e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012692:	eeb0 6a62 	vmov.f32	s12, s5
 8012696:	ee61 7a27 	vmul.f32	s15, s2, s15
 801269a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801269e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80126a2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80126a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80126aa:	eeb0 6a43 	vmov.f32	s12, s6
 80126ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80126b2:	ee12 2a90 	vmov	r2, s5
 80126b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80126ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80126be:	ee13 2a10 	vmov	r2, s6
 80126c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80126c6:	9311      	str	r3, [sp, #68]	; 0x44
 80126c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80126ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80126ce:	9a03      	ldr	r2, [sp, #12]
 80126d0:	9312      	str	r3, [sp, #72]	; 0x48
 80126d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80126d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80126d8:	eeb0 3a67 	vmov.f32	s6, s15
 80126dc:	bf08      	it	eq
 80126de:	4613      	moveq	r3, r2
 80126e0:	eef0 2a47 	vmov.f32	s5, s14
 80126e4:	e789      	b.n	80125fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80126e6:	140f      	asrs	r7, r1, #16
 80126e8:	d45f      	bmi.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80126ea:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80126ee:	42bd      	cmp	r5, r7
 80126f0:	dd5b      	ble.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80126f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80126f6:	d458      	bmi.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80126f8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80126fc:	4564      	cmp	r4, ip
 80126fe:	dd54      	ble.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012700:	b22d      	sxth	r5, r5
 8012702:	fb0c 7505 	mla	r5, ip, r5, r7
 8012706:	9c01      	ldr	r4, [sp, #4]
 8012708:	5d64      	ldrb	r4, [r4, r5]
 801270a:	2cff      	cmp	r4, #255	; 0xff
 801270c:	d053      	beq.n	80127b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801270e:	2c00      	cmp	r4, #0
 8012710:	d04b      	beq.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012712:	9f00      	ldr	r7, [sp, #0]
 8012714:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012718:	f06f 0501 	mvn.w	r5, #1
 801271c:	4375      	muls	r5, r6
 801271e:	9502      	str	r5, [sp, #8]
 8012720:	5b45      	ldrh	r5, [r0, r5]
 8012722:	fa1f fc84 	uxth.w	ip, r4
 8012726:	122f      	asrs	r7, r5, #8
 8012728:	43e4      	mvns	r4, r4
 801272a:	b2e4      	uxtb	r4, r4
 801272c:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012730:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012734:	fb17 f704 	smulbb	r7, r7, r4
 8012738:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801273c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012740:	00ed      	lsls	r5, r5, #3
 8012742:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012746:	b2ed      	uxtb	r5, r5
 8012748:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801274c:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012750:	fb15 f504 	smulbb	r5, r5, r4
 8012754:	fa5f f989 	uxtb.w	r9, r9
 8012758:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801275c:	fb09 550c 	mla	r5, r9, ip, r5
 8012760:	fb1a fa04 	smulbb	sl, sl, r4
 8012764:	fa1f fe8e 	uxth.w	lr, lr
 8012768:	b2ad      	uxth	r5, r5
 801276a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801276e:	fb07 a70c 	mla	r7, r7, ip, sl
 8012772:	f10e 0401 	add.w	r4, lr, #1
 8012776:	f105 0a01 	add.w	sl, r5, #1
 801277a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801277e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012782:	b2bf      	uxth	r7, r7
 8012784:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012788:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801278c:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012790:	f107 0a01 	add.w	sl, r7, #1
 8012794:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012798:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801279c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80127a0:	9c02      	ldr	r4, [sp, #8]
 80127a2:	ea4e 0e0a 	orr.w	lr, lr, sl
 80127a6:	f820 e004 	strh.w	lr, [r0, r4]
 80127aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80127ac:	4421      	add	r1, r4
 80127ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80127b0:	3e01      	subs	r6, #1
 80127b2:	4422      	add	r2, r4
 80127b4:	e755      	b.n	8012662 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80127b6:	9c00      	ldr	r4, [sp, #0]
 80127b8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80127bc:	f06f 0401 	mvn.w	r4, #1
 80127c0:	4374      	muls	r4, r6
 80127c2:	5305      	strh	r5, [r0, r4]
 80127c4:	e7f1      	b.n	80127aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80127c6:	f04f 0900 	mov.w	r9, #0
 80127ca:	eba3 0409 	sub.w	r4, r3, r9
 80127ce:	2c00      	cmp	r4, #0
 80127d0:	f77f af4a 	ble.w	8012668 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80127d4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80127d8:	1414      	asrs	r4, r2, #16
 80127da:	140d      	asrs	r5, r1, #16
 80127dc:	fb06 5504 	mla	r5, r6, r4, r5
 80127e0:	9c01      	ldr	r4, [sp, #4]
 80127e2:	5d64      	ldrb	r4, [r4, r5]
 80127e4:	2cff      	cmp	r4, #255	; 0xff
 80127e6:	d04f      	beq.n	8012888 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80127e8:	2c00      	cmp	r4, #0
 80127ea:	d046      	beq.n	801287a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80127ec:	9e00      	ldr	r6, [sp, #0]
 80127ee:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80127f2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80127f6:	b2a7      	uxth	r7, r4
 80127f8:	122e      	asrs	r6, r5, #8
 80127fa:	43e4      	mvns	r4, r4
 80127fc:	b2e4      	uxtb	r4, r4
 80127fe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012802:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012806:	fb16 f604 	smulbb	r6, r6, r4
 801280a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801280e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012812:	00ed      	lsls	r5, r5, #3
 8012814:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012818:	b2ed      	uxtb	r5, r5
 801281a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801281e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012822:	fb15 f504 	smulbb	r5, r5, r4
 8012826:	fa5f fe8e 	uxtb.w	lr, lr
 801282a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801282e:	fb0e 5507 	mla	r5, lr, r7, r5
 8012832:	fb1a fa04 	smulbb	sl, sl, r4
 8012836:	fa1f fc8c 	uxth.w	ip, ip
 801283a:	b2ad      	uxth	r5, r5
 801283c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012840:	fb06 a607 	mla	r6, r6, r7, sl
 8012844:	f10c 0401 	add.w	r4, ip, #1
 8012848:	f105 0a01 	add.w	sl, r5, #1
 801284c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012850:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012854:	b2b6      	uxth	r6, r6
 8012856:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801285a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801285e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012862:	f106 0a01 	add.w	sl, r6, #1
 8012866:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801286a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801286e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012872:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012876:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801287a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801287c:	4421      	add	r1, r4
 801287e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012880:	f109 0901 	add.w	r9, r9, #1
 8012884:	4422      	add	r2, r4
 8012886:	e7a0      	b.n	80127ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012888:	9c00      	ldr	r4, [sp, #0]
 801288a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801288e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8012892:	e7f2      	b.n	801287a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8012894:	b005      	add	sp, #20
 8012896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801289a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801289a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801289e:	b085      	sub	sp, #20
 80128a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80128a2:	9203      	str	r2, [sp, #12]
 80128a4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80128a8:	9201      	str	r2, [sp, #4]
 80128aa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80128ae:	9100      	str	r1, [sp, #0]
 80128b0:	6841      	ldr	r1, [r0, #4]
 80128b2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80128b6:	fb01 2404 	mla	r4, r1, r4, r2
 80128ba:	6802      	ldr	r2, [r0, #0]
 80128bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80128c0:	f8de 2000 	ldr.w	r2, [lr]
 80128c4:	9202      	str	r2, [sp, #8]
 80128c6:	9a01      	ldr	r2, [sp, #4]
 80128c8:	43d6      	mvns	r6, r2
 80128ca:	b2f6      	uxtb	r6, r6
 80128cc:	9a00      	ldr	r2, [sp, #0]
 80128ce:	2a00      	cmp	r2, #0
 80128d0:	dc03      	bgt.n	80128da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80128d2:	9a03      	ldr	r2, [sp, #12]
 80128d4:	2a00      	cmp	r2, #0
 80128d6:	f340 8124 	ble.w	8012b22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80128da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80128dc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80128e0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80128e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80128e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80128ea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80128ee:	2b00      	cmp	r3, #0
 80128f0:	dd0e      	ble.n	8012910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80128f2:	1408      	asrs	r0, r1, #16
 80128f4:	d405      	bmi.n	8012902 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128f6:	4560      	cmp	r0, ip
 80128f8:	da03      	bge.n	8012902 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128fa:	1410      	asrs	r0, r2, #16
 80128fc:	d401      	bmi.n	8012902 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128fe:	42b8      	cmp	r0, r7
 8012900:	db07      	blt.n	8012912 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012902:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012904:	4401      	add	r1, r0
 8012906:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012908:	3b01      	subs	r3, #1
 801290a:	4402      	add	r2, r0
 801290c:	3402      	adds	r4, #2
 801290e:	e7ee      	b.n	80128ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012910:	d06e      	beq.n	80129f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012912:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012914:	1e58      	subs	r0, r3, #1
 8012916:	fb05 1500 	mla	r5, r5, r0, r1
 801291a:	142d      	asrs	r5, r5, #16
 801291c:	d45c      	bmi.n	80129d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801291e:	4565      	cmp	r5, ip
 8012920:	da5a      	bge.n	80129d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012922:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012924:	fb05 2000 	mla	r0, r5, r0, r2
 8012928:	1400      	asrs	r0, r0, #16
 801292a:	d455      	bmi.n	80129d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801292c:	42b8      	cmp	r0, r7
 801292e:	da53      	bge.n	80129d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012930:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012934:	4699      	mov	r9, r3
 8012936:	46a2      	mov	sl, r4
 8012938:	f1b9 0f00 	cmp.w	r9, #0
 801293c:	dd54      	ble.n	80129e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801293e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012942:	140d      	asrs	r5, r1, #16
 8012944:	1410      	asrs	r0, r2, #16
 8012946:	fb07 5000 	mla	r0, r7, r0, r5
 801294a:	9d02      	ldr	r5, [sp, #8]
 801294c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012950:	f8ba 5000 	ldrh.w	r5, [sl]
 8012954:	122f      	asrs	r7, r5, #8
 8012956:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801295a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801295e:	fb17 f706 	smulbb	r7, r7, r6
 8012962:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012966:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801296a:	00ed      	lsls	r5, r5, #3
 801296c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012970:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012974:	10c7      	asrs	r7, r0, #3
 8012976:	b2ed      	uxtb	r5, r5
 8012978:	00c0      	lsls	r0, r0, #3
 801297a:	fb18 f806 	smulbb	r8, r8, r6
 801297e:	fb15 f506 	smulbb	r5, r5, r6
 8012982:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012986:	b2c0      	uxtb	r0, r0
 8012988:	fa1f fc8c 	uxth.w	ip, ip
 801298c:	fb07 870b 	mla	r7, r7, fp, r8
 8012990:	fb00 500b 	mla	r0, r0, fp, r5
 8012994:	b280      	uxth	r0, r0
 8012996:	b2bf      	uxth	r7, r7
 8012998:	f10c 0501 	add.w	r5, ip, #1
 801299c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80129a0:	f107 0801 	add.w	r8, r7, #1
 80129a4:	1c45      	adds	r5, r0, #1
 80129a6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80129aa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80129ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 80129b0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80129b4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80129b8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80129bc:	ea45 0c0c 	orr.w	ip, r5, ip
 80129c0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80129c4:	4401      	add	r1, r0
 80129c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80129c8:	ea4c 0c08 	orr.w	ip, ip, r8
 80129cc:	f82a cb02 	strh.w	ip, [sl], #2
 80129d0:	4402      	add	r2, r0
 80129d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80129d6:	e7af      	b.n	8012938 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80129d8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80129dc:	f04f 0800 	mov.w	r8, #0
 80129e0:	eb03 0008 	add.w	r0, r3, r8
 80129e4:	2800      	cmp	r0, #0
 80129e6:	dc41      	bgt.n	8012a6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80129e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80129ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80129f0:	9b00      	ldr	r3, [sp, #0]
 80129f2:	2b00      	cmp	r3, #0
 80129f4:	f340 8095 	ble.w	8012b22 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80129f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80129fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012a00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012a04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012a06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012a0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012a0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012a12:	eef0 6a62 	vmov.f32	s13, s5
 8012a16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012a1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012a1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012a22:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8012a26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012a2a:	eef0 6a43 	vmov.f32	s13, s6
 8012a2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012a32:	ee12 2a90 	vmov	r2, s5
 8012a36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012a3e:	ee13 2a10 	vmov	r2, s6
 8012a42:	9311      	str	r3, [sp, #68]	; 0x44
 8012a44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012a46:	fb92 f3f3 	sdiv	r3, r2, r3
 8012a4a:	9312      	str	r3, [sp, #72]	; 0x48
 8012a4c:	9b00      	ldr	r3, [sp, #0]
 8012a4e:	9a03      	ldr	r2, [sp, #12]
 8012a50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012a54:	3b01      	subs	r3, #1
 8012a56:	9300      	str	r3, [sp, #0]
 8012a58:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8012a5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012a5e:	eeb0 3a67 	vmov.f32	s6, s15
 8012a62:	bf08      	it	eq
 8012a64:	4613      	moveq	r3, r2
 8012a66:	eef0 2a47 	vmov.f32	s5, s14
 8012a6a:	e72f      	b.n	80128cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012a6c:	140f      	asrs	r7, r1, #16
 8012a6e:	d451      	bmi.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a70:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012a74:	42bd      	cmp	r5, r7
 8012a76:	dd4d      	ble.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a78:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012a7c:	d44a      	bmi.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a7e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012a82:	4560      	cmp	r0, ip
 8012a84:	dd46      	ble.n	8012b14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a86:	b22d      	sxth	r5, r5
 8012a88:	fb0c 7505 	mla	r5, ip, r5, r7
 8012a8c:	9802      	ldr	r0, [sp, #8]
 8012a8e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012a92:	f06f 0501 	mvn.w	r5, #1
 8012a96:	fb05 fb08 	mul.w	fp, r5, r8
 8012a9a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012a9e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012aa2:	122f      	asrs	r7, r5, #8
 8012aa4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012aa8:	fb17 f706 	smulbb	r7, r7, r6
 8012aac:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012ab0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012ab4:	00ed      	lsls	r5, r5, #3
 8012ab6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012aba:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012abe:	10c7      	asrs	r7, r0, #3
 8012ac0:	b2ed      	uxtb	r5, r5
 8012ac2:	00c0      	lsls	r0, r0, #3
 8012ac4:	fb19 f906 	smulbb	r9, r9, r6
 8012ac8:	fb15 f506 	smulbb	r5, r5, r6
 8012acc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012ad0:	b2c0      	uxtb	r0, r0
 8012ad2:	fa1f fc8c 	uxth.w	ip, ip
 8012ad6:	fb07 970a 	mla	r7, r7, sl, r9
 8012ada:	fb00 500a 	mla	r0, r0, sl, r5
 8012ade:	b2bf      	uxth	r7, r7
 8012ae0:	b280      	uxth	r0, r0
 8012ae2:	f10c 0501 	add.w	r5, ip, #1
 8012ae6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012aea:	f107 0901 	add.w	r9, r7, #1
 8012aee:	1c45      	adds	r5, r0, #1
 8012af0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012af4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012af8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012afc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012b00:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012b04:	ea45 0c0c 	orr.w	ip, r5, ip
 8012b08:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012b0c:	ea4c 0c09 	orr.w	ip, ip, r9
 8012b10:	f824 c00b 	strh.w	ip, [r4, fp]
 8012b14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012b16:	4401      	add	r1, r0
 8012b18:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012b1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8012b1e:	4402      	add	r2, r0
 8012b20:	e75e      	b.n	80129e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012b22:	b005      	add	sp, #20
 8012b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012b28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b2c:	b085      	sub	sp, #20
 8012b2e:	4693      	mov	fp, r2
 8012b30:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012b32:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012b34:	6870      	ldr	r0, [r6, #4]
 8012b36:	9101      	str	r1, [sp, #4]
 8012b38:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012b3c:	fb00 2404 	mla	r4, r0, r4, r2
 8012b40:	6832      	ldr	r2, [r6, #0]
 8012b42:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8012b46:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012b4a:	682a      	ldr	r2, [r5, #0]
 8012b4c:	9202      	str	r2, [sp, #8]
 8012b4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b52:	9a01      	ldr	r2, [sp, #4]
 8012b54:	2a00      	cmp	r2, #0
 8012b56:	dc03      	bgt.n	8012b60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012b58:	f1bb 0f00 	cmp.w	fp, #0
 8012b5c:	f340 809a 	ble.w	8012c94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012b60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012b62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012b66:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012b6a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012b6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012b70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012b74:	2b00      	cmp	r3, #0
 8012b76:	dd0c      	ble.n	8012b92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8012b78:	1406      	asrs	r6, r0, #16
 8012b7a:	d405      	bmi.n	8012b88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b7c:	454e      	cmp	r6, r9
 8012b7e:	da03      	bge.n	8012b88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b80:	1416      	asrs	r6, r2, #16
 8012b82:	d401      	bmi.n	8012b88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b84:	4546      	cmp	r6, r8
 8012b86:	db05      	blt.n	8012b94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012b88:	4470      	add	r0, lr
 8012b8a:	4462      	add	r2, ip
 8012b8c:	3b01      	subs	r3, #1
 8012b8e:	3402      	adds	r4, #2
 8012b90:	e7f0      	b.n	8012b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012b92:	d00f      	beq.n	8012bb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012b94:	1e5e      	subs	r6, r3, #1
 8012b96:	fb0e 0706 	mla	r7, lr, r6, r0
 8012b9a:	143f      	asrs	r7, r7, #16
 8012b9c:	d541      	bpl.n	8012c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8012b9e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012ba2:	4698      	mov	r8, r3
 8012ba4:	9603      	str	r6, [sp, #12]
 8012ba6:	f1b8 0f00 	cmp.w	r8, #0
 8012baa:	dc56      	bgt.n	8012c5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8012bac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012bb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012bb4:	9b01      	ldr	r3, [sp, #4]
 8012bb6:	2b00      	cmp	r3, #0
 8012bb8:	dd6c      	ble.n	8012c94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012bba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012bbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012bc2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012bc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012bc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012bcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012bd0:	eeb0 6a62 	vmov.f32	s12, s5
 8012bd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012bd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012bdc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012be0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012be4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012be8:	eeb0 6a43 	vmov.f32	s12, s6
 8012bec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012bf0:	ee12 2a90 	vmov	r2, s5
 8012bf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012bf8:	fb92 fef3 	sdiv	lr, r2, r3
 8012bfc:	ee13 2a10 	vmov	r2, s6
 8012c00:	fb92 fcf3 	sdiv	ip, r2, r3
 8012c04:	9b01      	ldr	r3, [sp, #4]
 8012c06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c0a:	3b01      	subs	r3, #1
 8012c0c:	9301      	str	r3, [sp, #4]
 8012c0e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012c12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c14:	eeb0 3a67 	vmov.f32	s6, s15
 8012c18:	bf08      	it	eq
 8012c1a:	465b      	moveq	r3, fp
 8012c1c:	eef0 2a47 	vmov.f32	s5, s14
 8012c20:	e797      	b.n	8012b52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012c22:	454f      	cmp	r7, r9
 8012c24:	dabb      	bge.n	8012b9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012c26:	fb0c 2606 	mla	r6, ip, r6, r2
 8012c2a:	1436      	asrs	r6, r6, #16
 8012c2c:	d4b7      	bmi.n	8012b9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012c2e:	4546      	cmp	r6, r8
 8012c30:	dab5      	bge.n	8012b9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012c32:	461e      	mov	r6, r3
 8012c34:	46a0      	mov	r8, r4
 8012c36:	2e00      	cmp	r6, #0
 8012c38:	ddb8      	ble.n	8012bac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012c3a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012c3e:	9902      	ldr	r1, [sp, #8]
 8012c40:	1417      	asrs	r7, r2, #16
 8012c42:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012c46:	fb0a 9707 	mla	r7, sl, r7, r9
 8012c4a:	4470      	add	r0, lr
 8012c4c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012c50:	f828 7b02 	strh.w	r7, [r8], #2
 8012c54:	4462      	add	r2, ip
 8012c56:	3e01      	subs	r6, #1
 8012c58:	e7ed      	b.n	8012c36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8012c5a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012c5e:	d414      	bmi.n	8012c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c60:	68ae      	ldr	r6, [r5, #8]
 8012c62:	454e      	cmp	r6, r9
 8012c64:	dd11      	ble.n	8012c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c66:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012c6a:	d40e      	bmi.n	8012c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c6c:	68ef      	ldr	r7, [r5, #12]
 8012c6e:	4557      	cmp	r7, sl
 8012c70:	dd0b      	ble.n	8012c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c72:	b236      	sxth	r6, r6
 8012c74:	fb0a 9606 	mla	r6, sl, r6, r9
 8012c78:	9f02      	ldr	r7, [sp, #8]
 8012c7a:	f06f 0101 	mvn.w	r1, #1
 8012c7e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012c82:	fb01 f608 	mul.w	r6, r1, r8
 8012c86:	9903      	ldr	r1, [sp, #12]
 8012c88:	538f      	strh	r7, [r1, r6]
 8012c8a:	4470      	add	r0, lr
 8012c8c:	4462      	add	r2, ip
 8012c8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c92:	e788      	b.n	8012ba6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012c94:	b005      	add	sp, #20
 8012c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012c9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c9e:	b085      	sub	sp, #20
 8012ca0:	468b      	mov	fp, r1
 8012ca2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012ca4:	9202      	str	r2, [sp, #8]
 8012ca6:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8012caa:	9203      	str	r2, [sp, #12]
 8012cac:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012cb0:	6841      	ldr	r1, [r0, #4]
 8012cb2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012cb6:	fb01 2404 	mla	r4, r1, r4, r2
 8012cba:	6802      	ldr	r2, [r0, #0]
 8012cbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012cc0:	f8d8 2000 	ldr.w	r2, [r8]
 8012cc4:	9200      	str	r2, [sp, #0]
 8012cc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012cca:	f1bb 0f00 	cmp.w	fp, #0
 8012cce:	dc03      	bgt.n	8012cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012cd0:	9a02      	ldr	r2, [sp, #8]
 8012cd2:	2a00      	cmp	r2, #0
 8012cd4:	f340 8134 	ble.w	8012f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8012cd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012cda:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012cde:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012ce2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012ce6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012ce8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012cec:	2b00      	cmp	r3, #0
 8012cee:	dd0e      	ble.n	8012d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012cf0:	1402      	asrs	r2, r0, #16
 8012cf2:	d405      	bmi.n	8012d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012cf4:	42ba      	cmp	r2, r7
 8012cf6:	da03      	bge.n	8012d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012cf8:	140a      	asrs	r2, r1, #16
 8012cfa:	d401      	bmi.n	8012d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012cfc:	42b2      	cmp	r2, r6
 8012cfe:	db07      	blt.n	8012d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012d00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012d02:	4410      	add	r0, r2
 8012d04:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012d06:	3b01      	subs	r3, #1
 8012d08:	4411      	add	r1, r2
 8012d0a:	3402      	adds	r4, #2
 8012d0c:	e7ee      	b.n	8012cec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012d0e:	d019      	beq.n	8012d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012d10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012d12:	1e5a      	subs	r2, r3, #1
 8012d14:	fb05 0502 	mla	r5, r5, r2, r0
 8012d18:	142d      	asrs	r5, r5, #16
 8012d1a:	d409      	bmi.n	8012d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012d1c:	42bd      	cmp	r5, r7
 8012d1e:	da07      	bge.n	8012d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012d20:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012d22:	fb05 1202 	mla	r2, r5, r2, r1
 8012d26:	1412      	asrs	r2, r2, #16
 8012d28:	d402      	bmi.n	8012d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012d2a:	42b2      	cmp	r2, r6
 8012d2c:	f2c0 80aa 	blt.w	8012e84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8012d30:	f04f 0c00 	mov.w	ip, #0
 8012d34:	eb03 020c 	add.w	r2, r3, ip
 8012d38:	2a00      	cmp	r2, #0
 8012d3a:	dc3e      	bgt.n	8012dba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8012d3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012d40:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012d44:	f1bb 0f00 	cmp.w	fp, #0
 8012d48:	f340 80fa 	ble.w	8012f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8012d4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012d50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012d54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012d58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d5a:	f1bb 0b01 	subs.w	fp, fp, #1
 8012d5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012d62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012d66:	eeb0 6a62 	vmov.f32	s12, s5
 8012d6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012d6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012d72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012d76:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012d7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012d7e:	eeb0 6a43 	vmov.f32	s12, s6
 8012d82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012d86:	ee12 2a90 	vmov	r2, s5
 8012d8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012d8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d92:	ee13 2a10 	vmov	r2, s6
 8012d96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012d9a:	9311      	str	r3, [sp, #68]	; 0x44
 8012d9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012da2:	9a02      	ldr	r2, [sp, #8]
 8012da4:	9312      	str	r3, [sp, #72]	; 0x48
 8012da6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012daa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012dac:	eeb0 3a67 	vmov.f32	s6, s15
 8012db0:	bf08      	it	eq
 8012db2:	4613      	moveq	r3, r2
 8012db4:	eef0 2a47 	vmov.f32	s5, s14
 8012db8:	e787      	b.n	8012cca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012dba:	1406      	asrs	r6, r0, #16
 8012dbc:	d45b      	bmi.n	8012e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012dbe:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012dc2:	42b5      	cmp	r5, r6
 8012dc4:	dd57      	ble.n	8012e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012dc6:	140f      	asrs	r7, r1, #16
 8012dc8:	d455      	bmi.n	8012e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012dca:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8012dce:	42ba      	cmp	r2, r7
 8012dd0:	dd51      	ble.n	8012e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012dd2:	b22d      	sxth	r5, r5
 8012dd4:	fb07 6505 	mla	r5, r7, r5, r6
 8012dd8:	9a00      	ldr	r2, [sp, #0]
 8012dda:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 8012dde:	0e2e      	lsrs	r6, r5, #24
 8012de0:	d049      	beq.n	8012e76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012de2:	f06f 0201 	mvn.w	r2, #1
 8012de6:	fb02 f20c 	mul.w	r2, r2, ip
 8012dea:	9201      	str	r2, [sp, #4]
 8012dec:	f834 e002 	ldrh.w	lr, [r4, r2]
 8012df0:	9a03      	ldr	r2, [sp, #12]
 8012df2:	4356      	muls	r6, r2
 8012df4:	1c72      	adds	r2, r6, #1
 8012df6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012dfa:	1212      	asrs	r2, r2, #8
 8012dfc:	fa1f f982 	uxth.w	r9, r2
 8012e00:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012e04:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012e08:	43d2      	mvns	r2, r2
 8012e0a:	b2d2      	uxtb	r2, r2
 8012e0c:	fb16 f609 	smulbb	r6, r6, r9
 8012e10:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012e14:	fb07 6702 	mla	r7, r7, r2, r6
 8012e18:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012e1c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012e20:	b2ed      	uxtb	r5, r5
 8012e22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012e26:	fa5f fe8e 	uxtb.w	lr, lr
 8012e2a:	fb15 f509 	smulbb	r5, r5, r9
 8012e2e:	fb0e 5502 	mla	r5, lr, r2, r5
 8012e32:	b2bf      	uxth	r7, r7
 8012e34:	fb1a fa09 	smulbb	sl, sl, r9
 8012e38:	b2ad      	uxth	r5, r5
 8012e3a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012e3e:	fb06 a602 	mla	r6, r6, r2, sl
 8012e42:	1c7a      	adds	r2, r7, #1
 8012e44:	f105 0a01 	add.w	sl, r5, #1
 8012e48:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012e4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012e50:	b2b6      	uxth	r6, r6
 8012e52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012e56:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012e5a:	ea4a 0707 	orr.w	r7, sl, r7
 8012e5e:	f106 0a01 	add.w	sl, r6, #1
 8012e62:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012e66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012e6a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012e6e:	9a01      	ldr	r2, [sp, #4]
 8012e70:	ea47 070a 	orr.w	r7, r7, sl
 8012e74:	52a7      	strh	r7, [r4, r2]
 8012e76:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012e78:	4410      	add	r0, r2
 8012e7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012e7c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012e80:	4411      	add	r1, r2
 8012e82:	e757      	b.n	8012d34 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8012e84:	f04f 0e00 	mov.w	lr, #0
 8012e88:	eba3 020e 	sub.w	r2, r3, lr
 8012e8c:	2a00      	cmp	r2, #0
 8012e8e:	f77f af55 	ble.w	8012d3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012e92:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012e96:	1405      	asrs	r5, r0, #16
 8012e98:	140a      	asrs	r2, r1, #16
 8012e9a:	fb06 5202 	mla	r2, r6, r2, r5
 8012e9e:	9d00      	ldr	r5, [sp, #0]
 8012ea0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012ea4:	0e2e      	lsrs	r6, r5, #24
 8012ea6:	d044      	beq.n	8012f32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8012ea8:	9a03      	ldr	r2, [sp, #12]
 8012eaa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012eae:	4356      	muls	r6, r2
 8012eb0:	1c72      	adds	r2, r6, #1
 8012eb2:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012eb6:	1212      	asrs	r2, r2, #8
 8012eb8:	fa1f f982 	uxth.w	r9, r2
 8012ebc:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012ec0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012ec4:	43d2      	mvns	r2, r2
 8012ec6:	b2d2      	uxtb	r2, r2
 8012ec8:	fb16 f609 	smulbb	r6, r6, r9
 8012ecc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012ed0:	fb07 6702 	mla	r7, r7, r2, r6
 8012ed4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012ed8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012edc:	b2ed      	uxtb	r5, r5
 8012ede:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012ee2:	fa5f fc8c 	uxtb.w	ip, ip
 8012ee6:	fb15 f509 	smulbb	r5, r5, r9
 8012eea:	fb0c 5502 	mla	r5, ip, r2, r5
 8012eee:	b2bf      	uxth	r7, r7
 8012ef0:	fb1a fa09 	smulbb	sl, sl, r9
 8012ef4:	b2ad      	uxth	r5, r5
 8012ef6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012efa:	fb06 a602 	mla	r6, r6, r2, sl
 8012efe:	1c7a      	adds	r2, r7, #1
 8012f00:	f105 0a01 	add.w	sl, r5, #1
 8012f04:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012f08:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012f0c:	b2b6      	uxth	r6, r6
 8012f0e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012f12:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012f16:	ea4a 0707 	orr.w	r7, sl, r7
 8012f1a:	f106 0a01 	add.w	sl, r6, #1
 8012f1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012f22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012f26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012f2a:	ea47 070a 	orr.w	r7, r7, sl
 8012f2e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012f32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012f34:	4410      	add	r0, r2
 8012f36:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012f38:	f10e 0e01 	add.w	lr, lr, #1
 8012f3c:	4411      	add	r1, r2
 8012f3e:	e7a3      	b.n	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8012f40:	b005      	add	sp, #20
 8012f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012f48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f4c:	b085      	sub	sp, #20
 8012f4e:	468b      	mov	fp, r1
 8012f50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012f52:	9203      	str	r2, [sp, #12]
 8012f54:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8012f58:	6861      	ldr	r1, [r4, #4]
 8012f5a:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8012f5e:	fb01 2000 	mla	r0, r1, r0, r2
 8012f62:	6822      	ldr	r2, [r4, #0]
 8012f64:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012f68:	f8d9 2000 	ldr.w	r2, [r9]
 8012f6c:	9200      	str	r2, [sp, #0]
 8012f6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012f72:	f1bb 0f00 	cmp.w	fp, #0
 8012f76:	dc03      	bgt.n	8012f80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012f78:	9a03      	ldr	r2, [sp, #12]
 8012f7a:	2a00      	cmp	r2, #0
 8012f7c:	f340 814a 	ble.w	8013214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8012f80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012f82:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012f86:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012f8a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012f8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012f90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012f94:	2b00      	cmp	r3, #0
 8012f96:	dd0e      	ble.n	8012fb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012f98:	140c      	asrs	r4, r1, #16
 8012f9a:	d405      	bmi.n	8012fa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012f9c:	42bc      	cmp	r4, r7
 8012f9e:	da03      	bge.n	8012fa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012fa0:	1414      	asrs	r4, r2, #16
 8012fa2:	d401      	bmi.n	8012fa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012fa4:	42b4      	cmp	r4, r6
 8012fa6:	db07      	blt.n	8012fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012fa8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012faa:	4421      	add	r1, r4
 8012fac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012fae:	3b01      	subs	r3, #1
 8012fb0:	4422      	add	r2, r4
 8012fb2:	3002      	adds	r0, #2
 8012fb4:	e7ee      	b.n	8012f94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012fb6:	d017      	beq.n	8012fe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012fb8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012fba:	1e5c      	subs	r4, r3, #1
 8012fbc:	fb05 1504 	mla	r5, r5, r4, r1
 8012fc0:	142d      	asrs	r5, r5, #16
 8012fc2:	d409      	bmi.n	8012fd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fc4:	42bd      	cmp	r5, r7
 8012fc6:	da07      	bge.n	8012fd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fc8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012fca:	fb05 2404 	mla	r4, r5, r4, r2
 8012fce:	1424      	asrs	r4, r4, #16
 8012fd0:	d402      	bmi.n	8012fd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fd2:	42b4      	cmp	r4, r6
 8012fd4:	f2c0 80ba 	blt.w	801314c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012fd8:	2700      	movs	r7, #0
 8012fda:	19dc      	adds	r4, r3, r7
 8012fdc:	2c00      	cmp	r4, #0
 8012fde:	dc3e      	bgt.n	801305e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012fe0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012fe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012fe8:	f1bb 0f00 	cmp.w	fp, #0
 8012fec:	f340 8112 	ble.w	8013214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8012ff0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012ff4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ff8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ffc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ffe:	f1bb 0b01 	subs.w	fp, fp, #1
 8013002:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013006:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801300a:	eeb0 6a62 	vmov.f32	s12, s5
 801300e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013012:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013016:	ee77 2a62 	vsub.f32	s5, s14, s5
 801301a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801301e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013022:	eeb0 6a43 	vmov.f32	s12, s6
 8013026:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801302a:	ee12 2a90 	vmov	r2, s5
 801302e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013032:	fb92 f3f3 	sdiv	r3, r2, r3
 8013036:	ee13 2a10 	vmov	r2, s6
 801303a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801303e:	9311      	str	r3, [sp, #68]	; 0x44
 8013040:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013042:	fb92 f3f3 	sdiv	r3, r2, r3
 8013046:	9a03      	ldr	r2, [sp, #12]
 8013048:	9312      	str	r3, [sp, #72]	; 0x48
 801304a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801304e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013050:	eeb0 3a67 	vmov.f32	s6, s15
 8013054:	bf08      	it	eq
 8013056:	4613      	moveq	r3, r2
 8013058:	eef0 2a47 	vmov.f32	s5, s14
 801305c:	e789      	b.n	8012f72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801305e:	140e      	asrs	r6, r1, #16
 8013060:	d45f      	bmi.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8013062:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8013066:	42b5      	cmp	r5, r6
 8013068:	dd5b      	ble.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801306a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801306e:	d458      	bmi.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8013070:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8013074:	4564      	cmp	r4, ip
 8013076:	dd54      	ble.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 8013078:	b22d      	sxth	r5, r5
 801307a:	fb0c 6505 	mla	r5, ip, r5, r6
 801307e:	9c00      	ldr	r4, [sp, #0]
 8013080:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 8013084:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 8013088:	d04b      	beq.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801308a:	fa5f f48e 	uxtb.w	r4, lr
 801308e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013092:	9401      	str	r4, [sp, #4]
 8013094:	ea4f 461c 	mov.w	r6, ip, lsr #16
 8013098:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801309c:	f06f 0401 	mvn.w	r4, #1
 80130a0:	fa5f fc8c 	uxtb.w	ip, ip
 80130a4:	d043      	beq.n	801312e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80130a6:	437c      	muls	r4, r7
 80130a8:	9402      	str	r4, [sp, #8]
 80130aa:	f830 8004 	ldrh.w	r8, [r0, r4]
 80130ae:	9c01      	ldr	r4, [sp, #4]
 80130b0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80130b4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80130b8:	43e4      	mvns	r4, r4
 80130ba:	b2f6      	uxtb	r6, r6
 80130bc:	b2e4      	uxtb	r4, r4
 80130be:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80130c2:	fb16 f60a 	smulbb	r6, r6, sl
 80130c6:	fb0e 6604 	mla	r6, lr, r4, r6
 80130ca:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80130ce:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80130d2:	fa5f f888 	uxtb.w	r8, r8
 80130d6:	fb1c fc0a 	smulbb	ip, ip, sl
 80130da:	fb08 cc04 	mla	ip, r8, r4, ip
 80130de:	b2ed      	uxtb	r5, r5
 80130e0:	b2b6      	uxth	r6, r6
 80130e2:	fb15 f50a 	smulbb	r5, r5, sl
 80130e6:	fa1f fc8c 	uxth.w	ip, ip
 80130ea:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80130ee:	fb0e 5e04 	mla	lr, lr, r4, r5
 80130f2:	1c74      	adds	r4, r6, #1
 80130f4:	f10c 0501 	add.w	r5, ip, #1
 80130f8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80130fc:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 8013100:	fa1f fe8e 	uxth.w	lr, lr
 8013104:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013108:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801310c:	432e      	orrs	r6, r5
 801310e:	f10e 0501 	add.w	r5, lr, #1
 8013112:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 8013116:	096d      	lsrs	r5, r5, #5
 8013118:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801311c:	9c02      	ldr	r4, [sp, #8]
 801311e:	432e      	orrs	r6, r5
 8013120:	5306      	strh	r6, [r0, r4]
 8013122:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8013124:	4421      	add	r1, r4
 8013126:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013128:	3f01      	subs	r7, #1
 801312a:	4422      	add	r2, r4
 801312c:	e755      	b.n	8012fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801312e:	fb04 fe07 	mul.w	lr, r4, r7
 8013132:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 8013136:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 801313a:	00ed      	lsls	r5, r5, #3
 801313c:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 8013140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013144:	432e      	orrs	r6, r5
 8013146:	f820 600e 	strh.w	r6, [r0, lr]
 801314a:	e7ea      	b.n	8013122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 801314c:	f04f 0800 	mov.w	r8, #0
 8013150:	eba3 0408 	sub.w	r4, r3, r8
 8013154:	2c00      	cmp	r4, #0
 8013156:	f77f af43 	ble.w	8012fe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801315a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801315e:	140d      	asrs	r5, r1, #16
 8013160:	1414      	asrs	r4, r2, #16
 8013162:	fb06 5404 	mla	r4, r6, r4, r5
 8013166:	9d00      	ldr	r5, [sp, #0]
 8013168:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 801316c:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 8013170:	d042      	beq.n	80131f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8013172:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8013176:	ea4f 4517 	mov.w	r5, r7, lsr #16
 801317a:	ea4f 2617 	mov.w	r6, r7, lsr #8
 801317e:	fa5f f48c 	uxtb.w	r4, ip
 8013182:	b2ff      	uxtb	r7, r7
 8013184:	d03f      	beq.n	8013206 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8013186:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801318a:	fa1f fa84 	uxth.w	sl, r4
 801318e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013192:	43e4      	mvns	r4, r4
 8013194:	b2ed      	uxtb	r5, r5
 8013196:	b2e4      	uxtb	r4, r4
 8013198:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801319c:	fb15 f50a 	smulbb	r5, r5, sl
 80131a0:	fb0c 5504 	mla	r5, ip, r4, r5
 80131a4:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80131a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80131ac:	fa5f fe8e 	uxtb.w	lr, lr
 80131b0:	fb17 f70a 	smulbb	r7, r7, sl
 80131b4:	fb0e 7704 	mla	r7, lr, r4, r7
 80131b8:	b2f6      	uxtb	r6, r6
 80131ba:	b2ad      	uxth	r5, r5
 80131bc:	fb16 f60a 	smulbb	r6, r6, sl
 80131c0:	b2bf      	uxth	r7, r7
 80131c2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80131c6:	fb0c 6c04 	mla	ip, ip, r4, r6
 80131ca:	1c6c      	adds	r4, r5, #1
 80131cc:	1c7e      	adds	r6, r7, #1
 80131ce:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80131d2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80131d6:	fa1f fc8c 	uxth.w	ip, ip
 80131da:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80131de:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80131e2:	4335      	orrs	r5, r6
 80131e4:	f10c 0601 	add.w	r6, ip, #1
 80131e8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80131ec:	0976      	lsrs	r6, r6, #5
 80131ee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80131f2:	4335      	orrs	r5, r6
 80131f4:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 80131f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80131fa:	4421      	add	r1, r4
 80131fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80131fe:	f108 0801 	add.w	r8, r8, #1
 8013202:	4422      	add	r2, r4
 8013204:	e7a4      	b.n	8013150 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8013206:	4c05      	ldr	r4, [pc, #20]	; (801321c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 8013208:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 801320c:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8013210:	00f6      	lsls	r6, r6, #3
 8013212:	e7ec      	b.n	80131ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8013214:	b005      	add	sp, #20
 8013216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801321a:	bf00      	nop
 801321c:	fffff800 	.word	0xfffff800

08013220 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013224:	b087      	sub	sp, #28
 8013226:	468b      	mov	fp, r1
 8013228:	9815      	ldr	r0, [sp, #84]	; 0x54
 801322a:	9204      	str	r2, [sp, #16]
 801322c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013230:	9205      	str	r2, [sp, #20]
 8013232:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013236:	6841      	ldr	r1, [r0, #4]
 8013238:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801323c:	fb01 2404 	mla	r4, r1, r4, r2
 8013240:	6802      	ldr	r2, [r0, #0]
 8013242:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013246:	f8d8 2008 	ldr.w	r2, [r8, #8]
 801324a:	3201      	adds	r2, #1
 801324c:	f022 0201 	bic.w	r2, r2, #1
 8013250:	9201      	str	r2, [sp, #4]
 8013252:	f8d8 2000 	ldr.w	r2, [r8]
 8013256:	9202      	str	r2, [sp, #8]
 8013258:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801325c:	f1bb 0f00 	cmp.w	fp, #0
 8013260:	dc03      	bgt.n	801326a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013262:	9a04      	ldr	r2, [sp, #16]
 8013264:	2a00      	cmp	r2, #0
 8013266:	f340 8146 	ble.w	80134f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801326a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801326c:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013270:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013274:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013278:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801327a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801327e:	2b00      	cmp	r3, #0
 8013280:	dd0e      	ble.n	80132a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013282:	1402      	asrs	r2, r0, #16
 8013284:	d405      	bmi.n	8013292 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013286:	42ba      	cmp	r2, r7
 8013288:	da03      	bge.n	8013292 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801328a:	140a      	asrs	r2, r1, #16
 801328c:	d401      	bmi.n	8013292 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801328e:	42b2      	cmp	r2, r6
 8013290:	db07      	blt.n	80132a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8013292:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013294:	4410      	add	r0, r2
 8013296:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013298:	3b01      	subs	r3, #1
 801329a:	4411      	add	r1, r2
 801329c:	3402      	adds	r4, #2
 801329e:	e7ee      	b.n	801327e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80132a0:	d017      	beq.n	80132d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80132a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80132a4:	1e5a      	subs	r2, r3, #1
 80132a6:	fb05 0502 	mla	r5, r5, r2, r0
 80132aa:	142d      	asrs	r5, r5, #16
 80132ac:	d409      	bmi.n	80132c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80132ae:	42bd      	cmp	r5, r7
 80132b0:	da07      	bge.n	80132c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80132b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80132b4:	fb05 1202 	mla	r2, r5, r2, r1
 80132b8:	1412      	asrs	r2, r2, #16
 80132ba:	d402      	bmi.n	80132c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80132bc:	42b2      	cmp	r2, r6
 80132be:	f2c0 80b3 	blt.w	8013428 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80132c2:	2700      	movs	r7, #0
 80132c4:	19da      	adds	r2, r3, r7
 80132c6:	2a00      	cmp	r2, #0
 80132c8:	dc3e      	bgt.n	8013348 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80132ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80132ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132d2:	f1bb 0f00 	cmp.w	fp, #0
 80132d6:	f340 810e 	ble.w	80134f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80132da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80132de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80132e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80132e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80132e8:	f1bb 0b01 	subs.w	fp, fp, #1
 80132ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80132f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80132f4:	eeb0 6a62 	vmov.f32	s12, s5
 80132f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80132fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013300:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013304:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013308:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801330c:	eeb0 6a43 	vmov.f32	s12, s6
 8013310:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013314:	ee12 2a90 	vmov	r2, s5
 8013318:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801331c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013320:	ee13 2a10 	vmov	r2, s6
 8013324:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013328:	9313      	str	r3, [sp, #76]	; 0x4c
 801332a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801332c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013330:	9a04      	ldr	r2, [sp, #16]
 8013332:	9314      	str	r3, [sp, #80]	; 0x50
 8013334:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013338:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801333a:	eeb0 3a67 	vmov.f32	s6, s15
 801333e:	bf08      	it	eq
 8013340:	4613      	moveq	r3, r2
 8013342:	eef0 2a47 	vmov.f32	s5, s14
 8013346:	e789      	b.n	801325c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013348:	1405      	asrs	r5, r0, #16
 801334a:	d467      	bmi.n	801341c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801334c:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8013350:	42aa      	cmp	r2, r5
 8013352:	dd63      	ble.n	801341c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013354:	140e      	asrs	r6, r1, #16
 8013356:	d461      	bmi.n	801341c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013358:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801335c:	42b2      	cmp	r2, r6
 801335e:	dd5d      	ble.n	801341c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013360:	9a01      	ldr	r2, [sp, #4]
 8013362:	fb06 5502 	mla	r5, r6, r2, r5
 8013366:	086a      	lsrs	r2, r5, #1
 8013368:	9e02      	ldr	r6, [sp, #8]
 801336a:	5cb2      	ldrb	r2, [r6, r2]
 801336c:	07ee      	lsls	r6, r5, #31
 801336e:	bf54      	ite	pl
 8013370:	f002 020f 	andpl.w	r2, r2, #15
 8013374:	1112      	asrmi	r2, r2, #4
 8013376:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801337a:	b2d2      	uxtb	r2, r2
 801337c:	2a00      	cmp	r2, #0
 801337e:	d04d      	beq.n	801341c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013380:	4d5e      	ldr	r5, [pc, #376]	; (80134fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8013382:	f8d5 c000 	ldr.w	ip, [r5]
 8013386:	f06f 0501 	mvn.w	r5, #1
 801338a:	437d      	muls	r5, r7
 801338c:	9503      	str	r5, [sp, #12]
 801338e:	f834 e005 	ldrh.w	lr, [r4, r5]
 8013392:	9d05      	ldr	r5, [sp, #20]
 8013394:	436a      	muls	r2, r5
 8013396:	1c55      	adds	r5, r2, #1
 8013398:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801339c:	1212      	asrs	r2, r2, #8
 801339e:	fa1f f982 	uxth.w	r9, r2
 80133a2:	ea4f 262e 	mov.w	r6, lr, asr #8
 80133a6:	f3cc 4507 	ubfx	r5, ip, #16, #8
 80133aa:	43d2      	mvns	r2, r2
 80133ac:	b2d2      	uxtb	r2, r2
 80133ae:	fb15 f509 	smulbb	r5, r5, r9
 80133b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80133b6:	fb06 5602 	mla	r6, r6, r2, r5
 80133ba:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80133be:	ea4f 05ee 	mov.w	r5, lr, asr #3
 80133c2:	fa5f fc8c 	uxtb.w	ip, ip
 80133c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80133ca:	fa5f fe8e 	uxtb.w	lr, lr
 80133ce:	fb1c fc09 	smulbb	ip, ip, r9
 80133d2:	fb0e cc02 	mla	ip, lr, r2, ip
 80133d6:	b2b6      	uxth	r6, r6
 80133d8:	fb1a fa09 	smulbb	sl, sl, r9
 80133dc:	fa1f fc8c 	uxth.w	ip, ip
 80133e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80133e4:	fb05 a502 	mla	r5, r5, r2, sl
 80133e8:	1c72      	adds	r2, r6, #1
 80133ea:	f10c 0a01 	add.w	sl, ip, #1
 80133ee:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80133f2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80133f6:	b2ad      	uxth	r5, r5
 80133f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80133fc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013400:	ea4a 0606 	orr.w	r6, sl, r6
 8013404:	f105 0a01 	add.w	sl, r5, #1
 8013408:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801340c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013410:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013414:	9a03      	ldr	r2, [sp, #12]
 8013416:	ea46 060a 	orr.w	r6, r6, sl
 801341a:	52a6      	strh	r6, [r4, r2]
 801341c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801341e:	4410      	add	r0, r2
 8013420:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013422:	3f01      	subs	r7, #1
 8013424:	4411      	add	r1, r2
 8013426:	e74d      	b.n	80132c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013428:	f04f 0e00 	mov.w	lr, #0
 801342c:	eba3 020e 	sub.w	r2, r3, lr
 8013430:	2a00      	cmp	r2, #0
 8013432:	f77f af4a 	ble.w	80132ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013436:	9e01      	ldr	r6, [sp, #4]
 8013438:	1402      	asrs	r2, r0, #16
 801343a:	140d      	asrs	r5, r1, #16
 801343c:	fb06 2505 	mla	r5, r6, r5, r2
 8013440:	086a      	lsrs	r2, r5, #1
 8013442:	9e02      	ldr	r6, [sp, #8]
 8013444:	5cb2      	ldrb	r2, [r6, r2]
 8013446:	07ed      	lsls	r5, r5, #31
 8013448:	bf54      	ite	pl
 801344a:	f002 020f 	andpl.w	r2, r2, #15
 801344e:	1112      	asrmi	r2, r2, #4
 8013450:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013454:	b2d2      	uxtb	r2, r2
 8013456:	2a00      	cmp	r2, #0
 8013458:	d046      	beq.n	80134e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801345a:	4d28      	ldr	r5, [pc, #160]	; (80134fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801345c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013460:	682f      	ldr	r7, [r5, #0]
 8013462:	9d05      	ldr	r5, [sp, #20]
 8013464:	436a      	muls	r2, r5
 8013466:	1c55      	adds	r5, r2, #1
 8013468:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801346c:	1212      	asrs	r2, r2, #8
 801346e:	fa1f f982 	uxth.w	r9, r2
 8013472:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013476:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801347a:	43d2      	mvns	r2, r2
 801347c:	b2d2      	uxtb	r2, r2
 801347e:	fb15 f509 	smulbb	r5, r5, r9
 8013482:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013486:	fb06 5602 	mla	r6, r6, r2, r5
 801348a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801348e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013492:	b2ff      	uxtb	r7, r7
 8013494:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013498:	fa5f fc8c 	uxtb.w	ip, ip
 801349c:	fb17 f709 	smulbb	r7, r7, r9
 80134a0:	fb0c 7702 	mla	r7, ip, r2, r7
 80134a4:	b2b6      	uxth	r6, r6
 80134a6:	fb1a fa09 	smulbb	sl, sl, r9
 80134aa:	b2bf      	uxth	r7, r7
 80134ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80134b0:	fb05 a502 	mla	r5, r5, r2, sl
 80134b4:	1c72      	adds	r2, r6, #1
 80134b6:	f107 0a01 	add.w	sl, r7, #1
 80134ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80134be:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80134c2:	b2ad      	uxth	r5, r5
 80134c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80134c8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80134cc:	ea4a 0606 	orr.w	r6, sl, r6
 80134d0:	f105 0a01 	add.w	sl, r5, #1
 80134d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80134d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80134dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80134e0:	ea46 060a 	orr.w	r6, r6, sl
 80134e4:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80134e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80134ea:	4410      	add	r0, r2
 80134ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80134ee:	f10e 0e01 	add.w	lr, lr, #1
 80134f2:	4411      	add	r1, r2
 80134f4:	e79a      	b.n	801342c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80134f6:	b007      	add	sp, #28
 80134f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134fc:	20012dcc 	.word	0x20012dcc

08013500 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013504:	b087      	sub	sp, #28
 8013506:	468b      	mov	fp, r1
 8013508:	9815      	ldr	r0, [sp, #84]	; 0x54
 801350a:	9205      	str	r2, [sp, #20]
 801350c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013510:	6841      	ldr	r1, [r0, #4]
 8013512:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8013516:	fb01 2404 	mla	r4, r1, r4, r2
 801351a:	6802      	ldr	r2, [r0, #0]
 801351c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013520:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8013524:	3201      	adds	r2, #1
 8013526:	f022 0201 	bic.w	r2, r2, #1
 801352a:	9201      	str	r2, [sp, #4]
 801352c:	f8d8 2000 	ldr.w	r2, [r8]
 8013530:	9202      	str	r2, [sp, #8]
 8013532:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013536:	f1bb 0f00 	cmp.w	fp, #0
 801353a:	dc03      	bgt.n	8013544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801353c:	9a05      	ldr	r2, [sp, #20]
 801353e:	2a00      	cmp	r2, #0
 8013540:	f340 8159 	ble.w	80137f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 8013544:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013546:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801354a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801354e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013552:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013554:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013558:	2b00      	cmp	r3, #0
 801355a:	dd0e      	ble.n	801357a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801355c:	1402      	asrs	r2, r0, #16
 801355e:	d405      	bmi.n	801356c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013560:	42ba      	cmp	r2, r7
 8013562:	da03      	bge.n	801356c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013564:	140a      	asrs	r2, r1, #16
 8013566:	d401      	bmi.n	801356c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013568:	42b2      	cmp	r2, r6
 801356a:	db07      	blt.n	801357c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801356c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801356e:	4410      	add	r0, r2
 8013570:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013572:	3b01      	subs	r3, #1
 8013574:	4411      	add	r1, r2
 8013576:	3402      	adds	r4, #2
 8013578:	e7ee      	b.n	8013558 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801357a:	d017      	beq.n	80135ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801357c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801357e:	1e5a      	subs	r2, r3, #1
 8013580:	fb05 0502 	mla	r5, r5, r2, r0
 8013584:	142d      	asrs	r5, r5, #16
 8013586:	d409      	bmi.n	801359c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013588:	42bd      	cmp	r5, r7
 801358a:	da07      	bge.n	801359c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801358c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801358e:	fb05 1202 	mla	r2, r5, r2, r1
 8013592:	1412      	asrs	r2, r2, #16
 8013594:	d402      	bmi.n	801359c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013596:	42b2      	cmp	r2, r6
 8013598:	f2c0 80c3 	blt.w	8013722 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801359c:	2700      	movs	r7, #0
 801359e:	19da      	adds	r2, r3, r7
 80135a0:	2a00      	cmp	r2, #0
 80135a2:	dc3e      	bgt.n	8013622 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80135a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80135a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80135ac:	f1bb 0f00 	cmp.w	fp, #0
 80135b0:	f340 8121 	ble.w	80137f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 80135b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80135c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80135c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135ce:	eeb0 6a62 	vmov.f32	s12, s5
 80135d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80135d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80135de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80135e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80135e6:	eeb0 6a43 	vmov.f32	s12, s6
 80135ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135ee:	ee12 2a90 	vmov	r2, s5
 80135f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80135fa:	ee13 2a10 	vmov	r2, s6
 80135fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013602:	9313      	str	r3, [sp, #76]	; 0x4c
 8013604:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013606:	fb92 f3f3 	sdiv	r3, r2, r3
 801360a:	9a05      	ldr	r2, [sp, #20]
 801360c:	9314      	str	r3, [sp, #80]	; 0x50
 801360e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013612:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013614:	eeb0 3a67 	vmov.f32	s6, s15
 8013618:	bf08      	it	eq
 801361a:	4613      	moveq	r3, r2
 801361c:	eef0 2a47 	vmov.f32	s5, s14
 8013620:	e789      	b.n	8013536 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013622:	1405      	asrs	r5, r0, #16
 8013624:	d465      	bmi.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013626:	f8d8 2008 	ldr.w	r2, [r8, #8]
 801362a:	42aa      	cmp	r2, r5
 801362c:	dd61      	ble.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801362e:	140e      	asrs	r6, r1, #16
 8013630:	d45f      	bmi.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013632:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8013636:	42b2      	cmp	r2, r6
 8013638:	dd5b      	ble.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801363a:	9a01      	ldr	r2, [sp, #4]
 801363c:	fb06 5502 	mla	r5, r6, r2, r5
 8013640:	086a      	lsrs	r2, r5, #1
 8013642:	9e02      	ldr	r6, [sp, #8]
 8013644:	5cb2      	ldrb	r2, [r6, r2]
 8013646:	07ee      	lsls	r6, r5, #31
 8013648:	bf54      	ite	pl
 801364a:	f002 020f 	andpl.w	r2, r2, #15
 801364e:	1112      	asrmi	r2, r2, #4
 8013650:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013654:	b2d2      	uxtb	r2, r2
 8013656:	2a00      	cmp	r2, #0
 8013658:	d04b      	beq.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801365a:	4d68      	ldr	r5, [pc, #416]	; (80137fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 801365c:	f8d5 9000 	ldr.w	r9, [r5]
 8013660:	2aff      	cmp	r2, #255	; 0xff
 8013662:	ea4f 2519 	mov.w	r5, r9, lsr #8
 8013666:	ea4f 4619 	mov.w	r6, r9, lsr #16
 801366a:	9503      	str	r5, [sp, #12]
 801366c:	fa5f f989 	uxtb.w	r9, r9
 8013670:	d045      	beq.n	80136fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013672:	f06f 0501 	mvn.w	r5, #1
 8013676:	437d      	muls	r5, r7
 8013678:	fa1f fa82 	uxth.w	sl, r2
 801367c:	f834 e005 	ldrh.w	lr, [r4, r5]
 8013680:	9504      	str	r5, [sp, #16]
 8013682:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013686:	43d2      	mvns	r2, r2
 8013688:	b2f6      	uxtb	r6, r6
 801368a:	b2d2      	uxtb	r2, r2
 801368c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013690:	fb16 f60a 	smulbb	r6, r6, sl
 8013694:	fb0c 6602 	mla	r6, ip, r2, r6
 8013698:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801369c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80136a0:	f89d 500c 	ldrb.w	r5, [sp, #12]
 80136a4:	fa5f fe8e 	uxtb.w	lr, lr
 80136a8:	fb19 f90a 	smulbb	r9, r9, sl
 80136ac:	fb0e 9902 	mla	r9, lr, r2, r9
 80136b0:	b2b6      	uxth	r6, r6
 80136b2:	fb15 f50a 	smulbb	r5, r5, sl
 80136b6:	fa1f f989 	uxth.w	r9, r9
 80136ba:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80136be:	fb0c 5c02 	mla	ip, ip, r2, r5
 80136c2:	1c72      	adds	r2, r6, #1
 80136c4:	f109 0501 	add.w	r5, r9, #1
 80136c8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80136cc:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80136d0:	fa1f fc8c 	uxth.w	ip, ip
 80136d4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80136d8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80136dc:	432e      	orrs	r6, r5
 80136de:	f10c 0501 	add.w	r5, ip, #1
 80136e2:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 80136e6:	096d      	lsrs	r5, r5, #5
 80136e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80136ec:	9a04      	ldr	r2, [sp, #16]
 80136ee:	432e      	orrs	r6, r5
 80136f0:	52a6      	strh	r6, [r4, r2]
 80136f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80136f4:	4410      	add	r0, r2
 80136f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80136f8:	3f01      	subs	r7, #1
 80136fa:	4411      	add	r1, r2
 80136fc:	e74f      	b.n	801359e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80136fe:	f06f 0201 	mvn.w	r2, #1
 8013702:	fb02 fc07 	mul.w	ip, r2, r7
 8013706:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 801370a:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 801370e:	9a03      	ldr	r2, [sp, #12]
 8013710:	00d5      	lsls	r5, r2, #3
 8013712:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013716:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801371a:	432e      	orrs	r6, r5
 801371c:	f824 600c 	strh.w	r6, [r4, ip]
 8013720:	e7e7      	b.n	80136f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013722:	f04f 0e00 	mov.w	lr, #0
 8013726:	eba3 020e 	sub.w	r2, r3, lr
 801372a:	2a00      	cmp	r2, #0
 801372c:	f77f af3a 	ble.w	80135a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013730:	9e01      	ldr	r6, [sp, #4]
 8013732:	1402      	asrs	r2, r0, #16
 8013734:	140d      	asrs	r5, r1, #16
 8013736:	fb06 2505 	mla	r5, r6, r5, r2
 801373a:	086a      	lsrs	r2, r5, #1
 801373c:	9e02      	ldr	r6, [sp, #8]
 801373e:	5cb2      	ldrb	r2, [r6, r2]
 8013740:	07ed      	lsls	r5, r5, #31
 8013742:	bf54      	ite	pl
 8013744:	f002 020f 	andpl.w	r2, r2, #15
 8013748:	1112      	asrmi	r2, r2, #4
 801374a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801374e:	b2d2      	uxtb	r2, r2
 8013750:	2a00      	cmp	r2, #0
 8013752:	d042      	beq.n	80137da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8013754:	4d29      	ldr	r5, [pc, #164]	; (80137fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8013756:	682f      	ldr	r7, [r5, #0]
 8013758:	2aff      	cmp	r2, #255	; 0xff
 801375a:	ea4f 4517 	mov.w	r5, r7, lsr #16
 801375e:	ea4f 2617 	mov.w	r6, r7, lsr #8
 8013762:	fa5f f987 	uxtb.w	r9, r7
 8013766:	d03f      	beq.n	80137e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8013768:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801376c:	fa1f fa82 	uxth.w	sl, r2
 8013770:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013774:	43d2      	mvns	r2, r2
 8013776:	b2ed      	uxtb	r5, r5
 8013778:	b2d2      	uxtb	r2, r2
 801377a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801377e:	fb15 f50a 	smulbb	r5, r5, sl
 8013782:	fb07 5502 	mla	r5, r7, r2, r5
 8013786:	ea4f 07ec 	mov.w	r7, ip, asr #3
 801378a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801378e:	fa5f fc8c 	uxtb.w	ip, ip
 8013792:	fb19 f90a 	smulbb	r9, r9, sl
 8013796:	fb0c 9902 	mla	r9, ip, r2, r9
 801379a:	b2f6      	uxtb	r6, r6
 801379c:	b2ad      	uxth	r5, r5
 801379e:	fb16 f60a 	smulbb	r6, r6, sl
 80137a2:	fa1f f989 	uxth.w	r9, r9
 80137a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80137aa:	fb07 6702 	mla	r7, r7, r2, r6
 80137ae:	1c6a      	adds	r2, r5, #1
 80137b0:	f109 0601 	add.w	r6, r9, #1
 80137b4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80137b8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80137bc:	b2bf      	uxth	r7, r7
 80137be:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80137c2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80137c6:	4335      	orrs	r5, r6
 80137c8:	1c7e      	adds	r6, r7, #1
 80137ca:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80137ce:	0976      	lsrs	r6, r6, #5
 80137d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80137d4:	4335      	orrs	r5, r6
 80137d6:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80137da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80137dc:	4410      	add	r0, r2
 80137de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80137e0:	f10e 0e01 	add.w	lr, lr, #1
 80137e4:	4411      	add	r1, r2
 80137e6:	e79e      	b.n	8013726 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80137e8:	4a05      	ldr	r2, [pc, #20]	; (8013800 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 80137ea:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 80137ee:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 80137f2:	00f6      	lsls	r6, r6, #3
 80137f4:	e7ec      	b.n	80137d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 80137f6:	b007      	add	sp, #28
 80137f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137fc:	20012dcc 	.word	0x20012dcc
 8013800:	fffff800 	.word	0xfffff800

08013804 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013804:	4770      	bx	lr

08013806 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8013806:	4770      	bx	lr

08013808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8013808:	4770      	bx	lr

0801380a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801380a:	4770      	bx	lr

0801380c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801380c:	4770      	bx	lr

0801380e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801380e:	4770      	bx	lr

08013810 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013810:	4770      	bx	lr

08013812 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013812:	4770      	bx	lr

08013814 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013814:	4770      	bx	lr

08013816 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013816:	4770      	bx	lr

08013818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013818:	4770      	bx	lr

0801381a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801381a:	4770      	bx	lr

0801381c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801381c:	4770      	bx	lr

0801381e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801381e:	4770      	bx	lr

08013820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013820:	4770      	bx	lr

08013822 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013822:	4770      	bx	lr

08013824 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013824:	4770      	bx	lr

08013826 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013826:	4770      	bx	lr

08013828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013828:	4770      	bx	lr

0801382a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801382a:	4770      	bx	lr

0801382c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801382c:	4770      	bx	lr

0801382e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801382e:	4770      	bx	lr

08013830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8013830:	4770      	bx	lr

08013832 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013832:	4770      	bx	lr

08013834 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013834:	4770      	bx	lr

08013836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013836:	4770      	bx	lr

08013838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013838:	4770      	bx	lr

0801383a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801383a:	4770      	bx	lr

0801383c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801383c:	4770      	bx	lr
	...

08013840 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013840:	b508      	push	{r3, lr}
 8013842:	4b06      	ldr	r3, [pc, #24]	; (801385c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8013844:	8818      	ldrh	r0, [r3, #0]
 8013846:	b928      	cbnz	r0, 8013854 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8013848:	4b05      	ldr	r3, [pc, #20]	; (8013860 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801384a:	4a06      	ldr	r2, [pc, #24]	; (8013864 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801384c:	4806      	ldr	r0, [pc, #24]	; (8013868 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801384e:	2150      	movs	r1, #80	; 0x50
 8013850:	f009 faa2 	bl	801cd98 <__assert_func>
 8013854:	0040      	lsls	r0, r0, #1
 8013856:	b280      	uxth	r0, r0
 8013858:	bd08      	pop	{r3, pc}
 801385a:	bf00      	nop
 801385c:	20012dbe 	.word	0x20012dbe
 8013860:	08021498 	.word	0x08021498
 8013864:	08021a90 	.word	0x08021a90
 8013868:	080214da 	.word	0x080214da

0801386c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801386c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013870:	b08b      	sub	sp, #44	; 0x2c
 8013872:	460f      	mov	r7, r1
 8013874:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8013878:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801387c:	4616      	mov	r6, r2
 801387e:	f1bb 0f00 	cmp.w	fp, #0
 8013882:	d046      	beq.n	8013912 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8013884:	6810      	ldr	r0, [r2, #0]
 8013886:	6851      	ldr	r1, [r2, #4]
 8013888:	ad06      	add	r5, sp, #24
 801388a:	c503      	stmia	r5!, {r0, r1}
 801388c:	6818      	ldr	r0, [r3, #0]
 801388e:	6859      	ldr	r1, [r3, #4]
 8013890:	ad08      	add	r5, sp, #32
 8013892:	c503      	stmia	r5!, {r0, r1}
 8013894:	a806      	add	r0, sp, #24
 8013896:	f7fa f9ab 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801389a:	4631      	mov	r1, r6
 801389c:	a808      	add	r0, sp, #32
 801389e:	f7fa f98f 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80138a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80138a6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80138aa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80138ae:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80138b2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80138b6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80138ba:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80138be:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80138c2:	4f5e      	ldr	r7, [pc, #376]	; (8013a3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 80138c4:	440a      	add	r2, r1
 80138c6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80138ca:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80138ce:	6838      	ldr	r0, [r7, #0]
 80138d0:	4413      	add	r3, r2
 80138d2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80138d6:	6803      	ldr	r3, [r0, #0]
 80138d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80138da:	4798      	blx	r3
 80138dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80138e0:	46b9      	mov	r9, r7
 80138e2:	d019      	beq.n	8013918 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80138e4:	f010 0f04 	tst.w	r0, #4
 80138e8:	d01a      	beq.n	8013920 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80138ea:	f8d9 0000 	ldr.w	r0, [r9]
 80138ee:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80138f2:	6801      	ldr	r1, [r0, #0]
 80138f4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80138f8:	e9cd b403 	strd	fp, r4, [sp, #12]
 80138fc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8013900:	9402      	str	r4, [sp, #8]
 8013902:	b2ad      	uxth	r5, r5
 8013904:	fa1f f488 	uxth.w	r4, r8
 8013908:	9501      	str	r5, [sp, #4]
 801390a:	9400      	str	r4, [sp, #0]
 801390c:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 801390e:	4631      	mov	r1, r6
 8013910:	47a0      	blx	r4
 8013912:	b00b      	add	sp, #44	; 0x2c
 8013914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013918:	b914      	cbnz	r4, 8013920 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801391a:	f010 0f01 	tst.w	r0, #1
 801391e:	e7e3      	b.n	80138e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8013920:	f8d9 0000 	ldr.w	r0, [r9]
 8013924:	6803      	ldr	r3, [r0, #0]
 8013926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013928:	4798      	blx	r3
 801392a:	4b45      	ldr	r3, [pc, #276]	; (8013a40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801392c:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8013930:	881a      	ldrh	r2, [r3, #0]
 8013932:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013936:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801393a:	fb02 1404 	mla	r4, r2, r4, r1
 801393e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013942:	469a      	mov	sl, r3
 8013944:	fb05 f502 	mul.w	r5, r5, r2
 8013948:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801394c:	d059      	beq.n	8013a02 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 801394e:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8013952:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013956:	fa1f f28b 	uxth.w	r2, fp
 801395a:	fa1f f989 	uxth.w	r9, r9
 801395e:	469e      	mov	lr, r3
 8013960:	42ac      	cmp	r4, r5
 8013962:	d264      	bcs.n	8013a2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8013964:	eb04 0a07 	add.w	sl, r4, r7
 8013968:	4554      	cmp	r4, sl
 801396a:	d23d      	bcs.n	80139e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 801396c:	8821      	ldrh	r1, [r4, #0]
 801396e:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013972:	1208      	asrs	r0, r1, #8
 8013974:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013978:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801397c:	fb10 f009 	smulbb	r0, r0, r9
 8013980:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013984:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013988:	00c9      	lsls	r1, r1, #3
 801398a:	fb0c 0c02 	mla	ip, ip, r2, r0
 801398e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013992:	10d8      	asrs	r0, r3, #3
 8013994:	b2c9      	uxtb	r1, r1
 8013996:	00db      	lsls	r3, r3, #3
 8013998:	fa1f fc8c 	uxth.w	ip, ip
 801399c:	fb1b fb09 	smulbb	fp, fp, r9
 80139a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80139a4:	b2db      	uxtb	r3, r3
 80139a6:	fb11 f109 	smulbb	r1, r1, r9
 80139aa:	fb00 b002 	mla	r0, r0, r2, fp
 80139ae:	fb03 1302 	mla	r3, r3, r2, r1
 80139b2:	f10c 0b01 	add.w	fp, ip, #1
 80139b6:	b29b      	uxth	r3, r3
 80139b8:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80139bc:	b280      	uxth	r0, r0
 80139be:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80139c2:	f103 0c01 	add.w	ip, r3, #1
 80139c6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80139ca:	1c43      	adds	r3, r0, #1
 80139cc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80139d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80139d4:	0940      	lsrs	r0, r0, #5
 80139d6:	ea4c 0c0b 	orr.w	ip, ip, fp
 80139da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80139de:	ea4c 0c00 	orr.w	ip, ip, r0
 80139e2:	f824 cb02 	strh.w	ip, [r4], #2
 80139e6:	e7bf      	b.n	8013968 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 80139e8:	f8be 3000 	ldrh.w	r3, [lr]
 80139ec:	eba3 0308 	sub.w	r3, r3, r8
 80139f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139f4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80139f8:	eba3 0308 	sub.w	r3, r3, r8
 80139fc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013a00:	e7ae      	b.n	8013960 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8013a02:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013a06:	f8d9 0000 	ldr.w	r0, [r9]
 8013a0a:	42ac      	cmp	r4, r5
 8013a0c:	6803      	ldr	r3, [r0, #0]
 8013a0e:	d20e      	bcs.n	8013a2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8013a10:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 8013a14:	4632      	mov	r2, r6
 8013a16:	463b      	mov	r3, r7
 8013a18:	4621      	mov	r1, r4
 8013a1a:	47c0      	blx	r8
 8013a1c:	f8ba 3000 	ldrh.w	r3, [sl]
 8013a20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013a24:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013a28:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013a2c:	e7eb      	b.n	8013a06 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 8013a2e:	4b03      	ldr	r3, [pc, #12]	; (8013a3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8013a30:	6818      	ldr	r0, [r3, #0]
 8013a32:	6803      	ldr	r3, [r0, #0]
 8013a34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a36:	4798      	blx	r3
 8013a38:	e76b      	b.n	8013912 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8013a3a:	bf00      	nop
 8013a3c:	20012dc4 	.word	0x20012dc4
 8013a40:	20012dbe 	.word	0x20012dbe

08013a44 <_ZN8touchgfx8LCD16bppD0Ev>:
 8013a44:	b510      	push	{r4, lr}
 8013a46:	2178      	movs	r1, #120	; 0x78
 8013a48:	4604      	mov	r4, r0
 8013a4a:	f009 f977 	bl	801cd3c <_ZdlPvj>
 8013a4e:	4620      	mov	r0, r4
 8013a50:	bd10      	pop	{r4, pc}

08013a52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013a52:	b510      	push	{r4, lr}
 8013a54:	2104      	movs	r1, #4
 8013a56:	4604      	mov	r4, r0
 8013a58:	f009 f970 	bl	801cd3c <_ZdlPvj>
 8013a5c:	4620      	mov	r0, r4
 8013a5e:	bd10      	pop	{r4, pc}

08013a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013a60:	b510      	push	{r4, lr}
 8013a62:	2104      	movs	r1, #4
 8013a64:	4604      	mov	r4, r0
 8013a66:	f009 f969 	bl	801cd3c <_ZdlPvj>
 8013a6a:	4620      	mov	r0, r4
 8013a6c:	bd10      	pop	{r4, pc}

08013a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013a6e:	b510      	push	{r4, lr}
 8013a70:	2104      	movs	r1, #4
 8013a72:	4604      	mov	r4, r0
 8013a74:	f009 f962 	bl	801cd3c <_ZdlPvj>
 8013a78:	4620      	mov	r0, r4
 8013a7a:	bd10      	pop	{r4, pc}

08013a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013a7c:	b510      	push	{r4, lr}
 8013a7e:	2104      	movs	r1, #4
 8013a80:	4604      	mov	r4, r0
 8013a82:	f009 f95b 	bl	801cd3c <_ZdlPvj>
 8013a86:	4620      	mov	r0, r4
 8013a88:	bd10      	pop	{r4, pc}

08013a8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013a8a:	b510      	push	{r4, lr}
 8013a8c:	2104      	movs	r1, #4
 8013a8e:	4604      	mov	r4, r0
 8013a90:	f009 f954 	bl	801cd3c <_ZdlPvj>
 8013a94:	4620      	mov	r0, r4
 8013a96:	bd10      	pop	{r4, pc}

08013a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013a98:	b510      	push	{r4, lr}
 8013a9a:	2104      	movs	r1, #4
 8013a9c:	4604      	mov	r4, r0
 8013a9e:	f009 f94d 	bl	801cd3c <_ZdlPvj>
 8013aa2:	4620      	mov	r0, r4
 8013aa4:	bd10      	pop	{r4, pc}

08013aa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013aa6:	b510      	push	{r4, lr}
 8013aa8:	2104      	movs	r1, #4
 8013aaa:	4604      	mov	r4, r0
 8013aac:	f009 f946 	bl	801cd3c <_ZdlPvj>
 8013ab0:	4620      	mov	r0, r4
 8013ab2:	bd10      	pop	{r4, pc}

08013ab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013ab4:	b510      	push	{r4, lr}
 8013ab6:	2104      	movs	r1, #4
 8013ab8:	4604      	mov	r4, r0
 8013aba:	f009 f93f 	bl	801cd3c <_ZdlPvj>
 8013abe:	4620      	mov	r0, r4
 8013ac0:	bd10      	pop	{r4, pc}

08013ac2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013ac2:	b510      	push	{r4, lr}
 8013ac4:	2104      	movs	r1, #4
 8013ac6:	4604      	mov	r4, r0
 8013ac8:	f009 f938 	bl	801cd3c <_ZdlPvj>
 8013acc:	4620      	mov	r0, r4
 8013ace:	bd10      	pop	{r4, pc}

08013ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013ad0:	b510      	push	{r4, lr}
 8013ad2:	2104      	movs	r1, #4
 8013ad4:	4604      	mov	r4, r0
 8013ad6:	f009 f931 	bl	801cd3c <_ZdlPvj>
 8013ada:	4620      	mov	r0, r4
 8013adc:	bd10      	pop	{r4, pc}

08013ade <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013ade:	b510      	push	{r4, lr}
 8013ae0:	2104      	movs	r1, #4
 8013ae2:	4604      	mov	r4, r0
 8013ae4:	f009 f92a 	bl	801cd3c <_ZdlPvj>
 8013ae8:	4620      	mov	r0, r4
 8013aea:	bd10      	pop	{r4, pc}

08013aec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013aec:	b510      	push	{r4, lr}
 8013aee:	2104      	movs	r1, #4
 8013af0:	4604      	mov	r4, r0
 8013af2:	f009 f923 	bl	801cd3c <_ZdlPvj>
 8013af6:	4620      	mov	r0, r4
 8013af8:	bd10      	pop	{r4, pc}

08013afa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013afa:	b510      	push	{r4, lr}
 8013afc:	2104      	movs	r1, #4
 8013afe:	4604      	mov	r4, r0
 8013b00:	f009 f91c 	bl	801cd3c <_ZdlPvj>
 8013b04:	4620      	mov	r0, r4
 8013b06:	bd10      	pop	{r4, pc}

08013b08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013b08:	b510      	push	{r4, lr}
 8013b0a:	2104      	movs	r1, #4
 8013b0c:	4604      	mov	r4, r0
 8013b0e:	f009 f915 	bl	801cd3c <_ZdlPvj>
 8013b12:	4620      	mov	r0, r4
 8013b14:	bd10      	pop	{r4, pc}

08013b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013b16:	b510      	push	{r4, lr}
 8013b18:	2104      	movs	r1, #4
 8013b1a:	4604      	mov	r4, r0
 8013b1c:	f009 f90e 	bl	801cd3c <_ZdlPvj>
 8013b20:	4620      	mov	r0, r4
 8013b22:	bd10      	pop	{r4, pc}

08013b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013b24:	b510      	push	{r4, lr}
 8013b26:	2104      	movs	r1, #4
 8013b28:	4604      	mov	r4, r0
 8013b2a:	f009 f907 	bl	801cd3c <_ZdlPvj>
 8013b2e:	4620      	mov	r0, r4
 8013b30:	bd10      	pop	{r4, pc}

08013b32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013b32:	b510      	push	{r4, lr}
 8013b34:	2104      	movs	r1, #4
 8013b36:	4604      	mov	r4, r0
 8013b38:	f009 f900 	bl	801cd3c <_ZdlPvj>
 8013b3c:	4620      	mov	r0, r4
 8013b3e:	bd10      	pop	{r4, pc}

08013b40 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013b40:	b510      	push	{r4, lr}
 8013b42:	2104      	movs	r1, #4
 8013b44:	4604      	mov	r4, r0
 8013b46:	f009 f8f9 	bl	801cd3c <_ZdlPvj>
 8013b4a:	4620      	mov	r0, r4
 8013b4c:	bd10      	pop	{r4, pc}

08013b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013b4e:	b510      	push	{r4, lr}
 8013b50:	2104      	movs	r1, #4
 8013b52:	4604      	mov	r4, r0
 8013b54:	f009 f8f2 	bl	801cd3c <_ZdlPvj>
 8013b58:	4620      	mov	r0, r4
 8013b5a:	bd10      	pop	{r4, pc}

08013b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013b5c:	b510      	push	{r4, lr}
 8013b5e:	2104      	movs	r1, #4
 8013b60:	4604      	mov	r4, r0
 8013b62:	f009 f8eb 	bl	801cd3c <_ZdlPvj>
 8013b66:	4620      	mov	r0, r4
 8013b68:	bd10      	pop	{r4, pc}

08013b6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013b6a:	b510      	push	{r4, lr}
 8013b6c:	2104      	movs	r1, #4
 8013b6e:	4604      	mov	r4, r0
 8013b70:	f009 f8e4 	bl	801cd3c <_ZdlPvj>
 8013b74:	4620      	mov	r0, r4
 8013b76:	bd10      	pop	{r4, pc}

08013b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013b78:	b510      	push	{r4, lr}
 8013b7a:	2104      	movs	r1, #4
 8013b7c:	4604      	mov	r4, r0
 8013b7e:	f009 f8dd 	bl	801cd3c <_ZdlPvj>
 8013b82:	4620      	mov	r0, r4
 8013b84:	bd10      	pop	{r4, pc}

08013b86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013b86:	b510      	push	{r4, lr}
 8013b88:	2104      	movs	r1, #4
 8013b8a:	4604      	mov	r4, r0
 8013b8c:	f009 f8d6 	bl	801cd3c <_ZdlPvj>
 8013b90:	4620      	mov	r0, r4
 8013b92:	bd10      	pop	{r4, pc}

08013b94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013b94:	b510      	push	{r4, lr}
 8013b96:	2104      	movs	r1, #4
 8013b98:	4604      	mov	r4, r0
 8013b9a:	f009 f8cf 	bl	801cd3c <_ZdlPvj>
 8013b9e:	4620      	mov	r0, r4
 8013ba0:	bd10      	pop	{r4, pc}

08013ba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013ba2:	b510      	push	{r4, lr}
 8013ba4:	2104      	movs	r1, #4
 8013ba6:	4604      	mov	r4, r0
 8013ba8:	f009 f8c8 	bl	801cd3c <_ZdlPvj>
 8013bac:	4620      	mov	r0, r4
 8013bae:	bd10      	pop	{r4, pc}

08013bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013bb0:	b510      	push	{r4, lr}
 8013bb2:	2104      	movs	r1, #4
 8013bb4:	4604      	mov	r4, r0
 8013bb6:	f009 f8c1 	bl	801cd3c <_ZdlPvj>
 8013bba:	4620      	mov	r0, r4
 8013bbc:	bd10      	pop	{r4, pc}

08013bbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013bbe:	b510      	push	{r4, lr}
 8013bc0:	2104      	movs	r1, #4
 8013bc2:	4604      	mov	r4, r0
 8013bc4:	f009 f8ba 	bl	801cd3c <_ZdlPvj>
 8013bc8:	4620      	mov	r0, r4
 8013bca:	bd10      	pop	{r4, pc}

08013bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013bcc:	b510      	push	{r4, lr}
 8013bce:	2104      	movs	r1, #4
 8013bd0:	4604      	mov	r4, r0
 8013bd2:	f009 f8b3 	bl	801cd3c <_ZdlPvj>
 8013bd6:	4620      	mov	r0, r4
 8013bd8:	bd10      	pop	{r4, pc}
	...

08013bdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8013bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013be0:	4f97      	ldr	r7, [pc, #604]	; (8013e40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 8013be2:	4616      	mov	r6, r2
 8013be4:	683a      	ldr	r2, [r7, #0]
 8013be6:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8013bea:	2a02      	cmp	r2, #2
 8013bec:	b08f      	sub	sp, #60	; 0x3c
 8013bee:	4604      	mov	r4, r0
 8013bf0:	4689      	mov	r9, r1
 8013bf2:	d106      	bne.n	8013c02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8013bf4:	4b93      	ldr	r3, [pc, #588]	; (8013e44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8013bf6:	4a94      	ldr	r2, [pc, #592]	; (8013e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013bf8:	f240 310f 	movw	r1, #783	; 0x30f
 8013bfc:	4893      	ldr	r0, [pc, #588]	; (8013e4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 8013bfe:	f009 f8cb 	bl	801cd98 <__assert_func>
 8013c02:	ad0e      	add	r5, sp, #56	; 0x38
 8013c04:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8013c08:	4628      	mov	r0, r5
 8013c0a:	f7fd fb6b 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c0e:	6823      	ldr	r3, [r4, #0]
 8013c10:	4680      	mov	r8, r0
 8013c12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013c14:	4620      	mov	r0, r4
 8013c16:	4798      	blx	r3
 8013c18:	4580      	cmp	r8, r0
 8013c1a:	d004      	beq.n	8013c26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8013c1c:	4b8c      	ldr	r3, [pc, #560]	; (8013e50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8013c1e:	4a8a      	ldr	r2, [pc, #552]	; (8013e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013c20:	f240 3111 	movw	r1, #785	; 0x311
 8013c24:	e7ea      	b.n	8013bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013c26:	4628      	mov	r0, r5
 8013c28:	f7fd fad2 	bl	80111d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013c2c:	4680      	mov	r8, r0
 8013c2e:	b920      	cbnz	r0, 8013c3a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8013c30:	4b88      	ldr	r3, [pc, #544]	; (8013e54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8013c32:	4a85      	ldr	r2, [pc, #532]	; (8013e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013c34:	f240 3113 	movw	r1, #787	; 0x313
 8013c38:	e7e0      	b.n	8013bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013c3a:	6830      	ldr	r0, [r6, #0]
 8013c3c:	6871      	ldr	r1, [r6, #4]
 8013c3e:	f9b6 a000 	ldrsh.w	sl, [r6]
 8013c42:	ab06      	add	r3, sp, #24
 8013c44:	c303      	stmia	r3!, {r0, r1}
 8013c46:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8013c4a:	f8d9 0000 	ldr.w	r0, [r9]
 8013c4e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8013c52:	ab08      	add	r3, sp, #32
 8013c54:	c303      	stmia	r3!, {r0, r1}
 8013c56:	4628      	mov	r0, r5
 8013c58:	f7fd f9b2 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c5c:	4606      	mov	r6, r0
 8013c5e:	4628      	mov	r0, r5
 8013c60:	f7fd f9e8 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013c64:	f10d 0b20 	add.w	fp, sp, #32
 8013c68:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8013c6c:	a806      	add	r0, sp, #24
 8013c6e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8013c72:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8013c76:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8013c7a:	f7f9 ffb9 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c7e:	4658      	mov	r0, fp
 8013c80:	f7f9 ffb6 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c84:	a80a      	add	r0, sp, #40	; 0x28
 8013c86:	f7f9 ffb3 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013c8a:	4d73      	ldr	r5, [pc, #460]	; (8013e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8013c8c:	4b73      	ldr	r3, [pc, #460]	; (8013e5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8013c8e:	f9b5 2000 	ldrsh.w	r2, [r5]
 8013c92:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013c96:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013c9a:	2100      	movs	r1, #0
 8013c9c:	910c      	str	r1, [sp, #48]	; 0x30
 8013c9e:	4658      	mov	r0, fp
 8013ca0:	a90c      	add	r1, sp, #48	; 0x30
 8013ca2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013ca6:	f7f6 fbbf 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 8013caa:	4658      	mov	r0, fp
 8013cac:	f7f6 fbff 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013cb0:	2800      	cmp	r0, #0
 8013cb2:	f040 8099 	bne.w	8013de8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013cb6:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8013cba:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8013cbe:	4288      	cmp	r0, r1
 8013cc0:	db37      	blt.n	8013d32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013cc2:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8013cc6:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013cca:	429a      	cmp	r2, r3
 8013ccc:	db31      	blt.n	8013d32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013cce:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8013cd2:	4430      	add	r0, r6
 8013cd4:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013cd8:	4431      	add	r1, r6
 8013cda:	b200      	sxth	r0, r0
 8013cdc:	b209      	sxth	r1, r1
 8013cde:	4288      	cmp	r0, r1
 8013ce0:	dc27      	bgt.n	8013d32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013ce2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8013ce6:	440a      	add	r2, r1
 8013ce8:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8013cec:	440b      	add	r3, r1
 8013cee:	b212      	sxth	r2, r2
 8013cf0:	b21b      	sxth	r3, r3
 8013cf2:	429a      	cmp	r2, r3
 8013cf4:	dc1d      	bgt.n	8013d32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013cf6:	6823      	ldr	r3, [r4, #0]
 8013cf8:	4620      	mov	r0, r4
 8013cfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013cfc:	4798      	blx	r3
 8013cfe:	4682      	mov	sl, r0
 8013d00:	6838      	ldr	r0, [r7, #0]
 8013d02:	6803      	ldr	r3, [r0, #0]
 8013d04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d06:	4798      	blx	r3
 8013d08:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013d0c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013d10:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8013d14:	1a5b      	subs	r3, r3, r1
 8013d16:	b29b      	uxth	r3, r3
 8013d18:	b21c      	sxth	r4, r3
 8013d1a:	2c00      	cmp	r4, #0
 8013d1c:	dc0e      	bgt.n	8013d3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8013d1e:	bf1f      	itttt	ne
 8013d20:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8013d24:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8013d28:	185b      	addne	r3, r3, r1
 8013d2a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8013d2e:	4644      	mov	r4, r8
 8013d30:	e009      	b.n	8013d46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8013d32:	4b4b      	ldr	r3, [pc, #300]	; (8013e60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8013d34:	4a44      	ldr	r2, [pc, #272]	; (8013e48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013d36:	f240 3121 	movw	r1, #801	; 0x321
 8013d3a:	e75f      	b.n	8013bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013d3c:	1ad3      	subs	r3, r2, r3
 8013d3e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8013d42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8013d46:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8013d4a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8013d4e:	1b9b      	subs	r3, r3, r6
 8013d50:	b29b      	uxth	r3, r3
 8013d52:	b219      	sxth	r1, r3
 8013d54:	2900      	cmp	r1, #0
 8013d56:	dd4b      	ble.n	8013df0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8013d58:	4351      	muls	r1, r2
 8013d5a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013d5e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013d62:	1acb      	subs	r3, r1, r3
 8013d64:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013d68:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8013d6c:	2e00      	cmp	r6, #0
 8013d6e:	dd3b      	ble.n	8013de8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013d70:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8013d74:	2b00      	cmp	r3, #0
 8013d76:	dd37      	ble.n	8013de8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013d78:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013d7c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013d80:	fb0a f90c 	mul.w	r9, sl, ip
 8013d84:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8013d88:	4481      	add	r9, r0
 8013d8a:	8828      	ldrh	r0, [r5, #0]
 8013d8c:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8013d90:	42ae      	cmp	r6, r5
 8013d92:	bfa8      	it	ge
 8013d94:	462e      	movge	r6, r5
 8013d96:	1a41      	subs	r1, r0, r1
 8013d98:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8013d9c:	428e      	cmp	r6, r1
 8013d9e:	bfa8      	it	ge
 8013da0:	460e      	movge	r6, r1
 8013da2:	429d      	cmp	r5, r3
 8013da4:	bfa8      	it	ge
 8013da6:	461d      	movge	r5, r3
 8013da8:	4b2c      	ldr	r3, [pc, #176]	; (8013e5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8013daa:	881b      	ldrh	r3, [r3, #0]
 8013dac:	eba3 030c 	sub.w	r3, r3, ip
 8013db0:	429d      	cmp	r5, r3
 8013db2:	bfa8      	it	ge
 8013db4:	461d      	movge	r5, r3
 8013db6:	42b0      	cmp	r0, r6
 8013db8:	d12c      	bne.n	8013e14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8013dba:	4290      	cmp	r0, r2
 8013dbc:	d12a      	bne.n	8013e14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8013dbe:	6838      	ldr	r0, [r7, #0]
 8013dc0:	9203      	str	r2, [sp, #12]
 8013dc2:	6803      	ldr	r3, [r0, #0]
 8013dc4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013dc6:	4798      	blx	r3
 8013dc8:	07c3      	lsls	r3, r0, #31
 8013dca:	d51a      	bpl.n	8013e02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8013dcc:	9a03      	ldr	r2, [sp, #12]
 8013dce:	6838      	ldr	r0, [r7, #0]
 8013dd0:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8013dd4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8013dd8:	6803      	ldr	r3, [r0, #0]
 8013dda:	9200      	str	r2, [sp, #0]
 8013ddc:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8013dde:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8013de2:	4623      	mov	r3, r4
 8013de4:	47a8      	blx	r5
 8013de6:	4680      	mov	r8, r0
 8013de8:	4640      	mov	r0, r8
 8013dea:	b00f      	add	sp, #60	; 0x3c
 8013dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013df0:	bf1f      	itttt	ne
 8013df2:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8013df6:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8013dfa:	185b      	addne	r3, r3, r1
 8013dfc:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8013e00:	e7b2      	b.n	8013d68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 8013e02:	6838      	ldr	r0, [r7, #0]
 8013e04:	6803      	ldr	r3, [r0, #0]
 8013e06:	464a      	mov	r2, r9
 8013e08:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8013e0a:	4621      	mov	r1, r4
 8013e0c:	fb05 f30a 	mul.w	r3, r5, sl
 8013e10:	47b0      	blx	r6
 8013e12:	e7e9      	b.n	8013de8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013e14:	4355      	muls	r5, r2
 8013e16:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8013e1a:	9303      	str	r3, [sp, #12]
 8013e1c:	0076      	lsls	r6, r6, #1
 8013e1e:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8013e22:	9b03      	ldr	r3, [sp, #12]
 8013e24:	429c      	cmp	r4, r3
 8013e26:	d2df      	bcs.n	8013de8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013e28:	6838      	ldr	r0, [r7, #0]
 8013e2a:	6803      	ldr	r3, [r0, #0]
 8013e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e2e:	464a      	mov	r2, r9
 8013e30:	461d      	mov	r5, r3
 8013e32:	4621      	mov	r1, r4
 8013e34:	4633      	mov	r3, r6
 8013e36:	47a8      	blx	r5
 8013e38:	44d1      	add	r9, sl
 8013e3a:	445c      	add	r4, fp
 8013e3c:	e7f1      	b.n	8013e22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8013e3e:	bf00      	nop
 8013e40:	20012dc4 	.word	0x20012dc4
 8013e44:	08021290 	.word	0x08021290
 8013e48:	08021b40 	.word	0x08021b40
 8013e4c:	08021342 	.word	0x08021342
 8013e50:	08021374 	.word	0x08021374
 8013e54:	080213c9 	.word	0x080213c9
 8013e58:	20012dbe 	.word	0x20012dbe
 8013e5c:	20012dc0 	.word	0x20012dc0
 8013e60:	08021407 	.word	0x08021407

08013e64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8013e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e66:	4607      	mov	r7, r0
 8013e68:	b087      	sub	sp, #28
 8013e6a:	460d      	mov	r5, r1
 8013e6c:	4614      	mov	r4, r2
 8013e6e:	461e      	mov	r6, r3
 8013e70:	b373      	cbz	r3, 8013ed0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8013e72:	4608      	mov	r0, r1
 8013e74:	f7f6 fb1b 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013e78:	bb50      	cbnz	r0, 8013ed0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8013e7a:	6828      	ldr	r0, [r5, #0]
 8013e7c:	6869      	ldr	r1, [r5, #4]
 8013e7e:	4d1f      	ldr	r5, [pc, #124]	; (8013efc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 8013e80:	ab04      	add	r3, sp, #16
 8013e82:	c303      	stmia	r3!, {r0, r1}
 8013e84:	a804      	add	r0, sp, #16
 8013e86:	f7f9 feb3 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e8a:	6828      	ldr	r0, [r5, #0]
 8013e8c:	6803      	ldr	r3, [r0, #0]
 8013e8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013e90:	4798      	blx	r3
 8013e92:	2eff      	cmp	r6, #255	; 0xff
 8013e94:	d01e      	beq.n	8013ed4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 8013e96:	f010 0f08 	tst.w	r0, #8
 8013e9a:	6828      	ldr	r0, [r5, #0]
 8013e9c:	6803      	ldr	r3, [r0, #0]
 8013e9e:	d01c      	beq.n	8013eda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 8013ea0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013ea2:	4b17      	ldr	r3, [pc, #92]	; (8013f00 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 8013ea4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013ea8:	9602      	str	r6, [sp, #8]
 8013eaa:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 8013eae:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 8013eb2:	0964      	lsrs	r4, r4, #5
 8013eb4:	4319      	orrs	r1, r3
 8013eb6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013eba:	4321      	orrs	r1, r4
 8013ebc:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8013ec0:	9401      	str	r4, [sp, #4]
 8013ec2:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8013ec6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013eca:	9400      	str	r4, [sp, #0]
 8013ecc:	b289      	uxth	r1, r1
 8013ece:	47a8      	blx	r5
 8013ed0:	b007      	add	sp, #28
 8013ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ed4:	f010 0f02 	tst.w	r0, #2
 8013ed8:	e7df      	b.n	8013e9a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8013eda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013edc:	4798      	blx	r3
 8013ede:	4b09      	ldr	r3, [pc, #36]	; (8013f04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 8013ee0:	881a      	ldrh	r2, [r3, #0]
 8013ee2:	683b      	ldr	r3, [r7, #0]
 8013ee4:	e9cd 4600 	strd	r4, r6, [sp]
 8013ee8:	4601      	mov	r1, r0
 8013eea:	69dc      	ldr	r4, [r3, #28]
 8013eec:	4638      	mov	r0, r7
 8013eee:	ab04      	add	r3, sp, #16
 8013ef0:	47a0      	blx	r4
 8013ef2:	6828      	ldr	r0, [r5, #0]
 8013ef4:	6803      	ldr	r3, [r0, #0]
 8013ef6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ef8:	4798      	blx	r3
 8013efa:	e7e9      	b.n	8013ed0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8013efc:	20012dc4 	.word	0x20012dc4
 8013f00:	fffff800 	.word	0xfffff800
 8013f04:	20012dbe 	.word	0x20012dbe

08013f08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8013f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013f0c:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 8013f10:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8013f14:	460f      	mov	r7, r1
 8013f16:	4614      	mov	r4, r2
 8013f18:	461d      	mov	r5, r3
 8013f1a:	2e00      	cmp	r6, #0
 8013f1c:	f000 80b6 	beq.w	801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8013f20:	4618      	mov	r0, r3
 8013f22:	f7f6 fac4 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f26:	2800      	cmp	r0, #0
 8013f28:	f040 80b0 	bne.w	801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8013f2c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013f30:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013f34:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8013f38:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8013f3c:	fb04 1303 	mla	r3, r4, r3, r1
 8013f40:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 8013f44:	4365      	muls	r5, r4
 8013f46:	2eff      	cmp	r6, #255	; 0xff
 8013f48:	eba4 0c00 	sub.w	ip, r4, r0
 8013f4c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8013f50:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 8013f54:	ea4f 2718 	mov.w	r7, r8, lsr #8
 8013f58:	fa5f f288 	uxtb.w	r2, r8
 8013f5c:	d04a      	beq.n	8013ff4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8013f5e:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 8013f62:	fa5f fe8e 	uxtb.w	lr, lr
 8013f66:	b2b6      	uxth	r6, r6
 8013f68:	b2ff      	uxtb	r7, r7
 8013f6a:	0040      	lsls	r0, r0, #1
 8013f6c:	fb0e fe06 	mul.w	lr, lr, r6
 8013f70:	4377      	muls	r7, r6
 8013f72:	fb02 f306 	mul.w	r3, r2, r6
 8013f76:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8013f7a:	fa1f f888 	uxth.w	r8, r8
 8013f7e:	42a9      	cmp	r1, r5
 8013f80:	f080 8084 	bcs.w	801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8013f84:	eb01 0900 	add.w	r9, r1, r0
 8013f88:	4549      	cmp	r1, r9
 8013f8a:	d231      	bcs.n	8013ff0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 8013f8c:	880a      	ldrh	r2, [r1, #0]
 8013f8e:	1214      	asrs	r4, r2, #8
 8013f90:	10d6      	asrs	r6, r2, #3
 8013f92:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8013f96:	00d2      	lsls	r2, r2, #3
 8013f98:	b2d2      	uxtb	r2, r2
 8013f9a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8013f9e:	fb14 f408 	smulbb	r4, r4, r8
 8013fa2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8013fa6:	4474      	add	r4, lr
 8013fa8:	fb12 f208 	smulbb	r2, r2, r8
 8013fac:	b2a4      	uxth	r4, r4
 8013fae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013fb2:	441a      	add	r2, r3
 8013fb4:	b292      	uxth	r2, r2
 8013fb6:	f104 0a01 	add.w	sl, r4, #1
 8013fba:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8013fbe:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8013fc2:	fb16 f608 	smulbb	r6, r6, r8
 8013fc6:	f102 0a01 	add.w	sl, r2, #1
 8013fca:	443e      	add	r6, r7
 8013fcc:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8013fd0:	b2b6      	uxth	r6, r6
 8013fd2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8013fd6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013fda:	4322      	orrs	r2, r4
 8013fdc:	1c74      	adds	r4, r6, #1
 8013fde:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8013fe2:	0976      	lsrs	r6, r6, #5
 8013fe4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013fe8:	4332      	orrs	r2, r6
 8013fea:	f821 2b02 	strh.w	r2, [r1], #2
 8013fee:	e7cb      	b.n	8013f88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 8013ff0:	4461      	add	r1, ip
 8013ff2:	e7c4      	b.n	8013f7e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8013ff4:	4b26      	ldr	r3, [pc, #152]	; (8014090 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8013ff6:	00ff      	lsls	r7, r7, #3
 8013ff8:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 8013ffc:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8014000:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014004:	433b      	orrs	r3, r7
 8014006:	07e2      	lsls	r2, r4, #31
 8014008:	b29b      	uxth	r3, r3
 801400a:	d50c      	bpl.n	8014026 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801400c:	0040      	lsls	r0, r0, #1
 801400e:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8014012:	42a9      	cmp	r1, r5
 8014014:	d23a      	bcs.n	801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8014016:	180a      	adds	r2, r1, r0
 8014018:	4291      	cmp	r1, r2
 801401a:	d202      	bcs.n	8014022 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 801401c:	f821 3b02 	strh.w	r3, [r1], #2
 8014020:	e7fa      	b.n	8014018 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8014022:	4461      	add	r1, ip
 8014024:	e7f5      	b.n	8014012 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 8014026:	078f      	lsls	r7, r1, #30
 8014028:	d008      	beq.n	801403c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 801402a:	0066      	lsls	r6, r4, #1
 801402c:	460a      	mov	r2, r1
 801402e:	42aa      	cmp	r2, r5
 8014030:	d202      	bcs.n	8014038 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 8014032:	8013      	strh	r3, [r2, #0]
 8014034:	4432      	add	r2, r6
 8014036:	e7fa      	b.n	801402e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8014038:	3102      	adds	r1, #2
 801403a:	3801      	subs	r0, #1
 801403c:	07c6      	lsls	r6, r0, #31
 801403e:	d50b      	bpl.n	8014058 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 8014040:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8014044:	3a01      	subs	r2, #1
 8014046:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801404a:	0066      	lsls	r6, r4, #1
 801404c:	42aa      	cmp	r2, r5
 801404e:	d202      	bcs.n	8014056 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 8014050:	8013      	strh	r3, [r2, #0]
 8014052:	4432      	add	r2, r6
 8014054:	e7fa      	b.n	801404c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8014056:	3801      	subs	r0, #1
 8014058:	b1c0      	cbz	r0, 801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801405a:	1040      	asrs	r0, r0, #1
 801405c:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014060:	0080      	lsls	r0, r0, #2
 8014062:	0064      	lsls	r4, r4, #1
 8014064:	42a9      	cmp	r1, r5
 8014066:	d211      	bcs.n	801408c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8014068:	078a      	lsls	r2, r1, #30
 801406a:	d006      	beq.n	801407a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 801406c:	4b09      	ldr	r3, [pc, #36]	; (8014094 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801406e:	4a0a      	ldr	r2, [pc, #40]	; (8014098 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 8014070:	480a      	ldr	r0, [pc, #40]	; (801409c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 8014072:	f240 31d6 	movw	r1, #982	; 0x3d6
 8014076:	f008 fe8f 	bl	801cd98 <__assert_func>
 801407a:	180e      	adds	r6, r1, r0
 801407c:	460a      	mov	r2, r1
 801407e:	42b2      	cmp	r2, r6
 8014080:	d202      	bcs.n	8014088 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 8014082:	f842 3b04 	str.w	r3, [r2], #4
 8014086:	e7fa      	b.n	801407e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 8014088:	4421      	add	r1, r4
 801408a:	e7eb      	b.n	8014064 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 801408c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014090:	fffff800 	.word	0xfffff800
 8014094:	08021141 	.word	0x08021141
 8014098:	0802178c 	.word	0x0802178c
 801409c:	08021342 	.word	0x08021342

080140a0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80140a0:	2200      	movs	r2, #0
 80140a2:	4910      	ldr	r1, [pc, #64]	; (80140e4 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80140a4:	6042      	str	r2, [r0, #4]
 80140a6:	6001      	str	r1, [r0, #0]
 80140a8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80140ac:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80140b0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80140b4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80140b8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80140bc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80140c0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80140c4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80140c8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80140cc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80140d0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80140d4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80140d8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80140dc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80140e0:	4770      	bx	lr
 80140e2:	bf00      	nop
 80140e4:	08021748 	.word	0x08021748

080140e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80140e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140ec:	460d      	mov	r5, r1
 80140ee:	b08b      	sub	sp, #44	; 0x2c
 80140f0:	4604      	mov	r4, r0
 80140f2:	6808      	ldr	r0, [r1, #0]
 80140f4:	6849      	ldr	r1, [r1, #4]
 80140f6:	4699      	mov	r9, r3
 80140f8:	ab06      	add	r3, sp, #24
 80140fa:	c303      	stmia	r3!, {r0, r1}
 80140fc:	6810      	ldr	r0, [r2, #0]
 80140fe:	6851      	ldr	r1, [r2, #4]
 8014100:	ab08      	add	r3, sp, #32
 8014102:	c303      	stmia	r3!, {r0, r1}
 8014104:	a806      	add	r0, sp, #24
 8014106:	f7f9 fd73 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801410a:	4629      	mov	r1, r5
 801410c:	a808      	add	r0, sp, #32
 801410e:	f7f9 fd57 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014112:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014116:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801411a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801411e:	4d62      	ldr	r5, [pc, #392]	; (80142a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 8014120:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8014124:	6828      	ldr	r0, [r5, #0]
 8014126:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801412a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801412e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014132:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8014136:	440a      	add	r2, r1
 8014138:	f8ad 2020 	strh.w	r2, [sp, #32]
 801413c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014140:	4413      	add	r3, r2
 8014142:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014146:	6803      	ldr	r3, [r0, #0]
 8014148:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801414a:	4798      	blx	r3
 801414c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014150:	d118      	bne.n	8014184 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8014152:	f010 0f20 	tst.w	r0, #32
 8014156:	6828      	ldr	r0, [r5, #0]
 8014158:	d017      	beq.n	801418a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 801415a:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 801415e:	6801      	ldr	r1, [r0, #0]
 8014160:	9502      	str	r5, [sp, #8]
 8014162:	b2b6      	uxth	r6, r6
 8014164:	fa1f f588 	uxth.w	r5, r8
 8014168:	f8cd 900c 	str.w	r9, [sp, #12]
 801416c:	9601      	str	r6, [sp, #4]
 801416e:	9500      	str	r5, [sp, #0]
 8014170:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 8014172:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8014176:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801417a:	4621      	mov	r1, r4
 801417c:	47a8      	blx	r5
 801417e:	b00b      	add	sp, #44	; 0x2c
 8014180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014184:	f010 0f40 	tst.w	r0, #64	; 0x40
 8014188:	e7e5      	b.n	8014156 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801418a:	6803      	ldr	r3, [r0, #0]
 801418c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801418e:	4798      	blx	r3
 8014190:	4946      	ldr	r1, [pc, #280]	; (80142ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014192:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8014196:	880b      	ldrh	r3, [r1, #0]
 8014198:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 801419c:	fb03 5202 	mla	r2, r3, r2, r5
 80141a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80141a4:	4373      	muls	r3, r6
 80141a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80141aa:	9305      	str	r3, [sp, #20]
 80141ac:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80141b0:	9304      	str	r3, [sp, #16]
 80141b2:	468a      	mov	sl, r1
 80141b4:	9b05      	ldr	r3, [sp, #20]
 80141b6:	4298      	cmp	r0, r3
 80141b8:	d26f      	bcs.n	801429a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 80141ba:	9b04      	ldr	r3, [sp, #16]
 80141bc:	4621      	mov	r1, r4
 80141be:	eb00 0b03 	add.w	fp, r0, r3
 80141c2:	4558      	cmp	r0, fp
 80141c4:	d25c      	bcs.n	8014280 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 80141c6:	f851 2b04 	ldr.w	r2, [r1], #4
 80141ca:	0e14      	lsrs	r4, r2, #24
 80141cc:	d016      	beq.n	80141fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 80141ce:	2cff      	cmp	r4, #255	; 0xff
 80141d0:	b2d3      	uxtb	r3, r2
 80141d2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80141d6:	ea4f 4212 	mov.w	r2, r2, lsr #16
 80141da:	d111      	bne.n	8014200 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80141dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80141e0:	d10e      	bne.n	8014200 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80141e2:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 80141e6:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 80141ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80141ee:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 80141f2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80141f6:	ea43 030c 	orr.w	r3, r3, ip
 80141fa:	8003      	strh	r3, [r0, #0]
 80141fc:	3002      	adds	r0, #2
 80141fe:	e7e0      	b.n	80141c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8014200:	fb09 f404 	mul.w	r4, r9, r4
 8014204:	8807      	ldrh	r7, [r0, #0]
 8014206:	1c65      	adds	r5, r4, #1
 8014208:	eb05 2424 	add.w	r4, r5, r4, asr #8
 801420c:	1224      	asrs	r4, r4, #8
 801420e:	123e      	asrs	r6, r7, #8
 8014210:	fa1f fe84 	uxth.w	lr, r4
 8014214:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014218:	43e4      	mvns	r4, r4
 801421a:	b2d2      	uxtb	r2, r2
 801421c:	b2e4      	uxtb	r4, r4
 801421e:	10fd      	asrs	r5, r7, #3
 8014220:	fb12 f20e 	smulbb	r2, r2, lr
 8014224:	00ff      	lsls	r7, r7, #3
 8014226:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801422a:	fb06 2604 	mla	r6, r6, r4, r2
 801422e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014232:	b2ff      	uxtb	r7, r7
 8014234:	fa5f fc8c 	uxtb.w	ip, ip
 8014238:	b2b6      	uxth	r6, r6
 801423a:	fb1c fc0e 	smulbb	ip, ip, lr
 801423e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014242:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014246:	fb13 f30e 	smulbb	r3, r3, lr
 801424a:	fb05 c504 	mla	r5, r5, r4, ip
 801424e:	1c72      	adds	r2, r6, #1
 8014250:	fb07 3704 	mla	r7, r7, r4, r3
 8014254:	b2ad      	uxth	r5, r5
 8014256:	b2bf      	uxth	r7, r7
 8014258:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801425c:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 8014260:	f105 0c01 	add.w	ip, r5, #1
 8014264:	1c7e      	adds	r6, r7, #1
 8014266:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801426a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801426e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014272:	096d      	lsrs	r5, r5, #5
 8014274:	4316      	orrs	r6, r2
 8014276:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801427a:	432e      	orrs	r6, r5
 801427c:	8006      	strh	r6, [r0, #0]
 801427e:	e7bd      	b.n	80141fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 8014280:	f8ba 3000 	ldrh.w	r3, [sl]
 8014284:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8014288:	eba3 0308 	sub.w	r3, r3, r8
 801428c:	eba4 0408 	sub.w	r4, r4, r8
 8014290:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014294:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8014298:	e78c      	b.n	80141b4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 801429a:	4b03      	ldr	r3, [pc, #12]	; (80142a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 801429c:	6818      	ldr	r0, [r3, #0]
 801429e:	6803      	ldr	r3, [r0, #0]
 80142a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80142a2:	4798      	blx	r3
 80142a4:	e76b      	b.n	801417e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 80142a6:	bf00      	nop
 80142a8:	20012dc4 	.word	0x20012dc4
 80142ac:	20012dbe 	.word	0x20012dbe

080142b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80142b0:	b570      	push	{r4, r5, r6, lr}
 80142b2:	9d04      	ldr	r5, [sp, #16]
 80142b4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80142b8:	460c      	mov	r4, r1
 80142ba:	4619      	mov	r1, r3
 80142bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80142c0:	2a0d      	cmp	r2, #13
 80142c2:	d820      	bhi.n	8014306 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80142c4:	e8df f002 	tbb	[pc, r2]
 80142c8:	18121807 	.word	0x18121807
 80142cc:	18181818 	.word	0x18181818
 80142d0:	18181818 	.word	0x18181818
 80142d4:	1818      	.short	0x1818
 80142d6:	6802      	ldr	r2, [r0, #0]
 80142d8:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80142dc:	68d6      	ldr	r6, [r2, #12]
 80142de:	462b      	mov	r3, r5
 80142e0:	460a      	mov	r2, r1
 80142e2:	46b4      	mov	ip, r6
 80142e4:	4621      	mov	r1, r4
 80142e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142ea:	4760      	bx	ip
 80142ec:	462a      	mov	r2, r5
 80142ee:	4620      	mov	r0, r4
 80142f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142f4:	f7ff bef8 	b.w	80140e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80142f8:	4b03      	ldr	r3, [pc, #12]	; (8014308 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80142fa:	4a04      	ldr	r2, [pc, #16]	; (801430c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80142fc:	4804      	ldr	r0, [pc, #16]	; (8014310 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80142fe:	f44f 7142 	mov.w	r1, #776	; 0x308
 8014302:	f008 fd49 	bl	801cd98 <__assert_func>
 8014306:	bd70      	pop	{r4, r5, r6, pc}
 8014308:	08021467 	.word	0x08021467
 801430c:	08021bc6 	.word	0x08021bc6
 8014310:	08021342 	.word	0x08021342

08014314 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014318:	460e      	mov	r6, r1
 801431a:	b08c      	sub	sp, #48	; 0x30
 801431c:	4604      	mov	r4, r0
 801431e:	6808      	ldr	r0, [r1, #0]
 8014320:	6849      	ldr	r1, [r1, #4]
 8014322:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 80144f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8014326:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 80144f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 801432a:	461d      	mov	r5, r3
 801432c:	ab08      	add	r3, sp, #32
 801432e:	c303      	stmia	r3!, {r0, r1}
 8014330:	6810      	ldr	r0, [r2, #0]
 8014332:	6851      	ldr	r1, [r2, #4]
 8014334:	ab0a      	add	r3, sp, #40	; 0x28
 8014336:	c303      	stmia	r3!, {r0, r1}
 8014338:	a808      	add	r0, sp, #32
 801433a:	f7f9 fc59 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801433e:	4631      	mov	r1, r6
 8014340:	a80a      	add	r0, sp, #40	; 0x28
 8014342:	f7f9 fc3d 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014346:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801434a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801434e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8014352:	f8d8 0000 	ldr.w	r0, [r8]
 8014356:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 801435a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801435e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014362:	440c      	add	r4, r1
 8014364:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8014368:	440a      	add	r2, r1
 801436a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801436e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014372:	4413      	add	r3, r2
 8014374:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014378:	6803      	ldr	r3, [r0, #0]
 801437a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801437c:	4798      	blx	r3
 801437e:	2dff      	cmp	r5, #255	; 0xff
 8014380:	d122      	bne.n	80143c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 8014382:	f010 0f01 	tst.w	r0, #1
 8014386:	f8d8 0000 	ldr.w	r0, [r8]
 801438a:	d020      	beq.n	80143ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 801438c:	2100      	movs	r1, #0
 801438e:	f04f 0e01 	mov.w	lr, #1
 8014392:	f8d0 c000 	ldr.w	ip, [r0]
 8014396:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801439a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801439e:	e9cd e106 	strd	lr, r1, [sp, #24]
 80143a2:	f8b9 e000 	ldrh.w	lr, [r9]
 80143a6:	9503      	str	r5, [sp, #12]
 80143a8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80143ac:	b2b6      	uxth	r6, r6
 80143ae:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80143b2:	9102      	str	r1, [sp, #8]
 80143b4:	b2bf      	uxth	r7, r7
 80143b6:	9601      	str	r6, [sp, #4]
 80143b8:	9700      	str	r7, [sp, #0]
 80143ba:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 80143be:	4621      	mov	r1, r4
 80143c0:	47a8      	blx	r5
 80143c2:	b00c      	add	sp, #48	; 0x30
 80143c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80143c8:	f010 0f04 	tst.w	r0, #4
 80143cc:	e7db      	b.n	8014386 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 80143ce:	6803      	ldr	r3, [r0, #0]
 80143d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143d2:	4798      	blx	r3
 80143d4:	f8b9 3000 	ldrh.w	r3, [r9]
 80143d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80143dc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80143e0:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 80143e4:	fb03 1202 	mla	r2, r3, r2, r1
 80143e8:	ebac 0c07 	sub.w	ip, ip, r7
 80143ec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80143f0:	435e      	muls	r6, r3
 80143f2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80143f6:	2dff      	cmp	r5, #255	; 0xff
 80143f8:	eba3 0707 	sub.w	r7, r3, r7
 80143fc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014400:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014404:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014408:	d049      	beq.n	801449e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 801440a:	43eb      	mvns	r3, r5
 801440c:	fa1f f985 	uxth.w	r9, r5
 8014410:	b2db      	uxtb	r3, r3
 8014412:	42b0      	cmp	r0, r6
 8014414:	d266      	bcs.n	80144e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014416:	eb00 0a0e 	add.w	sl, r0, lr
 801441a:	4550      	cmp	r0, sl
 801441c:	4621      	mov	r1, r4
 801441e:	f104 0403 	add.w	r4, r4, #3
 8014422:	d25b      	bcs.n	80144dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014424:	8802      	ldrh	r2, [r0, #0]
 8014426:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801442a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801442e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8014432:	fb11 f109 	smulbb	r1, r1, r9
 8014436:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801443a:	10d5      	asrs	r5, r2, #3
 801443c:	fb08 1803 	mla	r8, r8, r3, r1
 8014440:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8014444:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014448:	fb11 f109 	smulbb	r1, r1, r9
 801444c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014450:	fb05 1503 	mla	r5, r5, r3, r1
 8014454:	00d2      	lsls	r2, r2, #3
 8014456:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801445a:	b2d2      	uxtb	r2, r2
 801445c:	fb11 f109 	smulbb	r1, r1, r9
 8014460:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014464:	fa1f f888 	uxth.w	r8, r8
 8014468:	fb02 1203 	mla	r2, r2, r3, r1
 801446c:	b292      	uxth	r2, r2
 801446e:	f108 0101 	add.w	r1, r8, #1
 8014472:	b2ad      	uxth	r5, r5
 8014474:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014478:	1c51      	adds	r1, r2, #1
 801447a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801447e:	1c69      	adds	r1, r5, #1
 8014480:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014484:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8014488:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801448c:	096d      	lsrs	r5, r5, #5
 801448e:	ea42 0208 	orr.w	r2, r2, r8
 8014492:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014496:	432a      	orrs	r2, r5
 8014498:	f820 2b02 	strh.w	r2, [r0], #2
 801449c:	e7bd      	b.n	801441a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801449e:	4a14      	ldr	r2, [pc, #80]	; (80144f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 80144a0:	42b0      	cmp	r0, r6
 80144a2:	d21f      	bcs.n	80144e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80144a4:	eb00 050e 	add.w	r5, r0, lr
 80144a8:	42a8      	cmp	r0, r5
 80144aa:	4621      	mov	r1, r4
 80144ac:	f104 0403 	add.w	r4, r4, #3
 80144b0:	d210      	bcs.n	80144d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 80144b2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80144b6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80144ba:	00db      	lsls	r3, r3, #3
 80144bc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80144c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80144c4:	430b      	orrs	r3, r1
 80144c6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80144ca:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80144ce:	f820 3b02 	strh.w	r3, [r0], #2
 80144d2:	e7e9      	b.n	80144a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80144d4:	4438      	add	r0, r7
 80144d6:	eb01 040c 	add.w	r4, r1, ip
 80144da:	e7e1      	b.n	80144a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 80144dc:	4438      	add	r0, r7
 80144de:	eb01 040c 	add.w	r4, r1, ip
 80144e2:	e796      	b.n	8014412 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 80144e4:	4b03      	ldr	r3, [pc, #12]	; (80144f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 80144e6:	6818      	ldr	r0, [r3, #0]
 80144e8:	6803      	ldr	r3, [r0, #0]
 80144ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80144ec:	4798      	blx	r3
 80144ee:	e768      	b.n	80143c2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 80144f0:	fffff800 	.word	0xfffff800
 80144f4:	20012dc4 	.word	0x20012dc4
 80144f8:	20012dbe 	.word	0x20012dbe

080144fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80144fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014500:	b093      	sub	sp, #76	; 0x4c
 8014502:	880e      	ldrh	r6, [r1, #0]
 8014504:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014508:	4681      	mov	r9, r0
 801450a:	4688      	mov	r8, r1
 801450c:	4615      	mov	r5, r2
 801450e:	b136      	cbz	r6, 801451e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8014510:	4b70      	ldr	r3, [pc, #448]	; (80146d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8014512:	4a71      	ldr	r2, [pc, #452]	; (80146d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8014514:	4871      	ldr	r0, [pc, #452]	; (80146dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8014516:	f44f 719a 	mov.w	r1, #308	; 0x134
 801451a:	f008 fc3d 	bl	801cd98 <__assert_func>
 801451e:	6810      	ldr	r0, [r2, #0]
 8014520:	6851      	ldr	r1, [r2, #4]
 8014522:	4f6f      	ldr	r7, [pc, #444]	; (80146e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8014524:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 80146e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8014528:	ac0e      	add	r4, sp, #56	; 0x38
 801452a:	c403      	stmia	r4!, {r0, r1}
 801452c:	6818      	ldr	r0, [r3, #0]
 801452e:	6859      	ldr	r1, [r3, #4]
 8014530:	ac10      	add	r4, sp, #64	; 0x40
 8014532:	c403      	stmia	r4!, {r0, r1}
 8014534:	a80e      	add	r0, sp, #56	; 0x38
 8014536:	f7f9 fb5b 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801453a:	4629      	mov	r1, r5
 801453c:	a810      	add	r0, sp, #64	; 0x40
 801453e:	f7f9 fb3f 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014542:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8014546:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801454a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801454e:	6838      	ldr	r0, [r7, #0]
 8014550:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8014554:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8014558:	fb11 2103 	smlabb	r1, r1, r3, r2
 801455c:	4489      	add	r9, r1
 801455e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8014562:	440a      	add	r2, r1
 8014564:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8014568:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801456c:	4413      	add	r3, r2
 801456e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8014572:	6803      	ldr	r3, [r0, #0]
 8014574:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014576:	4798      	blx	r3
 8014578:	f010 0f80 	tst.w	r0, #128	; 0x80
 801457c:	6838      	ldr	r0, [r7, #0]
 801457e:	d01c      	beq.n	80145ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8014580:	210b      	movs	r1, #11
 8014582:	6802      	ldr	r2, [r0, #0]
 8014584:	9608      	str	r6, [sp, #32]
 8014586:	9107      	str	r1, [sp, #28]
 8014588:	f8bb 1000 	ldrh.w	r1, [fp]
 801458c:	9106      	str	r1, [sp, #24]
 801458e:	2101      	movs	r1, #1
 8014590:	e9cd a104 	strd	sl, r1, [sp, #16]
 8014594:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8014598:	9103      	str	r1, [sp, #12]
 801459a:	b2a4      	uxth	r4, r4
 801459c:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80145a0:	9100      	str	r1, [sp, #0]
 80145a2:	b2ad      	uxth	r5, r5
 80145a4:	9502      	str	r5, [sp, #8]
 80145a6:	9401      	str	r4, [sp, #4]
 80145a8:	6b94      	ldr	r4, [r2, #56]	; 0x38
 80145aa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80145ae:	4642      	mov	r2, r8
 80145b0:	4649      	mov	r1, r9
 80145b2:	47a0      	blx	r4
 80145b4:	b013      	add	sp, #76	; 0x4c
 80145b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145ba:	6803      	ldr	r3, [r0, #0]
 80145bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80145be:	4798      	blx	r3
 80145c0:	f8bb 3000 	ldrh.w	r3, [fp]
 80145c4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80145c8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80145cc:	fb03 1202 	mla	r2, r3, r2, r1
 80145d0:	435d      	muls	r5, r3
 80145d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80145d6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80145da:	920c      	str	r2, [sp, #48]	; 0x30
 80145dc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80145e0:	1b12      	subs	r2, r2, r4
 80145e2:	920d      	str	r2, [sp, #52]	; 0x34
 80145e4:	0062      	lsls	r2, r4, #1
 80145e6:	1b1c      	subs	r4, r3, r4
 80145e8:	0063      	lsls	r3, r4, #1
 80145ea:	920a      	str	r2, [sp, #40]	; 0x28
 80145ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80145ee:	f04f 0e04 	mov.w	lr, #4
 80145f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145f4:	4298      	cmp	r0, r3
 80145f6:	d266      	bcs.n	80146c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 80145f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80145fa:	eb00 0b03 	add.w	fp, r0, r3
 80145fe:	4558      	cmp	r0, fp
 8014600:	d25c      	bcs.n	80146bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8014602:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014606:	fb1e e303 	smlabb	r3, lr, r3, lr
 801460a:	f858 2003 	ldr.w	r2, [r8, r3]
 801460e:	0e11      	lsrs	r1, r2, #24
 8014610:	d012      	beq.n	8014638 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8014612:	29ff      	cmp	r1, #255	; 0xff
 8014614:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8014618:	d110      	bne.n	801463c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 801461a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801461e:	d10d      	bne.n	801463c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8014620:	0953      	lsrs	r3, r2, #5
 8014622:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8014626:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801462a:	f027 0707 	bic.w	r7, r7, #7
 801462e:	431f      	orrs	r7, r3
 8014630:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014634:	433a      	orrs	r2, r7
 8014636:	8002      	strh	r2, [r0, #0]
 8014638:	3002      	adds	r0, #2
 801463a:	e7e0      	b.n	80145fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 801463c:	fb0a f101 	mul.w	r1, sl, r1
 8014640:	8806      	ldrh	r6, [r0, #0]
 8014642:	1c4b      	adds	r3, r1, #1
 8014644:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8014648:	1235      	asrs	r5, r6, #8
 801464a:	10f4      	asrs	r4, r6, #3
 801464c:	121b      	asrs	r3, r3, #8
 801464e:	00f6      	lsls	r6, r6, #3
 8014650:	b299      	uxth	r1, r3
 8014652:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8014656:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801465a:	b2f6      	uxtb	r6, r6
 801465c:	43db      	mvns	r3, r3
 801465e:	b2d2      	uxtb	r2, r2
 8014660:	b2db      	uxtb	r3, r3
 8014662:	fb1c fc01 	smulbb	ip, ip, r1
 8014666:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801466a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801466e:	fb12 f201 	smulbb	r2, r2, r1
 8014672:	fb05 c503 	mla	r5, r5, r3, ip
 8014676:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801467a:	b2ff      	uxtb	r7, r7
 801467c:	fb06 2203 	mla	r2, r6, r3, r2
 8014680:	b2ad      	uxth	r5, r5
 8014682:	fb17 f701 	smulbb	r7, r7, r1
 8014686:	b292      	uxth	r2, r2
 8014688:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801468c:	fb04 7403 	mla	r4, r4, r3, r7
 8014690:	f105 0c01 	add.w	ip, r5, #1
 8014694:	1c57      	adds	r7, r2, #1
 8014696:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801469a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801469e:	b2a4      	uxth	r4, r4
 80146a0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80146a4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80146a8:	433d      	orrs	r5, r7
 80146aa:	1c67      	adds	r7, r4, #1
 80146ac:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80146b0:	0964      	lsrs	r4, r4, #5
 80146b2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80146b6:	4325      	orrs	r5, r4
 80146b8:	8005      	strh	r5, [r0, #0]
 80146ba:	e7bd      	b.n	8014638 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 80146bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80146be:	4418      	add	r0, r3
 80146c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80146c2:	4499      	add	r9, r3
 80146c4:	e795      	b.n	80145f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 80146c6:	4b06      	ldr	r3, [pc, #24]	; (80146e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80146c8:	6818      	ldr	r0, [r3, #0]
 80146ca:	6803      	ldr	r3, [r0, #0]
 80146cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146ce:	4798      	blx	r3
 80146d0:	e770      	b.n	80145b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 80146d2:	bf00      	nop
 80146d4:	08021240 	.word	0x08021240
 80146d8:	08021997 	.word	0x08021997
 80146dc:	08021342 	.word	0x08021342
 80146e0:	20012dc4 	.word	0x20012dc4
 80146e4:	20012dbe 	.word	0x20012dbe

080146e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80146e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146ec:	4614      	mov	r4, r2
 80146ee:	880a      	ldrh	r2, [r1, #0]
 80146f0:	b087      	sub	sp, #28
 80146f2:	2a02      	cmp	r2, #2
 80146f4:	4680      	mov	r8, r0
 80146f6:	460d      	mov	r5, r1
 80146f8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80146fc:	d006      	beq.n	801470c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80146fe:	4b63      	ldr	r3, [pc, #396]	; (801488c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8014700:	4a63      	ldr	r2, [pc, #396]	; (8014890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8014702:	4864      	ldr	r0, [pc, #400]	; (8014894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8014704:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8014708:	f008 fb46 	bl	801cd98 <__assert_func>
 801470c:	2e00      	cmp	r6, #0
 801470e:	f000 80b9 	beq.w	8014884 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8014712:	6820      	ldr	r0, [r4, #0]
 8014714:	6861      	ldr	r1, [r4, #4]
 8014716:	af02      	add	r7, sp, #8
 8014718:	c703      	stmia	r7!, {r0, r1}
 801471a:	6818      	ldr	r0, [r3, #0]
 801471c:	6859      	ldr	r1, [r3, #4]
 801471e:	af04      	add	r7, sp, #16
 8014720:	c703      	stmia	r7!, {r0, r1}
 8014722:	a802      	add	r0, sp, #8
 8014724:	f7f9 fa64 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014728:	4621      	mov	r1, r4
 801472a:	a804      	add	r0, sp, #16
 801472c:	f7f9 fa48 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014730:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014734:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014738:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801473c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014740:	fb14 2103 	smlabb	r1, r4, r3, r2
 8014744:	eb08 0401 	add.w	r4, r8, r1
 8014748:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801474c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014750:	440a      	add	r2, r1
 8014752:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014756:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801475a:	4413      	add	r3, r2
 801475c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014760:	4b4d      	ldr	r3, [pc, #308]	; (8014898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8014762:	6818      	ldr	r0, [r3, #0]
 8014764:	6803      	ldr	r3, [r0, #0]
 8014766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014768:	4798      	blx	r3
 801476a:	4b4c      	ldr	r3, [pc, #304]	; (801489c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801476c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8014770:	881a      	ldrh	r2, [r3, #0]
 8014772:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8014776:	2eff      	cmp	r6, #255	; 0xff
 8014778:	fb02 c101 	mla	r1, r2, r1, ip
 801477c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014780:	fb02 f207 	mul.w	r2, r2, r7
 8014784:	f105 0104 	add.w	r1, r5, #4
 8014788:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801478c:	461d      	mov	r5, r3
 801478e:	d05a      	beq.n	8014846 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8014790:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8014794:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014798:	b2b6      	uxth	r6, r6
 801479a:	fa1f fe8e 	uxth.w	lr, lr
 801479e:	9301      	str	r3, [sp, #4]
 80147a0:	4282      	cmp	r2, r0
 80147a2:	d96a      	bls.n	801487a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80147a4:	eb00 0b0a 	add.w	fp, r0, sl
 80147a8:	4583      	cmp	fp, r0
 80147aa:	d940      	bls.n	801482e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80147ac:	f814 3b01 	ldrb.w	r3, [r4], #1
 80147b0:	8805      	ldrh	r5, [r0, #0]
 80147b2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80147b6:	122f      	asrs	r7, r5, #8
 80147b8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80147bc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80147c0:	fb17 f70e 	smulbb	r7, r7, lr
 80147c4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80147c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80147cc:	00ed      	lsls	r5, r5, #3
 80147ce:	fb0c 7c06 	mla	ip, ip, r6, r7
 80147d2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80147d6:	10df      	asrs	r7, r3, #3
 80147d8:	b2ed      	uxtb	r5, r5
 80147da:	00db      	lsls	r3, r3, #3
 80147dc:	fa1f fc8c 	uxth.w	ip, ip
 80147e0:	fb19 f90e 	smulbb	r9, r9, lr
 80147e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80147e8:	b2db      	uxtb	r3, r3
 80147ea:	fb15 f50e 	smulbb	r5, r5, lr
 80147ee:	fb07 9706 	mla	r7, r7, r6, r9
 80147f2:	fb03 5306 	mla	r3, r3, r6, r5
 80147f6:	f10c 0901 	add.w	r9, ip, #1
 80147fa:	b29b      	uxth	r3, r3
 80147fc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014800:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8014804:	f103 0c01 	add.w	ip, r3, #1
 8014808:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801480c:	b2bf      	uxth	r7, r7
 801480e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014812:	ea4c 0c09 	orr.w	ip, ip, r9
 8014816:	f107 0901 	add.w	r9, r7, #1
 801481a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801481e:	097f      	lsrs	r7, r7, #5
 8014820:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014824:	ea4c 0c07 	orr.w	ip, ip, r7
 8014828:	f820 cb02 	strh.w	ip, [r0], #2
 801482c:	e7bc      	b.n	80147a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801482e:	9b01      	ldr	r3, [sp, #4]
 8014830:	881b      	ldrh	r3, [r3, #0]
 8014832:	eba3 0308 	sub.w	r3, r3, r8
 8014836:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801483a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801483e:	eba3 0308 	sub.w	r3, r3, r8
 8014842:	441c      	add	r4, r3
 8014844:	e7ac      	b.n	80147a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8014846:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801484a:	4282      	cmp	r2, r0
 801484c:	d915      	bls.n	801487a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801484e:	eb00 060a 	add.w	r6, r0, sl
 8014852:	4286      	cmp	r6, r0
 8014854:	d906      	bls.n	8014864 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8014856:	f814 3b01 	ldrb.w	r3, [r4], #1
 801485a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801485e:	f820 3b02 	strh.w	r3, [r0], #2
 8014862:	e7f6      	b.n	8014852 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8014864:	882b      	ldrh	r3, [r5, #0]
 8014866:	eba3 0308 	sub.w	r3, r3, r8
 801486a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801486e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014872:	eba3 0308 	sub.w	r3, r3, r8
 8014876:	441c      	add	r4, r3
 8014878:	e7e7      	b.n	801484a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801487a:	4b07      	ldr	r3, [pc, #28]	; (8014898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801487c:	6818      	ldr	r0, [r3, #0]
 801487e:	6803      	ldr	r3, [r0, #0]
 8014880:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014882:	4798      	blx	r3
 8014884:	b007      	add	sp, #28
 8014886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801488a:	bf00      	nop
 801488c:	08021170 	.word	0x08021170
 8014890:	08021801 	.word	0x08021801
 8014894:	08021342 	.word	0x08021342
 8014898:	20012dc4 	.word	0x20012dc4
 801489c:	20012dbe 	.word	0x20012dbe

080148a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80148a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148a4:	f8b1 9000 	ldrh.w	r9, [r1]
 80148a8:	b091      	sub	sp, #68	; 0x44
 80148aa:	f1b9 0f01 	cmp.w	r9, #1
 80148ae:	4604      	mov	r4, r0
 80148b0:	460f      	mov	r7, r1
 80148b2:	4690      	mov	r8, r2
 80148b4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80148b8:	d006      	beq.n	80148c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80148ba:	4b84      	ldr	r3, [pc, #528]	; (8014acc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80148bc:	4a84      	ldr	r2, [pc, #528]	; (8014ad0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80148be:	4885      	ldr	r0, [pc, #532]	; (8014ad4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80148c0:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 80148c4:	f008 fa68 	bl	801cd98 <__assert_func>
 80148c8:	2d00      	cmp	r5, #0
 80148ca:	d04f      	beq.n	801496c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80148cc:	6810      	ldr	r0, [r2, #0]
 80148ce:	6851      	ldr	r1, [r2, #4]
 80148d0:	f8df b208 	ldr.w	fp, [pc, #520]	; 8014adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 80148d4:	ae0c      	add	r6, sp, #48	; 0x30
 80148d6:	c603      	stmia	r6!, {r0, r1}
 80148d8:	6818      	ldr	r0, [r3, #0]
 80148da:	6859      	ldr	r1, [r3, #4]
 80148dc:	ae0e      	add	r6, sp, #56	; 0x38
 80148de:	c603      	stmia	r6!, {r0, r1}
 80148e0:	a80c      	add	r0, sp, #48	; 0x30
 80148e2:	f7f9 f985 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80148e6:	4641      	mov	r1, r8
 80148e8:	a80e      	add	r0, sp, #56	; 0x38
 80148ea:	f7f9 f969 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80148ee:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80148f2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80148f6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80148fa:	f8db 0000 	ldr.w	r0, [fp]
 80148fe:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8014902:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8014906:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014ae0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801490a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801490e:	440c      	add	r4, r1
 8014910:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014914:	440a      	add	r2, r1
 8014916:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801491a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801491e:	4413      	add	r3, r2
 8014920:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8014924:	6803      	ldr	r3, [r0, #0]
 8014926:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014928:	4798      	blx	r3
 801492a:	f010 0f80 	tst.w	r0, #128	; 0x80
 801492e:	f8db 0000 	ldr.w	r0, [fp]
 8014932:	d01e      	beq.n	8014972 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8014934:	210b      	movs	r1, #11
 8014936:	f04f 0c00 	mov.w	ip, #0
 801493a:	6802      	ldr	r2, [r0, #0]
 801493c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014940:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 8014944:	f8b8 1000 	ldrh.w	r1, [r8]
 8014948:	9504      	str	r5, [sp, #16]
 801494a:	e9cd 9105 	strd	r9, r1, [sp, #20]
 801494e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014952:	9103      	str	r1, [sp, #12]
 8014954:	fa1f f18a 	uxth.w	r1, sl
 8014958:	9102      	str	r1, [sp, #8]
 801495a:	b2b6      	uxth	r6, r6
 801495c:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 8014960:	9100      	str	r1, [sp, #0]
 8014962:	9601      	str	r6, [sp, #4]
 8014964:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8014966:	4621      	mov	r1, r4
 8014968:	463a      	mov	r2, r7
 801496a:	47a8      	blx	r5
 801496c:	b011      	add	sp, #68	; 0x44
 801496e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014972:	6803      	ldr	r3, [r0, #0]
 8014974:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014976:	4798      	blx	r3
 8014978:	f8b8 2000 	ldrh.w	r2, [r8]
 801497c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014980:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8014984:	2dff      	cmp	r5, #255	; 0xff
 8014986:	fb02 1303 	mla	r3, r2, r3, r1
 801498a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801498e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014992:	fb0a fa02 	mul.w	sl, sl, r2
 8014996:	d062      	beq.n	8014a5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8014998:	ea6f 0c05 	mvn.w	ip, r5
 801499c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80149a0:	930a      	str	r3, [sp, #40]	; 0x28
 80149a2:	b2ad      	uxth	r5, r5
 80149a4:	fa5f fc8c 	uxtb.w	ip, ip
 80149a8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80149ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149ae:	4298      	cmp	r0, r3
 80149b0:	f080 8085 	bcs.w	8014abe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80149b4:	eb00 0b09 	add.w	fp, r0, r9
 80149b8:	4558      	cmp	r0, fp
 80149ba:	d246      	bcs.n	8014a4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80149bc:	f814 eb01 	ldrb.w	lr, [r4], #1
 80149c0:	2303      	movs	r3, #3
 80149c2:	2204      	movs	r2, #4
 80149c4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80149c8:	eb07 0a0e 	add.w	sl, r7, lr
 80149cc:	8803      	ldrh	r3, [r0, #0]
 80149ce:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80149d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80149d6:	1219      	asrs	r1, r3, #8
 80149d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80149dc:	fb18 f805 	smulbb	r8, r8, r5
 80149e0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80149e4:	10da      	asrs	r2, r3, #3
 80149e6:	fb01 810c 	mla	r1, r1, ip, r8
 80149ea:	00db      	lsls	r3, r3, #3
 80149ec:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80149f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80149f4:	b2db      	uxtb	r3, r3
 80149f6:	fb18 f805 	smulbb	r8, r8, r5
 80149fa:	fb1e fe05 	smulbb	lr, lr, r5
 80149fe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014a02:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014a06:	b289      	uxth	r1, r1
 8014a08:	fb02 820c 	mla	r2, r2, ip, r8
 8014a0c:	fb03 e30c 	mla	r3, r3, ip, lr
 8014a10:	b292      	uxth	r2, r2
 8014a12:	b29b      	uxth	r3, r3
 8014a14:	f101 0801 	add.w	r8, r1, #1
 8014a18:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014a1c:	f103 0e01 	add.w	lr, r3, #1
 8014a20:	f102 0801 	add.w	r8, r2, #1
 8014a24:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8014a28:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8014a2c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8014a30:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014a34:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014a38:	ea4e 0101 	orr.w	r1, lr, r1
 8014a3c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014a40:	ea41 0108 	orr.w	r1, r1, r8
 8014a44:	f820 1b02 	strh.w	r1, [r0], #2
 8014a48:	e7b6      	b.n	80149b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8014a4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014a4c:	881b      	ldrh	r3, [r3, #0]
 8014a4e:	1b9b      	subs	r3, r3, r6
 8014a50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014a54:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014a58:	1b9b      	subs	r3, r3, r6
 8014a5a:	441c      	add	r4, r3
 8014a5c:	e7a6      	b.n	80149ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8014a5e:	491e      	ldr	r1, [pc, #120]	; (8014ad8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8014a60:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8014a64:	2203      	movs	r2, #3
 8014a66:	2504      	movs	r5, #4
 8014a68:	4550      	cmp	r0, sl
 8014a6a:	d228      	bcs.n	8014abe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8014a6c:	eb00 0c09 	add.w	ip, r0, r9
 8014a70:	4560      	cmp	r0, ip
 8014a72:	4623      	mov	r3, r4
 8014a74:	d219      	bcs.n	8014aaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014a76:	f893 e000 	ldrb.w	lr, [r3]
 8014a7a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8014a7e:	eb07 0b0e 	add.w	fp, r7, lr
 8014a82:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014a86:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8014a8a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014a8e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014a92:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014a96:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014a9a:	ea43 030b 	orr.w	r3, r3, fp
 8014a9e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014aa2:	3401      	adds	r4, #1
 8014aa4:	f820 3b02 	strh.w	r3, [r0], #2
 8014aa8:	e7e2      	b.n	8014a70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8014aaa:	f8b8 3000 	ldrh.w	r3, [r8]
 8014aae:	1b9b      	subs	r3, r3, r6
 8014ab0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014ab4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014ab8:	1b9b      	subs	r3, r3, r6
 8014aba:	441c      	add	r4, r3
 8014abc:	e7d4      	b.n	8014a68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8014abe:	4b07      	ldr	r3, [pc, #28]	; (8014adc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8014ac0:	6818      	ldr	r0, [r3, #0]
 8014ac2:	6803      	ldr	r3, [r0, #0]
 8014ac4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014ac6:	4798      	blx	r3
 8014ac8:	e750      	b.n	801496c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8014aca:	bf00      	nop
 8014acc:	080211be 	.word	0x080211be
 8014ad0:	0802188a 	.word	0x0802188a
 8014ad4:	08021342 	.word	0x08021342
 8014ad8:	fffff800 	.word	0xfffff800
 8014adc:	20012dc4 	.word	0x20012dc4
 8014ae0:	20012dbe 	.word	0x20012dbe

08014ae4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014ae4:	b430      	push	{r4, r5}
 8014ae6:	780d      	ldrb	r5, [r1, #0]
 8014ae8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8014aec:	2d01      	cmp	r5, #1
 8014aee:	d00a      	beq.n	8014b06 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8014af0:	d305      	bcc.n	8014afe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8014af2:	2d02      	cmp	r5, #2
 8014af4:	d10b      	bne.n	8014b0e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8014af6:	9402      	str	r4, [sp, #8]
 8014af8:	bc30      	pop	{r4, r5}
 8014afa:	f7ff bdf5 	b.w	80146e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8014afe:	9402      	str	r4, [sp, #8]
 8014b00:	bc30      	pop	{r4, r5}
 8014b02:	f7ff bcfb 	b.w	80144fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014b06:	9402      	str	r4, [sp, #8]
 8014b08:	bc30      	pop	{r4, r5}
 8014b0a:	f7ff bec9 	b.w	80148a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8014b0e:	bc30      	pop	{r4, r5}
 8014b10:	4770      	bx	lr
	...

08014b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b18:	4604      	mov	r4, r0
 8014b1a:	b087      	sub	sp, #28
 8014b1c:	6810      	ldr	r0, [r2, #0]
 8014b1e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8014b22:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8014d5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8014b26:	460e      	mov	r6, r1
 8014b28:	6851      	ldr	r1, [r2, #4]
 8014b2a:	ad02      	add	r5, sp, #8
 8014b2c:	c503      	stmia	r5!, {r0, r1}
 8014b2e:	6818      	ldr	r0, [r3, #0]
 8014b30:	6859      	ldr	r1, [r3, #4]
 8014b32:	ad04      	add	r5, sp, #16
 8014b34:	4617      	mov	r7, r2
 8014b36:	c503      	stmia	r5!, {r0, r1}
 8014b38:	a802      	add	r0, sp, #8
 8014b3a:	f7f9 f859 	bl	800dbf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014b3e:	4639      	mov	r1, r7
 8014b40:	a804      	add	r0, sp, #16
 8014b42:	f7f9 f83d 	bl	800dbc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014b46:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014b4a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014b4e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8014b52:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014b56:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8014b5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014b5e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014b62:	440e      	add	r6, r1
 8014b64:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014b68:	440a      	add	r2, r1
 8014b6a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014b6e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014b72:	4413      	add	r3, r2
 8014b74:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014b78:	4b77      	ldr	r3, [pc, #476]	; (8014d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014b7a:	6818      	ldr	r0, [r3, #0]
 8014b7c:	6803      	ldr	r3, [r0, #0]
 8014b7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014b80:	4798      	blx	r3
 8014b82:	f8b9 b000 	ldrh.w	fp, [r9]
 8014b86:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014b8a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014b8e:	fb0b 2303 	mla	r3, fp, r3, r2
 8014b92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014b96:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014b9a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014b9e:	fb05 f50b 	mul.w	r5, r5, fp
 8014ba2:	9300      	str	r3, [sp, #0]
 8014ba4:	d069      	beq.n	8014c7a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8014ba6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8014baa:	4558      	cmp	r0, fp
 8014bac:	f080 80cc 	bcs.w	8014d48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014bb0:	9b00      	ldr	r3, [sp, #0]
 8014bb2:	18c3      	adds	r3, r0, r3
 8014bb4:	9301      	str	r3, [sp, #4]
 8014bb6:	4631      	mov	r1, r6
 8014bb8:	9b01      	ldr	r3, [sp, #4]
 8014bba:	4298      	cmp	r0, r3
 8014bbc:	d24f      	bcs.n	8014c5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8014bbe:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014bc2:	2a00      	cmp	r2, #0
 8014bc4:	d048      	beq.n	8014c58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014bc6:	fb0a f202 	mul.w	r2, sl, r2
 8014bca:	1c53      	adds	r3, r2, #1
 8014bcc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014bd0:	121b      	asrs	r3, r3, #8
 8014bd2:	d041      	beq.n	8014c58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014bd4:	8802      	ldrh	r2, [r0, #0]
 8014bd6:	f8b4 c000 	ldrh.w	ip, [r4]
 8014bda:	b29e      	uxth	r6, r3
 8014bdc:	1215      	asrs	r5, r2, #8
 8014bde:	43db      	mvns	r3, r3
 8014be0:	b2db      	uxtb	r3, r3
 8014be2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014be6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014bea:	fb15 f503 	smulbb	r5, r5, r3
 8014bee:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014bf2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014bf6:	00d2      	lsls	r2, r2, #3
 8014bf8:	fb07 5706 	mla	r7, r7, r6, r5
 8014bfc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014c00:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014c04:	b2d2      	uxtb	r2, r2
 8014c06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014c0a:	b2bf      	uxth	r7, r7
 8014c0c:	fb1e fe03 	smulbb	lr, lr, r3
 8014c10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014c14:	fa5f fc8c 	uxtb.w	ip, ip
 8014c18:	fb12 f203 	smulbb	r2, r2, r3
 8014c1c:	fb05 e506 	mla	r5, r5, r6, lr
 8014c20:	fb0c 2c06 	mla	ip, ip, r6, r2
 8014c24:	f107 0e01 	add.w	lr, r7, #1
 8014c28:	fa1f fc8c 	uxth.w	ip, ip
 8014c2c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014c30:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8014c34:	f10c 0701 	add.w	r7, ip, #1
 8014c38:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014c3c:	b2ad      	uxth	r5, r5
 8014c3e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014c42:	ea47 070e 	orr.w	r7, r7, lr
 8014c46:	f105 0e01 	add.w	lr, r5, #1
 8014c4a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014c4e:	096d      	lsrs	r5, r5, #5
 8014c50:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014c54:	432f      	orrs	r7, r5
 8014c56:	8007      	strh	r7, [r0, #0]
 8014c58:	3002      	adds	r0, #2
 8014c5a:	3402      	adds	r4, #2
 8014c5c:	e7ac      	b.n	8014bb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8014c5e:	f8b9 3000 	ldrh.w	r3, [r9]
 8014c62:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014c66:	eba3 0308 	sub.w	r3, r3, r8
 8014c6a:	eba6 0608 	sub.w	r6, r6, r8
 8014c6e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014c72:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014c76:	440e      	add	r6, r1
 8014c78:	e797      	b.n	8014baa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8014c7a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8014c7e:	42a8      	cmp	r0, r5
 8014c80:	d262      	bcs.n	8014d48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014c82:	9b00      	ldr	r3, [sp, #0]
 8014c84:	4631      	mov	r1, r6
 8014c86:	eb00 0b03 	add.w	fp, r0, r3
 8014c8a:	4558      	cmp	r0, fp
 8014c8c:	d24e      	bcs.n	8014d2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8014c8e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014c92:	b12b      	cbz	r3, 8014ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014c94:	2bff      	cmp	r3, #255	; 0xff
 8014c96:	f8b4 e000 	ldrh.w	lr, [r4]
 8014c9a:	d104      	bne.n	8014ca6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8014c9c:	f8a0 e000 	strh.w	lr, [r0]
 8014ca0:	3002      	adds	r0, #2
 8014ca2:	3402      	adds	r4, #2
 8014ca4:	e7f1      	b.n	8014c8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8014ca6:	8802      	ldrh	r2, [r0, #0]
 8014ca8:	b29f      	uxth	r7, r3
 8014caa:	1216      	asrs	r6, r2, #8
 8014cac:	43db      	mvns	r3, r3
 8014cae:	b2db      	uxtb	r3, r3
 8014cb0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014cb4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014cb8:	fb16 f603 	smulbb	r6, r6, r3
 8014cbc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8014cc0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014cc4:	00d2      	lsls	r2, r2, #3
 8014cc6:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014cca:	b2d2      	uxtb	r2, r2
 8014ccc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014cd0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014cd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014cd8:	fb1a fa03 	smulbb	sl, sl, r3
 8014cdc:	fa1f fc8c 	uxth.w	ip, ip
 8014ce0:	fb12 f303 	smulbb	r3, r2, r3
 8014ce4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014ce8:	fa5f fe8e 	uxtb.w	lr, lr
 8014cec:	fb06 a607 	mla	r6, r6, r7, sl
 8014cf0:	f10c 0201 	add.w	r2, ip, #1
 8014cf4:	fb0e 3307 	mla	r3, lr, r7, r3
 8014cf8:	b2b6      	uxth	r6, r6
 8014cfa:	b29b      	uxth	r3, r3
 8014cfc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014d00:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8014d04:	f106 0a01 	add.w	sl, r6, #1
 8014d08:	f103 0c01 	add.w	ip, r3, #1
 8014d0c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014d10:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014d14:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014d18:	0976      	lsrs	r6, r6, #5
 8014d1a:	ea4c 0c02 	orr.w	ip, ip, r2
 8014d1e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014d22:	ea4c 0c06 	orr.w	ip, ip, r6
 8014d26:	f8a0 c000 	strh.w	ip, [r0]
 8014d2a:	e7b9      	b.n	8014ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014d2c:	f8b9 3000 	ldrh.w	r3, [r9]
 8014d30:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014d34:	eba3 0308 	sub.w	r3, r3, r8
 8014d38:	eba6 0608 	sub.w	r6, r6, r8
 8014d3c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014d40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014d44:	440e      	add	r6, r1
 8014d46:	e79a      	b.n	8014c7e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8014d48:	4b03      	ldr	r3, [pc, #12]	; (8014d58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014d4a:	6818      	ldr	r0, [r3, #0]
 8014d4c:	6803      	ldr	r3, [r0, #0]
 8014d4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d50:	4798      	blx	r3
 8014d52:	b007      	add	sp, #28
 8014d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d58:	20012dc4 	.word	0x20012dc4
 8014d5c:	20012dbe 	.word	0x20012dbe

08014d60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014d60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d64:	b089      	sub	sp, #36	; 0x24
 8014d66:	4682      	mov	sl, r0
 8014d68:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8014d6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014d6e:	4689      	mov	r9, r1
 8014d70:	4690      	mov	r8, r2
 8014d72:	461f      	mov	r7, r3
 8014d74:	b355      	cbz	r5, 8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014d76:	4608      	mov	r0, r1
 8014d78:	f7fc f922 	bl	8010fc0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014d7c:	4606      	mov	r6, r0
 8014d7e:	4648      	mov	r0, r9
 8014d80:	f7fc f958 	bl	8011034 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014d84:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014d88:	4648      	mov	r0, r9
 8014d8a:	f8ad 8008 	strh.w	r8, [sp, #8]
 8014d8e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8014d92:	f8ad 700a 	strh.w	r7, [sp, #10]
 8014d96:	f7fc fa1b 	bl	80111d0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014d9a:	4606      	mov	r6, r0
 8014d9c:	4648      	mov	r0, r9
 8014d9e:	f7fc fa49 	bl	8011234 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8014da2:	4680      	mov	r8, r0
 8014da4:	4648      	mov	r0, r9
 8014da6:	f7fc fa9d 	bl	80112e4 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014daa:	280b      	cmp	r0, #11
 8014dac:	f200 80ca 	bhi.w	8014f44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 8014db0:	e8df f000 	tbb	[pc, r0]
 8014db4:	c8060f1e 	.word	0xc8060f1e
 8014db8:	c8c8c8c8 	.word	0xc8c8c8c8
 8014dbc:	16c8c8c8 	.word	0x16c8c8c8
 8014dc0:	462b      	mov	r3, r5
 8014dc2:	4622      	mov	r2, r4
 8014dc4:	a902      	add	r1, sp, #8
 8014dc6:	4630      	mov	r0, r6
 8014dc8:	f7ff f98e 	bl	80140e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014dcc:	b009      	add	sp, #36	; 0x24
 8014dce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dd2:	462b      	mov	r3, r5
 8014dd4:	4622      	mov	r2, r4
 8014dd6:	a902      	add	r1, sp, #8
 8014dd8:	4630      	mov	r0, r6
 8014dda:	f7ff fa9b 	bl	8014314 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8014dde:	e7f5      	b.n	8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014de0:	9500      	str	r5, [sp, #0]
 8014de2:	4623      	mov	r3, r4
 8014de4:	aa02      	add	r2, sp, #8
 8014de6:	4641      	mov	r1, r8
 8014de8:	4630      	mov	r0, r6
 8014dea:	f7ff fe7b 	bl	8014ae4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8014dee:	e7ed      	b.n	8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014df0:	4648      	mov	r0, r9
 8014df2:	f7fc f9b3 	bl	801115c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014df6:	b950      	cbnz	r0, 8014e0e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 8014df8:	e9cd 5000 	strd	r5, r0, [sp]
 8014dfc:	f8da 3000 	ldr.w	r3, [sl]
 8014e00:	aa02      	add	r2, sp, #8
 8014e02:	68dd      	ldr	r5, [r3, #12]
 8014e04:	4631      	mov	r1, r6
 8014e06:	4623      	mov	r3, r4
 8014e08:	4650      	mov	r0, sl
 8014e0a:	47a8      	blx	r5
 8014e0c:	e7de      	b.n	8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014e0e:	af06      	add	r7, sp, #24
 8014e10:	4649      	mov	r1, r9
 8014e12:	4638      	mov	r0, r7
 8014e14:	f7fc f948 	bl	80110a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014e18:	e897 0003 	ldmia.w	r7, {r0, r1}
 8014e1c:	f10d 0910 	add.w	r9, sp, #16
 8014e20:	e889 0003 	stmia.w	r9, {r0, r1}
 8014e24:	4648      	mov	r0, r9
 8014e26:	4621      	mov	r1, r4
 8014e28:	f7f5 fafe 	bl	800a428 <_ZN8touchgfx4RectaNERKS0_>
 8014e2c:	4648      	mov	r0, r9
 8014e2e:	f7f5 fb3e 	bl	800a4ae <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e32:	b138      	cbz	r0, 8014e44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 8014e34:	9500      	str	r5, [sp, #0]
 8014e36:	4623      	mov	r3, r4
 8014e38:	aa02      	add	r2, sp, #8
 8014e3a:	4641      	mov	r1, r8
 8014e3c:	4630      	mov	r0, r6
 8014e3e:	f7ff fe69 	bl	8014b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014e42:	e7c3      	b.n	8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014e44:	e9cd 5000 	strd	r5, r0, [sp]
 8014e48:	f8da 3000 	ldr.w	r3, [sl]
 8014e4c:	aa02      	add	r2, sp, #8
 8014e4e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8014e52:	4631      	mov	r1, r6
 8014e54:	464b      	mov	r3, r9
 8014e56:	4650      	mov	r0, sl
 8014e58:	47d8      	blx	fp
 8014e5a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014e5e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014e62:	4293      	cmp	r3, r2
 8014e64:	dd13      	ble.n	8014e8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 8014e66:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014e6a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014e6e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014e72:	1a9b      	subs	r3, r3, r2
 8014e74:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014e78:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014e7c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014e80:	9500      	str	r5, [sp, #0]
 8014e82:	463b      	mov	r3, r7
 8014e84:	aa02      	add	r2, sp, #8
 8014e86:	4641      	mov	r1, r8
 8014e88:	4630      	mov	r0, r6
 8014e8a:	f7ff fe43 	bl	8014b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014e8e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014e92:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014e96:	4293      	cmp	r3, r2
 8014e98:	dd13      	ble.n	8014ec2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 8014e9a:	1a9b      	subs	r3, r3, r2
 8014e9c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014ea0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014ea4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014ea8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014eac:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014eb0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014eb4:	9500      	str	r5, [sp, #0]
 8014eb6:	463b      	mov	r3, r7
 8014eb8:	aa02      	add	r2, sp, #8
 8014eba:	4641      	mov	r1, r8
 8014ebc:	4630      	mov	r0, r6
 8014ebe:	f7ff fe29 	bl	8014b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014ec2:	88a2      	ldrh	r2, [r4, #4]
 8014ec4:	8823      	ldrh	r3, [r4, #0]
 8014ec6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014eca:	4413      	add	r3, r2
 8014ecc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014ed0:	440a      	add	r2, r1
 8014ed2:	b29b      	uxth	r3, r3
 8014ed4:	b292      	uxth	r2, r2
 8014ed6:	b211      	sxth	r1, r2
 8014ed8:	b218      	sxth	r0, r3
 8014eda:	4288      	cmp	r0, r1
 8014edc:	dd13      	ble.n	8014f06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 8014ede:	1a9b      	subs	r3, r3, r2
 8014ee0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014ee4:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 8014ee8:	f8ad 1018 	strh.w	r1, [sp, #24]
 8014eec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014ef0:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014ef4:	9500      	str	r5, [sp, #0]
 8014ef6:	463b      	mov	r3, r7
 8014ef8:	aa02      	add	r2, sp, #8
 8014efa:	4641      	mov	r1, r8
 8014efc:	4630      	mov	r0, r6
 8014efe:	f8ad c01a 	strh.w	ip, [sp, #26]
 8014f02:	f7ff fe07 	bl	8014b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014f06:	88e2      	ldrh	r2, [r4, #6]
 8014f08:	8863      	ldrh	r3, [r4, #2]
 8014f0a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014f0e:	4413      	add	r3, r2
 8014f10:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014f14:	440a      	add	r2, r1
 8014f16:	b29b      	uxth	r3, r3
 8014f18:	b292      	uxth	r2, r2
 8014f1a:	b211      	sxth	r1, r2
 8014f1c:	b218      	sxth	r0, r3
 8014f1e:	4288      	cmp	r0, r1
 8014f20:	f77f af54 	ble.w	8014dcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8014f24:	f9b4 c000 	ldrsh.w	ip, [r4]
 8014f28:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8014f2c:	f8ad c018 	strh.w	ip, [sp, #24]
 8014f30:	1a9b      	subs	r3, r3, r2
 8014f32:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014f36:	f8ad 101a 	strh.w	r1, [sp, #26]
 8014f3a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014f3e:	9500      	str	r5, [sp, #0]
 8014f40:	463b      	mov	r3, r7
 8014f42:	e779      	b.n	8014e38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 8014f44:	4b02      	ldr	r3, [pc, #8]	; (8014f50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 8014f46:	4a03      	ldr	r2, [pc, #12]	; (8014f54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 8014f48:	4803      	ldr	r0, [pc, #12]	; (8014f58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8014f4a:	2181      	movs	r1, #129	; 0x81
 8014f4c:	f007 ff24 	bl	801cd98 <__assert_func>
 8014f50:	0802120c 	.word	0x0802120c
 8014f54:	08021913 	.word	0x08021913
 8014f58:	08021342 	.word	0x08021342

08014f5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8014f5c:	b508      	push	{r3, lr}
 8014f5e:	b180      	cbz	r0, 8014f82 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8014f60:	2902      	cmp	r1, #2
 8014f62:	d014      	beq.n	8014f8e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8014f64:	2903      	cmp	r1, #3
 8014f66:	d01d      	beq.n	8014fa4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014f68:	2901      	cmp	r1, #1
 8014f6a:	d101      	bne.n	8014f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014f6c:	2001      	movs	r0, #1
 8014f6e:	bd08      	pop	{r3, pc}
 8014f70:	4b0e      	ldr	r3, [pc, #56]	; (8014fac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014f72:	8818      	ldrh	r0, [r3, #0]
 8014f74:	b990      	cbnz	r0, 8014f9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8014f76:	4b0e      	ldr	r3, [pc, #56]	; (8014fb0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8014f78:	4a0e      	ldr	r2, [pc, #56]	; (8014fb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8014f7a:	480f      	ldr	r0, [pc, #60]	; (8014fb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8014f7c:	2150      	movs	r1, #80	; 0x50
 8014f7e:	f007 ff0b 	bl	801cd98 <__assert_func>
 8014f82:	2902      	cmp	r1, #2
 8014f84:	d00e      	beq.n	8014fa4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014f86:	2903      	cmp	r1, #3
 8014f88:	d0f2      	beq.n	8014f70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014f8a:	2901      	cmp	r1, #1
 8014f8c:	d1ee      	bne.n	8014f6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8014f8e:	4b07      	ldr	r3, [pc, #28]	; (8014fac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014f90:	8818      	ldrh	r0, [r3, #0]
 8014f92:	2800      	cmp	r0, #0
 8014f94:	d0ef      	beq.n	8014f76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8014f96:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014f9a:	e7e8      	b.n	8014f6e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014f9c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014fa0:	4240      	negs	r0, r0
 8014fa2:	e7e4      	b.n	8014f6e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014fa4:	f04f 30ff 	mov.w	r0, #4294967295
 8014fa8:	e7e1      	b.n	8014f6e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014faa:	bf00      	nop
 8014fac:	20012dbe 	.word	0x20012dbe
 8014fb0:	08021498 	.word	0x08021498
 8014fb4:	08021a90 	.word	0x08021a90
 8014fb8:	080214da 	.word	0x080214da

08014fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8014fbc:	b508      	push	{r3, lr}
 8014fbe:	b180      	cbz	r0, 8014fe2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8014fc0:	2902      	cmp	r1, #2
 8014fc2:	d014      	beq.n	8014fee <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8014fc4:	2903      	cmp	r1, #3
 8014fc6:	d018      	beq.n	8014ffa <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014fc8:	2901      	cmp	r1, #1
 8014fca:	d001      	beq.n	8014fd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014fcc:	2001      	movs	r0, #1
 8014fce:	e013      	b.n	8014ff8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014fd0:	4b0e      	ldr	r3, [pc, #56]	; (801500c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014fd2:	8818      	ldrh	r0, [r3, #0]
 8014fd4:	b970      	cbnz	r0, 8014ff4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8014fd6:	4b0e      	ldr	r3, [pc, #56]	; (8015010 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8014fd8:	4a0e      	ldr	r2, [pc, #56]	; (8015014 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8014fda:	480f      	ldr	r0, [pc, #60]	; (8015018 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8014fdc:	2150      	movs	r1, #80	; 0x50
 8014fde:	f007 fedb 	bl	801cd98 <__assert_func>
 8014fe2:	2902      	cmp	r1, #2
 8014fe4:	d009      	beq.n	8014ffa <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8014fe6:	2903      	cmp	r1, #3
 8014fe8:	d0f0      	beq.n	8014fcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8014fea:	2901      	cmp	r1, #1
 8014fec:	d1f0      	bne.n	8014fd0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8014fee:	f04f 30ff 	mov.w	r0, #4294967295
 8014ff2:	e001      	b.n	8014ff8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8014ff4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014ff8:	bd08      	pop	{r3, pc}
 8014ffa:	4b04      	ldr	r3, [pc, #16]	; (801500c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8014ffc:	8818      	ldrh	r0, [r3, #0]
 8014ffe:	2800      	cmp	r0, #0
 8015000:	d0e9      	beq.n	8014fd6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8015002:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015006:	4240      	negs	r0, r0
 8015008:	e7f6      	b.n	8014ff8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801500a:	bf00      	nop
 801500c:	20012dbe 	.word	0x20012dbe
 8015010:	08021498 	.word	0x08021498
 8015014:	08021a90 	.word	0x08021a90
 8015018:	080214da 	.word	0x080214da

0801501c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801501c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015020:	b097      	sub	sp, #92	; 0x5c
 8015022:	9109      	str	r1, [sp, #36]	; 0x24
 8015024:	a912      	add	r1, sp, #72	; 0x48
 8015026:	e881 000c 	stmia.w	r1, {r2, r3}
 801502a:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 801502e:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8015032:	9308      	str	r3, [sp, #32]
 8015034:	f891 900d 	ldrb.w	r9, [r1, #13]
 8015038:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801503c:	930f      	str	r3, [sp, #60]	; 0x3c
 801503e:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8015042:	930a      	str	r3, [sp, #40]	; 0x28
 8015044:	7988      	ldrb	r0, [r1, #6]
 8015046:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 801504a:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 801504e:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 8015052:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8015056:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 801505a:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801505e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015062:	4303      	orrs	r3, r0
 8015064:	9307      	str	r3, [sp, #28]
 8015066:	f000 81b3 	beq.w	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801506a:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801506e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015072:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015076:	ea59 0903 	orrs.w	r9, r9, r3
 801507a:	f000 81a9 	beq.w	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801507e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8015082:	b29b      	uxth	r3, r3
 8015084:	2e00      	cmp	r6, #0
 8015086:	f000 8137 	beq.w	80152f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801508a:	1af6      	subs	r6, r6, r3
 801508c:	b2b6      	uxth	r6, r6
 801508e:	0434      	lsls	r4, r6, #16
 8015090:	d502      	bpl.n	8015098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8015092:	1bad      	subs	r5, r5, r6
 8015094:	b22d      	sxth	r5, r5
 8015096:	2600      	movs	r6, #0
 8015098:	f9b2 1000 	ldrsh.w	r1, [r2]
 801509c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80150a0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 80150a4:	428d      	cmp	r5, r1
 80150a6:	b28b      	uxth	r3, r1
 80150a8:	bfbf      	itttt	lt
 80150aa:	18f6      	addlt	r6, r6, r3
 80150ac:	1b75      	sublt	r5, r6, r5
 80150ae:	b2ae      	uxthlt	r6, r5
 80150b0:	460d      	movlt	r5, r1
 80150b2:	8891      	ldrh	r1, [r2, #4]
 80150b4:	440b      	add	r3, r1
 80150b6:	b21b      	sxth	r3, r3
 80150b8:	930e      	str	r3, [sp, #56]	; 0x38
 80150ba:	88d3      	ldrh	r3, [r2, #6]
 80150bc:	8852      	ldrh	r2, [r2, #2]
 80150be:	4413      	add	r3, r2
 80150c0:	b21b      	sxth	r3, r3
 80150c2:	930d      	str	r3, [sp, #52]	; 0x34
 80150c4:	4b8e      	ldr	r3, [pc, #568]	; (8015300 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 80150c6:	9a08      	ldr	r2, [sp, #32]
 80150c8:	f893 b000 	ldrb.w	fp, [r3]
 80150cc:	f10b 30ff 	add.w	r0, fp, #4294967295
 80150d0:	4243      	negs	r3, r0
 80150d2:	4143      	adcs	r3, r0
 80150d4:	930c      	str	r3, [sp, #48]	; 0x30
 80150d6:	4629      	mov	r1, r5
 80150d8:	4653      	mov	r3, sl
 80150da:	a812      	add	r0, sp, #72	; 0x48
 80150dc:	f7f8 fbc4 	bl	800d868 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80150e0:	4629      	mov	r1, r5
 80150e2:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 80150e6:	4653      	mov	r3, sl
 80150e8:	9a08      	ldr	r2, [sp, #32]
 80150ea:	a812      	add	r0, sp, #72	; 0x48
 80150ec:	f7f8 fbd4 	bl	800d898 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80150f0:	a916      	add	r1, sp, #88	; 0x58
 80150f2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80150f6:	a815      	add	r0, sp, #84	; 0x54
 80150f8:	f7f8 fd30 	bl	800db5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80150fc:	f1ba 0f00 	cmp.w	sl, #0
 8015100:	f040 8106 	bne.w	8015310 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 8015104:	f1bb 0f01 	cmp.w	fp, #1
 8015108:	f040 810a 	bne.w	8015320 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 801510c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801510e:	b153      	cbz	r3, 8015126 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 8015110:	9a07      	ldr	r2, [sp, #28]
 8015112:	2408      	movs	r4, #8
 8015114:	fb94 f3f8 	sdiv	r3, r4, r8
 8015118:	1e5c      	subs	r4, r3, #1
 801511a:	4414      	add	r4, r2
 801511c:	fb94 f4f3 	sdiv	r4, r4, r3
 8015120:	fb14 f403 	smulbb	r4, r4, r3
 8015124:	b2a4      	uxth	r4, r4
 8015126:	b906      	cbnz	r6, 801512a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8015128:	b16f      	cbz	r7, 8015146 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 801512a:	fb07 6304 	mla	r3, r7, r4, r6
 801512e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8015130:	fb08 f303 	mul.w	r3, r8, r3
 8015134:	463a      	mov	r2, r7
 8015136:	f003 0707 	and.w	r7, r3, #7
 801513a:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801513e:	9326      	str	r3, [sp, #152]	; 0x98
 8015140:	eba9 0302 	sub.w	r3, r9, r2
 8015144:	930b      	str	r3, [sp, #44]	; 0x2c
 8015146:	4651      	mov	r1, sl
 8015148:	980c      	ldr	r0, [sp, #48]	; 0x30
 801514a:	f7ff ff07 	bl	8014f5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801514e:	4651      	mov	r1, sl
 8015150:	4681      	mov	r9, r0
 8015152:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015154:	f7ff ff32 	bl	8014fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015158:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801515a:	9a08      	ldr	r2, [sp, #32]
 801515c:	eba3 0a02 	sub.w	sl, r3, r2
 8015160:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015162:	459a      	cmp	sl, r3
 8015164:	bfa8      	it	ge
 8015166:	469a      	movge	sl, r3
 8015168:	f1ba 0f00 	cmp.w	sl, #0
 801516c:	4683      	mov	fp, r0
 801516e:	f340 812f 	ble.w	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8015172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015174:	1bad      	subs	r5, r5, r6
 8015176:	1b5d      	subs	r5, r3, r5
 8015178:	9b07      	ldr	r3, [sp, #28]
 801517a:	429d      	cmp	r5, r3
 801517c:	bfd4      	ite	le
 801517e:	ebc6 0605 	rsble	r6, r6, r5
 8015182:	ebc6 0603 	rsbgt	r6, r6, r3
 8015186:	2e00      	cmp	r6, #0
 8015188:	f340 8122 	ble.w	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801518c:	1ba4      	subs	r4, r4, r6
 801518e:	fb08 f304 	mul.w	r3, r8, r4
 8015192:	930d      	str	r3, [sp, #52]	; 0x34
 8015194:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015196:	2b00      	cmp	r3, #0
 8015198:	f040 811f 	bne.w	80153da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 801519c:	4b59      	ldr	r3, [pc, #356]	; (8015304 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 801519e:	6818      	ldr	r0, [r3, #0]
 80151a0:	6803      	ldr	r3, [r0, #0]
 80151a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80151a4:	4798      	blx	r3
 80151a6:	2301      	movs	r3, #1
 80151a8:	fa03 f308 	lsl.w	r3, r3, r8
 80151ac:	4a56      	ldr	r2, [pc, #344]	; (8015308 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 80151ae:	3b01      	subs	r3, #1
 80151b0:	b2db      	uxtb	r3, r3
 80151b2:	8811      	ldrh	r1, [r2, #0]
 80151b4:	930c      	str	r3, [sp, #48]	; 0x30
 80151b6:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80151ba:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80151be:	fb01 2303 	mla	r3, r1, r3, r2
 80151c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80151c6:	9308      	str	r3, [sp, #32]
 80151c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151ca:	0c1a      	lsrs	r2, r3, #16
 80151cc:	b2d3      	uxtb	r3, r2
 80151ce:	9311      	str	r3, [sp, #68]	; 0x44
 80151d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151d2:	0a1b      	lsrs	r3, r3, #8
 80151d4:	b2d9      	uxtb	r1, r3
 80151d6:	9110      	str	r1, [sp, #64]	; 0x40
 80151d8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80151da:	b2c9      	uxtb	r1, r1
 80151dc:	910e      	str	r1, [sp, #56]	; 0x38
 80151de:	494b      	ldr	r1, [pc, #300]	; (801530c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 80151e0:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 80151e4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80151e6:	00db      	lsls	r3, r3, #3
 80151e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80151ec:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80151f0:	431a      	orrs	r2, r3
 80151f2:	b293      	uxth	r3, r2
 80151f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80151f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80151f8:	781a      	ldrb	r2, [r3, #0]
 80151fa:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80151fe:	413a      	asrs	r2, r7
 8015200:	fb06 b919 	mls	r9, r6, r9, fp
 8015204:	fb03 fb06 	mul.w	fp, r3, r6
 8015208:	b2d2      	uxtb	r2, r2
 801520a:	930b      	str	r3, [sp, #44]	; 0x2c
 801520c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8015210:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015214:	f0c0 80f6 	bcc.w	8015404 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8015218:	f8dd c020 	ldr.w	ip, [sp, #32]
 801521c:	46b6      	mov	lr, r6
 801521e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8015222:	f0c0 80de 	bcc.w	80153e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8015226:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015228:	4013      	ands	r3, r2
 801522a:	d055      	beq.n	80152d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 801522c:	20ff      	movs	r0, #255	; 0xff
 801522e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015230:	fb90 f1f1 	sdiv	r1, r0, r1
 8015234:	434b      	muls	r3, r1
 8015236:	2bfe      	cmp	r3, #254	; 0xfe
 8015238:	dd03      	ble.n	8015242 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 801523a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801523c:	4281      	cmp	r1, r0
 801523e:	f000 80ce 	beq.w	80153de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 8015242:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015244:	f8bc 4000 	ldrh.w	r4, [ip]
 8015248:	fb11 f303 	smulbb	r3, r1, r3
 801524c:	b29b      	uxth	r3, r3
 801524e:	1c59      	adds	r1, r3, #1
 8015250:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015254:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015258:	b29d      	uxth	r5, r3
 801525a:	43db      	mvns	r3, r3
 801525c:	b2db      	uxtb	r3, r3
 801525e:	9307      	str	r3, [sp, #28]
 8015260:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015262:	1220      	asrs	r0, r4, #8
 8015264:	fb13 f905 	smulbb	r9, r3, r5
 8015268:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801526c:	9b07      	ldr	r3, [sp, #28]
 801526e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015272:	fb00 9003 	mla	r0, r0, r3, r9
 8015276:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015278:	10e1      	asrs	r1, r4, #3
 801527a:	fb13 f905 	smulbb	r9, r3, r5
 801527e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015282:	9b07      	ldr	r3, [sp, #28]
 8015284:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015288:	fb01 9103 	mla	r1, r1, r3, r9
 801528c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801528e:	00e4      	lsls	r4, r4, #3
 8015290:	fb13 f505 	smulbb	r5, r3, r5
 8015294:	b2e4      	uxtb	r4, r4
 8015296:	9b07      	ldr	r3, [sp, #28]
 8015298:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801529c:	fb04 5403 	mla	r4, r4, r3, r5
 80152a0:	b280      	uxth	r0, r0
 80152a2:	b2a4      	uxth	r4, r4
 80152a4:	1c43      	adds	r3, r0, #1
 80152a6:	f104 0901 	add.w	r9, r4, #1
 80152aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80152ae:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80152b2:	b289      	uxth	r1, r1
 80152b4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80152b8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80152bc:	ea49 0000 	orr.w	r0, r9, r0
 80152c0:	f101 0901 	add.w	r9, r1, #1
 80152c4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80152c8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80152cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80152d0:	ea40 0009 	orr.w	r0, r0, r9
 80152d4:	f8ac 0000 	strh.w	r0, [ip]
 80152d8:	4447      	add	r7, r8
 80152da:	b2bf      	uxth	r7, r7
 80152dc:	2f07      	cmp	r7, #7
 80152de:	bf81      	itttt	hi
 80152e0:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80152e2:	785a      	ldrbhi	r2, [r3, #1]
 80152e4:	3301      	addhi	r3, #1
 80152e6:	9326      	strhi	r3, [sp, #152]	; 0x98
 80152e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80152ea:	bf9a      	itte	ls
 80152ec:	fa42 f208 	asrls.w	r2, r2, r8
 80152f0:	b2d2      	uxtbls	r2, r2
 80152f2:	2700      	movhi	r7, #0
 80152f4:	449c      	add	ip, r3
 80152f6:	e792      	b.n	801521e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 80152f8:	441d      	add	r5, r3
 80152fa:	b22d      	sxth	r5, r5
 80152fc:	e6cc      	b.n	8015098 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80152fe:	bf00      	nop
 8015300:	20012dbc 	.word	0x20012dbc
 8015304:	20012dc4 	.word	0x20012dc4
 8015308:	20012dbe 	.word	0x20012dbe
 801530c:	fffff800 	.word	0xfffff800
 8015310:	f1ba 0f01 	cmp.w	sl, #1
 8015314:	f47f aefa 	bne.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015318:	f1bb 0f01 	cmp.w	fp, #1
 801531c:	f47f aef6 	bne.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015320:	f8df b104 	ldr.w	fp, [pc, #260]	; 8015428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8015324:	f8db 0000 	ldr.w	r0, [fp]
 8015328:	6803      	ldr	r3, [r0, #0]
 801532a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801532c:	4798      	blx	r3
 801532e:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8015332:	465a      	mov	r2, fp
 8015334:	d006      	beq.n	8015344 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8015336:	f1b8 0f04 	cmp.w	r8, #4
 801533a:	d14c      	bne.n	80153d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 801533c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801533e:	3300      	adds	r3, #0
 8015340:	bf18      	it	ne
 8015342:	2301      	movne	r3, #1
 8015344:	0581      	lsls	r1, r0, #22
 8015346:	d566      	bpl.n	8015416 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8015348:	f1b8 0f08 	cmp.w	r8, #8
 801534c:	d163      	bne.n	8015416 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 801534e:	2b00      	cmp	r3, #0
 8015350:	bf0c      	ite	eq
 8015352:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 8015356:	f44f 7c80 	movne.w	ip, #256	; 0x100
 801535a:	2e00      	cmp	r6, #0
 801535c:	f47f aed6 	bne.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015360:	2f00      	cmp	r7, #0
 8015362:	f47f aed3 	bne.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015366:	9b07      	ldr	r3, [sp, #28]
 8015368:	990e      	ldr	r1, [sp, #56]	; 0x38
 801536a:	18eb      	adds	r3, r5, r3
 801536c:	428b      	cmp	r3, r1
 801536e:	f73f aecd 	bgt.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8015372:	9b08      	ldr	r3, [sp, #32]
 8015374:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015376:	444b      	add	r3, r9
 8015378:	428b      	cmp	r3, r1
 801537a:	f73f aec7 	bgt.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801537e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015380:	4e28      	ldr	r6, [pc, #160]	; (8015424 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 8015382:	6810      	ldr	r0, [r2, #0]
 8015384:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8015388:	6803      	ldr	r3, [r0, #0]
 801538a:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 801538e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8015392:	4331      	orrs	r1, r6
 8015394:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8015396:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8015398:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801539c:	f8cd c014 	str.w	ip, [sp, #20]
 80153a0:	f1b8 0f08 	cmp.w	r8, #8
 80153a4:	ea4f 1656 	mov.w	r6, r6, lsr #5
 80153a8:	bf18      	it	ne
 80153aa:	3401      	addne	r4, #1
 80153ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80153b0:	bf18      	it	ne
 80153b2:	f024 0401 	bicne.w	r4, r4, #1
 80153b6:	ea41 0106 	orr.w	r1, r1, r6
 80153ba:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80153bc:	bf18      	it	ne
 80153be:	b2a4      	uxthne	r4, r4
 80153c0:	b289      	uxth	r1, r1
 80153c2:	e9cd 1603 	strd	r1, r6, [sp, #12]
 80153c6:	e9cd 9401 	strd	r9, r4, [sp, #4]
 80153ca:	9400      	str	r4, [sp, #0]
 80153cc:	9926      	ldr	r1, [sp, #152]	; 0x98
 80153ce:	47a8      	blx	r5
 80153d0:	b017      	add	sp, #92	; 0x5c
 80153d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153d6:	2300      	movs	r3, #0
 80153d8:	e7b4      	b.n	8015344 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 80153da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80153dc:	e6e3      	b.n	80151a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 80153de:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80153e0:	e778      	b.n	80152d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 80153e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80153e4:	b153      	cbz	r3, 80153fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 80153e6:	441f      	add	r7, r3
 80153e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153ea:	b2bf      	uxth	r7, r7
 80153ec:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80153f0:	f007 0707 	and.w	r7, r7, #7
 80153f4:	781a      	ldrb	r2, [r3, #0]
 80153f6:	9326      	str	r3, [sp, #152]	; 0x98
 80153f8:	413a      	asrs	r2, r7
 80153fa:	b2d2      	uxtb	r2, r2
 80153fc:	9b08      	ldr	r3, [sp, #32]
 80153fe:	445b      	add	r3, fp
 8015400:	9308      	str	r3, [sp, #32]
 8015402:	e705      	b.n	8015210 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8015404:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015406:	2b00      	cmp	r3, #0
 8015408:	d1e2      	bne.n	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801540a:	4b07      	ldr	r3, [pc, #28]	; (8015428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 801540c:	6818      	ldr	r0, [r3, #0]
 801540e:	6803      	ldr	r3, [r0, #0]
 8015410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015412:	4798      	blx	r3
 8015414:	e7dc      	b.n	80153d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8015416:	2b00      	cmp	r3, #0
 8015418:	f43f ae78 	beq.w	801510c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801541c:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8015420:	e79b      	b.n	801535a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8015422:	bf00      	nop
 8015424:	fffff800 	.word	0xfffff800
 8015428:	20012dc4 	.word	0x20012dc4

0801542c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801542c:	b538      	push	{r3, r4, r5, lr}
 801542e:	4c15      	ldr	r4, [pc, #84]	; (8015484 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8015430:	7823      	ldrb	r3, [r4, #0]
 8015432:	f3bf 8f5b 	dmb	ish
 8015436:	07da      	lsls	r2, r3, #31
 8015438:	4605      	mov	r5, r0
 801543a:	d40b      	bmi.n	8015454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801543c:	4620      	mov	r0, r4
 801543e:	f007 fc7f 	bl	801cd40 <__cxa_guard_acquire>
 8015442:	b138      	cbz	r0, 8015454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015444:	4620      	mov	r0, r4
 8015446:	f007 fc87 	bl	801cd58 <__cxa_guard_release>
 801544a:	4a0f      	ldr	r2, [pc, #60]	; (8015488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801544c:	490f      	ldr	r1, [pc, #60]	; (801548c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801544e:	4810      	ldr	r0, [pc, #64]	; (8015490 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015450:	f007 fc6f 	bl	801cd32 <__aeabi_atexit>
 8015454:	4c0f      	ldr	r4, [pc, #60]	; (8015494 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8015456:	7823      	ldrb	r3, [r4, #0]
 8015458:	f3bf 8f5b 	dmb	ish
 801545c:	07db      	lsls	r3, r3, #31
 801545e:	d40b      	bmi.n	8015478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015460:	4620      	mov	r0, r4
 8015462:	f007 fc6d 	bl	801cd40 <__cxa_guard_acquire>
 8015466:	b138      	cbz	r0, 8015478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015468:	4620      	mov	r0, r4
 801546a:	f007 fc75 	bl	801cd58 <__cxa_guard_release>
 801546e:	4a06      	ldr	r2, [pc, #24]	; (8015488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015470:	4909      	ldr	r1, [pc, #36]	; (8015498 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8015472:	480a      	ldr	r0, [pc, #40]	; (801549c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015474:	f007 fc5d 	bl	801cd32 <__aeabi_atexit>
 8015478:	4b05      	ldr	r3, [pc, #20]	; (8015490 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801547a:	612b      	str	r3, [r5, #16]
 801547c:	4b07      	ldr	r3, [pc, #28]	; (801549c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801547e:	616b      	str	r3, [r5, #20]
 8015480:	bd38      	pop	{r3, r4, r5, pc}
 8015482:	bf00      	nop
 8015484:	20012e90 	.word	0x20012e90
 8015488:	20000000 	.word	0x20000000
 801548c:	08013839 	.word	0x08013839
 8015490:	200000c8 	.word	0x200000c8
 8015494:	20012e94 	.word	0x20012e94
 8015498:	08013837 	.word	0x08013837
 801549c:	200000cc 	.word	0x200000cc

080154a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80154a0:	b538      	push	{r3, r4, r5, lr}
 80154a2:	4c15      	ldr	r4, [pc, #84]	; (80154f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80154a4:	7823      	ldrb	r3, [r4, #0]
 80154a6:	f3bf 8f5b 	dmb	ish
 80154aa:	07da      	lsls	r2, r3, #31
 80154ac:	4605      	mov	r5, r0
 80154ae:	d40b      	bmi.n	80154c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80154b0:	4620      	mov	r0, r4
 80154b2:	f007 fc45 	bl	801cd40 <__cxa_guard_acquire>
 80154b6:	b138      	cbz	r0, 80154c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80154b8:	4620      	mov	r0, r4
 80154ba:	f007 fc4d 	bl	801cd58 <__cxa_guard_release>
 80154be:	4a0f      	ldr	r2, [pc, #60]	; (80154fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80154c0:	490f      	ldr	r1, [pc, #60]	; (8015500 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80154c2:	4810      	ldr	r0, [pc, #64]	; (8015504 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80154c4:	f007 fc35 	bl	801cd32 <__aeabi_atexit>
 80154c8:	4c0f      	ldr	r4, [pc, #60]	; (8015508 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80154ca:	7823      	ldrb	r3, [r4, #0]
 80154cc:	f3bf 8f5b 	dmb	ish
 80154d0:	07db      	lsls	r3, r3, #31
 80154d2:	d40b      	bmi.n	80154ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80154d4:	4620      	mov	r0, r4
 80154d6:	f007 fc33 	bl	801cd40 <__cxa_guard_acquire>
 80154da:	b138      	cbz	r0, 80154ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80154dc:	4620      	mov	r0, r4
 80154de:	f007 fc3b 	bl	801cd58 <__cxa_guard_release>
 80154e2:	4a06      	ldr	r2, [pc, #24]	; (80154fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80154e4:	4909      	ldr	r1, [pc, #36]	; (801550c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80154e6:	480a      	ldr	r0, [pc, #40]	; (8015510 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80154e8:	f007 fc23 	bl	801cd32 <__aeabi_atexit>
 80154ec:	4b05      	ldr	r3, [pc, #20]	; (8015504 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80154ee:	60ab      	str	r3, [r5, #8]
 80154f0:	4b07      	ldr	r3, [pc, #28]	; (8015510 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80154f2:	60eb      	str	r3, [r5, #12]
 80154f4:	bd38      	pop	{r3, r4, r5, pc}
 80154f6:	bf00      	nop
 80154f8:	20012e68 	.word	0x20012e68
 80154fc:	20000000 	.word	0x20000000
 8015500:	0801383d 	.word	0x0801383d
 8015504:	200000a0 	.word	0x200000a0
 8015508:	20012e6c 	.word	0x20012e6c
 801550c:	0801383b 	.word	0x0801383b
 8015510:	200000a4 	.word	0x200000a4

08015514 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015514:	b510      	push	{r4, lr}
 8015516:	4604      	mov	r4, r0
 8015518:	f7ff ff88 	bl	801542c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801551c:	4620      	mov	r0, r4
 801551e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015522:	f7ff bfbd 	b.w	80154a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08015528 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015528:	b538      	push	{r3, r4, r5, lr}
 801552a:	4c15      	ldr	r4, [pc, #84]	; (8015580 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801552c:	7823      	ldrb	r3, [r4, #0]
 801552e:	f3bf 8f5b 	dmb	ish
 8015532:	07da      	lsls	r2, r3, #31
 8015534:	4605      	mov	r5, r0
 8015536:	d40b      	bmi.n	8015550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015538:	4620      	mov	r0, r4
 801553a:	f007 fc01 	bl	801cd40 <__cxa_guard_acquire>
 801553e:	b138      	cbz	r0, 8015550 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015540:	4620      	mov	r0, r4
 8015542:	f007 fc09 	bl	801cd58 <__cxa_guard_release>
 8015546:	4a0f      	ldr	r2, [pc, #60]	; (8015584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015548:	490f      	ldr	r1, [pc, #60]	; (8015588 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801554a:	4810      	ldr	r0, [pc, #64]	; (801558c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801554c:	f007 fbf1 	bl	801cd32 <__aeabi_atexit>
 8015550:	4c0f      	ldr	r4, [pc, #60]	; (8015590 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015552:	7823      	ldrb	r3, [r4, #0]
 8015554:	f3bf 8f5b 	dmb	ish
 8015558:	07db      	lsls	r3, r3, #31
 801555a:	d40b      	bmi.n	8015574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801555c:	4620      	mov	r0, r4
 801555e:	f007 fbef 	bl	801cd40 <__cxa_guard_acquire>
 8015562:	b138      	cbz	r0, 8015574 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015564:	4620      	mov	r0, r4
 8015566:	f007 fbf7 	bl	801cd58 <__cxa_guard_release>
 801556a:	4a06      	ldr	r2, [pc, #24]	; (8015584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801556c:	4909      	ldr	r1, [pc, #36]	; (8015594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801556e:	480a      	ldr	r0, [pc, #40]	; (8015598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015570:	f007 fbdf 	bl	801cd32 <__aeabi_atexit>
 8015574:	4b05      	ldr	r3, [pc, #20]	; (801558c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015576:	622b      	str	r3, [r5, #32]
 8015578:	4b07      	ldr	r3, [pc, #28]	; (8015598 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801557a:	626b      	str	r3, [r5, #36]	; 0x24
 801557c:	bd38      	pop	{r3, r4, r5, pc}
 801557e:	bf00      	nop
 8015580:	20012e98 	.word	0x20012e98
 8015584:	20000000 	.word	0x20000000
 8015588:	08013831 	.word	0x08013831
 801558c:	200000d0 	.word	0x200000d0
 8015590:	20012e9c 	.word	0x20012e9c
 8015594:	0801382f 	.word	0x0801382f
 8015598:	200000d4 	.word	0x200000d4

0801559c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801559c:	b538      	push	{r3, r4, r5, lr}
 801559e:	4c15      	ldr	r4, [pc, #84]	; (80155f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80155a0:	7823      	ldrb	r3, [r4, #0]
 80155a2:	f3bf 8f5b 	dmb	ish
 80155a6:	07da      	lsls	r2, r3, #31
 80155a8:	4605      	mov	r5, r0
 80155aa:	d40b      	bmi.n	80155c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80155ac:	4620      	mov	r0, r4
 80155ae:	f007 fbc7 	bl	801cd40 <__cxa_guard_acquire>
 80155b2:	b138      	cbz	r0, 80155c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80155b4:	4620      	mov	r0, r4
 80155b6:	f007 fbcf 	bl	801cd58 <__cxa_guard_release>
 80155ba:	4a0f      	ldr	r2, [pc, #60]	; (80155f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80155bc:	490f      	ldr	r1, [pc, #60]	; (80155fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80155be:	4810      	ldr	r0, [pc, #64]	; (8015600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80155c0:	f007 fbb7 	bl	801cd32 <__aeabi_atexit>
 80155c4:	4c0f      	ldr	r4, [pc, #60]	; (8015604 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80155c6:	7823      	ldrb	r3, [r4, #0]
 80155c8:	f3bf 8f5b 	dmb	ish
 80155cc:	07db      	lsls	r3, r3, #31
 80155ce:	d40b      	bmi.n	80155e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80155d0:	4620      	mov	r0, r4
 80155d2:	f007 fbb5 	bl	801cd40 <__cxa_guard_acquire>
 80155d6:	b138      	cbz	r0, 80155e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80155d8:	4620      	mov	r0, r4
 80155da:	f007 fbbd 	bl	801cd58 <__cxa_guard_release>
 80155de:	4a06      	ldr	r2, [pc, #24]	; (80155f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80155e0:	4909      	ldr	r1, [pc, #36]	; (8015608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80155e2:	480a      	ldr	r0, [pc, #40]	; (801560c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80155e4:	f007 fba5 	bl	801cd32 <__aeabi_atexit>
 80155e8:	4b05      	ldr	r3, [pc, #20]	; (8015600 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80155ea:	61ab      	str	r3, [r5, #24]
 80155ec:	4b07      	ldr	r3, [pc, #28]	; (801560c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80155ee:	61eb      	str	r3, [r5, #28]
 80155f0:	bd38      	pop	{r3, r4, r5, pc}
 80155f2:	bf00      	nop
 80155f4:	20012e70 	.word	0x20012e70
 80155f8:	20000000 	.word	0x20000000
 80155fc:	08013835 	.word	0x08013835
 8015600:	200000a8 	.word	0x200000a8
 8015604:	20012e74 	.word	0x20012e74
 8015608:	08013833 	.word	0x08013833
 801560c:	200000ac 	.word	0x200000ac

08015610 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015610:	b510      	push	{r4, lr}
 8015612:	4604      	mov	r4, r0
 8015614:	f7ff ff88 	bl	8015528 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015618:	4620      	mov	r0, r4
 801561a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801561e:	f7ff bfbd 	b.w	801559c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015624 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015624:	b538      	push	{r3, r4, r5, lr}
 8015626:	4c15      	ldr	r4, [pc, #84]	; (801567c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015628:	7823      	ldrb	r3, [r4, #0]
 801562a:	f3bf 8f5b 	dmb	ish
 801562e:	07da      	lsls	r2, r3, #31
 8015630:	4605      	mov	r5, r0
 8015632:	d40b      	bmi.n	801564c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015634:	4620      	mov	r0, r4
 8015636:	f007 fb83 	bl	801cd40 <__cxa_guard_acquire>
 801563a:	b138      	cbz	r0, 801564c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801563c:	4620      	mov	r0, r4
 801563e:	f007 fb8b 	bl	801cd58 <__cxa_guard_release>
 8015642:	4a0f      	ldr	r2, [pc, #60]	; (8015680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015644:	490f      	ldr	r1, [pc, #60]	; (8015684 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8015646:	4810      	ldr	r0, [pc, #64]	; (8015688 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015648:	f007 fb73 	bl	801cd32 <__aeabi_atexit>
 801564c:	4c0f      	ldr	r4, [pc, #60]	; (801568c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801564e:	7823      	ldrb	r3, [r4, #0]
 8015650:	f3bf 8f5b 	dmb	ish
 8015654:	07db      	lsls	r3, r3, #31
 8015656:	d40b      	bmi.n	8015670 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015658:	4620      	mov	r0, r4
 801565a:	f007 fb71 	bl	801cd40 <__cxa_guard_acquire>
 801565e:	b138      	cbz	r0, 8015670 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015660:	4620      	mov	r0, r4
 8015662:	f007 fb79 	bl	801cd58 <__cxa_guard_release>
 8015666:	4a06      	ldr	r2, [pc, #24]	; (8015680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015668:	4909      	ldr	r1, [pc, #36]	; (8015690 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801566a:	480a      	ldr	r0, [pc, #40]	; (8015694 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801566c:	f007 fb61 	bl	801cd32 <__aeabi_atexit>
 8015670:	4b05      	ldr	r3, [pc, #20]	; (8015688 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015672:	632b      	str	r3, [r5, #48]	; 0x30
 8015674:	4b07      	ldr	r3, [pc, #28]	; (8015694 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015676:	636b      	str	r3, [r5, #52]	; 0x34
 8015678:	bd38      	pop	{r3, r4, r5, pc}
 801567a:	bf00      	nop
 801567c:	20012ea8 	.word	0x20012ea8
 8015680:	20000000 	.word	0x20000000
 8015684:	08013829 	.word	0x08013829
 8015688:	200000e0 	.word	0x200000e0
 801568c:	20012eac 	.word	0x20012eac
 8015690:	08013827 	.word	0x08013827
 8015694:	200000e4 	.word	0x200000e4

08015698 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8015698:	b538      	push	{r3, r4, r5, lr}
 801569a:	4c15      	ldr	r4, [pc, #84]	; (80156f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801569c:	7823      	ldrb	r3, [r4, #0]
 801569e:	f3bf 8f5b 	dmb	ish
 80156a2:	07da      	lsls	r2, r3, #31
 80156a4:	4605      	mov	r5, r0
 80156a6:	d40b      	bmi.n	80156c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80156a8:	4620      	mov	r0, r4
 80156aa:	f007 fb49 	bl	801cd40 <__cxa_guard_acquire>
 80156ae:	b138      	cbz	r0, 80156c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80156b0:	4620      	mov	r0, r4
 80156b2:	f007 fb51 	bl	801cd58 <__cxa_guard_release>
 80156b6:	4a0f      	ldr	r2, [pc, #60]	; (80156f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80156b8:	490f      	ldr	r1, [pc, #60]	; (80156f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80156ba:	4810      	ldr	r0, [pc, #64]	; (80156fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80156bc:	f007 fb39 	bl	801cd32 <__aeabi_atexit>
 80156c0:	4c0f      	ldr	r4, [pc, #60]	; (8015700 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80156c2:	7823      	ldrb	r3, [r4, #0]
 80156c4:	f3bf 8f5b 	dmb	ish
 80156c8:	07db      	lsls	r3, r3, #31
 80156ca:	d40b      	bmi.n	80156e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80156cc:	4620      	mov	r0, r4
 80156ce:	f007 fb37 	bl	801cd40 <__cxa_guard_acquire>
 80156d2:	b138      	cbz	r0, 80156e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80156d4:	4620      	mov	r0, r4
 80156d6:	f007 fb3f 	bl	801cd58 <__cxa_guard_release>
 80156da:	4a06      	ldr	r2, [pc, #24]	; (80156f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80156dc:	4909      	ldr	r1, [pc, #36]	; (8015704 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80156de:	480a      	ldr	r0, [pc, #40]	; (8015708 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80156e0:	f007 fb27 	bl	801cd32 <__aeabi_atexit>
 80156e4:	4b05      	ldr	r3, [pc, #20]	; (80156fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80156e6:	62ab      	str	r3, [r5, #40]	; 0x28
 80156e8:	4b07      	ldr	r3, [pc, #28]	; (8015708 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80156ea:	62eb      	str	r3, [r5, #44]	; 0x2c
 80156ec:	bd38      	pop	{r3, r4, r5, pc}
 80156ee:	bf00      	nop
 80156f0:	20012e78 	.word	0x20012e78
 80156f4:	20000000 	.word	0x20000000
 80156f8:	0801382d 	.word	0x0801382d
 80156fc:	200000b0 	.word	0x200000b0
 8015700:	20012e7c 	.word	0x20012e7c
 8015704:	0801382b 	.word	0x0801382b
 8015708:	200000b4 	.word	0x200000b4

0801570c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801570c:	b510      	push	{r4, lr}
 801570e:	4604      	mov	r4, r0
 8015710:	f7ff ff88 	bl	8015624 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015714:	4620      	mov	r0, r4
 8015716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801571a:	f7ff bfbd 	b.w	8015698 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015720 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015720:	b538      	push	{r3, r4, r5, lr}
 8015722:	4c15      	ldr	r4, [pc, #84]	; (8015778 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015724:	7823      	ldrb	r3, [r4, #0]
 8015726:	f3bf 8f5b 	dmb	ish
 801572a:	07da      	lsls	r2, r3, #31
 801572c:	4605      	mov	r5, r0
 801572e:	d40b      	bmi.n	8015748 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015730:	4620      	mov	r0, r4
 8015732:	f007 fb05 	bl	801cd40 <__cxa_guard_acquire>
 8015736:	b138      	cbz	r0, 8015748 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015738:	4620      	mov	r0, r4
 801573a:	f007 fb0d 	bl	801cd58 <__cxa_guard_release>
 801573e:	4a0f      	ldr	r2, [pc, #60]	; (801577c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015740:	490f      	ldr	r1, [pc, #60]	; (8015780 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8015742:	4810      	ldr	r0, [pc, #64]	; (8015784 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015744:	f007 faf5 	bl	801cd32 <__aeabi_atexit>
 8015748:	4c0f      	ldr	r4, [pc, #60]	; (8015788 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801574a:	7823      	ldrb	r3, [r4, #0]
 801574c:	f3bf 8f5b 	dmb	ish
 8015750:	07db      	lsls	r3, r3, #31
 8015752:	d40b      	bmi.n	801576c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015754:	4620      	mov	r0, r4
 8015756:	f007 faf3 	bl	801cd40 <__cxa_guard_acquire>
 801575a:	b138      	cbz	r0, 801576c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801575c:	4620      	mov	r0, r4
 801575e:	f007 fafb 	bl	801cd58 <__cxa_guard_release>
 8015762:	4a06      	ldr	r2, [pc, #24]	; (801577c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015764:	4909      	ldr	r1, [pc, #36]	; (801578c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8015766:	480a      	ldr	r0, [pc, #40]	; (8015790 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015768:	f007 fae3 	bl	801cd32 <__aeabi_atexit>
 801576c:	4b05      	ldr	r3, [pc, #20]	; (8015784 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801576e:	652b      	str	r3, [r5, #80]	; 0x50
 8015770:	4b07      	ldr	r3, [pc, #28]	; (8015790 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015772:	656b      	str	r3, [r5, #84]	; 0x54
 8015774:	bd38      	pop	{r3, r4, r5, pc}
 8015776:	bf00      	nop
 8015778:	20012eb0 	.word	0x20012eb0
 801577c:	20000000 	.word	0x20000000
 8015780:	08013819 	.word	0x08013819
 8015784:	200000e8 	.word	0x200000e8
 8015788:	20012eb4 	.word	0x20012eb4
 801578c:	08013817 	.word	0x08013817
 8015790:	200000ec 	.word	0x200000ec

08015794 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8015794:	b538      	push	{r3, r4, r5, lr}
 8015796:	4c15      	ldr	r4, [pc, #84]	; (80157ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8015798:	7823      	ldrb	r3, [r4, #0]
 801579a:	f3bf 8f5b 	dmb	ish
 801579e:	07da      	lsls	r2, r3, #31
 80157a0:	4605      	mov	r5, r0
 80157a2:	d40b      	bmi.n	80157bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80157a4:	4620      	mov	r0, r4
 80157a6:	f007 facb 	bl	801cd40 <__cxa_guard_acquire>
 80157aa:	b138      	cbz	r0, 80157bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80157ac:	4620      	mov	r0, r4
 80157ae:	f007 fad3 	bl	801cd58 <__cxa_guard_release>
 80157b2:	4a0f      	ldr	r2, [pc, #60]	; (80157f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80157b4:	490f      	ldr	r1, [pc, #60]	; (80157f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80157b6:	4810      	ldr	r0, [pc, #64]	; (80157f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80157b8:	f007 fabb 	bl	801cd32 <__aeabi_atexit>
 80157bc:	4c0f      	ldr	r4, [pc, #60]	; (80157fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80157be:	7823      	ldrb	r3, [r4, #0]
 80157c0:	f3bf 8f5b 	dmb	ish
 80157c4:	07db      	lsls	r3, r3, #31
 80157c6:	d40b      	bmi.n	80157e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80157c8:	4620      	mov	r0, r4
 80157ca:	f007 fab9 	bl	801cd40 <__cxa_guard_acquire>
 80157ce:	b138      	cbz	r0, 80157e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80157d0:	4620      	mov	r0, r4
 80157d2:	f007 fac1 	bl	801cd58 <__cxa_guard_release>
 80157d6:	4a06      	ldr	r2, [pc, #24]	; (80157f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80157d8:	4909      	ldr	r1, [pc, #36]	; (8015800 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80157da:	480a      	ldr	r0, [pc, #40]	; (8015804 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80157dc:	f007 faa9 	bl	801cd32 <__aeabi_atexit>
 80157e0:	4b05      	ldr	r3, [pc, #20]	; (80157f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80157e2:	64ab      	str	r3, [r5, #72]	; 0x48
 80157e4:	4b07      	ldr	r3, [pc, #28]	; (8015804 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80157e6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80157e8:	bd38      	pop	{r3, r4, r5, pc}
 80157ea:	bf00      	nop
 80157ec:	20012eb8 	.word	0x20012eb8
 80157f0:	20000000 	.word	0x20000000
 80157f4:	0801381d 	.word	0x0801381d
 80157f8:	200000f0 	.word	0x200000f0
 80157fc:	20012ebc 	.word	0x20012ebc
 8015800:	0801381b 	.word	0x0801381b
 8015804:	200000f4 	.word	0x200000f4

08015808 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015808:	b538      	push	{r3, r4, r5, lr}
 801580a:	4c15      	ldr	r4, [pc, #84]	; (8015860 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801580c:	7823      	ldrb	r3, [r4, #0]
 801580e:	f3bf 8f5b 	dmb	ish
 8015812:	07da      	lsls	r2, r3, #31
 8015814:	4605      	mov	r5, r0
 8015816:	d40b      	bmi.n	8015830 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015818:	4620      	mov	r0, r4
 801581a:	f007 fa91 	bl	801cd40 <__cxa_guard_acquire>
 801581e:	b138      	cbz	r0, 8015830 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015820:	4620      	mov	r0, r4
 8015822:	f007 fa99 	bl	801cd58 <__cxa_guard_release>
 8015826:	4a0f      	ldr	r2, [pc, #60]	; (8015864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015828:	490f      	ldr	r1, [pc, #60]	; (8015868 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801582a:	4810      	ldr	r0, [pc, #64]	; (801586c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801582c:	f007 fa81 	bl	801cd32 <__aeabi_atexit>
 8015830:	4c0f      	ldr	r4, [pc, #60]	; (8015870 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8015832:	7823      	ldrb	r3, [r4, #0]
 8015834:	f3bf 8f5b 	dmb	ish
 8015838:	07db      	lsls	r3, r3, #31
 801583a:	d40b      	bmi.n	8015854 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801583c:	4620      	mov	r0, r4
 801583e:	f007 fa7f 	bl	801cd40 <__cxa_guard_acquire>
 8015842:	b138      	cbz	r0, 8015854 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015844:	4620      	mov	r0, r4
 8015846:	f007 fa87 	bl	801cd58 <__cxa_guard_release>
 801584a:	4a06      	ldr	r2, [pc, #24]	; (8015864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801584c:	4909      	ldr	r1, [pc, #36]	; (8015874 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801584e:	480a      	ldr	r0, [pc, #40]	; (8015878 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015850:	f007 fa6f 	bl	801cd32 <__aeabi_atexit>
 8015854:	4b05      	ldr	r3, [pc, #20]	; (801586c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015856:	642b      	str	r3, [r5, #64]	; 0x40
 8015858:	4b07      	ldr	r3, [pc, #28]	; (8015878 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801585a:	646b      	str	r3, [r5, #68]	; 0x44
 801585c:	bd38      	pop	{r3, r4, r5, pc}
 801585e:	bf00      	nop
 8015860:	20012e80 	.word	0x20012e80
 8015864:	20000000 	.word	0x20000000
 8015868:	08013821 	.word	0x08013821
 801586c:	200000b8 	.word	0x200000b8
 8015870:	20012e84 	.word	0x20012e84
 8015874:	0801381f 	.word	0x0801381f
 8015878:	200000bc 	.word	0x200000bc

0801587c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801587c:	b538      	push	{r3, r4, r5, lr}
 801587e:	4c15      	ldr	r4, [pc, #84]	; (80158d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015880:	7823      	ldrb	r3, [r4, #0]
 8015882:	f3bf 8f5b 	dmb	ish
 8015886:	07da      	lsls	r2, r3, #31
 8015888:	4605      	mov	r5, r0
 801588a:	d40b      	bmi.n	80158a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801588c:	4620      	mov	r0, r4
 801588e:	f007 fa57 	bl	801cd40 <__cxa_guard_acquire>
 8015892:	b138      	cbz	r0, 80158a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015894:	4620      	mov	r0, r4
 8015896:	f007 fa5f 	bl	801cd58 <__cxa_guard_release>
 801589a:	4a0f      	ldr	r2, [pc, #60]	; (80158d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801589c:	490f      	ldr	r1, [pc, #60]	; (80158dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801589e:	4810      	ldr	r0, [pc, #64]	; (80158e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80158a0:	f007 fa47 	bl	801cd32 <__aeabi_atexit>
 80158a4:	4c0f      	ldr	r4, [pc, #60]	; (80158e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80158a6:	7823      	ldrb	r3, [r4, #0]
 80158a8:	f3bf 8f5b 	dmb	ish
 80158ac:	07db      	lsls	r3, r3, #31
 80158ae:	d40b      	bmi.n	80158c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80158b0:	4620      	mov	r0, r4
 80158b2:	f007 fa45 	bl	801cd40 <__cxa_guard_acquire>
 80158b6:	b138      	cbz	r0, 80158c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80158b8:	4620      	mov	r0, r4
 80158ba:	f007 fa4d 	bl	801cd58 <__cxa_guard_release>
 80158be:	4a06      	ldr	r2, [pc, #24]	; (80158d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80158c0:	4909      	ldr	r1, [pc, #36]	; (80158e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80158c2:	480a      	ldr	r0, [pc, #40]	; (80158ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80158c4:	f007 fa35 	bl	801cd32 <__aeabi_atexit>
 80158c8:	4b05      	ldr	r3, [pc, #20]	; (80158e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80158ca:	63ab      	str	r3, [r5, #56]	; 0x38
 80158cc:	4b07      	ldr	r3, [pc, #28]	; (80158ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80158ce:	63eb      	str	r3, [r5, #60]	; 0x3c
 80158d0:	bd38      	pop	{r3, r4, r5, pc}
 80158d2:	bf00      	nop
 80158d4:	20012ea0 	.word	0x20012ea0
 80158d8:	20000000 	.word	0x20000000
 80158dc:	08013825 	.word	0x08013825
 80158e0:	200000d8 	.word	0x200000d8
 80158e4:	20012ea4 	.word	0x20012ea4
 80158e8:	08013823 	.word	0x08013823
 80158ec:	200000dc 	.word	0x200000dc

080158f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80158f0:	b510      	push	{r4, lr}
 80158f2:	4604      	mov	r4, r0
 80158f4:	f7ff ff14 	bl	8015720 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80158f8:	4620      	mov	r0, r4
 80158fa:	f7ff ff85 	bl	8015808 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80158fe:	4620      	mov	r0, r4
 8015900:	f7ff ff48 	bl	8015794 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8015904:	4620      	mov	r0, r4
 8015906:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801590a:	f7ff bfb7 	b.w	801587c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08015910 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8015910:	b538      	push	{r3, r4, r5, lr}
 8015912:	4c15      	ldr	r4, [pc, #84]	; (8015968 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8015914:	7823      	ldrb	r3, [r4, #0]
 8015916:	f3bf 8f5b 	dmb	ish
 801591a:	07da      	lsls	r2, r3, #31
 801591c:	4605      	mov	r5, r0
 801591e:	d40b      	bmi.n	8015938 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015920:	4620      	mov	r0, r4
 8015922:	f007 fa0d 	bl	801cd40 <__cxa_guard_acquire>
 8015926:	b138      	cbz	r0, 8015938 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015928:	4620      	mov	r0, r4
 801592a:	f007 fa15 	bl	801cd58 <__cxa_guard_release>
 801592e:	4a0f      	ldr	r2, [pc, #60]	; (801596c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015930:	490f      	ldr	r1, [pc, #60]	; (8015970 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8015932:	4810      	ldr	r0, [pc, #64]	; (8015974 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015934:	f007 f9fd 	bl	801cd32 <__aeabi_atexit>
 8015938:	4c0f      	ldr	r4, [pc, #60]	; (8015978 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801593a:	7823      	ldrb	r3, [r4, #0]
 801593c:	f3bf 8f5b 	dmb	ish
 8015940:	07db      	lsls	r3, r3, #31
 8015942:	d40b      	bmi.n	801595c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015944:	4620      	mov	r0, r4
 8015946:	f007 f9fb 	bl	801cd40 <__cxa_guard_acquire>
 801594a:	b138      	cbz	r0, 801595c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801594c:	4620      	mov	r0, r4
 801594e:	f007 fa03 	bl	801cd58 <__cxa_guard_release>
 8015952:	4a06      	ldr	r2, [pc, #24]	; (801596c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015954:	4909      	ldr	r1, [pc, #36]	; (801597c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8015956:	480a      	ldr	r0, [pc, #40]	; (8015980 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015958:	f007 f9eb 	bl	801cd32 <__aeabi_atexit>
 801595c:	4b05      	ldr	r3, [pc, #20]	; (8015974 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801595e:	662b      	str	r3, [r5, #96]	; 0x60
 8015960:	4b07      	ldr	r3, [pc, #28]	; (8015980 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015962:	666b      	str	r3, [r5, #100]	; 0x64
 8015964:	bd38      	pop	{r3, r4, r5, pc}
 8015966:	bf00      	nop
 8015968:	20012e88 	.word	0x20012e88
 801596c:	20000000 	.word	0x20000000
 8015970:	08013811 	.word	0x08013811
 8015974:	200000c0 	.word	0x200000c0
 8015978:	20012e8c 	.word	0x20012e8c
 801597c:	0801380f 	.word	0x0801380f
 8015980:	200000c4 	.word	0x200000c4

08015984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8015984:	b538      	push	{r3, r4, r5, lr}
 8015986:	4c15      	ldr	r4, [pc, #84]	; (80159dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015988:	7823      	ldrb	r3, [r4, #0]
 801598a:	f3bf 8f5b 	dmb	ish
 801598e:	07da      	lsls	r2, r3, #31
 8015990:	4605      	mov	r5, r0
 8015992:	d40b      	bmi.n	80159ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015994:	4620      	mov	r0, r4
 8015996:	f007 f9d3 	bl	801cd40 <__cxa_guard_acquire>
 801599a:	b138      	cbz	r0, 80159ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801599c:	4620      	mov	r0, r4
 801599e:	f007 f9db 	bl	801cd58 <__cxa_guard_release>
 80159a2:	4a0f      	ldr	r2, [pc, #60]	; (80159e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80159a4:	490f      	ldr	r1, [pc, #60]	; (80159e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80159a6:	4810      	ldr	r0, [pc, #64]	; (80159e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80159a8:	f007 f9c3 	bl	801cd32 <__aeabi_atexit>
 80159ac:	4c0f      	ldr	r4, [pc, #60]	; (80159ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80159ae:	7823      	ldrb	r3, [r4, #0]
 80159b0:	f3bf 8f5b 	dmb	ish
 80159b4:	07db      	lsls	r3, r3, #31
 80159b6:	d40b      	bmi.n	80159d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80159b8:	4620      	mov	r0, r4
 80159ba:	f007 f9c1 	bl	801cd40 <__cxa_guard_acquire>
 80159be:	b138      	cbz	r0, 80159d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80159c0:	4620      	mov	r0, r4
 80159c2:	f007 f9c9 	bl	801cd58 <__cxa_guard_release>
 80159c6:	4a06      	ldr	r2, [pc, #24]	; (80159e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80159c8:	4909      	ldr	r1, [pc, #36]	; (80159f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80159ca:	480a      	ldr	r0, [pc, #40]	; (80159f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80159cc:	f007 f9b1 	bl	801cd32 <__aeabi_atexit>
 80159d0:	4b05      	ldr	r3, [pc, #20]	; (80159e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80159d2:	65ab      	str	r3, [r5, #88]	; 0x58
 80159d4:	4b07      	ldr	r3, [pc, #28]	; (80159f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80159d6:	65eb      	str	r3, [r5, #92]	; 0x5c
 80159d8:	bd38      	pop	{r3, r4, r5, pc}
 80159da:	bf00      	nop
 80159dc:	20012e60 	.word	0x20012e60
 80159e0:	20000000 	.word	0x20000000
 80159e4:	08013815 	.word	0x08013815
 80159e8:	20000098 	.word	0x20000098
 80159ec:	20012e64 	.word	0x20012e64
 80159f0:	08013813 	.word	0x08013813
 80159f4:	2000009c 	.word	0x2000009c

080159f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80159f8:	b510      	push	{r4, lr}
 80159fa:	4604      	mov	r4, r0
 80159fc:	f7ff ff88 	bl	8015910 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8015a00:	4620      	mov	r0, r4
 8015a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a06:	f7ff bfbd 	b.w	8015984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08015a0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8015a0c:	b538      	push	{r3, r4, r5, lr}
 8015a0e:	4c15      	ldr	r4, [pc, #84]	; (8015a64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8015a10:	7823      	ldrb	r3, [r4, #0]
 8015a12:	f3bf 8f5b 	dmb	ish
 8015a16:	07da      	lsls	r2, r3, #31
 8015a18:	4605      	mov	r5, r0
 8015a1a:	d40b      	bmi.n	8015a34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015a1c:	4620      	mov	r0, r4
 8015a1e:	f007 f98f 	bl	801cd40 <__cxa_guard_acquire>
 8015a22:	b138      	cbz	r0, 8015a34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015a24:	4620      	mov	r0, r4
 8015a26:	f007 f997 	bl	801cd58 <__cxa_guard_release>
 8015a2a:	4a0f      	ldr	r2, [pc, #60]	; (8015a68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015a2c:	490f      	ldr	r1, [pc, #60]	; (8015a6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8015a2e:	4810      	ldr	r0, [pc, #64]	; (8015a70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015a30:	f007 f97f 	bl	801cd32 <__aeabi_atexit>
 8015a34:	4c0f      	ldr	r4, [pc, #60]	; (8015a74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8015a36:	7823      	ldrb	r3, [r4, #0]
 8015a38:	f3bf 8f5b 	dmb	ish
 8015a3c:	07db      	lsls	r3, r3, #31
 8015a3e:	d40b      	bmi.n	8015a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015a40:	4620      	mov	r0, r4
 8015a42:	f007 f97d 	bl	801cd40 <__cxa_guard_acquire>
 8015a46:	b138      	cbz	r0, 8015a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015a48:	4620      	mov	r0, r4
 8015a4a:	f007 f985 	bl	801cd58 <__cxa_guard_release>
 8015a4e:	4a06      	ldr	r2, [pc, #24]	; (8015a68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015a50:	4909      	ldr	r1, [pc, #36]	; (8015a78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8015a52:	480a      	ldr	r0, [pc, #40]	; (8015a7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015a54:	f007 f96d 	bl	801cd32 <__aeabi_atexit>
 8015a58:	4b05      	ldr	r3, [pc, #20]	; (8015a70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015a5a:	672b      	str	r3, [r5, #112]	; 0x70
 8015a5c:	4b07      	ldr	r3, [pc, #28]	; (8015a7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015a5e:	676b      	str	r3, [r5, #116]	; 0x74
 8015a60:	bd38      	pop	{r3, r4, r5, pc}
 8015a62:	bf00      	nop
 8015a64:	20012e58 	.word	0x20012e58
 8015a68:	20000000 	.word	0x20000000
 8015a6c:	08013809 	.word	0x08013809
 8015a70:	20000090 	.word	0x20000090
 8015a74:	20012e5c 	.word	0x20012e5c
 8015a78:	08013807 	.word	0x08013807
 8015a7c:	20000094 	.word	0x20000094

08015a80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015a80:	b538      	push	{r3, r4, r5, lr}
 8015a82:	4c15      	ldr	r4, [pc, #84]	; (8015ad8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8015a84:	7823      	ldrb	r3, [r4, #0]
 8015a86:	f3bf 8f5b 	dmb	ish
 8015a8a:	07da      	lsls	r2, r3, #31
 8015a8c:	4605      	mov	r5, r0
 8015a8e:	d40b      	bmi.n	8015aa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015a90:	4620      	mov	r0, r4
 8015a92:	f007 f955 	bl	801cd40 <__cxa_guard_acquire>
 8015a96:	b138      	cbz	r0, 8015aa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015a98:	4620      	mov	r0, r4
 8015a9a:	f007 f95d 	bl	801cd58 <__cxa_guard_release>
 8015a9e:	4a0f      	ldr	r2, [pc, #60]	; (8015adc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015aa0:	490f      	ldr	r1, [pc, #60]	; (8015ae0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8015aa2:	4810      	ldr	r0, [pc, #64]	; (8015ae4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015aa4:	f007 f945 	bl	801cd32 <__aeabi_atexit>
 8015aa8:	4c0f      	ldr	r4, [pc, #60]	; (8015ae8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015aaa:	7823      	ldrb	r3, [r4, #0]
 8015aac:	f3bf 8f5b 	dmb	ish
 8015ab0:	07db      	lsls	r3, r3, #31
 8015ab2:	d40b      	bmi.n	8015acc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015ab4:	4620      	mov	r0, r4
 8015ab6:	f007 f943 	bl	801cd40 <__cxa_guard_acquire>
 8015aba:	b138      	cbz	r0, 8015acc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015abc:	4620      	mov	r0, r4
 8015abe:	f007 f94b 	bl	801cd58 <__cxa_guard_release>
 8015ac2:	4a06      	ldr	r2, [pc, #24]	; (8015adc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015ac4:	4909      	ldr	r1, [pc, #36]	; (8015aec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8015ac6:	480a      	ldr	r0, [pc, #40]	; (8015af0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015ac8:	f007 f933 	bl	801cd32 <__aeabi_atexit>
 8015acc:	4b05      	ldr	r3, [pc, #20]	; (8015ae4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015ace:	66ab      	str	r3, [r5, #104]	; 0x68
 8015ad0:	4b07      	ldr	r3, [pc, #28]	; (8015af0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015ad2:	66eb      	str	r3, [r5, #108]	; 0x6c
 8015ad4:	bd38      	pop	{r3, r4, r5, pc}
 8015ad6:	bf00      	nop
 8015ad8:	20012e50 	.word	0x20012e50
 8015adc:	20000000 	.word	0x20000000
 8015ae0:	0801380d 	.word	0x0801380d
 8015ae4:	20000088 	.word	0x20000088
 8015ae8:	20012e54 	.word	0x20012e54
 8015aec:	0801380b 	.word	0x0801380b
 8015af0:	2000008c 	.word	0x2000008c

08015af4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8015af4:	b510      	push	{r4, lr}
 8015af6:	4604      	mov	r4, r0
 8015af8:	f7ff ff88 	bl	8015a0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8015afc:	4620      	mov	r0, r4
 8015afe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b02:	f7ff bfbd 	b.w	8015a80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08015b06 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8015b06:	b510      	push	{r4, lr}
 8015b08:	4604      	mov	r4, r0
 8015b0a:	f7ff fff3 	bl	8015af4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8015b0e:	4620      	mov	r0, r4
 8015b10:	f7ff ff72 	bl	80159f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8015b14:	4620      	mov	r0, r4
 8015b16:	f7ff fdf9 	bl	801570c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015b1a:	4620      	mov	r0, r4
 8015b1c:	f7ff fcfa 	bl	8015514 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8015b20:	4620      	mov	r0, r4
 8015b22:	f7ff fd75 	bl	8015610 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8015b26:	4620      	mov	r0, r4
 8015b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b2c:	f7ff bee0 	b.w	80158f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08015b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8015b30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b34:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8015b38:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8015b3c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8015b40:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8015b44:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8015b48:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8015b4c:	8808      	ldrh	r0, [r1, #0]
 8015b4e:	fb0e 4708 	mla	r7, lr, r8, r4
 8015b52:	f1be 0f00 	cmp.w	lr, #0
 8015b56:	eb02 0a07 	add.w	sl, r2, r7
 8015b5a:	db37      	blt.n	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015b5c:	45f3      	cmp	fp, lr
 8015b5e:	dd35      	ble.n	8015bcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015b60:	2c00      	cmp	r4, #0
 8015b62:	db31      	blt.n	8015bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015b64:	45a0      	cmp	r8, r4
 8015b66:	dd2f      	ble.n	8015bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015b68:	5dd2      	ldrb	r2, [r2, r7]
 8015b6a:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8015b6e:	1c62      	adds	r2, r4, #1
 8015b70:	d42f      	bmi.n	8015bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015b72:	4590      	cmp	r8, r2
 8015b74:	dd2d      	ble.n	8015bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015b76:	b366      	cbz	r6, 8015bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015b78:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015b7c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015b80:	f11e 0e01 	adds.w	lr, lr, #1
 8015b84:	d429      	bmi.n	8015bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015b86:	45f3      	cmp	fp, lr
 8015b88:	dd27      	ble.n	8015bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015b8a:	f1bc 0f00 	cmp.w	ip, #0
 8015b8e:	f000 80a1 	beq.w	8015cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8015b92:	2c00      	cmp	r4, #0
 8015b94:	db1f      	blt.n	8015bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015b96:	45a0      	cmp	r8, r4
 8015b98:	dd1d      	ble.n	8015bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015b9a:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8015b9e:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8015ba2:	3401      	adds	r4, #1
 8015ba4:	d41c      	bmi.n	8015be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015ba6:	45a0      	cmp	r8, r4
 8015ba8:	dd1a      	ble.n	8015be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8015baa:	b1de      	cbz	r6, 8015be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8015bac:	44d0      	add	r8, sl
 8015bae:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015bb2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8015bb6:	2e0f      	cmp	r6, #15
 8015bb8:	d915      	bls.n	8015be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8015bba:	4b49      	ldr	r3, [pc, #292]	; (8015ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8015bbc:	4a49      	ldr	r2, [pc, #292]	; (8015ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8015bbe:	484a      	ldr	r0, [pc, #296]	; (8015ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8015bc0:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8015bc4:	f007 f8e8 	bl	801cd98 <__assert_func>
 8015bc8:	4681      	mov	r9, r0
 8015bca:	e7d0      	b.n	8015b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8015bcc:	4607      	mov	r7, r0
 8015bce:	4681      	mov	r9, r0
 8015bd0:	e7d6      	b.n	8015b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8015bd2:	4607      	mov	r7, r0
 8015bd4:	e7d4      	b.n	8015b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8015bd6:	4686      	mov	lr, r0
 8015bd8:	e7e3      	b.n	8015ba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8015bda:	4603      	mov	r3, r0
 8015bdc:	4686      	mov	lr, r0
 8015bde:	e7ea      	b.n	8015bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8015be0:	4603      	mov	r3, r0
 8015be2:	e7e8      	b.n	8015bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8015be4:	4603      	mov	r3, r0
 8015be6:	f1bc 0f0f 	cmp.w	ip, #15
 8015bea:	d8e6      	bhi.n	8015bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8015bec:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8015bf0:	fb16 f80c 	smulbb	r8, r6, ip
 8015bf4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015bf8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015bfc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015c00:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015c04:	ea44 0909 	orr.w	r9, r4, r9
 8015c08:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015c0c:	f1cc 0410 	rsb	r4, ip, #16
 8015c10:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015c14:	1ba4      	subs	r4, r4, r6
 8015c16:	041a      	lsls	r2, r3, #16
 8015c18:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015c1c:	ea4a 0707 	orr.w	r7, sl, r7
 8015c20:	4377      	muls	r7, r6
 8015c22:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015c26:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015c2a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015c2e:	fb04 7409 	mla	r4, r4, r9, r7
 8015c32:	4313      	orrs	r3, r2
 8015c34:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8015c38:	fb08 4303 	mla	r3, r8, r3, r4
 8015c3c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015c40:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8015c44:	4322      	orrs	r2, r4
 8015c46:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015c4a:	fb0c 3202 	mla	r2, ip, r2, r3
 8015c4e:	0d53      	lsrs	r3, r2, #21
 8015c50:	0952      	lsrs	r2, r2, #5
 8015c52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c56:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015c5a:	431a      	orrs	r2, r3
 8015c5c:	b293      	uxth	r3, r2
 8015c5e:	b2af      	uxth	r7, r5
 8015c60:	1202      	asrs	r2, r0, #8
 8015c62:	43ed      	mvns	r5, r5
 8015c64:	b2ed      	uxtb	r5, r5
 8015c66:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015c6a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015c6e:	fb12 f205 	smulbb	r2, r2, r5
 8015c72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c76:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015c7a:	00dc      	lsls	r4, r3, #3
 8015c7c:	10da      	asrs	r2, r3, #3
 8015c7e:	10c6      	asrs	r6, r0, #3
 8015c80:	00c3      	lsls	r3, r0, #3
 8015c82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015c86:	b2db      	uxtb	r3, r3
 8015c88:	fb16 f605 	smulbb	r6, r6, r5
 8015c8c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015c90:	b2e4      	uxtb	r4, r4
 8015c92:	fb13 f305 	smulbb	r3, r3, r5
 8015c96:	fa1f fc8c 	uxth.w	ip, ip
 8015c9a:	fb02 6207 	mla	r2, r2, r7, r6
 8015c9e:	fb04 3307 	mla	r3, r4, r7, r3
 8015ca2:	b296      	uxth	r6, r2
 8015ca4:	b29a      	uxth	r2, r3
 8015ca6:	f10c 0301 	add.w	r3, ip, #1
 8015caa:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015cae:	1c53      	adds	r3, r2, #1
 8015cb0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015cb4:	1c72      	adds	r2, r6, #1
 8015cb6:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8015cba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015cbe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015cc2:	0952      	lsrs	r2, r2, #5
 8015cc4:	ea43 030c 	orr.w	r3, r3, ip
 8015cc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ccc:	4313      	orrs	r3, r2
 8015cce:	800b      	strh	r3, [r1, #0]
 8015cd0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cd4:	2e0f      	cmp	r6, #15
 8015cd6:	f63f af70 	bhi.w	8015bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8015cda:	4603      	mov	r3, r0
 8015cdc:	4686      	mov	lr, r0
 8015cde:	e785      	b.n	8015bec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8015ce0:	08021456 	.word	0x08021456
 8015ce4:	08021acb 	.word	0x08021acb
 8015ce8:	080214da 	.word	0x080214da

08015cec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cf0:	ed2d 8b08 	vpush	{d8-d11}
 8015cf4:	b099      	sub	sp, #100	; 0x64
 8015cf6:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8015cfa:	9215      	str	r2, [sp, #84]	; 0x54
 8015cfc:	9309      	str	r3, [sp, #36]	; 0x24
 8015cfe:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015d00:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8015d04:	930d      	str	r3, [sp, #52]	; 0x34
 8015d06:	910c      	str	r1, [sp, #48]	; 0x30
 8015d08:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8015d0c:	9016      	str	r0, [sp, #88]	; 0x58
 8015d0e:	6850      	ldr	r0, [r2, #4]
 8015d10:	6812      	ldr	r2, [r2, #0]
 8015d12:	fb00 1303 	mla	r3, r0, r3, r1
 8015d16:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8015d1a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015d1c:	681b      	ldr	r3, [r3, #0]
 8015d1e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015d20:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015d22:	685e      	ldr	r6, [r3, #4]
 8015d24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d26:	43db      	mvns	r3, r3
 8015d28:	b2db      	uxtb	r3, r3
 8015d2a:	eeb0 aa40 	vmov.f32	s20, s0
 8015d2e:	eef0 9a60 	vmov.f32	s19, s1
 8015d32:	eeb0 9a41 	vmov.f32	s18, s2
 8015d36:	eeb0 8a62 	vmov.f32	s16, s5
 8015d3a:	eef0 8a43 	vmov.f32	s17, s6
 8015d3e:	eef0 ba44 	vmov.f32	s23, s8
 8015d42:	eeb0 ba64 	vmov.f32	s22, s9
 8015d46:	eef0 aa45 	vmov.f32	s21, s10
 8015d4a:	3604      	adds	r6, #4
 8015d4c:	930a      	str	r3, [sp, #40]	; 0x28
 8015d4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015d50:	2b00      	cmp	r3, #0
 8015d52:	dc03      	bgt.n	8015d5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015d54:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015d56:	2b00      	cmp	r3, #0
 8015d58:	f340 8225 	ble.w	80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015d5c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015d5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015d62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015d66:	1e48      	subs	r0, r1, #1
 8015d68:	1e57      	subs	r7, r2, #1
 8015d6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015d6c:	2b00      	cmp	r3, #0
 8015d6e:	f340 80e3 	ble.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8015d72:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8015d76:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015d7a:	d406      	bmi.n	8015d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d7c:	4584      	cmp	ip, r0
 8015d7e:	da04      	bge.n	8015d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d80:	2b00      	cmp	r3, #0
 8015d82:	db02      	blt.n	8015d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015d84:	42bb      	cmp	r3, r7
 8015d86:	f2c0 80d8 	blt.w	8015f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8015d8a:	f11c 0c01 	adds.w	ip, ip, #1
 8015d8e:	f100 80c9 	bmi.w	8015f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015d92:	4561      	cmp	r1, ip
 8015d94:	f2c0 80c6 	blt.w	8015f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015d98:	3301      	adds	r3, #1
 8015d9a:	f100 80c3 	bmi.w	8015f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015d9e:	429a      	cmp	r2, r3
 8015da0:	f2c0 80c0 	blt.w	8015f24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8015da4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8015da8:	4647      	mov	r7, r8
 8015daa:	f1bb 0f00 	cmp.w	fp, #0
 8015dae:	f340 80e3 	ble.w	8015f78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015db2:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015db4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015db6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015dba:	689b      	ldr	r3, [r3, #8]
 8015dbc:	ea5f 422a 	movs.w	r2, sl, asr #16
 8015dc0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015dc4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8015dc8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015dcc:	f100 8121 	bmi.w	8016012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015dd0:	f103 39ff 	add.w	r9, r3, #4294967295
 8015dd4:	454a      	cmp	r2, r9
 8015dd6:	f280 811c 	bge.w	8016012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015dda:	f1bc 0f00 	cmp.w	ip, #0
 8015dde:	f2c0 8118 	blt.w	8016012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015de2:	f10e 39ff 	add.w	r9, lr, #4294967295
 8015de6:	45cc      	cmp	ip, r9
 8015de8:	f280 8113 	bge.w	8016012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8015dec:	b21b      	sxth	r3, r3
 8015dee:	fb0c 2203 	mla	r2, ip, r3, r2
 8015df2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015df4:	eb04 0902 	add.w	r9, r4, r2
 8015df8:	5ca2      	ldrb	r2, [r4, r2]
 8015dfa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8015dfe:	2800      	cmp	r0, #0
 8015e00:	f000 80fe 	beq.w	8016000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015e04:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015e08:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015e0c:	9211      	str	r2, [sp, #68]	; 0x44
 8015e0e:	b151      	cbz	r1, 8015e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015e10:	eb09 0203 	add.w	r2, r9, r3
 8015e14:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015e18:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015e1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8015e1e:	7853      	ldrb	r3, [r2, #1]
 8015e20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015e24:	9312      	str	r3, [sp, #72]	; 0x48
 8015e26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015e28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015e2a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015e2e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015e32:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015e36:	ea4c 0c03 	orr.w	ip, ip, r3
 8015e3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015e3c:	041b      	lsls	r3, r3, #16
 8015e3e:	fb10 f201 	smulbb	r2, r0, r1
 8015e42:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8015e46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015e4a:	10d2      	asrs	r2, r2, #3
 8015e4c:	4323      	orrs	r3, r4
 8015e4e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8015e52:	4353      	muls	r3, r2
 8015e54:	fb09 330c 	mla	r3, r9, ip, r3
 8015e58:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015e5c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015e60:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015e64:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015e68:	f1c1 0c10 	rsb	ip, r1, #16
 8015e6c:	ebac 0c00 	sub.w	ip, ip, r0
 8015e70:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015e74:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015e7c:	0418      	lsls	r0, r3, #16
 8015e7e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015e82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015e86:	4318      	orrs	r0, r3
 8015e88:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015e8c:	fb02 c200 	mla	r2, r2, r0, ip
 8015e90:	0d53      	lsrs	r3, r2, #21
 8015e92:	0952      	lsrs	r2, r2, #5
 8015e94:	8838      	ldrh	r0, [r7, #0]
 8015e96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015e9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015e9e:	431a      	orrs	r2, r3
 8015ea0:	b292      	uxth	r2, r2
 8015ea2:	1201      	asrs	r1, r0, #8
 8015ea4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8015ea8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8015eac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015eb0:	fb11 f104 	smulbb	r1, r1, r4
 8015eb4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8015eb8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015ebc:	00c0      	lsls	r0, r0, #3
 8015ebe:	fb0c 1c03 	mla	ip, ip, r3, r1
 8015ec2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015ec6:	10d1      	asrs	r1, r2, #3
 8015ec8:	b2c0      	uxtb	r0, r0
 8015eca:	00d2      	lsls	r2, r2, #3
 8015ecc:	b2d2      	uxtb	r2, r2
 8015ece:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015ed2:	fb1e fe04 	smulbb	lr, lr, r4
 8015ed6:	fb10 f004 	smulbb	r0, r0, r4
 8015eda:	fa1f fc8c 	uxth.w	ip, ip
 8015ede:	fb01 e103 	mla	r1, r1, r3, lr
 8015ee2:	fb02 0303 	mla	r3, r2, r3, r0
 8015ee6:	b29a      	uxth	r2, r3
 8015ee8:	f10c 0301 	add.w	r3, ip, #1
 8015eec:	b289      	uxth	r1, r1
 8015eee:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8015ef2:	1c53      	adds	r3, r2, #1
 8015ef4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015ef8:	1c4a      	adds	r2, r1, #1
 8015efa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015efe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015f06:	0949      	lsrs	r1, r1, #5
 8015f08:	ea43 030c 	orr.w	r3, r3, ip
 8015f0c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f10:	430b      	orrs	r3, r1
 8015f12:	803b      	strh	r3, [r7, #0]
 8015f14:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f16:	449a      	add	sl, r3
 8015f18:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015f1a:	3702      	adds	r7, #2
 8015f1c:	441d      	add	r5, r3
 8015f1e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015f22:	e742      	b.n	8015daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015f24:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f26:	449a      	add	sl, r3
 8015f28:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015f2a:	441d      	add	r5, r3
 8015f2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f2e:	3b01      	subs	r3, #1
 8015f30:	9309      	str	r3, [sp, #36]	; 0x24
 8015f32:	f108 0802 	add.w	r8, r8, #2
 8015f36:	e718      	b.n	8015d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015f38:	d023      	beq.n	8015f82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8015f3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f3c:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8015f3e:	3b01      	subs	r3, #1
 8015f40:	fb00 a003 	mla	r0, r0, r3, sl
 8015f44:	1400      	asrs	r0, r0, #16
 8015f46:	f53f af2d 	bmi.w	8015da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015f4a:	3901      	subs	r1, #1
 8015f4c:	4288      	cmp	r0, r1
 8015f4e:	f6bf af29 	bge.w	8015da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015f52:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015f54:	fb01 5303 	mla	r3, r1, r3, r5
 8015f58:	141b      	asrs	r3, r3, #16
 8015f5a:	f53f af23 	bmi.w	8015da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015f5e:	3a01      	subs	r2, #1
 8015f60:	4293      	cmp	r3, r2
 8015f62:	f6bf af1f 	bge.w	8015da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015f66:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015f6a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8015f6e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8015f72:	f1be 0f00 	cmp.w	lr, #0
 8015f76:	dc6c      	bgt.n	8016052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8015f78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f7a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015f7e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f84:	2b00      	cmp	r3, #0
 8015f86:	f340 810e 	ble.w	80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8015f8a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015f8e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f92:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015f96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015f98:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015f9c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015fa0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015fa4:	eef0 6a48 	vmov.f32	s13, s16
 8015fa8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015fac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fb0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015fb4:	ee16 aa90 	vmov	sl, s13
 8015fb8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015fbc:	eef0 6a68 	vmov.f32	s13, s17
 8015fc0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015fc4:	ee18 2a10 	vmov	r2, s16
 8015fc8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015fcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fd0:	ee18 2a90 	vmov	r2, s17
 8015fd4:	932d      	str	r3, [sp, #180]	; 0xb4
 8015fd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fdc:	932e      	str	r3, [sp, #184]	; 0xb8
 8015fde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015fe0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015fe2:	3b01      	subs	r3, #1
 8015fe4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fe8:	930c      	str	r3, [sp, #48]	; 0x30
 8015fea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fec:	bf08      	it	eq
 8015fee:	4613      	moveq	r3, r2
 8015ff0:	ee16 5a90 	vmov	r5, s13
 8015ff4:	9309      	str	r3, [sp, #36]	; 0x24
 8015ff6:	eef0 8a67 	vmov.f32	s17, s15
 8015ffa:	eeb0 8a47 	vmov.f32	s16, s14
 8015ffe:	e6a6      	b.n	8015d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016000:	2900      	cmp	r1, #0
 8016002:	f43f af10 	beq.w	8015e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016006:	f819 3003 	ldrb.w	r3, [r9, r3]
 801600a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801600e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016010:	e709      	b.n	8015e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016012:	f112 0901 	adds.w	r9, r2, #1
 8016016:	f53f af7d 	bmi.w	8015f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801601a:	454b      	cmp	r3, r9
 801601c:	f6ff af7a 	blt.w	8015f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016020:	f11c 0901 	adds.w	r9, ip, #1
 8016024:	f53f af76 	bmi.w	8015f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016028:	45ce      	cmp	lr, r9
 801602a:	f6ff af73 	blt.w	8015f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801602e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016030:	9202      	str	r2, [sp, #8]
 8016032:	b21b      	sxth	r3, r3
 8016034:	fa0f f28e 	sxth.w	r2, lr
 8016038:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801603c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016040:	9201      	str	r2, [sp, #4]
 8016042:	9300      	str	r3, [sp, #0]
 8016044:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016046:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016048:	4633      	mov	r3, r6
 801604a:	4639      	mov	r1, r7
 801604c:	f7ff fd70 	bl	8015b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016050:	e760      	b.n	8015f14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016052:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016054:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016056:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801605a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801605e:	1429      	asrs	r1, r5, #16
 8016060:	fb03 2101 	mla	r1, r3, r1, r2
 8016064:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016066:	440a      	add	r2, r1
 8016068:	5c61      	ldrb	r1, [r4, r1]
 801606a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801606e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016072:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8016076:	f1bc 0f00 	cmp.w	ip, #0
 801607a:	f000 808c 	beq.w	8016196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801607e:	7857      	ldrb	r7, [r2, #1]
 8016080:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8016084:	9413      	str	r4, [sp, #76]	; 0x4c
 8016086:	b140      	cbz	r0, 801609a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016088:	18d7      	adds	r7, r2, r3
 801608a:	5cd3      	ldrb	r3, [r2, r3]
 801608c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016090:	9310      	str	r3, [sp, #64]	; 0x40
 8016092:	787b      	ldrb	r3, [r7, #1]
 8016094:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016098:	9314      	str	r3, [sp, #80]	; 0x50
 801609a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801609c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801609e:	fb1c f200 	smulbb	r2, ip, r0
 80160a2:	041f      	lsls	r7, r3, #16
 80160a4:	10d2      	asrs	r2, r2, #3
 80160a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80160aa:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80160ae:	431f      	orrs	r7, r3
 80160b0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80160b4:	9317      	str	r3, [sp, #92]	; 0x5c
 80160b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80160b8:	041b      	lsls	r3, r3, #16
 80160ba:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80160be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80160c2:	ea43 030b 	orr.w	r3, r3, fp
 80160c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80160c8:	4353      	muls	r3, r2
 80160ca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80160ce:	fb04 3707 	mla	r7, r4, r7, r3
 80160d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80160d6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80160da:	ea43 0b01 	orr.w	fp, r3, r1
 80160de:	f1c0 0110 	rsb	r1, r0, #16
 80160e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80160e6:	eba1 0c0c 	sub.w	ip, r1, ip
 80160ea:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80160ee:	fb0c 770b 	mla	r7, ip, fp, r7
 80160f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80160f6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80160fa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80160fe:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016102:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016106:	fb02 770c 	mla	r7, r2, ip, r7
 801610a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801610c:	0d79      	lsrs	r1, r7, #21
 801610e:	097f      	lsrs	r7, r7, #5
 8016110:	8812      	ldrh	r2, [r2, #0]
 8016112:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016116:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801611a:	430f      	orrs	r7, r1
 801611c:	b2bb      	uxth	r3, r7
 801611e:	1211      	asrs	r1, r2, #8
 8016120:	1218      	asrs	r0, r3, #8
 8016122:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016126:	fb11 f104 	smulbb	r1, r1, r4
 801612a:	10d7      	asrs	r7, r2, #3
 801612c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016130:	00d2      	lsls	r2, r2, #3
 8016132:	fb00 1009 	mla	r0, r0, r9, r1
 8016136:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801613a:	10d9      	asrs	r1, r3, #3
 801613c:	b2d2      	uxtb	r2, r2
 801613e:	00db      	lsls	r3, r3, #3
 8016140:	fb17 f704 	smulbb	r7, r7, r4
 8016144:	fb12 f204 	smulbb	r2, r2, r4
 8016148:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801614c:	b2db      	uxtb	r3, r3
 801614e:	b280      	uxth	r0, r0
 8016150:	fb01 7109 	mla	r1, r1, r9, r7
 8016154:	fb03 2309 	mla	r3, r3, r9, r2
 8016158:	b29b      	uxth	r3, r3
 801615a:	b289      	uxth	r1, r1
 801615c:	1c42      	adds	r2, r0, #1
 801615e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016162:	1c4f      	adds	r7, r1, #1
 8016164:	1c5a      	adds	r2, r3, #1
 8016166:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801616a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801616e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016172:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016176:	0949      	lsrs	r1, r1, #5
 8016178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801617a:	4310      	orrs	r0, r2
 801617c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016180:	4308      	orrs	r0, r1
 8016182:	f823 0b02 	strh.w	r0, [r3], #2
 8016186:	930e      	str	r3, [sp, #56]	; 0x38
 8016188:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801618a:	449a      	add	sl, r3
 801618c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801618e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016192:	441d      	add	r5, r3
 8016194:	e6ed      	b.n	8015f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8016196:	2800      	cmp	r0, #0
 8016198:	f43f af7f 	beq.w	801609a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801619c:	5cd3      	ldrb	r3, [r2, r3]
 801619e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80161a2:	9310      	str	r3, [sp, #64]	; 0x40
 80161a4:	e779      	b.n	801609a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80161a6:	b019      	add	sp, #100	; 0x64
 80161a8:	ecbd 8b08 	vpop	{d8-d11}
 80161ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080161b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80161b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80161b4:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80161b8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80161bc:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80161c0:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80161c4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80161c8:	8808      	ldrh	r0, [r1, #0]
 80161ca:	fb06 570e 	mla	r7, r6, lr, r5
 80161ce:	2e00      	cmp	r6, #0
 80161d0:	eb02 0807 	add.w	r8, r2, r7
 80161d4:	db38      	blt.n	8016248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80161d6:	45b1      	cmp	r9, r6
 80161d8:	dd36      	ble.n	8016248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80161da:	2d00      	cmp	r5, #0
 80161dc:	db32      	blt.n	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80161de:	45ae      	cmp	lr, r5
 80161e0:	dd30      	ble.n	8016244 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80161e2:	5dd2      	ldrb	r2, [r2, r7]
 80161e4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80161e8:	1c6a      	adds	r2, r5, #1
 80161ea:	d430      	bmi.n	801624e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80161ec:	4596      	cmp	lr, r2
 80161ee:	dd2e      	ble.n	801624e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80161f0:	b36c      	cbz	r4, 801624e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80161f2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80161f6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80161fa:	3601      	adds	r6, #1
 80161fc:	d42b      	bmi.n	8016256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80161fe:	45b1      	cmp	r9, r6
 8016200:	dd29      	ble.n	8016256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8016202:	f1bc 0f00 	cmp.w	ip, #0
 8016206:	d028      	beq.n	801625a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8016208:	2d00      	cmp	r5, #0
 801620a:	db22      	blt.n	8016252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801620c:	45ae      	cmp	lr, r5
 801620e:	dd20      	ble.n	8016252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8016210:	f818 600e 	ldrb.w	r6, [r8, lr]
 8016214:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8016218:	3501      	adds	r5, #1
 801621a:	d407      	bmi.n	801622c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801621c:	45ae      	cmp	lr, r5
 801621e:	dd05      	ble.n	801622c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8016220:	b134      	cbz	r4, 8016230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016222:	44c6      	add	lr, r8
 8016224:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016228:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801622c:	2c0f      	cmp	r4, #15
 801622e:	d802      	bhi.n	8016236 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016230:	f1bc 0f0f 	cmp.w	ip, #15
 8016234:	d914      	bls.n	8016260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8016236:	4b26      	ldr	r3, [pc, #152]	; (80162d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8016238:	4a26      	ldr	r2, [pc, #152]	; (80162d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801623a:	4827      	ldr	r0, [pc, #156]	; (80162d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801623c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8016240:	f006 fdaa 	bl	801cd98 <__assert_func>
 8016244:	4607      	mov	r7, r0
 8016246:	e7cf      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8016248:	4602      	mov	r2, r0
 801624a:	4607      	mov	r7, r0
 801624c:	e7d5      	b.n	80161fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801624e:	4602      	mov	r2, r0
 8016250:	e7d3      	b.n	80161fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8016252:	4606      	mov	r6, r0
 8016254:	e7e0      	b.n	8016218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8016256:	4606      	mov	r6, r0
 8016258:	e7e8      	b.n	801622c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801625a:	2c0f      	cmp	r4, #15
 801625c:	d8eb      	bhi.n	8016236 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801625e:	4606      	mov	r6, r0
 8016260:	043d      	lsls	r5, r7, #16
 8016262:	fb14 f30c 	smulbb	r3, r4, ip
 8016266:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801626a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801626e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016272:	10db      	asrs	r3, r3, #3
 8016274:	432f      	orrs	r7, r5
 8016276:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801627a:	f1cc 0510 	rsb	r5, ip, #16
 801627e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016282:	1b2d      	subs	r5, r5, r4
 8016284:	ea4e 0202 	orr.w	r2, lr, r2
 8016288:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801628c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016290:	4354      	muls	r4, r2
 8016292:	fb05 4507 	mla	r5, r5, r7, r4
 8016296:	0404      	lsls	r4, r0, #16
 8016298:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801629c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80162a0:	4320      	orrs	r0, r4
 80162a2:	fb03 5400 	mla	r4, r3, r0, r5
 80162a6:	0430      	lsls	r0, r6, #16
 80162a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80162ac:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80162b0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80162b4:	4330      	orrs	r0, r6
 80162b6:	fb03 4000 	mla	r0, r3, r0, r4
 80162ba:	0d43      	lsrs	r3, r0, #21
 80162bc:	0940      	lsrs	r0, r0, #5
 80162be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80162c2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80162c6:	4318      	orrs	r0, r3
 80162c8:	8008      	strh	r0, [r1, #0]
 80162ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80162ce:	bf00      	nop
 80162d0:	08021456 	.word	0x08021456
 80162d4:	08021acb 	.word	0x08021acb
 80162d8:	080214da 	.word	0x080214da

080162dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80162dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162e0:	ed2d 8b0a 	vpush	{d8-d12}
 80162e4:	b093      	sub	sp, #76	; 0x4c
 80162e6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80162ea:	920f      	str	r2, [sp, #60]	; 0x3c
 80162ec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80162ee:	9108      	str	r1, [sp, #32]
 80162f0:	9306      	str	r3, [sp, #24]
 80162f2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80162f6:	9010      	str	r0, [sp, #64]	; 0x40
 80162f8:	6850      	ldr	r0, [r2, #4]
 80162fa:	6812      	ldr	r2, [r2, #0]
 80162fc:	fb00 1303 	mla	r3, r0, r3, r1
 8016300:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016304:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016306:	681b      	ldr	r3, [r3, #0]
 8016308:	9307      	str	r3, [sp, #28]
 801630a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801630c:	685f      	ldr	r7, [r3, #4]
 801630e:	eeb0 aa40 	vmov.f32	s20, s0
 8016312:	eef0 9a60 	vmov.f32	s19, s1
 8016316:	eeb0 9a41 	vmov.f32	s18, s2
 801631a:	eeb0 8a62 	vmov.f32	s16, s5
 801631e:	eef0 8a43 	vmov.f32	s17, s6
 8016322:	eeb0 ca44 	vmov.f32	s24, s8
 8016326:	eef0 ba64 	vmov.f32	s23, s9
 801632a:	eeb0 ba45 	vmov.f32	s22, s10
 801632e:	3704      	adds	r7, #4
 8016330:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8016334:	9b08      	ldr	r3, [sp, #32]
 8016336:	2b00      	cmp	r3, #0
 8016338:	dc03      	bgt.n	8016342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801633a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801633c:	2b00      	cmp	r3, #0
 801633e:	f340 81b2 	ble.w	80166a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8016342:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016344:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016348:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801634c:	1e48      	subs	r0, r1, #1
 801634e:	f102 3cff 	add.w	ip, r2, #4294967295
 8016352:	9b06      	ldr	r3, [sp, #24]
 8016354:	2b00      	cmp	r3, #0
 8016356:	f340 80a9 	ble.w	80164ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801635a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801635e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016362:	d406      	bmi.n	8016372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016364:	4586      	cmp	lr, r0
 8016366:	da04      	bge.n	8016372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016368:	2b00      	cmp	r3, #0
 801636a:	db02      	blt.n	8016372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801636c:	4563      	cmp	r3, ip
 801636e:	f2c0 809e 	blt.w	80164ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016372:	f11e 0e01 	adds.w	lr, lr, #1
 8016376:	f100 808f 	bmi.w	8016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801637a:	4571      	cmp	r1, lr
 801637c:	f2c0 808c 	blt.w	8016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016380:	3301      	adds	r3, #1
 8016382:	f100 8089 	bmi.w	8016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016386:	429a      	cmp	r2, r3
 8016388:	f2c0 8086 	blt.w	8016498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801638c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016390:	46c8      	mov	r8, r9
 8016392:	f1bb 0f00 	cmp.w	fp, #0
 8016396:	f340 80a6 	ble.w	80164e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801639a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801639c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801639e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80163a2:	689b      	ldr	r3, [r3, #8]
 80163a4:	1422      	asrs	r2, r4, #16
 80163a6:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80163aa:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80163ae:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80163b2:	f100 80e3 	bmi.w	801657c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80163b6:	f103 3aff 	add.w	sl, r3, #4294967295
 80163ba:	4552      	cmp	r2, sl
 80163bc:	f280 80de 	bge.w	801657c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80163c0:	f1bc 0f00 	cmp.w	ip, #0
 80163c4:	f2c0 80da 	blt.w	801657c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80163c8:	f10e 3aff 	add.w	sl, lr, #4294967295
 80163cc:	45d4      	cmp	ip, sl
 80163ce:	f280 80d5 	bge.w	801657c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80163d2:	b21b      	sxth	r3, r3
 80163d4:	fb0c 2203 	mla	r2, ip, r3, r2
 80163d8:	9d07      	ldr	r5, [sp, #28]
 80163da:	eb05 0a02 	add.w	sl, r5, r2
 80163de:	5caa      	ldrb	r2, [r5, r2]
 80163e0:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80163e4:	2800      	cmp	r0, #0
 80163e6:	f000 80c0 	beq.w	801656a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80163ea:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80163ee:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80163f2:	920b      	str	r2, [sp, #44]	; 0x2c
 80163f4:	b151      	cbz	r1, 801640c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80163f6:	eb0a 0203 	add.w	r2, sl, r3
 80163fa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80163fe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016402:	9309      	str	r3, [sp, #36]	; 0x24
 8016404:	7853      	ldrb	r3, [r2, #1]
 8016406:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801640a:	930c      	str	r3, [sp, #48]	; 0x30
 801640c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801640e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016410:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016414:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016418:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801641c:	ea4c 0c03 	orr.w	ip, ip, r3
 8016420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016422:	041b      	lsls	r3, r3, #16
 8016424:	fb10 f201 	smulbb	r2, r0, r1
 8016428:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801642c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016430:	10d2      	asrs	r2, r2, #3
 8016432:	432b      	orrs	r3, r5
 8016434:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8016438:	4353      	muls	r3, r2
 801643a:	fb0a 330c 	mla	r3, sl, ip, r3
 801643e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016442:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016446:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801644a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801644e:	f1c1 0c10 	rsb	ip, r1, #16
 8016452:	ebac 0c00 	sub.w	ip, ip, r0
 8016456:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801645a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801645e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016460:	0418      	lsls	r0, r3, #16
 8016462:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016466:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801646a:	4318      	orrs	r0, r3
 801646c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016470:	fb02 c200 	mla	r2, r2, r0, ip
 8016474:	0d53      	lsrs	r3, r2, #21
 8016476:	0952      	lsrs	r2, r2, #5
 8016478:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801647c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016480:	431a      	orrs	r2, r3
 8016482:	f8a8 2000 	strh.w	r2, [r8]
 8016486:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016488:	441c      	add	r4, r3
 801648a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801648c:	f108 0802 	add.w	r8, r8, #2
 8016490:	441e      	add	r6, r3
 8016492:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016496:	e77c      	b.n	8016392 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016498:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801649a:	441c      	add	r4, r3
 801649c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801649e:	441e      	add	r6, r3
 80164a0:	9b06      	ldr	r3, [sp, #24]
 80164a2:	3b01      	subs	r3, #1
 80164a4:	9306      	str	r3, [sp, #24]
 80164a6:	f109 0902 	add.w	r9, r9, #2
 80164aa:	e752      	b.n	8016352 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80164ac:	d020      	beq.n	80164f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80164ae:	9b06      	ldr	r3, [sp, #24]
 80164b0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80164b2:	3b01      	subs	r3, #1
 80164b4:	fb00 4003 	mla	r0, r0, r3, r4
 80164b8:	1400      	asrs	r0, r0, #16
 80164ba:	f53f af67 	bmi.w	801638c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80164be:	3901      	subs	r1, #1
 80164c0:	4288      	cmp	r0, r1
 80164c2:	f6bf af63 	bge.w	801638c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80164c6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80164c8:	fb01 6303 	mla	r3, r1, r3, r6
 80164cc:	141b      	asrs	r3, r3, #16
 80164ce:	f53f af5d 	bmi.w	801638c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80164d2:	3a01      	subs	r2, #1
 80164d4:	4293      	cmp	r3, r2
 80164d6:	f6bf af59 	bge.w	801638c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80164da:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80164de:	46ca      	mov	sl, r9
 80164e0:	f1b8 0f00 	cmp.w	r8, #0
 80164e4:	dc67      	bgt.n	80165b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80164e6:	9b06      	ldr	r3, [sp, #24]
 80164e8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80164ec:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80164f0:	9b08      	ldr	r3, [sp, #32]
 80164f2:	2b00      	cmp	r3, #0
 80164f4:	f340 80d7 	ble.w	80166a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80164f8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80164fc:	ee79 9aab 	vadd.f32	s19, s19, s23
 8016500:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8016504:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016506:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801650a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801650e:	eef0 6a48 	vmov.f32	s13, s16
 8016512:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016516:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801651a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801651e:	ee16 4a90 	vmov	r4, s13
 8016522:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016526:	eef0 6a68 	vmov.f32	s13, s17
 801652a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801652e:	ee18 2a10 	vmov	r2, s16
 8016532:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016536:	fb92 f3f3 	sdiv	r3, r2, r3
 801653a:	ee18 2a90 	vmov	r2, s17
 801653e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016540:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016542:	fb92 f3f3 	sdiv	r3, r2, r3
 8016546:	932a      	str	r3, [sp, #168]	; 0xa8
 8016548:	9b08      	ldr	r3, [sp, #32]
 801654a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801654c:	3b01      	subs	r3, #1
 801654e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016552:	9308      	str	r3, [sp, #32]
 8016554:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016556:	bf08      	it	eq
 8016558:	4613      	moveq	r3, r2
 801655a:	ee16 6a90 	vmov	r6, s13
 801655e:	9306      	str	r3, [sp, #24]
 8016560:	eef0 8a67 	vmov.f32	s17, s15
 8016564:	eeb0 8a47 	vmov.f32	s16, s14
 8016568:	e6e4      	b.n	8016334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801656a:	2900      	cmp	r1, #0
 801656c:	f43f af4e 	beq.w	801640c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8016570:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016574:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016578:	9309      	str	r3, [sp, #36]	; 0x24
 801657a:	e747      	b.n	801640c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801657c:	f112 0a01 	adds.w	sl, r2, #1
 8016580:	d481      	bmi.n	8016486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016582:	4553      	cmp	r3, sl
 8016584:	f6ff af7f 	blt.w	8016486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016588:	f11c 0a01 	adds.w	sl, ip, #1
 801658c:	f53f af7b 	bmi.w	8016486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016590:	45d6      	cmp	lr, sl
 8016592:	f6ff af78 	blt.w	8016486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016596:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801659a:	b21b      	sxth	r3, r3
 801659c:	fa0f f28e 	sxth.w	r2, lr
 80165a0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80165a4:	9201      	str	r2, [sp, #4]
 80165a6:	9300      	str	r3, [sp, #0]
 80165a8:	9a07      	ldr	r2, [sp, #28]
 80165aa:	9810      	ldr	r0, [sp, #64]	; 0x40
 80165ac:	463b      	mov	r3, r7
 80165ae:	4641      	mov	r1, r8
 80165b0:	f7ff fdfe 	bl	80161b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80165b4:	e767      	b.n	8016486 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80165b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80165b8:	9d07      	ldr	r5, [sp, #28]
 80165ba:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80165be:	1422      	asrs	r2, r4, #16
 80165c0:	1431      	asrs	r1, r6, #16
 80165c2:	fb03 2101 	mla	r1, r3, r1, r2
 80165c6:	9a07      	ldr	r2, [sp, #28]
 80165c8:	440a      	add	r2, r1
 80165ca:	5c69      	ldrb	r1, [r5, r1]
 80165cc:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80165d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80165d4:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80165d8:	f1be 0f00 	cmp.w	lr, #0
 80165dc:	d05c      	beq.n	8016698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80165de:	f892 c001 	ldrb.w	ip, [r2, #1]
 80165e2:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80165e6:	950d      	str	r5, [sp, #52]	; 0x34
 80165e8:	b150      	cbz	r0, 8016600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80165ea:	eb02 0c03 	add.w	ip, r2, r3
 80165ee:	5cd3      	ldrb	r3, [r2, r3]
 80165f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80165f4:	930a      	str	r3, [sp, #40]	; 0x28
 80165f6:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80165fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80165fe:	930e      	str	r3, [sp, #56]	; 0x38
 8016600:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016602:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016604:	fb1e f200 	smulbb	r2, lr, r0
 8016608:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801660c:	10d2      	asrs	r2, r2, #3
 801660e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016612:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016616:	ea4c 0c03 	orr.w	ip, ip, r3
 801661a:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801661e:	9311      	str	r3, [sp, #68]	; 0x44
 8016620:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016622:	041b      	lsls	r3, r3, #16
 8016624:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8016628:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801662c:	ea43 030b 	orr.w	r3, r3, fp
 8016630:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016632:	4353      	muls	r3, r2
 8016634:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016638:	fb05 3c0c 	mla	ip, r5, ip, r3
 801663c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016640:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016644:	ea43 0b01 	orr.w	fp, r3, r1
 8016648:	f1c0 0110 	rsb	r1, r0, #16
 801664c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801664e:	eba1 0e0e 	sub.w	lr, r1, lr
 8016652:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016656:	fb0e cc0b 	mla	ip, lr, fp, ip
 801665a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801665e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8016662:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016666:	ea4b 0e0e 	orr.w	lr, fp, lr
 801666a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801666e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016672:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016676:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801667a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801667e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016682:	ea43 0c0c 	orr.w	ip, r3, ip
 8016686:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016688:	f82a cb02 	strh.w	ip, [sl], #2
 801668c:	441c      	add	r4, r3
 801668e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016690:	f108 38ff 	add.w	r8, r8, #4294967295
 8016694:	441e      	add	r6, r3
 8016696:	e723      	b.n	80164e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016698:	2800      	cmp	r0, #0
 801669a:	d0b1      	beq.n	8016600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801669c:	5cd3      	ldrb	r3, [r2, r3]
 801669e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80166a2:	930a      	str	r3, [sp, #40]	; 0x28
 80166a4:	e7ac      	b.n	8016600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80166a6:	b013      	add	sp, #76	; 0x4c
 80166a8:	ecbd 8b0a 	vpop	{d8-d12}
 80166ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080166b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80166b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166b4:	468b      	mov	fp, r1
 80166b6:	8809      	ldrh	r1, [r1, #0]
 80166b8:	b089      	sub	sp, #36	; 0x24
 80166ba:	10cd      	asrs	r5, r1, #3
 80166bc:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80166c0:	ea4f 2921 	mov.w	r9, r1, asr #8
 80166c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80166c8:	00c9      	lsls	r1, r1, #3
 80166ca:	9500      	str	r5, [sp, #0]
 80166cc:	b2c9      	uxtb	r1, r1
 80166ce:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80166d2:	9101      	str	r1, [sp, #4]
 80166d4:	9900      	ldr	r1, [sp, #0]
 80166d6:	9202      	str	r2, [sp, #8]
 80166d8:	fb04 650e 	mla	r5, r4, lr, r6
 80166dc:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80166e0:	eb02 0805 	add.w	r8, r2, r5
 80166e4:	0209      	lsls	r1, r1, #8
 80166e6:	9a01      	ldr	r2, [sp, #4]
 80166e8:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80166ec:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80166f0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80166f4:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80166f8:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80166fc:	4311      	orrs	r1, r2
 80166fe:	2c00      	cmp	r4, #0
 8016700:	9107      	str	r1, [sp, #28]
 8016702:	db43      	blt.n	801678c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8016704:	45a2      	cmp	sl, r4
 8016706:	dd41      	ble.n	801678c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8016708:	2e00      	cmp	r6, #0
 801670a:	db3d      	blt.n	8016788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801670c:	45b6      	cmp	lr, r6
 801670e:	dd3b      	ble.n	8016788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8016710:	9a02      	ldr	r2, [sp, #8]
 8016712:	5d55      	ldrb	r5, [r2, r5]
 8016714:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016718:	441d      	add	r5, r3
 801671a:	1c72      	adds	r2, r6, #1
 801671c:	d439      	bmi.n	8016792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801671e:	4596      	cmp	lr, r2
 8016720:	dd37      	ble.n	8016792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8016722:	2f00      	cmp	r7, #0
 8016724:	d035      	beq.n	8016792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8016726:	f898 1001 	ldrb.w	r1, [r8, #1]
 801672a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801672e:	4419      	add	r1, r3
 8016730:	3401      	adds	r4, #1
 8016732:	d432      	bmi.n	801679a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8016734:	45a2      	cmp	sl, r4
 8016736:	dd30      	ble.n	801679a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8016738:	b378      	cbz	r0, 801679a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801673a:	2e00      	cmp	r6, #0
 801673c:	db2b      	blt.n	8016796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801673e:	45b6      	cmp	lr, r6
 8016740:	dd29      	ble.n	8016796 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8016742:	f818 400e 	ldrb.w	r4, [r8, lr]
 8016746:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801674a:	441c      	add	r4, r3
 801674c:	3601      	adds	r6, #1
 801674e:	d427      	bmi.n	80167a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016750:	45b6      	cmp	lr, r6
 8016752:	dd25      	ble.n	80167a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016754:	b327      	cbz	r7, 80167a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016756:	44c6      	add	lr, r8
 8016758:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801675c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016760:	4413      	add	r3, r2
 8016762:	782a      	ldrb	r2, [r5, #0]
 8016764:	9202      	str	r2, [sp, #8]
 8016766:	780a      	ldrb	r2, [r1, #0]
 8016768:	9203      	str	r2, [sp, #12]
 801676a:	7822      	ldrb	r2, [r4, #0]
 801676c:	9204      	str	r2, [sp, #16]
 801676e:	2f0f      	cmp	r7, #15
 8016770:	781a      	ldrb	r2, [r3, #0]
 8016772:	9205      	str	r2, [sp, #20]
 8016774:	d801      	bhi.n	801677a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8016776:	280f      	cmp	r0, #15
 8016778:	d914      	bls.n	80167a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801677a:	4b3f      	ldr	r3, [pc, #252]	; (8016878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801677c:	4a3f      	ldr	r2, [pc, #252]	; (801687c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801677e:	4840      	ldr	r0, [pc, #256]	; (8016880 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8016780:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8016784:	f006 fb08 	bl	801cd98 <__assert_func>
 8016788:	ad07      	add	r5, sp, #28
 801678a:	e7c6      	b.n	801671a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801678c:	a907      	add	r1, sp, #28
 801678e:	460d      	mov	r5, r1
 8016790:	e7ce      	b.n	8016730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8016792:	a907      	add	r1, sp, #28
 8016794:	e7cc      	b.n	8016730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8016796:	ac07      	add	r4, sp, #28
 8016798:	e7d8      	b.n	801674c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801679a:	ab07      	add	r3, sp, #28
 801679c:	461c      	mov	r4, r3
 801679e:	e7e0      	b.n	8016762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80167a0:	ab07      	add	r3, sp, #28
 80167a2:	e7de      	b.n	8016762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80167a4:	b2ba      	uxth	r2, r7
 80167a6:	b280      	uxth	r0, r0
 80167a8:	fb02 fa00 	mul.w	sl, r2, r0
 80167ac:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80167b0:	0112      	lsls	r2, r2, #4
 80167b2:	b280      	uxth	r0, r0
 80167b4:	f891 8002 	ldrb.w	r8, [r1, #2]
 80167b8:	7849      	ldrb	r1, [r1, #1]
 80167ba:	78ae      	ldrb	r6, [r5, #2]
 80167bc:	786d      	ldrb	r5, [r5, #1]
 80167be:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80167c2:	eba2 020a 	sub.w	r2, r2, sl
 80167c6:	b292      	uxth	r2, r2
 80167c8:	ebae 0e00 	sub.w	lr, lr, r0
 80167cc:	fa1f fe8e 	uxth.w	lr, lr
 80167d0:	4351      	muls	r1, r2
 80167d2:	fb02 f808 	mul.w	r8, r2, r8
 80167d6:	fb0e 8806 	mla	r8, lr, r6, r8
 80167da:	fb0e 1505 	mla	r5, lr, r5, r1
 80167de:	78a6      	ldrb	r6, [r4, #2]
 80167e0:	7861      	ldrb	r1, [r4, #1]
 80167e2:	fa1f f78c 	uxth.w	r7, ip
 80167e6:	fb00 8806 	mla	r8, r0, r6, r8
 80167ea:	fb00 5501 	mla	r5, r0, r1, r5
 80167ee:	789e      	ldrb	r6, [r3, #2]
 80167f0:	7859      	ldrb	r1, [r3, #1]
 80167f2:	9b00      	ldr	r3, [sp, #0]
 80167f4:	ea6f 0c0c 	mvn.w	ip, ip
 80167f8:	fa5f fc8c 	uxtb.w	ip, ip
 80167fc:	fb0a 5101 	mla	r1, sl, r1, r5
 8016800:	fb13 f50c 	smulbb	r5, r3, ip
 8016804:	9b03      	ldr	r3, [sp, #12]
 8016806:	435a      	muls	r2, r3
 8016808:	9b02      	ldr	r3, [sp, #8]
 801680a:	fb0e 2203 	mla	r2, lr, r3, r2
 801680e:	9b04      	ldr	r3, [sp, #16]
 8016810:	fb00 2003 	mla	r0, r0, r3, r2
 8016814:	9b05      	ldr	r3, [sp, #20]
 8016816:	fb0a 8606 	mla	r6, sl, r6, r8
 801681a:	fb19 f90c 	smulbb	r9, r9, ip
 801681e:	fb0a 0a03 	mla	sl, sl, r3, r0
 8016822:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016826:	9b01      	ldr	r3, [sp, #4]
 8016828:	fb06 9607 	mla	r6, r6, r7, r9
 801682c:	b2b6      	uxth	r6, r6
 801682e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8016832:	fb13 fc0c 	smulbb	ip, r3, ip
 8016836:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801683a:	fb01 5107 	mla	r1, r1, r7, r5
 801683e:	f106 0901 	add.w	r9, r6, #1
 8016842:	fb0a c707 	mla	r7, sl, r7, ip
 8016846:	b2bf      	uxth	r7, r7
 8016848:	b289      	uxth	r1, r1
 801684a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801684e:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8016852:	1c4d      	adds	r5, r1, #1
 8016854:	1c7e      	adds	r6, r7, #1
 8016856:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801685a:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801685e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016862:	0949      	lsrs	r1, r1, #5
 8016864:	ea46 0609 	orr.w	r6, r6, r9
 8016868:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801686c:	430e      	orrs	r6, r1
 801686e:	f8ab 6000 	strh.w	r6, [fp]
 8016872:	b009      	add	sp, #36	; 0x24
 8016874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016878:	08021456 	.word	0x08021456
 801687c:	08021a22 	.word	0x08021a22
 8016880:	080214da 	.word	0x080214da

08016884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016888:	ed2d 8b08 	vpush	{d8-d11}
 801688c:	b095      	sub	sp, #84	; 0x54
 801688e:	eeb0 aa40 	vmov.f32	s20, s0
 8016892:	9212      	str	r2, [sp, #72]	; 0x48
 8016894:	9309      	str	r3, [sp, #36]	; 0x24
 8016896:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016898:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801689c:	930f      	str	r3, [sp, #60]	; 0x3c
 801689e:	910e      	str	r1, [sp, #56]	; 0x38
 80168a0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80168a4:	9013      	str	r0, [sp, #76]	; 0x4c
 80168a6:	6850      	ldr	r0, [r2, #4]
 80168a8:	6812      	ldr	r2, [r2, #0]
 80168aa:	fb00 1303 	mla	r3, r0, r3, r1
 80168ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80168b2:	930a      	str	r3, [sp, #40]	; 0x28
 80168b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80168b6:	681b      	ldr	r3, [r3, #0]
 80168b8:	930d      	str	r3, [sp, #52]	; 0x34
 80168ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80168bc:	685c      	ldr	r4, [r3, #4]
 80168be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80168c0:	43db      	mvns	r3, r3
 80168c2:	b2db      	uxtb	r3, r3
 80168c4:	eef0 9a60 	vmov.f32	s19, s1
 80168c8:	eeb0 9a41 	vmov.f32	s18, s2
 80168cc:	eeb0 8a62 	vmov.f32	s16, s5
 80168d0:	eef0 8a43 	vmov.f32	s17, s6
 80168d4:	eef0 ba44 	vmov.f32	s23, s8
 80168d8:	eeb0 ba64 	vmov.f32	s22, s9
 80168dc:	eef0 aa45 	vmov.f32	s21, s10
 80168e0:	3404      	adds	r4, #4
 80168e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80168e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80168e6:	2b00      	cmp	r3, #0
 80168e8:	dc03      	bgt.n	80168f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80168ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80168ec:	2b00      	cmp	r3, #0
 80168ee:	f340 8255 	ble.w	8016d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80168f2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80168f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80168f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80168fc:	1e48      	subs	r0, r1, #1
 80168fe:	1e55      	subs	r5, r2, #1
 8016900:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016902:	2b00      	cmp	r3, #0
 8016904:	f340 80f9 	ble.w	8016afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016908:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801690a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801690c:	1436      	asrs	r6, r6, #16
 801690e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016912:	d406      	bmi.n	8016922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016914:	4286      	cmp	r6, r0
 8016916:	da04      	bge.n	8016922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016918:	2b00      	cmp	r3, #0
 801691a:	db02      	blt.n	8016922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801691c:	42ab      	cmp	r3, r5
 801691e:	f2c0 80ed 	blt.w	8016afc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8016922:	3601      	adds	r6, #1
 8016924:	f100 80da 	bmi.w	8016adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8016928:	42b1      	cmp	r1, r6
 801692a:	f2c0 80d7 	blt.w	8016adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801692e:	3301      	adds	r3, #1
 8016930:	f100 80d4 	bmi.w	8016adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8016934:	429a      	cmp	r2, r3
 8016936:	f2c0 80d1 	blt.w	8016adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801693a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801693c:	9311      	str	r3, [sp, #68]	; 0x44
 801693e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016940:	930c      	str	r3, [sp, #48]	; 0x30
 8016942:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016944:	2b00      	cmp	r3, #0
 8016946:	f340 80fa 	ble.w	8016b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801694a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801694c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801694e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016950:	68c6      	ldr	r6, [r0, #12]
 8016952:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8016954:	141d      	asrs	r5, r3, #16
 8016956:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801695a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801695c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801695e:	1400      	asrs	r0, r0, #16
 8016960:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016964:	6892      	ldr	r2, [r2, #8]
 8016966:	f100 813e 	bmi.w	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801696a:	1e57      	subs	r7, r2, #1
 801696c:	42b8      	cmp	r0, r7
 801696e:	f280 813a 	bge.w	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016972:	2d00      	cmp	r5, #0
 8016974:	f2c0 8137 	blt.w	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016978:	1e77      	subs	r7, r6, #1
 801697a:	42bd      	cmp	r5, r7
 801697c:	f280 8133 	bge.w	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8016980:	b212      	sxth	r2, r2
 8016982:	fb05 0002 	mla	r0, r5, r2, r0
 8016986:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016988:	f815 a000 	ldrb.w	sl, [r5, r0]
 801698c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8016990:	182e      	adds	r6, r5, r0
 8016992:	eb04 050a 	add.w	r5, r4, sl
 8016996:	2b00      	cmp	r3, #0
 8016998:	f000 8117 	beq.w	8016bca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801699c:	f896 c001 	ldrb.w	ip, [r6, #1]
 80169a0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80169a4:	44a4      	add	ip, r4
 80169a6:	2900      	cmp	r1, #0
 80169a8:	f000 8117 	beq.w	8016bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80169ac:	18b0      	adds	r0, r6, r2
 80169ae:	5cb2      	ldrb	r2, [r6, r2]
 80169b0:	7840      	ldrb	r0, [r0, #1]
 80169b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80169b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80169ba:	4422      	add	r2, r4
 80169bc:	4420      	add	r0, r4
 80169be:	b29b      	uxth	r3, r3
 80169c0:	b289      	uxth	r1, r1
 80169c2:	fb03 f901 	mul.w	r9, r3, r1
 80169c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80169ca:	011b      	lsls	r3, r3, #4
 80169cc:	b289      	uxth	r1, r1
 80169ce:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80169d2:	f895 b002 	ldrb.w	fp, [r5, #2]
 80169d6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80169d8:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80169dc:	f8b6 e000 	ldrh.w	lr, [r6]
 80169e0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80169e4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80169e8:	eba3 0309 	sub.w	r3, r3, r9
 80169ec:	b29b      	uxth	r3, r3
 80169ee:	eba8 0801 	sub.w	r8, r8, r1
 80169f2:	fa1f f888 	uxth.w	r8, r8
 80169f6:	435f      	muls	r7, r3
 80169f8:	fb08 770b 	mla	r7, r8, fp, r7
 80169fc:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016a00:	9310      	str	r3, [sp, #64]	; 0x40
 8016a02:	fb01 770b 	mla	r7, r1, fp, r7
 8016a06:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016a0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a0c:	fb09 770b 	mla	r7, r9, fp, r7
 8016a10:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8016a14:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016a18:	fb1b fb03 	smulbb	fp, fp, r3
 8016a1c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016a20:	fb07 b706 	mla	r7, r7, r6, fp
 8016a24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a26:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016a2a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016a2e:	f89c c000 	ldrb.w	ip, [ip]
 8016a32:	435d      	muls	r5, r3
 8016a34:	fb08 550b 	mla	r5, r8, fp, r5
 8016a38:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016a3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a3e:	fb01 550b 	mla	r5, r1, fp, r5
 8016a42:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016a46:	fb09 550b 	mla	r5, r9, fp, r5
 8016a4a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8016a4e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016a52:	fb1b fb03 	smulbb	fp, fp, r3
 8016a56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a58:	fb03 f30c 	mul.w	r3, r3, ip
 8016a5c:	f892 c000 	ldrb.w	ip, [r2]
 8016a60:	fb08 330a 	mla	r3, r8, sl, r3
 8016a64:	fb01 330c 	mla	r3, r1, ip, r3
 8016a68:	f890 c000 	ldrb.w	ip, [r0]
 8016a6c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a70:	fb09 3c0c 	mla	ip, r9, ip, r3
 8016a74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a76:	fa5f fe8e 	uxtb.w	lr, lr
 8016a7a:	b2bf      	uxth	r7, r7
 8016a7c:	fb1e fe03 	smulbb	lr, lr, r3
 8016a80:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016a84:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016a88:	fb05 b506 	mla	r5, r5, r6, fp
 8016a8c:	1c7b      	adds	r3, r7, #1
 8016a8e:	fb0c e606 	mla	r6, ip, r6, lr
 8016a92:	b2ad      	uxth	r5, r5
 8016a94:	b2b6      	uxth	r6, r6
 8016a96:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016a9a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8016a9e:	f105 0b01 	add.w	fp, r5, #1
 8016aa2:	1c77      	adds	r7, r6, #1
 8016aa4:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016aa8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016aac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016ab0:	096d      	lsrs	r5, r5, #5
 8016ab2:	431f      	orrs	r7, r3
 8016ab4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016ab8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016aba:	433d      	orrs	r5, r7
 8016abc:	801d      	strh	r5, [r3, #0]
 8016abe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016ac0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016ac2:	3302      	adds	r3, #2
 8016ac4:	930c      	str	r3, [sp, #48]	; 0x30
 8016ac6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016ac8:	4413      	add	r3, r2
 8016aca:	9327      	str	r3, [sp, #156]	; 0x9c
 8016acc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016ace:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016ad0:	4413      	add	r3, r2
 8016ad2:	9328      	str	r3, [sp, #160]	; 0xa0
 8016ad4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016ad6:	3b01      	subs	r3, #1
 8016ad8:	9311      	str	r3, [sp, #68]	; 0x44
 8016ada:	e732      	b.n	8016942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016adc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016ade:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8016ae0:	4433      	add	r3, r6
 8016ae2:	9327      	str	r3, [sp, #156]	; 0x9c
 8016ae4:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8016ae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016ae8:	4433      	add	r3, r6
 8016aea:	9328      	str	r3, [sp, #160]	; 0xa0
 8016aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016aee:	3b01      	subs	r3, #1
 8016af0:	9309      	str	r3, [sp, #36]	; 0x24
 8016af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016af4:	3302      	adds	r3, #2
 8016af6:	930a      	str	r3, [sp, #40]	; 0x28
 8016af8:	e702      	b.n	8016900 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016afa:	d027      	beq.n	8016b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016afc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016afe:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8016b00:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8016b02:	3b01      	subs	r3, #1
 8016b04:	fb00 5003 	mla	r0, r0, r3, r5
 8016b08:	1400      	asrs	r0, r0, #16
 8016b0a:	f53f af16 	bmi.w	801693a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016b0e:	3901      	subs	r1, #1
 8016b10:	4288      	cmp	r0, r1
 8016b12:	f6bf af12 	bge.w	801693a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016b16:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016b18:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016b1a:	fb01 0303 	mla	r3, r1, r3, r0
 8016b1e:	141b      	asrs	r3, r3, #16
 8016b20:	f53f af0b 	bmi.w	801693a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016b24:	3a01      	subs	r2, #1
 8016b26:	4293      	cmp	r3, r2
 8016b28:	f6bf af07 	bge.w	801693a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b2e:	9311      	str	r3, [sp, #68]	; 0x44
 8016b30:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8016b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b36:	930c      	str	r3, [sp, #48]	; 0x30
 8016b38:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016b3a:	2b00      	cmp	r3, #0
 8016b3c:	dc70      	bgt.n	8016c20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8016b3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016b42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016b4a:	930a      	str	r3, [sp, #40]	; 0x28
 8016b4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b4e:	2b00      	cmp	r3, #0
 8016b50:	f340 8124 	ble.w	8016d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8016b54:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016b58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b5c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016b60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016b62:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016b66:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016b6a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b6e:	eef0 6a48 	vmov.f32	s13, s16
 8016b72:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016b76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b7a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016b7e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8016b82:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016b86:	eef0 6a68 	vmov.f32	s13, s17
 8016b8a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016b8e:	ee18 2a10 	vmov	r2, s16
 8016b92:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b9a:	ee18 2a90 	vmov	r2, s17
 8016b9e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016ba0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ba6:	932a      	str	r3, [sp, #168]	; 0xa8
 8016ba8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016baa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016bac:	3b01      	subs	r3, #1
 8016bae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016bb2:	930e      	str	r3, [sp, #56]	; 0x38
 8016bb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016bb6:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8016bba:	bf08      	it	eq
 8016bbc:	4613      	moveq	r3, r2
 8016bbe:	9309      	str	r3, [sp, #36]	; 0x24
 8016bc0:	eef0 8a67 	vmov.f32	s17, s15
 8016bc4:	eeb0 8a47 	vmov.f32	s16, s14
 8016bc8:	e68c      	b.n	80168e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016bca:	b149      	cbz	r1, 8016be0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8016bcc:	5cb2      	ldrb	r2, [r6, r2]
 8016bce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016bd2:	4422      	add	r2, r4
 8016bd4:	4628      	mov	r0, r5
 8016bd6:	46ac      	mov	ip, r5
 8016bd8:	e6f1      	b.n	80169be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016bda:	4628      	mov	r0, r5
 8016bdc:	462a      	mov	r2, r5
 8016bde:	e6ee      	b.n	80169be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016be0:	4628      	mov	r0, r5
 8016be2:	462a      	mov	r2, r5
 8016be4:	e7f7      	b.n	8016bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8016be6:	1c47      	adds	r7, r0, #1
 8016be8:	f53f af69 	bmi.w	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bec:	42ba      	cmp	r2, r7
 8016bee:	f6ff af66 	blt.w	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bf2:	1c6f      	adds	r7, r5, #1
 8016bf4:	f53f af63 	bmi.w	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bf8:	42be      	cmp	r6, r7
 8016bfa:	f6ff af60 	blt.w	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bfe:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016c00:	9002      	str	r0, [sp, #8]
 8016c02:	b236      	sxth	r6, r6
 8016c04:	b212      	sxth	r2, r2
 8016c06:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8016c0a:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8016c0e:	9200      	str	r2, [sp, #0]
 8016c10:	9601      	str	r6, [sp, #4]
 8016c12:	4623      	mov	r3, r4
 8016c14:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8016c18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016c1a:	f7ff fd49 	bl	80166b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8016c1e:	e74e      	b.n	8016abe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016c20:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016c22:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016c24:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8016c26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016c28:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016c2c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016c2e:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016c32:	142d      	asrs	r5, r5, #16
 8016c34:	1400      	asrs	r0, r0, #16
 8016c36:	fb02 5000 	mla	r0, r2, r0, r5
 8016c3a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016c3c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8016c40:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016c44:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8016c48:	182e      	adds	r6, r5, r0
 8016c4a:	eb04 0509 	add.w	r5, r4, r9
 8016c4e:	2b00      	cmp	r3, #0
 8016c50:	f000 8096 	beq.w	8016d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8016c54:	7877      	ldrb	r7, [r6, #1]
 8016c56:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016c5a:	4427      	add	r7, r4
 8016c5c:	2900      	cmp	r1, #0
 8016c5e:	f000 8097 	beq.w	8016d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8016c62:	18b0      	adds	r0, r6, r2
 8016c64:	5cb2      	ldrb	r2, [r6, r2]
 8016c66:	7840      	ldrb	r0, [r0, #1]
 8016c68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016c6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016c70:	4422      	add	r2, r4
 8016c72:	4420      	add	r0, r4
 8016c74:	b29b      	uxth	r3, r3
 8016c76:	b289      	uxth	r1, r1
 8016c78:	fb03 f801 	mul.w	r8, r3, r1
 8016c7c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016c7e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016c82:	f8b6 c000 	ldrh.w	ip, [r6]
 8016c86:	78be      	ldrb	r6, [r7, #2]
 8016c88:	f814 9009 	ldrb.w	r9, [r4, r9]
 8016c8c:	011b      	lsls	r3, r3, #4
 8016c8e:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8016c92:	b289      	uxth	r1, r1
 8016c94:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016c98:	eba3 0308 	sub.w	r3, r3, r8
 8016c9c:	b29b      	uxth	r3, r3
 8016c9e:	ebae 0e01 	sub.w	lr, lr, r1
 8016ca2:	fa1f fe8e 	uxth.w	lr, lr
 8016ca6:	435e      	muls	r6, r3
 8016ca8:	fb0e 660b 	mla	r6, lr, fp, r6
 8016cac:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016cb0:	9310      	str	r3, [sp, #64]	; 0x40
 8016cb2:	fb01 660b 	mla	r6, r1, fp, r6
 8016cb6:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016cba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016cbc:	fb08 660b 	mla	r6, r8, fp, r6
 8016cc0:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8016cc4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016cc8:	fb1b fb03 	smulbb	fp, fp, r3
 8016ccc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016cd0:	fb06 b60a 	mla	r6, r6, sl, fp
 8016cd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016cd6:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016cda:	787d      	ldrb	r5, [r7, #1]
 8016cdc:	783f      	ldrb	r7, [r7, #0]
 8016cde:	435d      	muls	r5, r3
 8016ce0:	fb0e 550b 	mla	r5, lr, fp, r5
 8016ce4:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016ce8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016cea:	fb01 550b 	mla	r5, r1, fp, r5
 8016cee:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016cf2:	fb08 550b 	mla	r5, r8, fp, r5
 8016cf6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016cfa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016cfe:	fb1b fb03 	smulbb	fp, fp, r3
 8016d02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d04:	437b      	muls	r3, r7
 8016d06:	7817      	ldrb	r7, [r2, #0]
 8016d08:	fb0e 3309 	mla	r3, lr, r9, r3
 8016d0c:	fb01 3307 	mla	r3, r1, r7, r3
 8016d10:	7807      	ldrb	r7, [r0, #0]
 8016d12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d16:	fb08 3707 	mla	r7, r8, r7, r3
 8016d1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016d1c:	fa5f fc8c 	uxtb.w	ip, ip
 8016d20:	fb1c fc03 	smulbb	ip, ip, r3
 8016d24:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016d28:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016d2c:	fb05 b50a 	mla	r5, r5, sl, fp
 8016d30:	fb07 c70a 	mla	r7, r7, sl, ip
 8016d34:	b2b6      	uxth	r6, r6
 8016d36:	b2ad      	uxth	r5, r5
 8016d38:	b2bf      	uxth	r7, r7
 8016d3a:	1c73      	adds	r3, r6, #1
 8016d3c:	1c7a      	adds	r2, r7, #1
 8016d3e:	f105 0b01 	add.w	fp, r5, #1
 8016d42:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016d46:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8016d4a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016d4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016d52:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016d56:	096d      	lsrs	r5, r5, #5
 8016d58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016d5a:	4316      	orrs	r6, r2
 8016d5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016d60:	432e      	orrs	r6, r5
 8016d62:	f823 6b02 	strh.w	r6, [r3], #2
 8016d66:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016d68:	930c      	str	r3, [sp, #48]	; 0x30
 8016d6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016d6c:	4413      	add	r3, r2
 8016d6e:	9327      	str	r3, [sp, #156]	; 0x9c
 8016d70:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016d72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016d74:	4413      	add	r3, r2
 8016d76:	9328      	str	r3, [sp, #160]	; 0xa0
 8016d78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d7a:	3b01      	subs	r3, #1
 8016d7c:	9311      	str	r3, [sp, #68]	; 0x44
 8016d7e:	e6db      	b.n	8016b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8016d80:	b149      	cbz	r1, 8016d96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016d82:	5cb2      	ldrb	r2, [r6, r2]
 8016d84:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016d88:	4422      	add	r2, r4
 8016d8a:	4628      	mov	r0, r5
 8016d8c:	462f      	mov	r7, r5
 8016d8e:	e771      	b.n	8016c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016d90:	4628      	mov	r0, r5
 8016d92:	462a      	mov	r2, r5
 8016d94:	e76e      	b.n	8016c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8016d96:	4628      	mov	r0, r5
 8016d98:	462a      	mov	r2, r5
 8016d9a:	e7f7      	b.n	8016d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8016d9c:	b015      	add	sp, #84	; 0x54
 8016d9e:	ecbd 8b08 	vpop	{d8-d11}
 8016da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016dac:	880e      	ldrh	r6, [r1, #0]
 8016dae:	b085      	sub	sp, #20
 8016db0:	0230      	lsls	r0, r6, #8
 8016db2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8016db6:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8016dba:	0170      	lsls	r0, r6, #5
 8016dbc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016dc0:	9101      	str	r1, [sp, #4]
 8016dc2:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8016dc6:	00f6      	lsls	r6, r6, #3
 8016dc8:	ea4b 0000 	orr.w	r0, fp, r0
 8016dcc:	b2f6      	uxtb	r6, r6
 8016dce:	4691      	mov	r9, r2
 8016dd0:	fb05 7a0c 	mla	sl, r5, ip, r7
 8016dd4:	4306      	orrs	r6, r0
 8016dd6:	2d00      	cmp	r5, #0
 8016dd8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016ddc:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8016de0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8016de4:	9603      	str	r6, [sp, #12]
 8016de6:	eb09 0e0a 	add.w	lr, r9, sl
 8016dea:	db42      	blt.n	8016e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016dec:	45a8      	cmp	r8, r5
 8016dee:	dd40      	ble.n	8016e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8016df0:	2f00      	cmp	r7, #0
 8016df2:	db3c      	blt.n	8016e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016df4:	45bc      	cmp	ip, r7
 8016df6:	dd3a      	ble.n	8016e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8016df8:	f819 600a 	ldrb.w	r6, [r9, sl]
 8016dfc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016e00:	441e      	add	r6, r3
 8016e02:	1c78      	adds	r0, r7, #1
 8016e04:	d438      	bmi.n	8016e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016e06:	4584      	cmp	ip, r0
 8016e08:	dd36      	ble.n	8016e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016e0a:	b3aa      	cbz	r2, 8016e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8016e0c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016e10:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016e14:	4418      	add	r0, r3
 8016e16:	3501      	adds	r5, #1
 8016e18:	d432      	bmi.n	8016e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016e1a:	45a8      	cmp	r8, r5
 8016e1c:	dd30      	ble.n	8016e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016e1e:	b37c      	cbz	r4, 8016e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8016e20:	2f00      	cmp	r7, #0
 8016e22:	db2b      	blt.n	8016e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016e24:	45bc      	cmp	ip, r7
 8016e26:	dd29      	ble.n	8016e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8016e28:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8016e2c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016e30:	441d      	add	r5, r3
 8016e32:	3701      	adds	r7, #1
 8016e34:	d427      	bmi.n	8016e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016e36:	45bc      	cmp	ip, r7
 8016e38:	dd25      	ble.n	8016e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016e3a:	b322      	cbz	r2, 8016e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8016e3c:	44f4      	add	ip, lr
 8016e3e:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8016e42:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016e46:	443b      	add	r3, r7
 8016e48:	781f      	ldrb	r7, [r3, #0]
 8016e4a:	f896 9000 	ldrb.w	r9, [r6]
 8016e4e:	f890 a000 	ldrb.w	sl, [r0]
 8016e52:	f895 8000 	ldrb.w	r8, [r5]
 8016e56:	2a0f      	cmp	r2, #15
 8016e58:	4639      	mov	r1, r7
 8016e5a:	d801      	bhi.n	8016e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8016e5c:	2c0f      	cmp	r4, #15
 8016e5e:	d914      	bls.n	8016e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8016e60:	4b2c      	ldr	r3, [pc, #176]	; (8016f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8016e62:	4a2d      	ldr	r2, [pc, #180]	; (8016f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8016e64:	482d      	ldr	r0, [pc, #180]	; (8016f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8016e66:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8016e6a:	f005 ff95 	bl	801cd98 <__assert_func>
 8016e6e:	ae03      	add	r6, sp, #12
 8016e70:	e7c7      	b.n	8016e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8016e72:	a803      	add	r0, sp, #12
 8016e74:	4606      	mov	r6, r0
 8016e76:	e7ce      	b.n	8016e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016e78:	a803      	add	r0, sp, #12
 8016e7a:	e7cc      	b.n	8016e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8016e7c:	ad03      	add	r5, sp, #12
 8016e7e:	e7d8      	b.n	8016e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8016e80:	ab03      	add	r3, sp, #12
 8016e82:	461d      	mov	r5, r3
 8016e84:	e7e0      	b.n	8016e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016e86:	ab03      	add	r3, sp, #12
 8016e88:	e7de      	b.n	8016e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8016e8a:	b292      	uxth	r2, r2
 8016e8c:	b2a4      	uxth	r4, r4
 8016e8e:	fb02 fe04 	mul.w	lr, r2, r4
 8016e92:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8016e96:	0112      	lsls	r2, r2, #4
 8016e98:	b2a4      	uxth	r4, r4
 8016e9a:	f890 c002 	ldrb.w	ip, [r0, #2]
 8016e9e:	f896 b002 	ldrb.w	fp, [r6, #2]
 8016ea2:	7840      	ldrb	r0, [r0, #1]
 8016ea4:	7876      	ldrb	r6, [r6, #1]
 8016ea6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8016eaa:	eba2 020e 	sub.w	r2, r2, lr
 8016eae:	b292      	uxth	r2, r2
 8016eb0:	1b3f      	subs	r7, r7, r4
 8016eb2:	b2bf      	uxth	r7, r7
 8016eb4:	fb02 fc0c 	mul.w	ip, r2, ip
 8016eb8:	fb07 cc0b 	mla	ip, r7, fp, ip
 8016ebc:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016ec0:	fb04 cc0b 	mla	ip, r4, fp, ip
 8016ec4:	f893 b002 	ldrb.w	fp, [r3, #2]
 8016ec8:	785b      	ldrb	r3, [r3, #1]
 8016eca:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016ece:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8016ed2:	fb02 fc0a 	mul.w	ip, r2, sl
 8016ed6:	4342      	muls	r2, r0
 8016ed8:	7868      	ldrb	r0, [r5, #1]
 8016eda:	fb07 cc09 	mla	ip, r7, r9, ip
 8016ede:	fb07 2206 	mla	r2, r7, r6, r2
 8016ee2:	fb04 cc08 	mla	ip, r4, r8, ip
 8016ee6:	fb04 2400 	mla	r4, r4, r0, r2
 8016eea:	fb0e cc01 	mla	ip, lr, r1, ip
 8016eee:	fb0e 4e03 	mla	lr, lr, r3, r4
 8016ef2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016ef6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016efa:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016efe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016f02:	9b01      	ldr	r3, [sp, #4]
 8016f04:	ea4c 0c0e 	orr.w	ip, ip, lr
 8016f08:	f8a3 c000 	strh.w	ip, [r3]
 8016f0c:	b005      	add	sp, #20
 8016f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f12:	bf00      	nop
 8016f14:	08021456 	.word	0x08021456
 8016f18:	08021a22 	.word	0x08021a22
 8016f1c:	080214da 	.word	0x080214da

08016f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f24:	ed2d 8b08 	vpush	{d8-d11}
 8016f28:	b08f      	sub	sp, #60	; 0x3c
 8016f2a:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8016f2e:	920c      	str	r2, [sp, #48]	; 0x30
 8016f30:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016f32:	910a      	str	r1, [sp, #40]	; 0x28
 8016f34:	9306      	str	r3, [sp, #24]
 8016f36:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8016f3a:	900d      	str	r0, [sp, #52]	; 0x34
 8016f3c:	6850      	ldr	r0, [r2, #4]
 8016f3e:	6812      	ldr	r2, [r2, #0]
 8016f40:	fb00 1303 	mla	r3, r0, r3, r1
 8016f44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f48:	9307      	str	r3, [sp, #28]
 8016f4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016f4c:	681b      	ldr	r3, [r3, #0]
 8016f4e:	9308      	str	r3, [sp, #32]
 8016f50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016f52:	685c      	ldr	r4, [r3, #4]
 8016f54:	eeb0 aa40 	vmov.f32	s20, s0
 8016f58:	eef0 9a60 	vmov.f32	s19, s1
 8016f5c:	eeb0 9a41 	vmov.f32	s18, s2
 8016f60:	eeb0 8a62 	vmov.f32	s16, s5
 8016f64:	eef0 8a43 	vmov.f32	s17, s6
 8016f68:	eef0 ba44 	vmov.f32	s23, s8
 8016f6c:	eeb0 ba64 	vmov.f32	s22, s9
 8016f70:	eef0 aa45 	vmov.f32	s21, s10
 8016f74:	3404      	adds	r4, #4
 8016f76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016f78:	2b00      	cmp	r3, #0
 8016f7a:	dc03      	bgt.n	8016f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016f7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016f7e:	2b00      	cmp	r3, #0
 8016f80:	f340 81d6 	ble.w	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016f84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016f86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016f8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016f8e:	1e48      	subs	r0, r1, #1
 8016f90:	1e56      	subs	r6, r2, #1
 8016f92:	9b06      	ldr	r3, [sp, #24]
 8016f94:	2b00      	cmp	r3, #0
 8016f96:	f340 80b7 	ble.w	8017108 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016f9a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8016f9e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016fa2:	d406      	bmi.n	8016fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fa4:	4287      	cmp	r7, r0
 8016fa6:	da04      	bge.n	8016fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fa8:	2b00      	cmp	r3, #0
 8016faa:	db02      	blt.n	8016fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fac:	42b3      	cmp	r3, r6
 8016fae:	f2c0 80ac 	blt.w	801710a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016fb2:	3701      	adds	r7, #1
 8016fb4:	f100 809d 	bmi.w	80170f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016fb8:	42b9      	cmp	r1, r7
 8016fba:	f2c0 809a 	blt.w	80170f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016fbe:	3301      	adds	r3, #1
 8016fc0:	f100 8097 	bmi.w	80170f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016fc4:	429a      	cmp	r2, r3
 8016fc6:	f2c0 8094 	blt.w	80170f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016fca:	9b06      	ldr	r3, [sp, #24]
 8016fcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fce:	9b07      	ldr	r3, [sp, #28]
 8016fd0:	9309      	str	r3, [sp, #36]	; 0x24
 8016fd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016fd4:	2b00      	cmp	r3, #0
 8016fd6:	f340 80b5 	ble.w	8017144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016fda:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016fdc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016fde:	68c7      	ldr	r7, [r0, #12]
 8016fe0:	6892      	ldr	r2, [r2, #8]
 8016fe2:	ea5f 402b 	movs.w	r0, fp, asr #16
 8016fe6:	ea4f 4625 	mov.w	r6, r5, asr #16
 8016fea:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016fee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016ff2:	f100 80fb 	bmi.w	80171ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016ff6:	f102 3cff 	add.w	ip, r2, #4294967295
 8016ffa:	4560      	cmp	r0, ip
 8016ffc:	f280 80f6 	bge.w	80171ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017000:	2e00      	cmp	r6, #0
 8017002:	f2c0 80f3 	blt.w	80171ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017006:	f107 3cff 	add.w	ip, r7, #4294967295
 801700a:	4566      	cmp	r6, ip
 801700c:	f280 80ee 	bge.w	80171ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017010:	b212      	sxth	r2, r2
 8017012:	fb06 0002 	mla	r0, r6, r2, r0
 8017016:	9e08      	ldr	r6, [sp, #32]
 8017018:	1837      	adds	r7, r6, r0
 801701a:	5c30      	ldrb	r0, [r6, r0]
 801701c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8017020:	eb04 0c08 	add.w	ip, r4, r8
 8017024:	2b00      	cmp	r3, #0
 8017026:	f000 80d3 	beq.w	80171d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801702a:	787e      	ldrb	r6, [r7, #1]
 801702c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017030:	4426      	add	r6, r4
 8017032:	2900      	cmp	r1, #0
 8017034:	f000 80d4 	beq.w	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8017038:	18b8      	adds	r0, r7, r2
 801703a:	5cba      	ldrb	r2, [r7, r2]
 801703c:	7840      	ldrb	r0, [r0, #1]
 801703e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017042:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017046:	4422      	add	r2, r4
 8017048:	4420      	add	r0, r4
 801704a:	b29b      	uxth	r3, r3
 801704c:	b289      	uxth	r1, r1
 801704e:	fb03 f901 	mul.w	r9, r3, r1
 8017052:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017056:	011b      	lsls	r3, r3, #4
 8017058:	b289      	uxth	r1, r1
 801705a:	78b7      	ldrb	r7, [r6, #2]
 801705c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017060:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017064:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017068:	eba3 0309 	sub.w	r3, r3, r9
 801706c:	b29b      	uxth	r3, r3
 801706e:	ebae 0e01 	sub.w	lr, lr, r1
 8017072:	fa1f fe8e 	uxth.w	lr, lr
 8017076:	435f      	muls	r7, r3
 8017078:	fb0e 770a 	mla	r7, lr, sl, r7
 801707c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017080:	fb01 770a 	mla	r7, r1, sl, r7
 8017084:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017088:	fb09 7a0a 	mla	sl, r9, sl, r7
 801708c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017090:	f896 8000 	ldrb.w	r8, [r6]
 8017094:	7876      	ldrb	r6, [r6, #1]
 8017096:	fb03 f808 	mul.w	r8, r3, r8
 801709a:	fb0e 8807 	mla	r8, lr, r7, r8
 801709e:	7817      	ldrb	r7, [r2, #0]
 80170a0:	fb01 8807 	mla	r8, r1, r7, r8
 80170a4:	7807      	ldrb	r7, [r0, #0]
 80170a6:	fb09 8707 	mla	r7, r9, r7, r8
 80170aa:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80170ae:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80170b2:	ea47 070a 	orr.w	r7, r7, sl
 80170b6:	4373      	muls	r3, r6
 80170b8:	f892 a001 	ldrb.w	sl, [r2, #1]
 80170bc:	fb0e 330c 	mla	r3, lr, ip, r3
 80170c0:	fb01 310a 	mla	r1, r1, sl, r3
 80170c4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80170c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170ca:	fb09 1a0a 	mla	sl, r9, sl, r1
 80170ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80170d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80170d6:	ea47 070a 	orr.w	r7, r7, sl
 80170da:	801f      	strh	r7, [r3, #0]
 80170dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170de:	3302      	adds	r3, #2
 80170e0:	9309      	str	r3, [sp, #36]	; 0x24
 80170e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80170e4:	449b      	add	fp, r3
 80170e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80170e8:	441d      	add	r5, r3
 80170ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80170ec:	3b01      	subs	r3, #1
 80170ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80170f0:	e76f      	b.n	8016fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80170f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80170f4:	449b      	add	fp, r3
 80170f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80170f8:	441d      	add	r5, r3
 80170fa:	9b06      	ldr	r3, [sp, #24]
 80170fc:	3b01      	subs	r3, #1
 80170fe:	9306      	str	r3, [sp, #24]
 8017100:	9b07      	ldr	r3, [sp, #28]
 8017102:	3302      	adds	r3, #2
 8017104:	9307      	str	r3, [sp, #28]
 8017106:	e744      	b.n	8016f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017108:	d023      	beq.n	8017152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801710a:	9b06      	ldr	r3, [sp, #24]
 801710c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801710e:	3b01      	subs	r3, #1
 8017110:	fb00 b003 	mla	r0, r0, r3, fp
 8017114:	1400      	asrs	r0, r0, #16
 8017116:	f53f af58 	bmi.w	8016fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801711a:	3901      	subs	r1, #1
 801711c:	4288      	cmp	r0, r1
 801711e:	f6bf af54 	bge.w	8016fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017122:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017124:	fb01 5303 	mla	r3, r1, r3, r5
 8017128:	141b      	asrs	r3, r3, #16
 801712a:	f53f af4e 	bmi.w	8016fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801712e:	3a01      	subs	r2, #1
 8017130:	4293      	cmp	r3, r2
 8017132:	f6bf af4a 	bge.w	8016fca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017136:	9b06      	ldr	r3, [sp, #24]
 8017138:	9309      	str	r3, [sp, #36]	; 0x24
 801713a:	9b07      	ldr	r3, [sp, #28]
 801713c:	930b      	str	r3, [sp, #44]	; 0x2c
 801713e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017140:	2b00      	cmp	r3, #0
 8017142:	dc70      	bgt.n	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8017144:	9b06      	ldr	r3, [sp, #24]
 8017146:	9a07      	ldr	r2, [sp, #28]
 8017148:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801714c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017150:	9307      	str	r3, [sp, #28]
 8017152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017154:	2b00      	cmp	r3, #0
 8017156:	f340 80eb 	ble.w	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801715a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801715e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017162:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017166:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017168:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801716c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017170:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017174:	eef0 6a48 	vmov.f32	s13, s16
 8017178:	ee69 7a27 	vmul.f32	s15, s18, s15
 801717c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017180:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017184:	ee16 ba90 	vmov	fp, s13
 8017188:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801718c:	eef0 6a68 	vmov.f32	s13, s17
 8017190:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017194:	ee18 2a10 	vmov	r2, s16
 8017198:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801719c:	fb92 f3f3 	sdiv	r3, r2, r3
 80171a0:	ee18 2a90 	vmov	r2, s17
 80171a4:	9323      	str	r3, [sp, #140]	; 0x8c
 80171a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80171a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80171ac:	9324      	str	r3, [sp, #144]	; 0x90
 80171ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80171b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80171b2:	3b01      	subs	r3, #1
 80171b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171b8:	930a      	str	r3, [sp, #40]	; 0x28
 80171ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80171bc:	bf08      	it	eq
 80171be:	4613      	moveq	r3, r2
 80171c0:	ee16 5a90 	vmov	r5, s13
 80171c4:	9306      	str	r3, [sp, #24]
 80171c6:	eef0 8a67 	vmov.f32	s17, s15
 80171ca:	eeb0 8a47 	vmov.f32	s16, s14
 80171ce:	e6d2      	b.n	8016f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80171d0:	b149      	cbz	r1, 80171e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80171d2:	5cba      	ldrb	r2, [r7, r2]
 80171d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80171d8:	4422      	add	r2, r4
 80171da:	4660      	mov	r0, ip
 80171dc:	4666      	mov	r6, ip
 80171de:	e734      	b.n	801704a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80171e0:	4660      	mov	r0, ip
 80171e2:	4662      	mov	r2, ip
 80171e4:	e731      	b.n	801704a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80171e6:	4660      	mov	r0, ip
 80171e8:	4662      	mov	r2, ip
 80171ea:	e7f7      	b.n	80171dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80171ec:	f110 0c01 	adds.w	ip, r0, #1
 80171f0:	f53f af74 	bmi.w	80170dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80171f4:	4562      	cmp	r2, ip
 80171f6:	f6ff af71 	blt.w	80170dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80171fa:	f116 0c01 	adds.w	ip, r6, #1
 80171fe:	f53f af6d 	bmi.w	80170dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017202:	4567      	cmp	r7, ip
 8017204:	f6ff af6a 	blt.w	80170dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017208:	b23f      	sxth	r7, r7
 801720a:	b212      	sxth	r2, r2
 801720c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8017210:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017214:	9200      	str	r2, [sp, #0]
 8017216:	9701      	str	r7, [sp, #4]
 8017218:	4623      	mov	r3, r4
 801721a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801721e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017220:	f7ff fdc2 	bl	8016da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8017224:	e75a      	b.n	80170dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017226:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017228:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801722c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8017230:	1428      	asrs	r0, r5, #16
 8017232:	fb02 6000 	mla	r0, r2, r0, r6
 8017236:	9e08      	ldr	r6, [sp, #32]
 8017238:	f816 8000 	ldrb.w	r8, [r6, r0]
 801723c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017240:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017244:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017248:	1837      	adds	r7, r6, r0
 801724a:	eb04 0c08 	add.w	ip, r4, r8
 801724e:	2b00      	cmp	r3, #0
 8017250:	d060      	beq.n	8017314 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8017252:	787e      	ldrb	r6, [r7, #1]
 8017254:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017258:	4426      	add	r6, r4
 801725a:	2900      	cmp	r1, #0
 801725c:	d062      	beq.n	8017324 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801725e:	18b8      	adds	r0, r7, r2
 8017260:	5cba      	ldrb	r2, [r7, r2]
 8017262:	7840      	ldrb	r0, [r0, #1]
 8017264:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017268:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801726c:	4422      	add	r2, r4
 801726e:	4420      	add	r0, r4
 8017270:	b29b      	uxth	r3, r3
 8017272:	b289      	uxth	r1, r1
 8017274:	fb03 f901 	mul.w	r9, r3, r1
 8017278:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801727c:	011b      	lsls	r3, r3, #4
 801727e:	b289      	uxth	r1, r1
 8017280:	78b7      	ldrb	r7, [r6, #2]
 8017282:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017286:	f89c c001 	ldrb.w	ip, [ip, #1]
 801728a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801728e:	eba3 0309 	sub.w	r3, r3, r9
 8017292:	b29b      	uxth	r3, r3
 8017294:	ebae 0e01 	sub.w	lr, lr, r1
 8017298:	fa1f fe8e 	uxth.w	lr, lr
 801729c:	435f      	muls	r7, r3
 801729e:	fb0e 770a 	mla	r7, lr, sl, r7
 80172a2:	f892 a002 	ldrb.w	sl, [r2, #2]
 80172a6:	fb01 770a 	mla	r7, r1, sl, r7
 80172aa:	f890 a002 	ldrb.w	sl, [r0, #2]
 80172ae:	fb09 7a0a 	mla	sl, r9, sl, r7
 80172b2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80172b6:	f896 8000 	ldrb.w	r8, [r6]
 80172ba:	7876      	ldrb	r6, [r6, #1]
 80172bc:	fb03 f808 	mul.w	r8, r3, r8
 80172c0:	fb0e 8807 	mla	r8, lr, r7, r8
 80172c4:	7817      	ldrb	r7, [r2, #0]
 80172c6:	fb01 8807 	mla	r8, r1, r7, r8
 80172ca:	7807      	ldrb	r7, [r0, #0]
 80172cc:	fb09 8707 	mla	r7, r9, r7, r8
 80172d0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80172d4:	4373      	muls	r3, r6
 80172d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80172da:	7856      	ldrb	r6, [r2, #1]
 80172dc:	ea47 070a 	orr.w	r7, r7, sl
 80172e0:	fb0e 330c 	mla	r3, lr, ip, r3
 80172e4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80172e8:	fb01 3306 	mla	r3, r1, r6, r3
 80172ec:	fb09 3a0a 	mla	sl, r9, sl, r3
 80172f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80172f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80172f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80172fa:	ea47 070a 	orr.w	r7, r7, sl
 80172fe:	f823 7b02 	strh.w	r7, [r3], #2
 8017302:	930b      	str	r3, [sp, #44]	; 0x2c
 8017304:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017306:	449b      	add	fp, r3
 8017308:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801730a:	441d      	add	r5, r3
 801730c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801730e:	3b01      	subs	r3, #1
 8017310:	9309      	str	r3, [sp, #36]	; 0x24
 8017312:	e714      	b.n	801713e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8017314:	b149      	cbz	r1, 801732a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8017316:	5cba      	ldrb	r2, [r7, r2]
 8017318:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801731c:	4422      	add	r2, r4
 801731e:	4660      	mov	r0, ip
 8017320:	4666      	mov	r6, ip
 8017322:	e7a5      	b.n	8017270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8017324:	4660      	mov	r0, ip
 8017326:	4662      	mov	r2, ip
 8017328:	e7a2      	b.n	8017270 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801732a:	4660      	mov	r0, ip
 801732c:	4662      	mov	r2, ip
 801732e:	e7f7      	b.n	8017320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8017330:	b00f      	add	sp, #60	; 0x3c
 8017332:	ecbd 8b08 	vpop	{d8-d11}
 8017336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801733c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801733c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017340:	880e      	ldrh	r6, [r1, #0]
 8017342:	b085      	sub	sp, #20
 8017344:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8017348:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801734c:	4691      	mov	r9, r2
 801734e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017352:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017356:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801735a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801735e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8017362:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8017366:	9200      	str	r2, [sp, #0]
 8017368:	00f6      	lsls	r6, r6, #3
 801736a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801736e:	9201      	str	r2, [sp, #4]
 8017370:	2c00      	cmp	r4, #0
 8017372:	b2f2      	uxtb	r2, r6
 8017374:	fb04 560c 	mla	r6, r4, ip, r5
 8017378:	9202      	str	r2, [sp, #8]
 801737a:	eb09 0e06 	add.w	lr, r9, r6
 801737e:	db3e      	blt.n	80173fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8017380:	45a0      	cmp	r8, r4
 8017382:	dd3c      	ble.n	80173fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8017384:	2d00      	cmp	r5, #0
 8017386:	db38      	blt.n	80173fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8017388:	45ac      	cmp	ip, r5
 801738a:	dd36      	ble.n	80173fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801738c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8017390:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017394:	1c6e      	adds	r6, r5, #1
 8017396:	d435      	bmi.n	8017404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8017398:	45b4      	cmp	ip, r6
 801739a:	dd33      	ble.n	8017404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 801739c:	b3a0      	cbz	r0, 8017408 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801739e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80173a2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80173a6:	3401      	adds	r4, #1
 80173a8:	d432      	bmi.n	8017410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80173aa:	45a0      	cmp	r8, r4
 80173ac:	dd30      	ble.n	8017410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80173ae:	b397      	cbz	r7, 8017416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80173b0:	2d00      	cmp	r5, #0
 80173b2:	db2b      	blt.n	801740c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80173b4:	45ac      	cmp	ip, r5
 80173b6:	dd29      	ble.n	801740c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80173b8:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80173bc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80173c0:	3501      	adds	r5, #1
 80173c2:	d42b      	bmi.n	801741c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80173c4:	45ac      	cmp	ip, r5
 80173c6:	dd29      	ble.n	801741c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80173c8:	b350      	cbz	r0, 8017420 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 80173ca:	44f4      	add	ip, lr
 80173cc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80173d0:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80173d4:	280f      	cmp	r0, #15
 80173d6:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80173da:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80173de:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80173e2:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80173e6:	d801      	bhi.n	80173ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 80173e8:	2f0f      	cmp	r7, #15
 80173ea:	d91b      	bls.n	8017424 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 80173ec:	4b84      	ldr	r3, [pc, #528]	; (8017600 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80173ee:	4a85      	ldr	r2, [pc, #532]	; (8017604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 80173f0:	4885      	ldr	r0, [pc, #532]	; (8017608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 80173f2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 80173f6:	f005 fccf 	bl	801cd98 <__assert_func>
 80173fa:	2200      	movs	r2, #0
 80173fc:	e7ca      	b.n	8017394 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 80173fe:	2600      	movs	r6, #0
 8017400:	4632      	mov	r2, r6
 8017402:	e7d0      	b.n	80173a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8017404:	2600      	movs	r6, #0
 8017406:	e7ce      	b.n	80173a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8017408:	4606      	mov	r6, r0
 801740a:	e7cc      	b.n	80173a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 801740c:	2400      	movs	r4, #0
 801740e:	e7d7      	b.n	80173c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8017410:	2300      	movs	r3, #0
 8017412:	461c      	mov	r4, r3
 8017414:	e7de      	b.n	80173d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8017416:	463b      	mov	r3, r7
 8017418:	463c      	mov	r4, r7
 801741a:	e7db      	b.n	80173d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 801741c:	2300      	movs	r3, #0
 801741e:	e7d9      	b.n	80173d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8017420:	4603      	mov	r3, r0
 8017422:	e7d7      	b.n	80173d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8017424:	b280      	uxth	r0, r0
 8017426:	b2bf      	uxth	r7, r7
 8017428:	fb00 fe07 	mul.w	lr, r0, r7
 801742c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017430:	0100      	lsls	r0, r0, #4
 8017432:	eba0 0c0e 	sub.w	ip, r0, lr
 8017436:	b2bf      	uxth	r7, r7
 8017438:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801743c:	fa1f fc8c 	uxth.w	ip, ip
 8017440:	1bed      	subs	r5, r5, r7
 8017442:	b2ad      	uxth	r5, r5
 8017444:	fb0c f00a 	mul.w	r0, ip, sl
 8017448:	fb05 000b 	mla	r0, r5, fp, r0
 801744c:	fb07 0009 	mla	r0, r7, r9, r0
 8017450:	fb0e 0008 	mla	r0, lr, r8, r0
 8017454:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017458:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801745c:	9003      	str	r0, [sp, #12]
 801745e:	d018      	beq.n	8017492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8017460:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017464:	fb0b f000 	mul.w	r0, fp, r0
 8017468:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801746c:	fb0b fb02 	mul.w	fp, fp, r2
 8017470:	0a02      	lsrs	r2, r0, #8
 8017472:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017476:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801747a:	4402      	add	r2, r0
 801747c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017480:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017484:	0a12      	lsrs	r2, r2, #8
 8017486:	0a00      	lsrs	r0, r0, #8
 8017488:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801748c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017490:	4302      	orrs	r2, r0
 8017492:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017496:	d019      	beq.n	80174cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8017498:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801749c:	fb0a fb0b 	mul.w	fp, sl, fp
 80174a0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80174a4:	fb0a fa06 	mul.w	sl, sl, r6
 80174a8:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80174ac:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80174b0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80174b4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80174b8:	445e      	add	r6, fp
 80174ba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80174be:	0a36      	lsrs	r6, r6, #8
 80174c0:	0a00      	lsrs	r0, r0, #8
 80174c2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80174c6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80174ca:	4306      	orrs	r6, r0
 80174cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80174d0:	d019      	beq.n	8017506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 80174d2:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80174d6:	fb09 fa0a 	mul.w	sl, r9, sl
 80174da:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80174de:	fb09 f904 	mul.w	r9, r9, r4
 80174e2:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80174e6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80174ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80174ee:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80174f2:	4454      	add	r4, sl
 80174f4:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80174f8:	0a24      	lsrs	r4, r4, #8
 80174fa:	0a00      	lsrs	r0, r0, #8
 80174fc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017500:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017504:	4304      	orrs	r4, r0
 8017506:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801750a:	d019      	beq.n	8017540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 801750c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017510:	fb08 f909 	mul.w	r9, r8, r9
 8017514:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017518:	fb08 f803 	mul.w	r8, r8, r3
 801751c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017520:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017524:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017528:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801752c:	444b      	add	r3, r9
 801752e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017532:	0a1b      	lsrs	r3, r3, #8
 8017534:	0a00      	lsrs	r0, r0, #8
 8017536:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801753a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801753e:	4303      	orrs	r3, r0
 8017540:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017544:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017548:	fb0c f808 	mul.w	r8, ip, r8
 801754c:	fb05 8800 	mla	r8, r5, r0, r8
 8017550:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017554:	fb07 8800 	mla	r8, r7, r0, r8
 8017558:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801755c:	fb0e 8000 	mla	r0, lr, r0, r8
 8017560:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017564:	fb0c f606 	mul.w	r6, ip, r6
 8017568:	0a00      	lsrs	r0, r0, #8
 801756a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801756e:	fb05 6202 	mla	r2, r5, r2, r6
 8017572:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017576:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801757a:	fb07 2700 	mla	r7, r7, r0, r2
 801757e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017582:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8017586:	9c03      	ldr	r4, [sp, #12]
 8017588:	9e01      	ldr	r6, [sp, #4]
 801758a:	b29b      	uxth	r3, r3
 801758c:	435c      	muls	r4, r3
 801758e:	fb0e 7000 	mla	r0, lr, r0, r7
 8017592:	1c62      	adds	r2, r4, #1
 8017594:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017598:	0a00      	lsrs	r0, r0, #8
 801759a:	9c00      	ldr	r4, [sp, #0]
 801759c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80175a0:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80175a4:	ea48 0000 	orr.w	r0, r8, r0
 80175a8:	b2d2      	uxtb	r2, r2
 80175aa:	fb14 f402 	smulbb	r4, r4, r2
 80175ae:	0c05      	lsrs	r5, r0, #16
 80175b0:	fb05 4503 	mla	r5, r5, r3, r4
 80175b4:	fb16 f602 	smulbb	r6, r6, r2
 80175b8:	f3c0 2407 	ubfx	r4, r0, #8, #8
 80175bc:	fb04 6403 	mla	r4, r4, r3, r6
 80175c0:	9e02      	ldr	r6, [sp, #8]
 80175c2:	b2c0      	uxtb	r0, r0
 80175c4:	fb16 f202 	smulbb	r2, r6, r2
 80175c8:	fb00 2303 	mla	r3, r0, r3, r2
 80175cc:	b2ad      	uxth	r5, r5
 80175ce:	b298      	uxth	r0, r3
 80175d0:	1c43      	adds	r3, r0, #1
 80175d2:	1c6a      	adds	r2, r5, #1
 80175d4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80175d8:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80175dc:	b2a4      	uxth	r4, r4
 80175de:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80175e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80175e6:	4313      	orrs	r3, r2
 80175e8:	1c62      	adds	r2, r4, #1
 80175ea:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80175ee:	0952      	lsrs	r2, r2, #5
 80175f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175f4:	4313      	orrs	r3, r2
 80175f6:	800b      	strh	r3, [r1, #0]
 80175f8:	b005      	add	sp, #20
 80175fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175fe:	bf00      	nop
 8017600:	08021456 	.word	0x08021456
 8017604:	08021a22 	.word	0x08021a22
 8017608:	080214da 	.word	0x080214da

0801760c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801760c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017610:	ed2d 8b08 	vpush	{d8-d11}
 8017614:	b09f      	sub	sp, #124	; 0x7c
 8017616:	eeb0 aa40 	vmov.f32	s20, s0
 801761a:	921b      	str	r2, [sp, #108]	; 0x6c
 801761c:	9309      	str	r3, [sp, #36]	; 0x24
 801761e:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8017620:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8017624:	931c      	str	r3, [sp, #112]	; 0x70
 8017626:	9119      	str	r1, [sp, #100]	; 0x64
 8017628:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801762c:	901d      	str	r0, [sp, #116]	; 0x74
 801762e:	6850      	ldr	r0, [r2, #4]
 8017630:	6812      	ldr	r2, [r2, #0]
 8017632:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8017634:	fb00 1303 	mla	r3, r0, r3, r1
 8017638:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801763c:	930c      	str	r3, [sp, #48]	; 0x30
 801763e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017640:	681b      	ldr	r3, [r3, #0]
 8017642:	9312      	str	r3, [sp, #72]	; 0x48
 8017644:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017646:	685e      	ldr	r6, [r3, #4]
 8017648:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801764c:	930d      	str	r3, [sp, #52]	; 0x34
 801764e:	eef0 9a60 	vmov.f32	s19, s1
 8017652:	eeb0 9a41 	vmov.f32	s18, s2
 8017656:	eeb0 8a62 	vmov.f32	s16, s5
 801765a:	eef0 8a43 	vmov.f32	s17, s6
 801765e:	eef0 ba44 	vmov.f32	s23, s8
 8017662:	eeb0 ba64 	vmov.f32	s22, s9
 8017666:	eef0 aa45 	vmov.f32	s21, s10
 801766a:	3604      	adds	r6, #4
 801766c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801766e:	2b00      	cmp	r3, #0
 8017670:	dc03      	bgt.n	801767a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017672:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017674:	2b00      	cmp	r3, #0
 8017676:	f340 8388 	ble.w	8017d8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801767a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801767c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017680:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017684:	1e48      	subs	r0, r1, #1
 8017686:	1e57      	subs	r7, r2, #1
 8017688:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801768a:	2b00      	cmp	r3, #0
 801768c:	f340 8195 	ble.w	80179ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8017690:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8017692:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017696:	ea4f 4325 	mov.w	r3, r5, asr #16
 801769a:	d406      	bmi.n	80176aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801769c:	4584      	cmp	ip, r0
 801769e:	da04      	bge.n	80176aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80176a0:	2b00      	cmp	r3, #0
 80176a2:	db02      	blt.n	80176aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80176a4:	42bb      	cmp	r3, r7
 80176a6:	f2c0 8189 	blt.w	80179bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80176aa:	f11c 0c01 	adds.w	ip, ip, #1
 80176ae:	f100 8177 	bmi.w	80179a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80176b2:	4561      	cmp	r1, ip
 80176b4:	f2c0 8174 	blt.w	80179a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80176b8:	3301      	adds	r3, #1
 80176ba:	f100 8171 	bmi.w	80179a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80176be:	429a      	cmp	r2, r3
 80176c0:	f2c0 816e 	blt.w	80179a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80176c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80176c6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80176c8:	931a      	str	r3, [sp, #104]	; 0x68
 80176ca:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80176cc:	2b00      	cmp	r3, #0
 80176ce:	f340 8193 	ble.w	80179f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80176d2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80176d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80176d8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80176da:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80176de:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80176e0:	141b      	asrs	r3, r3, #16
 80176e2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80176e6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80176ea:	f100 81d6 	bmi.w	8017a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80176ee:	f100 38ff 	add.w	r8, r0, #4294967295
 80176f2:	4543      	cmp	r3, r8
 80176f4:	f280 81d1 	bge.w	8017a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80176f8:	f1bc 0f00 	cmp.w	ip, #0
 80176fc:	f2c0 81cd 	blt.w	8017a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8017700:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017704:	45c4      	cmp	ip, r8
 8017706:	f280 81c8 	bge.w	8017a9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801770a:	b200      	sxth	r0, r0
 801770c:	fb0c 3300 	mla	r3, ip, r0, r3
 8017710:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017712:	eb04 0803 	add.w	r8, r4, r3
 8017716:	5ce3      	ldrb	r3, [r4, r3]
 8017718:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801771c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017720:	2a00      	cmp	r2, #0
 8017722:	f000 81af 	beq.w	8017a84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017726:	f898 c001 	ldrb.w	ip, [r8, #1]
 801772a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801772e:	940e      	str	r4, [sp, #56]	; 0x38
 8017730:	0e24      	lsrs	r4, r4, #24
 8017732:	9415      	str	r4, [sp, #84]	; 0x54
 8017734:	b179      	cbz	r1, 8017756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017736:	eb08 0c00 	add.w	ip, r8, r0
 801773a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801773e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017742:	900a      	str	r0, [sp, #40]	; 0x28
 8017744:	0e00      	lsrs	r0, r0, #24
 8017746:	9013      	str	r0, [sp, #76]	; 0x4c
 8017748:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801774c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017750:	900f      	str	r0, [sp, #60]	; 0x3c
 8017752:	0e00      	lsrs	r0, r0, #24
 8017754:	9016      	str	r0, [sp, #88]	; 0x58
 8017756:	b292      	uxth	r2, r2
 8017758:	b289      	uxth	r1, r1
 801775a:	fb02 f901 	mul.w	r9, r2, r1
 801775e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017762:	0112      	lsls	r2, r2, #4
 8017764:	eba2 0809 	sub.w	r8, r2, r9
 8017768:	b289      	uxth	r1, r1
 801776a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801776e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017770:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017772:	fa1f f888 	uxth.w	r8, r8
 8017776:	1a52      	subs	r2, r2, r1
 8017778:	b292      	uxth	r2, r2
 801777a:	fb08 f000 	mul.w	r0, r8, r0
 801777e:	fb02 000e 	mla	r0, r2, lr, r0
 8017782:	fb01 0004 	mla	r0, r1, r4, r0
 8017786:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017788:	fb09 0004 	mla	r0, r9, r4, r0
 801778c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017790:	2800      	cmp	r0, #0
 8017792:	f000 80fa 	beq.w	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017796:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801779a:	d01b      	beq.n	80177d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801779c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80177a0:	fb0e fa0a 	mul.w	sl, lr, sl
 80177a4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80177a8:	fb0e fe03 	mul.w	lr, lr, r3
 80177ac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80177b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177b4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80177b8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80177bc:	4453      	add	r3, sl
 80177be:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80177c2:	0a1b      	lsrs	r3, r3, #8
 80177c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177cc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80177d0:	ea43 030c 	orr.w	r3, r3, ip
 80177d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80177d6:	2cff      	cmp	r4, #255	; 0xff
 80177d8:	d021      	beq.n	801781e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80177da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80177dc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80177e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80177e2:	fb04 fb0b 	mul.w	fp, r4, fp
 80177e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80177e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80177ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80177ee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80177f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80177f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80177fa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80177fe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017802:	44de      	add	lr, fp
 8017804:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017808:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801780c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017810:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017814:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017818:	ea4e 040a 	orr.w	r4, lr, sl
 801781c:	940e      	str	r4, [sp, #56]	; 0x38
 801781e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017820:	2cff      	cmp	r4, #255	; 0xff
 8017822:	d021      	beq.n	8017868 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8017824:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017826:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801782a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801782c:	fb04 fb0b 	mul.w	fp, r4, fp
 8017830:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017832:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017836:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017838:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801783c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017840:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017844:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017848:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801784c:	44de      	add	lr, fp
 801784e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017852:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017856:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801785a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801785e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017862:	ea4e 040a 	orr.w	r4, lr, sl
 8017866:	940a      	str	r4, [sp, #40]	; 0x28
 8017868:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801786a:	2cff      	cmp	r4, #255	; 0xff
 801786c:	d021      	beq.n	80178b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801786e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017870:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017874:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017876:	fb04 fb0b 	mul.w	fp, r4, fp
 801787a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801787c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017880:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017882:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017886:	fb04 fa0a 	mul.w	sl, r4, sl
 801788a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801788e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017892:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017896:	44de      	add	lr, fp
 8017898:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801789c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80178a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80178a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80178ac:	ea4e 040a 	orr.w	r4, lr, sl
 80178b0:	940f      	str	r4, [sp, #60]	; 0x3c
 80178b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178b4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80178b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80178ba:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80178be:	fb08 fc0c 	mul.w	ip, r8, ip
 80178c2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80178c6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80178ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80178cc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80178d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80178d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178d6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80178da:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80178de:	fb08 f80e 	mul.w	r8, r8, lr
 80178e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80178e6:	fb02 8303 	mla	r3, r2, r3, r8
 80178ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80178ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80178ee:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80178f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80178f4:	fb01 330a 	mla	r3, r1, sl, r3
 80178f8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80178fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80178fe:	fb09 3901 	mla	r9, r9, r1, r3
 8017902:	4342      	muls	r2, r0
 8017904:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017908:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801790c:	883b      	ldrh	r3, [r7, #0]
 801790e:	1c50      	adds	r0, r2, #1
 8017910:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017914:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017918:	ea4c 0c09 	orr.w	ip, ip, r9
 801791c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017920:	1219      	asrs	r1, r3, #8
 8017922:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017926:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801792a:	b2c0      	uxtb	r0, r0
 801792c:	fb12 f204 	smulbb	r2, r2, r4
 8017930:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017934:	fb01 2100 	mla	r1, r1, r0, r2
 8017938:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801793c:	10da      	asrs	r2, r3, #3
 801793e:	fa5f fc8c 	uxtb.w	ip, ip
 8017942:	00db      	lsls	r3, r3, #3
 8017944:	fb1c fc04 	smulbb	ip, ip, r4
 8017948:	b2db      	uxtb	r3, r3
 801794a:	b289      	uxth	r1, r1
 801794c:	fb03 c300 	mla	r3, r3, r0, ip
 8017950:	fa1f fc83 	uxth.w	ip, r3
 8017954:	1c4b      	adds	r3, r1, #1
 8017956:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801795a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801795e:	fb1e fe04 	smulbb	lr, lr, r4
 8017962:	f10c 0301 	add.w	r3, ip, #1
 8017966:	fb02 e200 	mla	r2, r2, r0, lr
 801796a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801796e:	b292      	uxth	r2, r2
 8017970:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017974:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017978:	430b      	orrs	r3, r1
 801797a:	1c51      	adds	r1, r2, #1
 801797c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017980:	0952      	lsrs	r2, r2, #5
 8017982:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017986:	4313      	orrs	r3, r2
 8017988:	803b      	strh	r3, [r7, #0]
 801798a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801798c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801798e:	441a      	add	r2, r3
 8017990:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017992:	9231      	str	r2, [sp, #196]	; 0xc4
 8017994:	441d      	add	r5, r3
 8017996:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017998:	3b01      	subs	r3, #1
 801799a:	3702      	adds	r7, #2
 801799c:	931a      	str	r3, [sp, #104]	; 0x68
 801799e:	e694      	b.n	80176ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80179a0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80179a2:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80179a4:	441c      	add	r4, r3
 80179a6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80179a8:	9431      	str	r4, [sp, #196]	; 0xc4
 80179aa:	441d      	add	r5, r3
 80179ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80179ae:	3b01      	subs	r3, #1
 80179b0:	9309      	str	r3, [sp, #36]	; 0x24
 80179b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80179b4:	3302      	adds	r3, #2
 80179b6:	930c      	str	r3, [sp, #48]	; 0x30
 80179b8:	e666      	b.n	8017688 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80179ba:	d024      	beq.n	8017a06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 80179bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80179be:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80179c0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80179c2:	3b01      	subs	r3, #1
 80179c4:	fb00 4003 	mla	r0, r0, r3, r4
 80179c8:	1400      	asrs	r0, r0, #16
 80179ca:	f53f ae7b 	bmi.w	80176c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80179ce:	3901      	subs	r1, #1
 80179d0:	4288      	cmp	r0, r1
 80179d2:	f6bf ae77 	bge.w	80176c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80179d6:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80179d8:	fb01 5303 	mla	r3, r1, r3, r5
 80179dc:	141b      	asrs	r3, r3, #16
 80179de:	f53f ae71 	bmi.w	80176c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80179e2:	3a01      	subs	r2, #1
 80179e4:	4293      	cmp	r3, r2
 80179e6:	f6bf ae6d 	bge.w	80176c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80179ea:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80179ee:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80179f2:	f1bb 0f00 	cmp.w	fp, #0
 80179f6:	dc70      	bgt.n	8017ada <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80179f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80179fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80179fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017a00:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017a04:	930c      	str	r3, [sp, #48]	; 0x30
 8017a06:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017a08:	2b00      	cmp	r3, #0
 8017a0a:	f340 81be 	ble.w	8017d8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8017a0e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017a12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017a16:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017a1a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a1c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017a20:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017a24:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017a28:	eef0 6a48 	vmov.f32	s13, s16
 8017a2c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017a30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017a34:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017a38:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8017a3c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017a40:	eef0 6a68 	vmov.f32	s13, s17
 8017a44:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017a48:	ee18 2a10 	vmov	r2, s16
 8017a4c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017a50:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a54:	ee18 2a90 	vmov	r2, s17
 8017a58:	9333      	str	r3, [sp, #204]	; 0xcc
 8017a5a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a60:	9334      	str	r3, [sp, #208]	; 0xd0
 8017a62:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017a64:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8017a66:	3b01      	subs	r3, #1
 8017a68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017a6c:	9319      	str	r3, [sp, #100]	; 0x64
 8017a6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a70:	bf08      	it	eq
 8017a72:	4613      	moveq	r3, r2
 8017a74:	ee16 5a90 	vmov	r5, s13
 8017a78:	9309      	str	r3, [sp, #36]	; 0x24
 8017a7a:	eef0 8a67 	vmov.f32	s17, s15
 8017a7e:	eeb0 8a47 	vmov.f32	s16, s14
 8017a82:	e5f3      	b.n	801766c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017a84:	2900      	cmp	r1, #0
 8017a86:	f43f ae66 	beq.w	8017756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017a8a:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017a8e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017a92:	900a      	str	r0, [sp, #40]	; 0x28
 8017a94:	0e00      	lsrs	r0, r0, #24
 8017a96:	9013      	str	r0, [sp, #76]	; 0x4c
 8017a98:	e65d      	b.n	8017756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017a9a:	f113 0801 	adds.w	r8, r3, #1
 8017a9e:	f53f af74 	bmi.w	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017aa2:	4540      	cmp	r0, r8
 8017aa4:	f6ff af71 	blt.w	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017aa8:	f11c 0801 	adds.w	r8, ip, #1
 8017aac:	f53f af6d 	bmi.w	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017ab0:	45c6      	cmp	lr, r8
 8017ab2:	f6ff af6a 	blt.w	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017ab6:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8017ab8:	9302      	str	r3, [sp, #8]
 8017aba:	b200      	sxth	r0, r0
 8017abc:	fa0f f38e 	sxth.w	r3, lr
 8017ac0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017ac4:	e9cd c203 	strd	ip, r2, [sp, #12]
 8017ac8:	9301      	str	r3, [sp, #4]
 8017aca:	9000      	str	r0, [sp, #0]
 8017acc:	4633      	mov	r3, r6
 8017ace:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017ad0:	981d      	ldr	r0, [sp, #116]	; 0x74
 8017ad2:	4639      	mov	r1, r7
 8017ad4:	f7ff fc32 	bl	801733c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8017ad8:	e757      	b.n	801798a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8017ada:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017adc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8017ade:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017ae2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017ae4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ae8:	1427      	asrs	r7, r4, #16
 8017aea:	142b      	asrs	r3, r5, #16
 8017aec:	fb01 7303 	mla	r3, r1, r3, r7
 8017af0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017af2:	18e7      	adds	r7, r4, r3
 8017af4:	5ce3      	ldrb	r3, [r4, r3]
 8017af6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017afa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017afe:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017b02:	2a00      	cmp	r2, #0
 8017b04:	f000 8137 	beq.w	8017d76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8017b08:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017b0c:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017b10:	9410      	str	r4, [sp, #64]	; 0x40
 8017b12:	0e24      	lsrs	r4, r4, #24
 8017b14:	9417      	str	r4, [sp, #92]	; 0x5c
 8017b16:	b170      	cbz	r0, 8017b36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017b18:	eb07 0e01 	add.w	lr, r7, r1
 8017b1c:	5c79      	ldrb	r1, [r7, r1]
 8017b1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017b22:	910b      	str	r1, [sp, #44]	; 0x2c
 8017b24:	0e09      	lsrs	r1, r1, #24
 8017b26:	9114      	str	r1, [sp, #80]	; 0x50
 8017b28:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017b2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017b30:	9111      	str	r1, [sp, #68]	; 0x44
 8017b32:	0e09      	lsrs	r1, r1, #24
 8017b34:	9118      	str	r1, [sp, #96]	; 0x60
 8017b36:	b292      	uxth	r2, r2
 8017b38:	b280      	uxth	r0, r0
 8017b3a:	fb02 f800 	mul.w	r8, r2, r0
 8017b3e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017b42:	0112      	lsls	r2, r2, #4
 8017b44:	eba2 0e08 	sub.w	lr, r2, r8
 8017b48:	b280      	uxth	r0, r0
 8017b4a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017b4e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017b50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017b52:	fa1f fe8e 	uxth.w	lr, lr
 8017b56:	1a12      	subs	r2, r2, r0
 8017b58:	b292      	uxth	r2, r2
 8017b5a:	fb0e f101 	mul.w	r1, lr, r1
 8017b5e:	fb02 110c 	mla	r1, r2, ip, r1
 8017b62:	fb00 1104 	mla	r1, r0, r4, r1
 8017b66:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017b68:	fb08 1104 	mla	r1, r8, r4, r1
 8017b6c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017b70:	2900      	cmp	r1, #0
 8017b72:	f000 80f5 	beq.w	8017d60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8017b76:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017b7a:	d019      	beq.n	8017bb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8017b7c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017b80:	fb0c fa0a 	mul.w	sl, ip, sl
 8017b84:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b88:	fb0c fc03 	mul.w	ip, ip, r3
 8017b8c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017b90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b94:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017b98:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017b9c:	4453      	add	r3, sl
 8017b9e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017ba2:	0a1b      	lsrs	r3, r3, #8
 8017ba4:	0a3f      	lsrs	r7, r7, #8
 8017ba6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017baa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017bae:	433b      	orrs	r3, r7
 8017bb0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017bb2:	2cff      	cmp	r4, #255	; 0xff
 8017bb4:	d020      	beq.n	8017bf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8017bb6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017bb8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017bbc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017bbe:	4367      	muls	r7, r4
 8017bc0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017bc2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017bc6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017bc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017bcc:	fb04 fa0a 	mul.w	sl, r4, sl
 8017bd0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017bd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017bd8:	44bc      	add	ip, r7
 8017bda:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017bde:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017be2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017be6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017bea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017bee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017bf2:	ea4c 040a 	orr.w	r4, ip, sl
 8017bf6:	9410      	str	r4, [sp, #64]	; 0x40
 8017bf8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017bfa:	2cff      	cmp	r4, #255	; 0xff
 8017bfc:	d020      	beq.n	8017c40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8017bfe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017c00:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017c04:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017c06:	4367      	muls	r7, r4
 8017c08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017c0a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017c0e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017c10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017c14:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c18:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017c1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c20:	44bc      	add	ip, r7
 8017c22:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017c26:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017c2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017c3a:	ea4c 040a 	orr.w	r4, ip, sl
 8017c3e:	940b      	str	r4, [sp, #44]	; 0x2c
 8017c40:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017c42:	2cff      	cmp	r4, #255	; 0xff
 8017c44:	d020      	beq.n	8017c88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8017c46:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017c48:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017c4c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017c4e:	4367      	muls	r7, r4
 8017c50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017c52:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017c56:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017c58:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017c5c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c60:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017c64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c68:	44bc      	add	ip, r7
 8017c6a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017c6e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017c72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017c7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017c82:	ea4c 040a 	orr.w	r4, ip, sl
 8017c86:	9411      	str	r4, [sp, #68]	; 0x44
 8017c88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017c8a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017c8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017c90:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017c94:	fb0e f707 	mul.w	r7, lr, r7
 8017c98:	fb02 770c 	mla	r7, r2, ip, r7
 8017c9c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017ca0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017ca2:	fb00 770c 	mla	r7, r0, ip, r7
 8017ca6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017caa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017cac:	fb08 770c 	mla	r7, r8, ip, r7
 8017cb0:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017cb4:	fb0e fe0c 	mul.w	lr, lr, ip
 8017cb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017cbc:	fb02 e303 	mla	r3, r2, r3, lr
 8017cc0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017cc2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017cc4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017cc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017cca:	fb00 330a 	mla	r3, r0, sl, r3
 8017cce:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017cd2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017cd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cd8:	f8b9 0000 	ldrh.w	r0, [r9]
 8017cdc:	434b      	muls	r3, r1
 8017cde:	0a3f      	lsrs	r7, r7, #8
 8017ce0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ce4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017ce8:	1c59      	adds	r1, r3, #1
 8017cea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017cee:	ea47 070c 	orr.w	r7, r7, ip
 8017cf2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017cf6:	1202      	asrs	r2, r0, #8
 8017cf8:	0c3b      	lsrs	r3, r7, #16
 8017cfa:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017cfe:	b2c9      	uxtb	r1, r1
 8017d00:	fb13 f304 	smulbb	r3, r3, r4
 8017d04:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017d08:	fb02 3201 	mla	r2, r2, r1, r3
 8017d0c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8017d10:	10c3      	asrs	r3, r0, #3
 8017d12:	b2ff      	uxtb	r7, r7
 8017d14:	00c0      	lsls	r0, r0, #3
 8017d16:	b292      	uxth	r2, r2
 8017d18:	fb1c fc04 	smulbb	ip, ip, r4
 8017d1c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017d20:	b2c0      	uxtb	r0, r0
 8017d22:	fb17 f704 	smulbb	r7, r7, r4
 8017d26:	fb03 c301 	mla	r3, r3, r1, ip
 8017d2a:	fb00 7001 	mla	r0, r0, r1, r7
 8017d2e:	f102 0c01 	add.w	ip, r2, #1
 8017d32:	b280      	uxth	r0, r0
 8017d34:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017d38:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8017d3c:	1c42      	adds	r2, r0, #1
 8017d3e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017d42:	b29b      	uxth	r3, r3
 8017d44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017d48:	ea42 020c 	orr.w	r2, r2, ip
 8017d4c:	f103 0c01 	add.w	ip, r3, #1
 8017d50:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017d54:	095b      	lsrs	r3, r3, #5
 8017d56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d5a:	431a      	orrs	r2, r3
 8017d5c:	f8a9 2000 	strh.w	r2, [r9]
 8017d60:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8017d62:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017d64:	441a      	add	r2, r3
 8017d66:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017d68:	9231      	str	r2, [sp, #196]	; 0xc4
 8017d6a:	f109 0902 	add.w	r9, r9, #2
 8017d6e:	441d      	add	r5, r3
 8017d70:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017d74:	e63d      	b.n	80179f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017d76:	2800      	cmp	r0, #0
 8017d78:	f43f aedd 	beq.w	8017b36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017d7c:	5c79      	ldrb	r1, [r7, r1]
 8017d7e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017d82:	910b      	str	r1, [sp, #44]	; 0x2c
 8017d84:	0e09      	lsrs	r1, r1, #24
 8017d86:	9114      	str	r1, [sp, #80]	; 0x50
 8017d88:	e6d5      	b.n	8017b36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8017d8a:	b01f      	add	sp, #124	; 0x7c
 8017d8c:	ecbd 8b08 	vpop	{d8-d11}
 8017d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8017d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d98:	880e      	ldrh	r6, [r1, #0]
 8017d9a:	b085      	sub	sp, #20
 8017d9c:	ea4f 2826 	mov.w	r8, r6, asr #8
 8017da0:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8017da4:	4691      	mov	r9, r2
 8017da6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017daa:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8017dae:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8017db2:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8017db6:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8017dba:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8017dbe:	9200      	str	r2, [sp, #0]
 8017dc0:	00f6      	lsls	r6, r6, #3
 8017dc2:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8017dc6:	9201      	str	r2, [sp, #4]
 8017dc8:	2c00      	cmp	r4, #0
 8017dca:	b2f2      	uxtb	r2, r6
 8017dcc:	fb04 560c 	mla	r6, r4, ip, r5
 8017dd0:	9202      	str	r2, [sp, #8]
 8017dd2:	eb09 0806 	add.w	r8, r9, r6
 8017dd6:	db3f      	blt.n	8017e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017dd8:	45a6      	cmp	lr, r4
 8017dda:	dd3d      	ble.n	8017e58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8017ddc:	2d00      	cmp	r5, #0
 8017dde:	db39      	blt.n	8017e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017de0:	45ac      	cmp	ip, r5
 8017de2:	dd37      	ble.n	8017e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8017de4:	f819 2006 	ldrb.w	r2, [r9, r6]
 8017de8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017dec:	1c6e      	adds	r6, r5, #1
 8017dee:	d436      	bmi.n	8017e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017df0:	45b4      	cmp	ip, r6
 8017df2:	dd34      	ble.n	8017e5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8017df4:	b3a8      	cbz	r0, 8017e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8017df6:	f898 6001 	ldrb.w	r6, [r8, #1]
 8017dfa:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8017dfe:	3401      	adds	r4, #1
 8017e00:	d433      	bmi.n	8017e6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017e02:	45a6      	cmp	lr, r4
 8017e04:	dd31      	ble.n	8017e6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8017e06:	b39f      	cbz	r7, 8017e70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8017e08:	2d00      	cmp	r5, #0
 8017e0a:	eb08 0e0c 	add.w	lr, r8, ip
 8017e0e:	db2a      	blt.n	8017e66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017e10:	45ac      	cmp	ip, r5
 8017e12:	dd28      	ble.n	8017e66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8017e14:	f818 400c 	ldrb.w	r4, [r8, ip]
 8017e18:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017e1c:	3501      	adds	r5, #1
 8017e1e:	d42a      	bmi.n	8017e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017e20:	45ac      	cmp	ip, r5
 8017e22:	dd28      	ble.n	8017e76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8017e24:	b348      	cbz	r0, 8017e7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8017e26:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8017e2a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8017e2e:	280f      	cmp	r0, #15
 8017e30:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017e34:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017e38:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017e3c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017e40:	d801      	bhi.n	8017e46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8017e42:	2f0f      	cmp	r7, #15
 8017e44:	d91b      	bls.n	8017e7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8017e46:	4b7d      	ldr	r3, [pc, #500]	; (801803c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8017e48:	4a7d      	ldr	r2, [pc, #500]	; (8018040 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8017e4a:	487e      	ldr	r0, [pc, #504]	; (8018044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8017e4c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017e50:	f004 ffa2 	bl	801cd98 <__assert_func>
 8017e54:	2200      	movs	r2, #0
 8017e56:	e7c9      	b.n	8017dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8017e58:	2600      	movs	r6, #0
 8017e5a:	4632      	mov	r2, r6
 8017e5c:	e7cf      	b.n	8017dfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017e5e:	2600      	movs	r6, #0
 8017e60:	e7cd      	b.n	8017dfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017e62:	4606      	mov	r6, r0
 8017e64:	e7cb      	b.n	8017dfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017e66:	2400      	movs	r4, #0
 8017e68:	e7d8      	b.n	8017e1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8017e6a:	2300      	movs	r3, #0
 8017e6c:	461c      	mov	r4, r3
 8017e6e:	e7de      	b.n	8017e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017e70:	463b      	mov	r3, r7
 8017e72:	463c      	mov	r4, r7
 8017e74:	e7db      	b.n	8017e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017e76:	2300      	movs	r3, #0
 8017e78:	e7d9      	b.n	8017e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017e7a:	4603      	mov	r3, r0
 8017e7c:	e7d7      	b.n	8017e2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8017e7e:	b280      	uxth	r0, r0
 8017e80:	b2bf      	uxth	r7, r7
 8017e82:	fb00 fe07 	mul.w	lr, r0, r7
 8017e86:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017e8a:	0100      	lsls	r0, r0, #4
 8017e8c:	eba0 0c0e 	sub.w	ip, r0, lr
 8017e90:	b2bf      	uxth	r7, r7
 8017e92:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017e96:	fa1f fc8c 	uxth.w	ip, ip
 8017e9a:	1bed      	subs	r5, r5, r7
 8017e9c:	b2ad      	uxth	r5, r5
 8017e9e:	fb0c f00a 	mul.w	r0, ip, sl
 8017ea2:	fb05 000b 	mla	r0, r5, fp, r0
 8017ea6:	fb07 0009 	mla	r0, r7, r9, r0
 8017eaa:	fb0e 0008 	mla	r0, lr, r8, r0
 8017eae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017eb2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017eb6:	9003      	str	r0, [sp, #12]
 8017eb8:	d018      	beq.n	8017eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8017eba:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017ebe:	fb0b f000 	mul.w	r0, fp, r0
 8017ec2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017ec6:	fb0b fb02 	mul.w	fp, fp, r2
 8017eca:	0a02      	lsrs	r2, r0, #8
 8017ecc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017ed0:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017ed4:	4402      	add	r2, r0
 8017ed6:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017eda:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017ede:	0a12      	lsrs	r2, r2, #8
 8017ee0:	0a00      	lsrs	r0, r0, #8
 8017ee2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017ee6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017eea:	4302      	orrs	r2, r0
 8017eec:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ef0:	d019      	beq.n	8017f26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8017ef2:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017ef6:	fb0a fb0b 	mul.w	fp, sl, fp
 8017efa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017efe:	fb0a fa06 	mul.w	sl, sl, r6
 8017f02:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017f06:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017f0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017f0e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017f12:	445e      	add	r6, fp
 8017f14:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017f18:	0a36      	lsrs	r6, r6, #8
 8017f1a:	0a00      	lsrs	r0, r0, #8
 8017f1c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017f20:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017f24:	4306      	orrs	r6, r0
 8017f26:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017f2a:	d019      	beq.n	8017f60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8017f2c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017f30:	fb09 fa0a 	mul.w	sl, r9, sl
 8017f34:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017f38:	fb09 f904 	mul.w	r9, r9, r4
 8017f3c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017f40:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017f44:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017f48:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017f4c:	4454      	add	r4, sl
 8017f4e:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017f52:	0a24      	lsrs	r4, r4, #8
 8017f54:	0a00      	lsrs	r0, r0, #8
 8017f56:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017f5a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017f5e:	4304      	orrs	r4, r0
 8017f60:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017f64:	d019      	beq.n	8017f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8017f66:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017f6a:	fb08 f909 	mul.w	r9, r8, r9
 8017f6e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017f72:	fb08 f803 	mul.w	r8, r8, r3
 8017f76:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017f7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017f7e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017f82:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017f86:	444b      	add	r3, r9
 8017f88:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017f8c:	0a1b      	lsrs	r3, r3, #8
 8017f8e:	0a00      	lsrs	r0, r0, #8
 8017f90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017f94:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017f98:	4303      	orrs	r3, r0
 8017f9a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017f9e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017fa2:	fb0c f808 	mul.w	r8, ip, r8
 8017fa6:	fb05 8800 	mla	r8, r5, r0, r8
 8017faa:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017fae:	fb07 8800 	mla	r8, r7, r0, r8
 8017fb2:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017fb6:	fb0e 8000 	mla	r0, lr, r0, r8
 8017fba:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017fbe:	fb0c f606 	mul.w	r6, ip, r6
 8017fc2:	0a00      	lsrs	r0, r0, #8
 8017fc4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017fc8:	fb05 6202 	mla	r2, r5, r2, r6
 8017fcc:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017fd0:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8017fd4:	fb07 2700 	mla	r7, r7, r0, r2
 8017fd8:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017fdc:	9b03      	ldr	r3, [sp, #12]
 8017fde:	9d00      	ldr	r5, [sp, #0]
 8017fe0:	9a02      	ldr	r2, [sp, #8]
 8017fe2:	fb0e 7000 	mla	r0, lr, r0, r7
 8017fe6:	43dc      	mvns	r4, r3
 8017fe8:	9b01      	ldr	r3, [sp, #4]
 8017fea:	b2e4      	uxtb	r4, r4
 8017fec:	0a00      	lsrs	r0, r0, #8
 8017fee:	4363      	muls	r3, r4
 8017ff0:	4365      	muls	r5, r4
 8017ff2:	4362      	muls	r2, r4
 8017ff4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017ff8:	ea48 0000 	orr.w	r0, r8, r0
 8017ffc:	4614      	mov	r4, r2
 8017ffe:	1c5e      	adds	r6, r3, #1
 8018000:	1c6a      	adds	r2, r5, #1
 8018002:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8018006:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801800a:	0a03      	lsrs	r3, r0, #8
 801800c:	0c02      	lsrs	r2, r0, #16
 801800e:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8018012:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018016:	00db      	lsls	r3, r3, #3
 8018018:	0212      	lsls	r2, r2, #8
 801801a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801801e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018022:	4313      	orrs	r3, r2
 8018024:	1c62      	adds	r2, r4, #1
 8018026:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801802a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801802e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018032:	4318      	orrs	r0, r3
 8018034:	8008      	strh	r0, [r1, #0]
 8018036:	b005      	add	sp, #20
 8018038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801803c:	08021456 	.word	0x08021456
 8018040:	08021a22 	.word	0x08021a22
 8018044:	080214da 	.word	0x080214da

08018048 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801804c:	ed2d 8b08 	vpush	{d8-d11}
 8018050:	b09b      	sub	sp, #108	; 0x6c
 8018052:	eeb0 aa40 	vmov.f32	s20, s0
 8018056:	9218      	str	r2, [sp, #96]	; 0x60
 8018058:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801805a:	9116      	str	r1, [sp, #88]	; 0x58
 801805c:	9307      	str	r3, [sp, #28]
 801805e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8018062:	9019      	str	r0, [sp, #100]	; 0x64
 8018064:	6850      	ldr	r0, [r2, #4]
 8018066:	6812      	ldr	r2, [r2, #0]
 8018068:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801806a:	fb00 1303 	mla	r3, r0, r3, r1
 801806e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018072:	930a      	str	r3, [sp, #40]	; 0x28
 8018074:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018076:	681b      	ldr	r3, [r3, #0]
 8018078:	930f      	str	r3, [sp, #60]	; 0x3c
 801807a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801807c:	685e      	ldr	r6, [r3, #4]
 801807e:	eef0 9a60 	vmov.f32	s19, s1
 8018082:	eeb0 9a41 	vmov.f32	s18, s2
 8018086:	eeb0 8a62 	vmov.f32	s16, s5
 801808a:	eef0 8a43 	vmov.f32	s17, s6
 801808e:	eef0 ba44 	vmov.f32	s23, s8
 8018092:	eeb0 ba64 	vmov.f32	s22, s9
 8018096:	eef0 aa45 	vmov.f32	s21, s10
 801809a:	3604      	adds	r6, #4
 801809c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801809e:	2b00      	cmp	r3, #0
 80180a0:	dc03      	bgt.n	80180aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80180a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80180a4:	2b00      	cmp	r3, #0
 80180a6:	f340 8373 	ble.w	8018790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80180aa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80180ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80180b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80180b4:	1e48      	subs	r0, r1, #1
 80180b6:	1e57      	subs	r7, r2, #1
 80180b8:	9b07      	ldr	r3, [sp, #28]
 80180ba:	2b00      	cmp	r3, #0
 80180bc:	f340 8190 	ble.w	80183e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80180c0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80180c2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80180c6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80180ca:	d406      	bmi.n	80180da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80180cc:	4584      	cmp	ip, r0
 80180ce:	da04      	bge.n	80180da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80180d0:	2b00      	cmp	r3, #0
 80180d2:	db02      	blt.n	80180da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80180d4:	42bb      	cmp	r3, r7
 80180d6:	f2c0 8184 	blt.w	80183e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 80180da:	f11c 0c01 	adds.w	ip, ip, #1
 80180de:	f100 8172 	bmi.w	80183c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80180e2:	4561      	cmp	r1, ip
 80180e4:	f2c0 816f 	blt.w	80183c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80180e8:	3301      	adds	r3, #1
 80180ea:	f100 816c 	bmi.w	80183c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80180ee:	429a      	cmp	r2, r3
 80180f0:	f2c0 8169 	blt.w	80183c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80180f4:	9b07      	ldr	r3, [sp, #28]
 80180f6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80180f8:	9317      	str	r3, [sp, #92]	; 0x5c
 80180fa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80180fc:	2b00      	cmp	r3, #0
 80180fe:	f340 818e 	ble.w	801841e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8018102:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018104:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018108:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801810a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801810e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018110:	141b      	asrs	r3, r3, #16
 8018112:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018116:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801811a:	f100 81d1 	bmi.w	80184c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801811e:	f101 38ff 	add.w	r8, r1, #4294967295
 8018122:	4543      	cmp	r3, r8
 8018124:	f280 81cc 	bge.w	80184c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018128:	f1bc 0f00 	cmp.w	ip, #0
 801812c:	f2c0 81c8 	blt.w	80184c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018130:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018134:	45c4      	cmp	ip, r8
 8018136:	f280 81c3 	bge.w	80184c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801813a:	b209      	sxth	r1, r1
 801813c:	fb0c 3301 	mla	r3, ip, r1, r3
 8018140:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018142:	eb04 0803 	add.w	r8, r4, r3
 8018146:	5ce3      	ldrb	r3, [r4, r3]
 8018148:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801814c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018150:	2a00      	cmp	r2, #0
 8018152:	f000 81aa 	beq.w	80184aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8018156:	f898 c001 	ldrb.w	ip, [r8, #1]
 801815a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801815e:	940b      	str	r4, [sp, #44]	; 0x2c
 8018160:	0e24      	lsrs	r4, r4, #24
 8018162:	9412      	str	r4, [sp, #72]	; 0x48
 8018164:	b178      	cbz	r0, 8018186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018166:	eb08 0c01 	add.w	ip, r8, r1
 801816a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801816e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018172:	9108      	str	r1, [sp, #32]
 8018174:	0e09      	lsrs	r1, r1, #24
 8018176:	9110      	str	r1, [sp, #64]	; 0x40
 8018178:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801817c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018180:	910c      	str	r1, [sp, #48]	; 0x30
 8018182:	0e09      	lsrs	r1, r1, #24
 8018184:	9113      	str	r1, [sp, #76]	; 0x4c
 8018186:	b292      	uxth	r2, r2
 8018188:	b280      	uxth	r0, r0
 801818a:	fb02 f900 	mul.w	r9, r2, r0
 801818e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018192:	0112      	lsls	r2, r2, #4
 8018194:	eba2 0809 	sub.w	r8, r2, r9
 8018198:	b280      	uxth	r0, r0
 801819a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801819e:	9912      	ldr	r1, [sp, #72]	; 0x48
 80181a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80181a2:	fa1f f888 	uxth.w	r8, r8
 80181a6:	1a12      	subs	r2, r2, r0
 80181a8:	b292      	uxth	r2, r2
 80181aa:	fb08 f101 	mul.w	r1, r8, r1
 80181ae:	fb02 110e 	mla	r1, r2, lr, r1
 80181b2:	fb00 1104 	mla	r1, r0, r4, r1
 80181b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80181b8:	fb09 1104 	mla	r1, r9, r4, r1
 80181bc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80181c0:	2900      	cmp	r1, #0
 80181c2:	f000 80f5 	beq.w	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80181c6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80181ca:	d01b      	beq.n	8018204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80181cc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80181d0:	fb0e fa0a 	mul.w	sl, lr, sl
 80181d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181d8:	fb0e fe03 	mul.w	lr, lr, r3
 80181dc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80181e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181e4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80181e8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80181ec:	4453      	add	r3, sl
 80181ee:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80181f2:	0a1b      	lsrs	r3, r3, #8
 80181f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018200:	ea43 030c 	orr.w	r3, r3, ip
 8018204:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018206:	2cff      	cmp	r4, #255	; 0xff
 8018208:	d021      	beq.n	801824e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801820a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801820c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018210:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018212:	fb04 fb0b 	mul.w	fp, r4, fp
 8018216:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018218:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801821c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801821e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018222:	fb04 fa0a 	mul.w	sl, r4, sl
 8018226:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801822a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801822e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018232:	44de      	add	lr, fp
 8018234:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018238:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801823c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018240:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018244:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018248:	ea4e 040a 	orr.w	r4, lr, sl
 801824c:	940b      	str	r4, [sp, #44]	; 0x2c
 801824e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018250:	2cff      	cmp	r4, #255	; 0xff
 8018252:	d021      	beq.n	8018298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8018254:	9c08      	ldr	r4, [sp, #32]
 8018256:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801825a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801825c:	fb04 fb0b 	mul.w	fp, r4, fp
 8018260:	9c08      	ldr	r4, [sp, #32]
 8018262:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018266:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018268:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801826c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018270:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018274:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018278:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801827c:	44de      	add	lr, fp
 801827e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018282:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018286:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801828a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801828e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018292:	ea4e 040a 	orr.w	r4, lr, sl
 8018296:	9408      	str	r4, [sp, #32]
 8018298:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801829a:	2cff      	cmp	r4, #255	; 0xff
 801829c:	d021      	beq.n	80182e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801829e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80182a0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80182a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80182a6:	fb04 fb0b 	mul.w	fp, r4, fp
 80182aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80182ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80182b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80182b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80182b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80182ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80182be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80182c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80182c6:	44de      	add	lr, fp
 80182c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80182cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80182d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80182d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80182dc:	ea4e 040a 	orr.w	r4, lr, sl
 80182e0:	940c      	str	r4, [sp, #48]	; 0x30
 80182e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80182e4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80182e8:	9c08      	ldr	r4, [sp, #32]
 80182ea:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80182ee:	fb08 fc0c 	mul.w	ip, r8, ip
 80182f2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80182f6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80182fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80182fc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018300:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018304:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018306:	fb09 cc0e 	mla	ip, r9, lr, ip
 801830a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801830e:	fb08 f80e 	mul.w	r8, r8, lr
 8018312:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018316:	fb02 8303 	mla	r3, r2, r3, r8
 801831a:	9a08      	ldr	r2, [sp, #32]
 801831c:	f8b7 8000 	ldrh.w	r8, [r7]
 8018320:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018324:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018326:	fb00 330a 	mla	r3, r0, sl, r3
 801832a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801832e:	fb09 3900 	mla	r9, r9, r0, r3
 8018332:	43c9      	mvns	r1, r1
 8018334:	ea4f 2228 	mov.w	r2, r8, asr #8
 8018338:	fa5f fe81 	uxtb.w	lr, r1
 801833c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018340:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018344:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018348:	fb02 f20e 	mul.w	r2, r2, lr
 801834c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018350:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018354:	ea4c 0c09 	orr.w	ip, ip, r9
 8018358:	1c53      	adds	r3, r2, #1
 801835a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801835e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8018362:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8018366:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801836a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801836e:	4a63      	ldr	r2, [pc, #396]	; (80184fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8018370:	fb00 f00e 	mul.w	r0, r0, lr
 8018374:	b2db      	uxtb	r3, r3
 8018376:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801837a:	1c43      	adds	r3, r0, #1
 801837c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018380:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018384:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018388:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801838c:	b2c9      	uxtb	r1, r1
 801838e:	00db      	lsls	r3, r3, #3
 8018390:	fb01 f10e 	mul.w	r1, r1, lr
 8018394:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018398:	4313      	orrs	r3, r2
 801839a:	1c4a      	adds	r2, r1, #1
 801839c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80183a0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80183a4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80183a8:	ea4c 0c03 	orr.w	ip, ip, r3
 80183ac:	f8a7 c000 	strh.w	ip, [r7]
 80183b0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80183b2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80183b4:	441a      	add	r2, r3
 80183b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80183b8:	922d      	str	r2, [sp, #180]	; 0xb4
 80183ba:	441d      	add	r5, r3
 80183bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80183be:	3b01      	subs	r3, #1
 80183c0:	3702      	adds	r7, #2
 80183c2:	9317      	str	r3, [sp, #92]	; 0x5c
 80183c4:	e699      	b.n	80180fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80183c6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80183c8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80183ca:	441c      	add	r4, r3
 80183cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80183ce:	942d      	str	r4, [sp, #180]	; 0xb4
 80183d0:	441d      	add	r5, r3
 80183d2:	9b07      	ldr	r3, [sp, #28]
 80183d4:	3b01      	subs	r3, #1
 80183d6:	9307      	str	r3, [sp, #28]
 80183d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80183da:	3302      	adds	r3, #2
 80183dc:	930a      	str	r3, [sp, #40]	; 0x28
 80183de:	e66b      	b.n	80180b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80183e0:	d024      	beq.n	801842c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 80183e2:	9b07      	ldr	r3, [sp, #28]
 80183e4:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80183e6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80183e8:	3b01      	subs	r3, #1
 80183ea:	fb00 4003 	mla	r0, r0, r3, r4
 80183ee:	1400      	asrs	r0, r0, #16
 80183f0:	f53f ae80 	bmi.w	80180f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80183f4:	3901      	subs	r1, #1
 80183f6:	4288      	cmp	r0, r1
 80183f8:	f6bf ae7c 	bge.w	80180f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80183fc:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80183fe:	fb01 5303 	mla	r3, r1, r3, r5
 8018402:	141b      	asrs	r3, r3, #16
 8018404:	f53f ae76 	bmi.w	80180f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8018408:	3a01      	subs	r2, #1
 801840a:	4293      	cmp	r3, r2
 801840c:	f6bf ae72 	bge.w	80180f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8018410:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018414:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8018418:	f1bb 0f00 	cmp.w	fp, #0
 801841c:	dc70      	bgt.n	8018500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801841e:	9b07      	ldr	r3, [sp, #28]
 8018420:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018424:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018426:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801842a:	930a      	str	r3, [sp, #40]	; 0x28
 801842c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801842e:	2b00      	cmp	r3, #0
 8018430:	f340 81ae 	ble.w	8018790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8018434:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801843c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018440:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018442:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018446:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801844a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801844e:	eef0 6a48 	vmov.f32	s13, s16
 8018452:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801845a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801845e:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8018462:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018466:	eef0 6a68 	vmov.f32	s13, s17
 801846a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801846e:	ee18 2a10 	vmov	r2, s16
 8018472:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018476:	fb92 f3f3 	sdiv	r3, r2, r3
 801847a:	ee18 2a90 	vmov	r2, s17
 801847e:	932f      	str	r3, [sp, #188]	; 0xbc
 8018480:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018482:	fb92 f3f3 	sdiv	r3, r2, r3
 8018486:	9330      	str	r3, [sp, #192]	; 0xc0
 8018488:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801848a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801848c:	3b01      	subs	r3, #1
 801848e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018492:	9316      	str	r3, [sp, #88]	; 0x58
 8018494:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018496:	bf08      	it	eq
 8018498:	4613      	moveq	r3, r2
 801849a:	ee16 5a90 	vmov	r5, s13
 801849e:	9307      	str	r3, [sp, #28]
 80184a0:	eef0 8a67 	vmov.f32	s17, s15
 80184a4:	eeb0 8a47 	vmov.f32	s16, s14
 80184a8:	e5f8      	b.n	801809c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80184aa:	2800      	cmp	r0, #0
 80184ac:	f43f ae6b 	beq.w	8018186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80184b0:	f818 1001 	ldrb.w	r1, [r8, r1]
 80184b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80184b8:	9108      	str	r1, [sp, #32]
 80184ba:	0e09      	lsrs	r1, r1, #24
 80184bc:	9110      	str	r1, [sp, #64]	; 0x40
 80184be:	e662      	b.n	8018186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80184c0:	f113 0801 	adds.w	r8, r3, #1
 80184c4:	f53f af74 	bmi.w	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80184c8:	4541      	cmp	r1, r8
 80184ca:	f6ff af71 	blt.w	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80184ce:	f11c 0801 	adds.w	r8, ip, #1
 80184d2:	f53f af6d 	bmi.w	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80184d6:	45c6      	cmp	lr, r8
 80184d8:	f6ff af6a 	blt.w	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80184dc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80184e0:	b209      	sxth	r1, r1
 80184e2:	fa0f f38e 	sxth.w	r3, lr
 80184e6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80184ea:	9301      	str	r3, [sp, #4]
 80184ec:	9100      	str	r1, [sp, #0]
 80184ee:	4633      	mov	r3, r6
 80184f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80184f2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80184f4:	4639      	mov	r1, r7
 80184f6:	f7ff fc4d 	bl	8017d94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80184fa:	e759      	b.n	80183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80184fc:	fffff800 	.word	0xfffff800
 8018500:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018502:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8018504:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018508:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801850a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801850e:	1427      	asrs	r7, r4, #16
 8018510:	142b      	asrs	r3, r5, #16
 8018512:	fb01 7303 	mla	r3, r1, r3, r7
 8018516:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018518:	18e7      	adds	r7, r4, r3
 801851a:	5ce3      	ldrb	r3, [r4, r3]
 801851c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018520:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018524:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018528:	2a00      	cmp	r2, #0
 801852a:	f000 8127 	beq.w	801877c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801852e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018532:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018536:	940d      	str	r4, [sp, #52]	; 0x34
 8018538:	0e24      	lsrs	r4, r4, #24
 801853a:	9414      	str	r4, [sp, #80]	; 0x50
 801853c:	b170      	cbz	r0, 801855c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801853e:	eb07 0e01 	add.w	lr, r7, r1
 8018542:	5c79      	ldrb	r1, [r7, r1]
 8018544:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018548:	9109      	str	r1, [sp, #36]	; 0x24
 801854a:	0e09      	lsrs	r1, r1, #24
 801854c:	9111      	str	r1, [sp, #68]	; 0x44
 801854e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018552:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018556:	910e      	str	r1, [sp, #56]	; 0x38
 8018558:	0e09      	lsrs	r1, r1, #24
 801855a:	9115      	str	r1, [sp, #84]	; 0x54
 801855c:	b292      	uxth	r2, r2
 801855e:	b280      	uxth	r0, r0
 8018560:	fb02 f800 	mul.w	r8, r2, r0
 8018564:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018568:	0112      	lsls	r2, r2, #4
 801856a:	eba2 0e08 	sub.w	lr, r2, r8
 801856e:	b280      	uxth	r0, r0
 8018570:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018574:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018576:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018578:	fa1f fe8e 	uxth.w	lr, lr
 801857c:	1a09      	subs	r1, r1, r0
 801857e:	b289      	uxth	r1, r1
 8018580:	fb0e f202 	mul.w	r2, lr, r2
 8018584:	fb01 220c 	mla	r2, r1, ip, r2
 8018588:	fb00 2204 	mla	r2, r0, r4, r2
 801858c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801858e:	fb08 2204 	mla	r2, r8, r4, r2
 8018592:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018596:	2a00      	cmp	r2, #0
 8018598:	f000 80e5 	beq.w	8018766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801859c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80185a0:	d019      	beq.n	80185d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 80185a2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80185a6:	fb0c fa0a 	mul.w	sl, ip, sl
 80185aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80185ae:	fb0c fc03 	mul.w	ip, ip, r3
 80185b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80185b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80185ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80185be:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80185c2:	4453      	add	r3, sl
 80185c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80185c8:	0a1b      	lsrs	r3, r3, #8
 80185ca:	0a3f      	lsrs	r7, r7, #8
 80185cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80185d0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80185d4:	433b      	orrs	r3, r7
 80185d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80185d8:	2cff      	cmp	r4, #255	; 0xff
 80185da:	d020      	beq.n	801861e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 80185dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80185de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80185e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80185e4:	4367      	muls	r7, r4
 80185e6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80185e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80185ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80185ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80185f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80185f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80185fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80185fe:	44bc      	add	ip, r7
 8018600:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018604:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018608:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801860c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018610:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018614:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018618:	ea4c 040a 	orr.w	r4, ip, sl
 801861c:	940d      	str	r4, [sp, #52]	; 0x34
 801861e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018620:	2cff      	cmp	r4, #255	; 0xff
 8018622:	d020      	beq.n	8018666 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8018624:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018626:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801862a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801862c:	4367      	muls	r7, r4
 801862e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018630:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018634:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018636:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801863a:	fb04 fa0a 	mul.w	sl, r4, sl
 801863e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018642:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018646:	44bc      	add	ip, r7
 8018648:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801864c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018650:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018654:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018658:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801865c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018660:	ea4c 040a 	orr.w	r4, ip, sl
 8018664:	9409      	str	r4, [sp, #36]	; 0x24
 8018666:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018668:	2cff      	cmp	r4, #255	; 0xff
 801866a:	d020      	beq.n	80186ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 801866c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801866e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018672:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018674:	4367      	muls	r7, r4
 8018676:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018678:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801867c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801867e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018682:	fb04 fa0a 	mul.w	sl, r4, sl
 8018686:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801868a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801868e:	44bc      	add	ip, r7
 8018690:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018694:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801869c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80186a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80186a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80186a8:	ea4c 040a 	orr.w	r4, ip, sl
 80186ac:	940e      	str	r4, [sp, #56]	; 0x38
 80186ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80186b0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80186b4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80186b6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80186ba:	fb0e f707 	mul.w	r7, lr, r7
 80186be:	fb01 770c 	mla	r7, r1, ip, r7
 80186c2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80186c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80186c8:	fb00 770c 	mla	r7, r0, ip, r7
 80186cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80186d0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80186d2:	fb08 770c 	mla	r7, r8, ip, r7
 80186d6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80186da:	fb0e fe0c 	mul.w	lr, lr, ip
 80186de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80186e2:	fb01 e303 	mla	r3, r1, r3, lr
 80186e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80186e8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80186ec:	990e      	ldr	r1, [sp, #56]	; 0x38
 80186ee:	fb00 330a 	mla	r3, r0, sl, r3
 80186f2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80186f6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80186fa:	f8b9 3000 	ldrh.w	r3, [r9]
 80186fe:	43d2      	mvns	r2, r2
 8018700:	1218      	asrs	r0, r3, #8
 8018702:	b2d2      	uxtb	r2, r2
 8018704:	10d9      	asrs	r1, r3, #3
 8018706:	0a3f      	lsrs	r7, r7, #8
 8018708:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801870c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018710:	00db      	lsls	r3, r3, #3
 8018712:	4350      	muls	r0, r2
 8018714:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018718:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801871c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018720:	b2db      	uxtb	r3, r3
 8018722:	ea47 070c 	orr.w	r7, r7, ip
 8018726:	4351      	muls	r1, r2
 8018728:	4353      	muls	r3, r2
 801872a:	1c42      	adds	r2, r0, #1
 801872c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018730:	0c3a      	lsrs	r2, r7, #16
 8018732:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018736:	4a19      	ldr	r2, [pc, #100]	; (801879c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8018738:	b2c0      	uxtb	r0, r0
 801873a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801873e:	1c4a      	adds	r2, r1, #1
 8018740:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018744:	0a3a      	lsrs	r2, r7, #8
 8018746:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801874a:	00c9      	lsls	r1, r1, #3
 801874c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018750:	4301      	orrs	r1, r0
 8018752:	1c58      	adds	r0, r3, #1
 8018754:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018758:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801875c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018760:	4308      	orrs	r0, r1
 8018762:	f8a9 0000 	strh.w	r0, [r9]
 8018766:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018768:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801876a:	441a      	add	r2, r3
 801876c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801876e:	922d      	str	r2, [sp, #180]	; 0xb4
 8018770:	f109 0902 	add.w	r9, r9, #2
 8018774:	441d      	add	r5, r3
 8018776:	f10b 3bff 	add.w	fp, fp, #4294967295
 801877a:	e64d      	b.n	8018418 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801877c:	2800      	cmp	r0, #0
 801877e:	f43f aeed 	beq.w	801855c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8018782:	5c79      	ldrb	r1, [r7, r1]
 8018784:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018788:	9109      	str	r1, [sp, #36]	; 0x24
 801878a:	0e09      	lsrs	r1, r1, #24
 801878c:	9111      	str	r1, [sp, #68]	; 0x44
 801878e:	e6e5      	b.n	801855c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8018790:	b01b      	add	sp, #108	; 0x6c
 8018792:	ecbd 8b08 	vpop	{d8-d11}
 8018796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801879a:	bf00      	nop
 801879c:	fffff800 	.word	0xfffff800

080187a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80187a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187a4:	b085      	sub	sp, #20
 80187a6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80187aa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80187ae:	9103      	str	r1, [sp, #12]
 80187b0:	fb05 7106 	mla	r1, r5, r6, r7
 80187b4:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 80187b8:	2d00      	cmp	r5, #0
 80187ba:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80187be:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80187c2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80187c6:	9401      	str	r4, [sp, #4]
 80187c8:	eb03 0901 	add.w	r9, r3, r1
 80187cc:	f2c0 80c0 	blt.w	8018950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80187d0:	45a8      	cmp	r8, r5
 80187d2:	f340 80bd 	ble.w	8018950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80187d6:	2f00      	cmp	r7, #0
 80187d8:	f2c0 80b6 	blt.w	8018948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80187dc:	42be      	cmp	r6, r7
 80187de:	f340 80b3 	ble.w	8018948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80187e2:	f813 c001 	ldrb.w	ip, [r3, r1]
 80187e6:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80187ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80187ee:	d019      	beq.n	8018824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80187f0:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80187f4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80187f8:	435a      	muls	r2, r3
 80187fa:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80187fe:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8018802:	fb0c f403 	mul.w	r4, ip, r3
 8018806:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801880a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801880e:	441a      	add	r2, r3
 8018810:	f104 0320 	add.w	r3, r4, #32
 8018814:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018818:	0a1b      	lsrs	r3, r3, #8
 801881a:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801881e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018822:	4319      	orrs	r1, r3
 8018824:	b289      	uxth	r1, r1
 8018826:	1c7b      	adds	r3, r7, #1
 8018828:	f100 8097 	bmi.w	801895a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801882c:	429e      	cmp	r6, r3
 801882e:	f340 8094 	ble.w	801895a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8018832:	2800      	cmp	r0, #0
 8018834:	f000 8094 	beq.w	8018960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8018838:	f899 4001 	ldrb.w	r4, [r9, #1]
 801883c:	9b01      	ldr	r3, [sp, #4]
 801883e:	2cff      	cmp	r4, #255	; 0xff
 8018840:	885b      	ldrh	r3, [r3, #2]
 8018842:	d01b      	beq.n	801887c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8018844:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018848:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801884c:	fb0a f202 	mul.w	r2, sl, r2
 8018850:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018854:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018858:	fb04 fa03 	mul.w	sl, r4, r3
 801885c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018860:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018864:	441a      	add	r2, r3
 8018866:	f10a 0320 	add.w	r3, sl, #32
 801886a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801886e:	0a1b      	lsrs	r3, r3, #8
 8018870:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8018874:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018878:	ea4b 0303 	orr.w	r3, fp, r3
 801887c:	b29b      	uxth	r3, r3
 801887e:	3501      	adds	r5, #1
 8018880:	d474      	bmi.n	801896c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8018882:	45a8      	cmp	r8, r5
 8018884:	dd72      	ble.n	801896c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8018886:	f1be 0f00 	cmp.w	lr, #0
 801888a:	f000 8120 	beq.w	8018ace <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801888e:	2f00      	cmp	r7, #0
 8018890:	db69      	blt.n	8018966 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8018892:	42be      	cmp	r6, r7
 8018894:	dd67      	ble.n	8018966 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8018896:	f819 5006 	ldrb.w	r5, [r9, r6]
 801889a:	9a01      	ldr	r2, [sp, #4]
 801889c:	2dff      	cmp	r5, #255	; 0xff
 801889e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80188a2:	d01c      	beq.n	80188de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80188a4:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80188a8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80188ac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80188b0:	fb05 fa0b 	mul.w	sl, r5, fp
 80188b4:	fb08 f802 	mul.w	r8, r8, r2
 80188b8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80188bc:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80188c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80188c4:	4490      	add	r8, r2
 80188c6:	f10a 0220 	add.w	r2, sl, #32
 80188ca:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80188ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80188d2:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80188d6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80188da:	ea4b 0b0a 	orr.w	fp, fp, sl
 80188de:	fa1f fb8b 	uxth.w	fp, fp
 80188e2:	3701      	adds	r7, #1
 80188e4:	d447      	bmi.n	8018976 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80188e6:	42be      	cmp	r6, r7
 80188e8:	dd45      	ble.n	8018976 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80188ea:	2800      	cmp	r0, #0
 80188ec:	d046      	beq.n	801897c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80188ee:	3601      	adds	r6, #1
 80188f0:	9a01      	ldr	r2, [sp, #4]
 80188f2:	f819 7006 	ldrb.w	r7, [r9, r6]
 80188f6:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80188fa:	2fff      	cmp	r7, #255	; 0xff
 80188fc:	d01a      	beq.n	8018934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80188fe:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8018902:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8018906:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801890a:	fb07 f902 	mul.w	r9, r7, r2
 801890e:	fb08 f806 	mul.w	r8, r8, r6
 8018912:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8018916:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801891a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801891e:	44b0      	add	r8, r6
 8018920:	f109 0620 	add.w	r6, r9, #32
 8018924:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018928:	0a36      	lsrs	r6, r6, #8
 801892a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801892e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018932:	4332      	orrs	r2, r6
 8018934:	b292      	uxth	r2, r2
 8018936:	280f      	cmp	r0, #15
 8018938:	d922      	bls.n	8018980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801893a:	4b69      	ldr	r3, [pc, #420]	; (8018ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801893c:	4a69      	ldr	r2, [pc, #420]	; (8018ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801893e:	486a      	ldr	r0, [pc, #424]	; (8018ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8018940:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8018944:	f004 fa28 	bl	801cd98 <__assert_func>
 8018948:	f04f 0c00 	mov.w	ip, #0
 801894c:	4661      	mov	r1, ip
 801894e:	e76a      	b.n	8018826 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8018950:	2400      	movs	r4, #0
 8018952:	46a4      	mov	ip, r4
 8018954:	4623      	mov	r3, r4
 8018956:	4621      	mov	r1, r4
 8018958:	e791      	b.n	801887e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801895a:	2400      	movs	r4, #0
 801895c:	4623      	mov	r3, r4
 801895e:	e78e      	b.n	801887e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018960:	4604      	mov	r4, r0
 8018962:	4603      	mov	r3, r0
 8018964:	e78b      	b.n	801887e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018966:	2500      	movs	r5, #0
 8018968:	46ab      	mov	fp, r5
 801896a:	e7ba      	b.n	80188e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801896c:	2700      	movs	r7, #0
 801896e:	463d      	mov	r5, r7
 8018970:	463a      	mov	r2, r7
 8018972:	46bb      	mov	fp, r7
 8018974:	e7df      	b.n	8018936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8018976:	2700      	movs	r7, #0
 8018978:	463a      	mov	r2, r7
 801897a:	e7dc      	b.n	8018936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801897c:	4607      	mov	r7, r0
 801897e:	4602      	mov	r2, r0
 8018980:	f1be 0f0f 	cmp.w	lr, #15
 8018984:	d8d9      	bhi.n	801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8018986:	b286      	uxth	r6, r0
 8018988:	fa1f f98e 	uxth.w	r9, lr
 801898c:	fb06 f809 	mul.w	r8, r6, r9
 8018990:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018994:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018998:	0136      	lsls	r6, r6, #4
 801899a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801899e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80189a2:	9601      	str	r6, [sp, #4]
 80189a4:	ea4a 0101 	orr.w	r1, sl, r1
 80189a8:	fa1f f689 	uxth.w	r6, r9
 80189ac:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80189b0:	fb10 f90e 	smulbb	r9, r0, lr
 80189b4:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80189b8:	9602      	str	r6, [sp, #8]
 80189ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189be:	460e      	mov	r6, r1
 80189c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80189c4:	f1ce 0110 	rsb	r1, lr, #16
 80189c8:	1a09      	subs	r1, r1, r0
 80189ca:	ea4a 0303 	orr.w	r3, sl, r3
 80189ce:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80189d2:	4343      	muls	r3, r0
 80189d4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80189d8:	9801      	ldr	r0, [sp, #4]
 80189da:	fb01 3106 	mla	r1, r1, r6, r3
 80189de:	9e02      	ldr	r6, [sp, #8]
 80189e0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80189e4:	1b80      	subs	r0, r0, r6
 80189e6:	9e01      	ldr	r6, [sp, #4]
 80189e8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80189ec:	eba6 0608 	sub.w	r6, r6, r8
 80189f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189f4:	b2b6      	uxth	r6, r6
 80189f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189fa:	ea4a 0202 	orr.w	r2, sl, r2
 80189fe:	b280      	uxth	r0, r0
 8018a00:	4374      	muls	r4, r6
 8018a02:	fb09 1302 	mla	r3, r9, r2, r1
 8018a06:	fb0c 4400 	mla	r4, ip, r0, r4
 8018a0a:	9a03      	ldr	r2, [sp, #12]
 8018a0c:	9802      	ldr	r0, [sp, #8]
 8018a0e:	8811      	ldrh	r1, [r2, #0]
 8018a10:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8018a14:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8018a18:	fb00 4505 	mla	r5, r0, r5, r4
 8018a1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018a20:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018a24:	fb08 5707 	mla	r7, r8, r7, r5
 8018a28:	ea4a 0b0b 	orr.w	fp, sl, fp
 8018a2c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018a30:	b292      	uxth	r2, r2
 8018a32:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8018a36:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018a3a:	4357      	muls	r7, r2
 8018a3c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8018a40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018a44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018a48:	f107 0801 	add.w	r8, r7, #1
 8018a4c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018a50:	ea43 0e0e 	orr.w	lr, r3, lr
 8018a54:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8018a58:	fa1f f38e 	uxth.w	r3, lr
 8018a5c:	1208      	asrs	r0, r1, #8
 8018a5e:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8018a62:	b2ff      	uxtb	r7, r7
 8018a64:	121c      	asrs	r4, r3, #8
 8018a66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a6a:	fb10 f007 	smulbb	r0, r0, r7
 8018a6e:	10cd      	asrs	r5, r1, #3
 8018a70:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018a74:	fb04 0402 	mla	r4, r4, r2, r0
 8018a78:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018a7c:	10d8      	asrs	r0, r3, #3
 8018a7e:	fb15 f507 	smulbb	r5, r5, r7
 8018a82:	00db      	lsls	r3, r3, #3
 8018a84:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018a88:	fb00 5002 	mla	r0, r0, r2, r5
 8018a8c:	b2dd      	uxtb	r5, r3
 8018a8e:	00cb      	lsls	r3, r1, #3
 8018a90:	b2db      	uxtb	r3, r3
 8018a92:	fb13 f307 	smulbb	r3, r3, r7
 8018a96:	fb05 3202 	mla	r2, r5, r2, r3
 8018a9a:	b2a4      	uxth	r4, r4
 8018a9c:	b292      	uxth	r2, r2
 8018a9e:	1c63      	adds	r3, r4, #1
 8018aa0:	b280      	uxth	r0, r0
 8018aa2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8018aa6:	1c53      	adds	r3, r2, #1
 8018aa8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018aac:	1c42      	adds	r2, r0, #1
 8018aae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ab2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018ab6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018aba:	0940      	lsrs	r0, r0, #5
 8018abc:	4323      	orrs	r3, r4
 8018abe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ac2:	9a03      	ldr	r2, [sp, #12]
 8018ac4:	4303      	orrs	r3, r0
 8018ac6:	8013      	strh	r3, [r2, #0]
 8018ac8:	b005      	add	sp, #20
 8018aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ace:	280f      	cmp	r0, #15
 8018ad0:	f63f af33 	bhi.w	801893a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8018ad4:	4677      	mov	r7, lr
 8018ad6:	4675      	mov	r5, lr
 8018ad8:	4672      	mov	r2, lr
 8018ada:	46f3      	mov	fp, lr
 8018adc:	e753      	b.n	8018986 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8018ade:	bf00      	nop
 8018ae0:	08021456 	.word	0x08021456
 8018ae4:	08021a22 	.word	0x08021a22
 8018ae8:	080214da 	.word	0x080214da

08018aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018aec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018af0:	ed2d 8b08 	vpush	{d8-d11}
 8018af4:	b097      	sub	sp, #92	; 0x5c
 8018af6:	eeb0 aa40 	vmov.f32	s20, s0
 8018afa:	9214      	str	r2, [sp, #80]	; 0x50
 8018afc:	9308      	str	r3, [sp, #32]
 8018afe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018b00:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018b04:	9312      	str	r3, [sp, #72]	; 0x48
 8018b06:	9111      	str	r1, [sp, #68]	; 0x44
 8018b08:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018b0c:	9015      	str	r0, [sp, #84]	; 0x54
 8018b0e:	6850      	ldr	r0, [r2, #4]
 8018b10:	6812      	ldr	r2, [r2, #0]
 8018b12:	fb00 1303 	mla	r3, r0, r3, r1
 8018b16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018b1a:	9309      	str	r3, [sp, #36]	; 0x24
 8018b1c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018b1e:	681b      	ldr	r3, [r3, #0]
 8018b20:	930b      	str	r3, [sp, #44]	; 0x2c
 8018b22:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018b24:	685b      	ldr	r3, [r3, #4]
 8018b26:	930c      	str	r3, [sp, #48]	; 0x30
 8018b28:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018b2c:	930a      	str	r3, [sp, #40]	; 0x28
 8018b2e:	eef0 9a60 	vmov.f32	s19, s1
 8018b32:	eeb0 9a41 	vmov.f32	s18, s2
 8018b36:	eeb0 8a62 	vmov.f32	s16, s5
 8018b3a:	eef0 8a43 	vmov.f32	s17, s6
 8018b3e:	eef0 ba44 	vmov.f32	s23, s8
 8018b42:	eeb0 ba64 	vmov.f32	s22, s9
 8018b46:	eef0 aa45 	vmov.f32	s21, s10
 8018b4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b4c:	2b00      	cmp	r3, #0
 8018b4e:	dc03      	bgt.n	8018b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018b50:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018b52:	2b00      	cmp	r3, #0
 8018b54:	f340 83cb 	ble.w	80192ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018b58:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018b5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018b5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018b62:	1e48      	subs	r0, r1, #1
 8018b64:	1e55      	subs	r5, r2, #1
 8018b66:	9b08      	ldr	r3, [sp, #32]
 8018b68:	2b00      	cmp	r3, #0
 8018b6a:	f340 81a3 	ble.w	8018eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8018b6e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8018b70:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b72:	1436      	asrs	r6, r6, #16
 8018b74:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018b78:	d406      	bmi.n	8018b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b7a:	4286      	cmp	r6, r0
 8018b7c:	da04      	bge.n	8018b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b7e:	2b00      	cmp	r3, #0
 8018b80:	db02      	blt.n	8018b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b82:	42ab      	cmp	r3, r5
 8018b84:	f2c0 8197 	blt.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8018b88:	3601      	adds	r6, #1
 8018b8a:	f100 8184 	bmi.w	8018e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018b8e:	42b1      	cmp	r1, r6
 8018b90:	f2c0 8181 	blt.w	8018e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018b94:	3301      	adds	r3, #1
 8018b96:	f100 817e 	bmi.w	8018e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018b9a:	429a      	cmp	r2, r3
 8018b9c:	f2c0 817b 	blt.w	8018e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018ba0:	9b08      	ldr	r3, [sp, #32]
 8018ba2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018ba4:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ba6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018baa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018bac:	2b00      	cmp	r3, #0
 8018bae:	f340 81a4 	ble.w	8018efa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8018bb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018bb4:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8018bb6:	1418      	asrs	r0, r3, #16
 8018bb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018bba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018bbe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018bc0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018bc4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018bc6:	142d      	asrs	r5, r5, #16
 8018bc8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018bcc:	f100 81f8 	bmi.w	8018fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018bd0:	f102 3eff 	add.w	lr, r2, #4294967295
 8018bd4:	4575      	cmp	r5, lr
 8018bd6:	f280 81f3 	bge.w	8018fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018bda:	2800      	cmp	r0, #0
 8018bdc:	f2c0 81f0 	blt.w	8018fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018be0:	f103 3eff 	add.w	lr, r3, #4294967295
 8018be4:	4570      	cmp	r0, lr
 8018be6:	f280 81eb 	bge.w	8018fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018bea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018bec:	b212      	sxth	r2, r2
 8018bee:	fb00 5002 	mla	r0, r0, r2, r5
 8018bf2:	fa1f fe81 	uxth.w	lr, r1
 8018bf6:	eb03 0a00 	add.w	sl, r3, r0
 8018bfa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018bfe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8018c02:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018c06:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018c0a:	b29b      	uxth	r3, r3
 8018c0c:	f1bc 0f00 	cmp.w	ip, #0
 8018c10:	f000 81b9 	beq.w	8018f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018c14:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018c18:	940d      	str	r4, [sp, #52]	; 0x34
 8018c1a:	eb0a 0b02 	add.w	fp, sl, r2
 8018c1e:	fa1f fa8c 	uxth.w	sl, ip
 8018c22:	fb0a fe0e 	mul.w	lr, sl, lr
 8018c26:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018c2a:	fa1f fa8a 	uxth.w	sl, sl
 8018c2e:	eba5 050e 	sub.w	r5, r5, lr
 8018c32:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018c36:	940e      	str	r4, [sp, #56]	; 0x38
 8018c38:	eba3 030a 	sub.w	r3, r3, sl
 8018c3c:	b2ad      	uxth	r5, r5
 8018c3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018c40:	b29b      	uxth	r3, r3
 8018c42:	fb08 f505 	mul.w	r5, r8, r5
 8018c46:	fb09 5303 	mla	r3, r9, r3, r5
 8018c4a:	fb0a 3304 	mla	r3, sl, r4, r3
 8018c4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c50:	fb0e 3304 	mla	r3, lr, r4, r3
 8018c54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018c58:	2b00      	cmp	r3, #0
 8018c5a:	f000 810f 	beq.w	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018c5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018c60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018c64:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018c68:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018c6c:	f000 8190 	beq.w	8018f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8018c70:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018c74:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018c78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c7c:	fb09 f000 	mul.w	r0, r9, r0
 8018c80:	fb0a fe0e 	mul.w	lr, sl, lr
 8018c84:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018c88:	f100 0b20 	add.w	fp, r0, #32
 8018c8c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018c90:	44ce      	add	lr, r9
 8018c92:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018c96:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018c9a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018c9e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ca2:	ea4e 0909 	orr.w	r9, lr, r9
 8018ca6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018caa:	8868      	ldrh	r0, [r5, #2]
 8018cac:	d019      	beq.n	8018ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018cae:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018cb2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018cb6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018cba:	fb08 f800 	mul.w	r8, r8, r0
 8018cbe:	fb0a fe0e 	mul.w	lr, sl, lr
 8018cc2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8018cc6:	f108 0b20 	add.w	fp, r8, #32
 8018cca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018cce:	4486      	add	lr, r0
 8018cd0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8018cd4:	0a00      	lsrs	r0, r0, #8
 8018cd6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018cda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018cde:	ea4e 0000 	orr.w	r0, lr, r0
 8018ce2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018ce6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018cea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018cee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018cf2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018cf6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018cfa:	ea4e 0909 	orr.w	r9, lr, r9
 8018cfe:	ea4a 0000 	orr.w	r0, sl, r0
 8018d02:	f1bc 0f00 	cmp.w	ip, #0
 8018d06:	f000 8145 	beq.w	8018f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8018d0a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018d0e:	3a01      	subs	r2, #1
 8018d10:	0052      	lsls	r2, r2, #1
 8018d12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018d14:	3202      	adds	r2, #2
 8018d16:	2cff      	cmp	r4, #255	; 0xff
 8018d18:	eb05 0e02 	add.w	lr, r5, r2
 8018d1c:	5aaa      	ldrh	r2, [r5, r2]
 8018d1e:	d018      	beq.n	8018d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018d20:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018d24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d28:	fb04 fa02 	mul.w	sl, r4, r2
 8018d2c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d30:	fb08 f805 	mul.w	r8, r8, r5
 8018d34:	f10a 0520 	add.w	r5, sl, #32
 8018d38:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018d3c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018d40:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018d44:	4442      	add	r2, r8
 8018d46:	0a2d      	lsrs	r5, r5, #8
 8018d48:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018d4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018d50:	432a      	orrs	r2, r5
 8018d52:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018d54:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018d58:	2cff      	cmp	r4, #255	; 0xff
 8018d5a:	d01a      	beq.n	8018d92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018d5c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018d60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018d64:	fb04 fa05 	mul.w	sl, r4, r5
 8018d68:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d6c:	fb08 f80e 	mul.w	r8, r8, lr
 8018d70:	f10a 0e20 	add.w	lr, sl, #32
 8018d74:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018d78:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018d7c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018d80:	4445      	add	r5, r8
 8018d82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018d86:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018d8a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018d8e:	ea45 050e 	orr.w	r5, r5, lr
 8018d92:	fb1c fe01 	smulbb	lr, ip, r1
 8018d96:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018d9a:	f1cc 0810 	rsb	r8, ip, #16
 8018d9e:	eba8 0801 	sub.w	r8, r8, r1
 8018da2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018da6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018daa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018dae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8018db2:	4341      	muls	r1, r0
 8018db4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018db8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018dbc:	ea4a 0202 	orr.w	r2, sl, r2
 8018dc0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018dc4:	fb09 1108 	mla	r1, r9, r8, r1
 8018dc8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018dcc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018dd0:	fb0c 1102 	mla	r1, ip, r2, r1
 8018dd4:	ea4b 0505 	orr.w	r5, fp, r5
 8018dd8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018ddc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018de0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018de4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018de8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018dec:	ea42 0e0e 	orr.w	lr, r2, lr
 8018df0:	fa1f f28e 	uxth.w	r2, lr
 8018df4:	2bff      	cmp	r3, #255	; 0xff
 8018df6:	d103      	bne.n	8018e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018df8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018dfa:	29ff      	cmp	r1, #255	; 0xff
 8018dfc:	f000 80de 	beq.w	8018fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8018e00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018e02:	8838      	ldrh	r0, [r7, #0]
 8018e04:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018e06:	434b      	muls	r3, r1
 8018e08:	f103 0c01 	add.w	ip, r3, #1
 8018e0c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8018e10:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018e14:	fa5f fc83 	uxtb.w	ip, r3
 8018e18:	1203      	asrs	r3, r0, #8
 8018e1a:	1215      	asrs	r5, r2, #8
 8018e1c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018e20:	fb13 f30c 	smulbb	r3, r3, ip
 8018e24:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018e28:	fb05 3501 	mla	r5, r5, r1, r3
 8018e2c:	10c3      	asrs	r3, r0, #3
 8018e2e:	10d1      	asrs	r1, r2, #3
 8018e30:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018e34:	fb13 f30c 	smulbb	r3, r3, ip
 8018e38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e3c:	fb01 3104 	mla	r1, r1, r4, r3
 8018e40:	00c3      	lsls	r3, r0, #3
 8018e42:	00d2      	lsls	r2, r2, #3
 8018e44:	b2db      	uxtb	r3, r3
 8018e46:	b2d2      	uxtb	r2, r2
 8018e48:	fb13 f30c 	smulbb	r3, r3, ip
 8018e4c:	b2ad      	uxth	r5, r5
 8018e4e:	fb02 3304 	mla	r3, r2, r4, r3
 8018e52:	b29a      	uxth	r2, r3
 8018e54:	1c6b      	adds	r3, r5, #1
 8018e56:	b289      	uxth	r1, r1
 8018e58:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018e5c:	1c53      	adds	r3, r2, #1
 8018e5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e62:	1c4a      	adds	r2, r1, #1
 8018e64:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018e6c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e70:	0949      	lsrs	r1, r1, #5
 8018e72:	432b      	orrs	r3, r5
 8018e74:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e78:	430b      	orrs	r3, r1
 8018e7a:	803b      	strh	r3, [r7, #0]
 8018e7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e7e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018e80:	4413      	add	r3, r2
 8018e82:	9329      	str	r3, [sp, #164]	; 0xa4
 8018e84:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018e86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018e88:	441a      	add	r2, r3
 8018e8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018e8c:	922a      	str	r2, [sp, #168]	; 0xa8
 8018e8e:	3b01      	subs	r3, #1
 8018e90:	3702      	adds	r7, #2
 8018e92:	9313      	str	r3, [sp, #76]	; 0x4c
 8018e94:	e689      	b.n	8018baa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018e96:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018e98:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8018e9a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8018e9c:	4433      	add	r3, r6
 8018e9e:	9329      	str	r3, [sp, #164]	; 0xa4
 8018ea0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ea2:	441c      	add	r4, r3
 8018ea4:	9b08      	ldr	r3, [sp, #32]
 8018ea6:	942a      	str	r4, [sp, #168]	; 0xa8
 8018ea8:	3b01      	subs	r3, #1
 8018eaa:	9308      	str	r3, [sp, #32]
 8018eac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018eae:	3302      	adds	r3, #2
 8018eb0:	9309      	str	r3, [sp, #36]	; 0x24
 8018eb2:	e658      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018eb4:	d028      	beq.n	8018f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018eb6:	9b08      	ldr	r3, [sp, #32]
 8018eb8:	982b      	ldr	r0, [sp, #172]	; 0xac
 8018eba:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8018ebc:	3b01      	subs	r3, #1
 8018ebe:	fb00 5003 	mla	r0, r0, r3, r5
 8018ec2:	1400      	asrs	r0, r0, #16
 8018ec4:	f53f ae6c 	bmi.w	8018ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ec8:	3901      	subs	r1, #1
 8018eca:	4288      	cmp	r0, r1
 8018ecc:	f6bf ae68 	bge.w	8018ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ed0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8018ed2:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8018ed4:	fb01 0303 	mla	r3, r1, r3, r0
 8018ed8:	141b      	asrs	r3, r3, #16
 8018eda:	f53f ae61 	bmi.w	8018ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ede:	3a01      	subs	r2, #1
 8018ee0:	4293      	cmp	r3, r2
 8018ee2:	f6bf ae5d 	bge.w	8018ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018ee6:	9b08      	ldr	r3, [sp, #32]
 8018ee8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018eec:	9313      	str	r3, [sp, #76]	; 0x4c
 8018eee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018ef2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018ef4:	2b00      	cmp	r3, #0
 8018ef6:	f300 8082 	bgt.w	8018ffe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018efa:	9b08      	ldr	r3, [sp, #32]
 8018efc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f02:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018f06:	9309      	str	r3, [sp, #36]	; 0x24
 8018f08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f0a:	2b00      	cmp	r3, #0
 8018f0c:	f340 81ef 	ble.w	80192ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018f10:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f18:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f1e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f22:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f26:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f2a:	eef0 6a48 	vmov.f32	s13, s16
 8018f2e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f36:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f3a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018f3e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f42:	eef0 6a68 	vmov.f32	s13, s17
 8018f46:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f4a:	ee18 2a10 	vmov	r2, s16
 8018f4e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f56:	ee18 2a90 	vmov	r2, s17
 8018f5a:	932b      	str	r3, [sp, #172]	; 0xac
 8018f5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f62:	932c      	str	r3, [sp, #176]	; 0xb0
 8018f64:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f68:	3b01      	subs	r3, #1
 8018f6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f6e:	9311      	str	r3, [sp, #68]	; 0x44
 8018f70:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f72:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8018f76:	bf08      	it	eq
 8018f78:	4613      	moveq	r3, r2
 8018f7a:	9308      	str	r3, [sp, #32]
 8018f7c:	eef0 8a67 	vmov.f32	s17, s15
 8018f80:	eeb0 8a47 	vmov.f32	s16, s14
 8018f84:	e5e1      	b.n	8018b4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018f86:	fb08 f505 	mul.w	r5, r8, r5
 8018f8a:	fb09 5303 	mla	r3, r9, r3, r5
 8018f8e:	e661      	b.n	8018c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8018f90:	4681      	mov	r9, r0
 8018f92:	e688      	b.n	8018ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8018f94:	f1c1 0210 	rsb	r2, r1, #16
 8018f98:	4341      	muls	r1, r0
 8018f9a:	fb09 1902 	mla	r9, r9, r2, r1
 8018f9e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018fa2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018fa6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018faa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018fb2:	ea42 0909 	orr.w	r9, r2, r9
 8018fb6:	fa1f f289 	uxth.w	r2, r9
 8018fba:	e71b      	b.n	8018df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8018fbc:	803a      	strh	r2, [r7, #0]
 8018fbe:	e75d      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018fc0:	f115 0e01 	adds.w	lr, r5, #1
 8018fc4:	f53f af5a 	bmi.w	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018fc8:	4572      	cmp	r2, lr
 8018fca:	f6ff af57 	blt.w	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018fce:	f110 0e01 	adds.w	lr, r0, #1
 8018fd2:	f53f af53 	bmi.w	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018fd6:	4573      	cmp	r3, lr
 8018fd8:	f6ff af50 	blt.w	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018fdc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018fde:	9502      	str	r5, [sp, #8]
 8018fe0:	b21b      	sxth	r3, r3
 8018fe2:	b212      	sxth	r2, r2
 8018fe4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8018fe8:	9301      	str	r3, [sp, #4]
 8018fea:	9200      	str	r2, [sp, #0]
 8018fec:	e9cd c405 	strd	ip, r4, [sp, #20]
 8018ff0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8018ff4:	4639      	mov	r1, r7
 8018ff6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018ff8:	f7ff fbd2 	bl	80187a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018ffc:	e73e      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018ffe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019000:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019004:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019006:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801900a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801900c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019010:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019012:	141f      	asrs	r7, r3, #16
 8019014:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019016:	141b      	asrs	r3, r3, #16
 8019018:	fb01 3707 	mla	r7, r1, r7, r3
 801901c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801901e:	fa1f fc82 	uxth.w	ip, r2
 8019022:	eb03 0a07 	add.w	sl, r3, r7
 8019026:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801902a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801902e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019032:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019036:	b29b      	uxth	r3, r3
 8019038:	2d00      	cmp	r5, #0
 801903a:	f000 813d 	beq.w	80192b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801903e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019042:	940f      	str	r4, [sp, #60]	; 0x3c
 8019044:	eb0a 0b01 	add.w	fp, sl, r1
 8019048:	fa1f fa85 	uxth.w	sl, r5
 801904c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019050:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019054:	fa1f fa8a 	uxth.w	sl, sl
 8019058:	eba0 000c 	sub.w	r0, r0, ip
 801905c:	eba3 030a 	sub.w	r3, r3, sl
 8019060:	b280      	uxth	r0, r0
 8019062:	fb08 f000 	mul.w	r0, r8, r0
 8019066:	b29b      	uxth	r3, r3
 8019068:	fb09 0303 	mla	r3, r9, r3, r0
 801906c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801906e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019072:	9410      	str	r4, [sp, #64]	; 0x40
 8019074:	fb0a 3300 	mla	r3, sl, r0, r3
 8019078:	fb0c 3304 	mla	r3, ip, r4, r3
 801907c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019080:	2b00      	cmp	r3, #0
 8019082:	f000 810b 	beq.w	801929c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8019086:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019088:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801908a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801908e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019092:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019096:	f000 8114 	beq.w	80192c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 801909a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801909e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80190a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80190a6:	fb09 f707 	mul.w	r7, r9, r7
 80190aa:	fb0a fc0c 	mul.w	ip, sl, ip
 80190ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80190b2:	f107 0b20 	add.w	fp, r7, #32
 80190b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80190ba:	44cc      	add	ip, r9
 80190bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80190c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80190c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80190c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80190cc:	ea4c 0909 	orr.w	r9, ip, r9
 80190d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80190d4:	8847      	ldrh	r7, [r0, #2]
 80190d6:	d019      	beq.n	801910c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 80190d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80190dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80190e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80190e4:	fb08 f807 	mul.w	r8, r8, r7
 80190e8:	fb0a fc0c 	mul.w	ip, sl, ip
 80190ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80190f0:	f108 0b20 	add.w	fp, r8, #32
 80190f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80190f8:	44bc      	add	ip, r7
 80190fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80190fe:	0a3f      	lsrs	r7, r7, #8
 8019100:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019104:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019108:	ea4c 0707 	orr.w	r7, ip, r7
 801910c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019110:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019114:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019118:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801911c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019120:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019124:	ea4c 0909 	orr.w	r9, ip, r9
 8019128:	ea4a 0707 	orr.w	r7, sl, r7
 801912c:	2d00      	cmp	r5, #0
 801912e:	f000 80ca 	beq.w	80192c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8019132:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019136:	3901      	subs	r1, #1
 8019138:	0049      	lsls	r1, r1, #1
 801913a:	3102      	adds	r1, #2
 801913c:	eb00 0c01 	add.w	ip, r0, r1
 8019140:	5a41      	ldrh	r1, [r0, r1]
 8019142:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019144:	28ff      	cmp	r0, #255	; 0xff
 8019146:	d019      	beq.n	801917c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8019148:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801914a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801914e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019152:	fb04 fa01 	mul.w	sl, r4, r1
 8019156:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801915a:	fb08 f800 	mul.w	r8, r8, r0
 801915e:	f10a 0020 	add.w	r0, sl, #32
 8019162:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019166:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801916a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801916e:	4441      	add	r1, r8
 8019170:	0a00      	lsrs	r0, r0, #8
 8019172:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019176:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801917a:	4301      	orrs	r1, r0
 801917c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801917e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019182:	2cff      	cmp	r4, #255	; 0xff
 8019184:	d01a      	beq.n	80191bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8019186:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801918a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801918e:	fb04 fa00 	mul.w	sl, r4, r0
 8019192:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019196:	fb08 f80c 	mul.w	r8, r8, ip
 801919a:	f10a 0c20 	add.w	ip, sl, #32
 801919e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80191a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80191a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80191aa:	4440      	add	r0, r8
 80191ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80191b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80191b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80191b8:	ea40 000c 	orr.w	r0, r0, ip
 80191bc:	fb15 fc02 	smulbb	ip, r5, r2
 80191c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80191c4:	f1c5 0810 	rsb	r8, r5, #16
 80191c8:	eba8 0802 	sub.w	r8, r8, r2
 80191cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80191d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80191d4:	437a      	muls	r2, r7
 80191d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80191da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80191de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80191e6:	fb09 2208 	mla	r2, r9, r8, r2
 80191ea:	ea4a 0101 	orr.w	r1, sl, r1
 80191ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80191f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80191f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191fa:	fb05 2201 	mla	r2, r5, r1, r2
 80191fe:	ea4b 0000 	orr.w	r0, fp, r0
 8019202:	fb0c 2200 	mla	r2, ip, r0, r2
 8019206:	0d57      	lsrs	r7, r2, #21
 8019208:	0952      	lsrs	r2, r2, #5
 801920a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801920e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019212:	433a      	orrs	r2, r7
 8019214:	2bff      	cmp	r3, #255	; 0xff
 8019216:	b292      	uxth	r2, r2
 8019218:	d102      	bne.n	8019220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801921a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801921c:	29ff      	cmp	r1, #255	; 0xff
 801921e:	d063      	beq.n	80192e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8019220:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019222:	f8be 1000 	ldrh.w	r1, [lr]
 8019226:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019228:	4343      	muls	r3, r0
 801922a:	1c58      	adds	r0, r3, #1
 801922c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8019230:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019234:	1208      	asrs	r0, r1, #8
 8019236:	b2db      	uxtb	r3, r3
 8019238:	1215      	asrs	r5, r2, #8
 801923a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801923e:	fb10 f003 	smulbb	r0, r0, r3
 8019242:	10cf      	asrs	r7, r1, #3
 8019244:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019248:	00c9      	lsls	r1, r1, #3
 801924a:	fb05 0504 	mla	r5, r5, r4, r0
 801924e:	b2c9      	uxtb	r1, r1
 8019250:	10d0      	asrs	r0, r2, #3
 8019252:	00d2      	lsls	r2, r2, #3
 8019254:	fb11 f103 	smulbb	r1, r1, r3
 8019258:	b2d2      	uxtb	r2, r2
 801925a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801925e:	fb02 1204 	mla	r2, r2, r4, r1
 8019262:	fb17 f703 	smulbb	r7, r7, r3
 8019266:	b2ad      	uxth	r5, r5
 8019268:	b292      	uxth	r2, r2
 801926a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801926e:	fb00 7004 	mla	r0, r0, r4, r7
 8019272:	1c6b      	adds	r3, r5, #1
 8019274:	1c57      	adds	r7, r2, #1
 8019276:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801927a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801927e:	b280      	uxth	r0, r0
 8019280:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019284:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019288:	433d      	orrs	r5, r7
 801928a:	1c47      	adds	r7, r0, #1
 801928c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019290:	097f      	lsrs	r7, r7, #5
 8019292:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019296:	433d      	orrs	r5, r7
 8019298:	f8ae 5000 	strh.w	r5, [lr]
 801929c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801929e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80192a0:	4413      	add	r3, r2
 80192a2:	9329      	str	r3, [sp, #164]	; 0xa4
 80192a4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80192a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80192a8:	441a      	add	r2, r3
 80192aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80192ac:	922a      	str	r2, [sp, #168]	; 0xa8
 80192ae:	3b01      	subs	r3, #1
 80192b0:	f10e 0e02 	add.w	lr, lr, #2
 80192b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80192b6:	e61c      	b.n	8018ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 80192b8:	fb08 f000 	mul.w	r0, r8, r0
 80192bc:	fb09 0303 	mla	r3, r9, r3, r0
 80192c0:	e6dc      	b.n	801907c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 80192c2:	46b9      	mov	r9, r7
 80192c4:	e704      	b.n	80190d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 80192c6:	f1c2 0110 	rsb	r1, r2, #16
 80192ca:	437a      	muls	r2, r7
 80192cc:	fb09 2901 	mla	r9, r9, r1, r2
 80192d0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80192d4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80192d8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80192dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80192e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80192e4:	4302      	orrs	r2, r0
 80192e6:	e795      	b.n	8019214 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80192e8:	f8ae 2000 	strh.w	r2, [lr]
 80192ec:	e7d6      	b.n	801929c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80192ee:	b017      	add	sp, #92	; 0x5c
 80192f0:	ecbd 8b08 	vpop	{d8-d11}
 80192f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80192f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192fc:	b085      	sub	sp, #20
 80192fe:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8019302:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019306:	9103      	str	r1, [sp, #12]
 8019308:	fb05 7106 	mla	r1, r5, r6, r7
 801930c:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8019310:	2d00      	cmp	r5, #0
 8019312:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019316:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801931a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801931e:	9401      	str	r4, [sp, #4]
 8019320:	eb02 0901 	add.w	r9, r2, r1
 8019324:	f2c0 80c0 	blt.w	80194a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8019328:	45a8      	cmp	r8, r5
 801932a:	f340 80bd 	ble.w	80194a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801932e:	2f00      	cmp	r7, #0
 8019330:	f2c0 80b6 	blt.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8019334:	42be      	cmp	r6, r7
 8019336:	f340 80b3 	ble.w	80194a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801933a:	f812 c001 	ldrb.w	ip, [r2, r1]
 801933e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8019342:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019346:	d019      	beq.n	801937c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8019348:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801934c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019350:	435a      	muls	r2, r3
 8019352:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8019356:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801935a:	fb0c f403 	mul.w	r4, ip, r3
 801935e:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8019362:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019366:	441a      	add	r2, r3
 8019368:	f104 0320 	add.w	r3, r4, #32
 801936c:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8019370:	0a1b      	lsrs	r3, r3, #8
 8019372:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8019376:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801937a:	4319      	orrs	r1, r3
 801937c:	b289      	uxth	r1, r1
 801937e:	1c7b      	adds	r3, r7, #1
 8019380:	f100 8097 	bmi.w	80194b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8019384:	429e      	cmp	r6, r3
 8019386:	f340 8094 	ble.w	80194b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801938a:	2800      	cmp	r0, #0
 801938c:	f000 8094 	beq.w	80194b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8019390:	f899 4001 	ldrb.w	r4, [r9, #1]
 8019394:	9b01      	ldr	r3, [sp, #4]
 8019396:	2cff      	cmp	r4, #255	; 0xff
 8019398:	885b      	ldrh	r3, [r3, #2]
 801939a:	d01b      	beq.n	80193d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801939c:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80193a0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80193a4:	fb0a f202 	mul.w	r2, sl, r2
 80193a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193ac:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80193b0:	fb04 fa03 	mul.w	sl, r4, r3
 80193b4:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80193b8:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80193bc:	441a      	add	r2, r3
 80193be:	f10a 0320 	add.w	r3, sl, #32
 80193c2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80193c6:	0a1b      	lsrs	r3, r3, #8
 80193c8:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80193cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193d0:	ea4b 0303 	orr.w	r3, fp, r3
 80193d4:	b29b      	uxth	r3, r3
 80193d6:	3501      	adds	r5, #1
 80193d8:	d474      	bmi.n	80194c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80193da:	45a8      	cmp	r8, r5
 80193dc:	dd72      	ble.n	80194c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80193de:	f1be 0f00 	cmp.w	lr, #0
 80193e2:	f000 8110 	beq.w	8019606 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 80193e6:	2f00      	cmp	r7, #0
 80193e8:	db69      	blt.n	80194be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80193ea:	42be      	cmp	r6, r7
 80193ec:	dd67      	ble.n	80194be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80193ee:	f819 5006 	ldrb.w	r5, [r9, r6]
 80193f2:	9a01      	ldr	r2, [sp, #4]
 80193f4:	2dff      	cmp	r5, #255	; 0xff
 80193f6:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80193fa:	d01c      	beq.n	8019436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80193fc:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8019400:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019404:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019408:	fb05 fa0b 	mul.w	sl, r5, fp
 801940c:	fb08 f802 	mul.w	r8, r8, r2
 8019410:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019414:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8019418:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801941c:	4490      	add	r8, r2
 801941e:	f10a 0220 	add.w	r2, sl, #32
 8019422:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8019426:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801942a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801942e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019432:	ea4b 0b0a 	orr.w	fp, fp, sl
 8019436:	fa1f fb8b 	uxth.w	fp, fp
 801943a:	3701      	adds	r7, #1
 801943c:	d447      	bmi.n	80194ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801943e:	42be      	cmp	r6, r7
 8019440:	dd45      	ble.n	80194ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8019442:	2800      	cmp	r0, #0
 8019444:	d046      	beq.n	80194d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8019446:	3601      	adds	r6, #1
 8019448:	9a01      	ldr	r2, [sp, #4]
 801944a:	f819 7006 	ldrb.w	r7, [r9, r6]
 801944e:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8019452:	2fff      	cmp	r7, #255	; 0xff
 8019454:	d01a      	beq.n	801948c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8019456:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801945a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801945e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019462:	fb07 f902 	mul.w	r9, r7, r2
 8019466:	fb08 f806 	mul.w	r8, r8, r6
 801946a:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801946e:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8019472:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019476:	44b0      	add	r8, r6
 8019478:	f109 0620 	add.w	r6, r9, #32
 801947c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8019480:	0a36      	lsrs	r6, r6, #8
 8019482:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019486:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801948a:	4332      	orrs	r2, r6
 801948c:	b292      	uxth	r2, r2
 801948e:	280f      	cmp	r0, #15
 8019490:	d922      	bls.n	80194d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8019492:	4b61      	ldr	r3, [pc, #388]	; (8019618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8019494:	4a61      	ldr	r2, [pc, #388]	; (801961c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8019496:	4862      	ldr	r0, [pc, #392]	; (8019620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8019498:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801949c:	f003 fc7c 	bl	801cd98 <__assert_func>
 80194a0:	f04f 0c00 	mov.w	ip, #0
 80194a4:	4661      	mov	r1, ip
 80194a6:	e76a      	b.n	801937e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80194a8:	2400      	movs	r4, #0
 80194aa:	46a4      	mov	ip, r4
 80194ac:	4623      	mov	r3, r4
 80194ae:	4621      	mov	r1, r4
 80194b0:	e791      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80194b2:	2400      	movs	r4, #0
 80194b4:	4623      	mov	r3, r4
 80194b6:	e78e      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80194b8:	4604      	mov	r4, r0
 80194ba:	4603      	mov	r3, r0
 80194bc:	e78b      	b.n	80193d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80194be:	2500      	movs	r5, #0
 80194c0:	46ab      	mov	fp, r5
 80194c2:	e7ba      	b.n	801943a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 80194c4:	2700      	movs	r7, #0
 80194c6:	463d      	mov	r5, r7
 80194c8:	463a      	mov	r2, r7
 80194ca:	46bb      	mov	fp, r7
 80194cc:	e7df      	b.n	801948e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80194ce:	2700      	movs	r7, #0
 80194d0:	463a      	mov	r2, r7
 80194d2:	e7dc      	b.n	801948e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80194d4:	4607      	mov	r7, r0
 80194d6:	4602      	mov	r2, r0
 80194d8:	f1be 0f0f 	cmp.w	lr, #15
 80194dc:	d8d9      	bhi.n	8019492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80194de:	b286      	uxth	r6, r0
 80194e0:	fa1f f98e 	uxth.w	r9, lr
 80194e4:	fb06 f809 	mul.w	r8, r6, r9
 80194e8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80194ec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80194f0:	0136      	lsls	r6, r6, #4
 80194f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80194fa:	9601      	str	r6, [sp, #4]
 80194fc:	ea4a 0101 	orr.w	r1, sl, r1
 8019500:	fa1f f689 	uxth.w	r6, r9
 8019504:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8019508:	fb10 f90e 	smulbb	r9, r0, lr
 801950c:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8019510:	9602      	str	r6, [sp, #8]
 8019512:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019516:	460e      	mov	r6, r1
 8019518:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801951c:	f1ce 0110 	rsb	r1, lr, #16
 8019520:	1a09      	subs	r1, r1, r0
 8019522:	ea4a 0303 	orr.w	r3, sl, r3
 8019526:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801952a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801952e:	4343      	muls	r3, r0
 8019530:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8019534:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019538:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801953c:	fb01 3106 	mla	r1, r1, r6, r3
 8019540:	ea4a 0202 	orr.w	r2, sl, r2
 8019544:	fb09 1302 	mla	r3, r9, r2, r1
 8019548:	9a03      	ldr	r2, [sp, #12]
 801954a:	9802      	ldr	r0, [sp, #8]
 801954c:	8811      	ldrh	r1, [r2, #0]
 801954e:	9a01      	ldr	r2, [sp, #4]
 8019550:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019554:	1a12      	subs	r2, r2, r0
 8019556:	9801      	ldr	r0, [sp, #4]
 8019558:	eba0 0608 	sub.w	r6, r0, r8
 801955c:	b2b6      	uxth	r6, r6
 801955e:	b292      	uxth	r2, r2
 8019560:	4374      	muls	r4, r6
 8019562:	fb0c 4402 	mla	r4, ip, r2, r4
 8019566:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801956a:	9a02      	ldr	r2, [sp, #8]
 801956c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019570:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019574:	fb02 4505 	mla	r5, r2, r5, r4
 8019578:	ea4a 0b0b 	orr.w	fp, sl, fp
 801957c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019580:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8019584:	fb08 5707 	mla	r7, r8, r7, r5
 8019588:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801958c:	120a      	asrs	r2, r1, #8
 801958e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019592:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8019596:	b2ff      	uxtb	r7, r7
 8019598:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801959c:	10c8      	asrs	r0, r1, #3
 801959e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80195a2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80195a6:	00c9      	lsls	r1, r1, #3
 80195a8:	437a      	muls	r2, r7
 80195aa:	ea43 0e0e 	orr.w	lr, r3, lr
 80195ae:	b2c9      	uxtb	r1, r1
 80195b0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80195b4:	fa1f f38e 	uxth.w	r3, lr
 80195b8:	4378      	muls	r0, r7
 80195ba:	434f      	muls	r7, r1
 80195bc:	1c51      	adds	r1, r2, #1
 80195be:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80195c2:	121a      	asrs	r2, r3, #8
 80195c4:	f022 0207 	bic.w	r2, r2, #7
 80195c8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80195cc:	1c41      	adds	r1, r0, #1
 80195ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80195d2:	10d9      	asrs	r1, r3, #3
 80195d4:	f021 0103 	bic.w	r1, r1, #3
 80195d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80195dc:	0212      	lsls	r2, r2, #8
 80195de:	00c9      	lsls	r1, r1, #3
 80195e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80195e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80195e8:	430a      	orrs	r2, r1
 80195ea:	1c79      	adds	r1, r7, #1
 80195ec:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80195f0:	00db      	lsls	r3, r3, #3
 80195f2:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80195f6:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80195fa:	4313      	orrs	r3, r2
 80195fc:	9a03      	ldr	r2, [sp, #12]
 80195fe:	8013      	strh	r3, [r2, #0]
 8019600:	b005      	add	sp, #20
 8019602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019606:	280f      	cmp	r0, #15
 8019608:	f63f af43 	bhi.w	8019492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801960c:	4677      	mov	r7, lr
 801960e:	4675      	mov	r5, lr
 8019610:	4672      	mov	r2, lr
 8019612:	46f3      	mov	fp, lr
 8019614:	e763      	b.n	80194de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8019616:	bf00      	nop
 8019618:	08021456 	.word	0x08021456
 801961c:	08021a22 	.word	0x08021a22
 8019620:	080214da 	.word	0x080214da

08019624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019628:	ed2d 8b08 	vpush	{d8-d11}
 801962c:	b093      	sub	sp, #76	; 0x4c
 801962e:	eeb0 aa40 	vmov.f32	s20, s0
 8019632:	9210      	str	r2, [sp, #64]	; 0x40
 8019634:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019636:	910e      	str	r1, [sp, #56]	; 0x38
 8019638:	9306      	str	r3, [sp, #24]
 801963a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801963e:	9011      	str	r0, [sp, #68]	; 0x44
 8019640:	6850      	ldr	r0, [r2, #4]
 8019642:	6812      	ldr	r2, [r2, #0]
 8019644:	fb00 1303 	mla	r3, r0, r3, r1
 8019648:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801964c:	9307      	str	r3, [sp, #28]
 801964e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019650:	681b      	ldr	r3, [r3, #0]
 8019652:	9308      	str	r3, [sp, #32]
 8019654:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019656:	685b      	ldr	r3, [r3, #4]
 8019658:	9309      	str	r3, [sp, #36]	; 0x24
 801965a:	eef0 9a60 	vmov.f32	s19, s1
 801965e:	eeb0 9a41 	vmov.f32	s18, s2
 8019662:	eeb0 8a62 	vmov.f32	s16, s5
 8019666:	eef0 8a43 	vmov.f32	s17, s6
 801966a:	eef0 ba44 	vmov.f32	s23, s8
 801966e:	eeb0 ba64 	vmov.f32	s22, s9
 8019672:	eef0 aa45 	vmov.f32	s21, s10
 8019676:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019678:	2b00      	cmp	r3, #0
 801967a:	dc03      	bgt.n	8019684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801967c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801967e:	2b00      	cmp	r3, #0
 8019680:	f340 83b7 	ble.w	8019df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8019684:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019686:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801968a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801968e:	1e48      	subs	r0, r1, #1
 8019690:	1e55      	subs	r5, r2, #1
 8019692:	9b06      	ldr	r3, [sp, #24]
 8019694:	2b00      	cmp	r3, #0
 8019696:	f340 819a 	ble.w	80199ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801969a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801969c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801969e:	1436      	asrs	r6, r6, #16
 80196a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80196a4:	d406      	bmi.n	80196b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196a6:	4286      	cmp	r6, r0
 80196a8:	da04      	bge.n	80196b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196aa:	2b00      	cmp	r3, #0
 80196ac:	db02      	blt.n	80196b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196ae:	42ab      	cmp	r3, r5
 80196b0:	f2c0 818e 	blt.w	80199d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80196b4:	3601      	adds	r6, #1
 80196b6:	f100 817b 	bmi.w	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80196ba:	42b1      	cmp	r1, r6
 80196bc:	f2c0 8178 	blt.w	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80196c0:	3301      	adds	r3, #1
 80196c2:	f100 8175 	bmi.w	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80196c6:	429a      	cmp	r2, r3
 80196c8:	f2c0 8172 	blt.w	80199b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80196cc:	9b06      	ldr	r3, [sp, #24]
 80196ce:	9f07      	ldr	r7, [sp, #28]
 80196d0:	930f      	str	r3, [sp, #60]	; 0x3c
 80196d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80196d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80196d8:	2b00      	cmp	r3, #0
 80196da:	f340 819b 	ble.w	8019a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80196de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196e0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80196e2:	1418      	asrs	r0, r3, #16
 80196e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80196e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80196ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80196ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80196f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196f2:	142d      	asrs	r5, r5, #16
 80196f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80196f8:	f100 81ef 	bmi.w	8019ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 80196fc:	f102 3eff 	add.w	lr, r2, #4294967295
 8019700:	4575      	cmp	r5, lr
 8019702:	f280 81ea 	bge.w	8019ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8019706:	2800      	cmp	r0, #0
 8019708:	f2c0 81e7 	blt.w	8019ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 801970c:	f103 3eff 	add.w	lr, r3, #4294967295
 8019710:	4570      	cmp	r0, lr
 8019712:	f280 81e2 	bge.w	8019ada <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8019716:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019718:	b212      	sxth	r2, r2
 801971a:	fb00 5002 	mla	r0, r0, r2, r5
 801971e:	fa1f fe81 	uxth.w	lr, r1
 8019722:	eb03 0a00 	add.w	sl, r3, r0
 8019726:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801972a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801972e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019732:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019736:	b29b      	uxth	r3, r3
 8019738:	f1bc 0f00 	cmp.w	ip, #0
 801973c:	f000 81b0 	beq.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8019740:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019744:	940a      	str	r4, [sp, #40]	; 0x28
 8019746:	eb0a 0b02 	add.w	fp, sl, r2
 801974a:	fa1f fa8c 	uxth.w	sl, ip
 801974e:	fb0a fe0e 	mul.w	lr, sl, lr
 8019752:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019756:	fa1f fa8a 	uxth.w	sl, sl
 801975a:	eba5 050e 	sub.w	r5, r5, lr
 801975e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019762:	940b      	str	r4, [sp, #44]	; 0x2c
 8019764:	eba3 030a 	sub.w	r3, r3, sl
 8019768:	b2ad      	uxth	r5, r5
 801976a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801976c:	b29b      	uxth	r3, r3
 801976e:	fb08 f505 	mul.w	r5, r8, r5
 8019772:	fb09 5303 	mla	r3, r9, r3, r5
 8019776:	fb0a 3304 	mla	r3, sl, r4, r3
 801977a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801977c:	fb0e 3304 	mla	r3, lr, r4, r3
 8019780:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019784:	2b00      	cmp	r3, #0
 8019786:	f000 8106 	beq.w	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801978a:	9c08      	ldr	r4, [sp, #32]
 801978c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019790:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019794:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019798:	f000 8187 	beq.w	8019aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801979c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80197a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80197a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197a8:	fb09 f000 	mul.w	r0, r9, r0
 80197ac:	fb0a fe0e 	mul.w	lr, sl, lr
 80197b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80197b4:	f100 0b20 	add.w	fp, r0, #32
 80197b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80197bc:	44ce      	add	lr, r9
 80197be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80197c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80197c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80197ca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80197ce:	ea4e 0909 	orr.w	r9, lr, r9
 80197d2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80197d6:	8868      	ldrh	r0, [r5, #2]
 80197d8:	d019      	beq.n	801980e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80197da:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80197de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80197e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197e6:	fb08 f800 	mul.w	r8, r8, r0
 80197ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80197ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80197f2:	f108 0b20 	add.w	fp, r8, #32
 80197f6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80197fa:	4486      	add	lr, r0
 80197fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019800:	0a00      	lsrs	r0, r0, #8
 8019802:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019806:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801980a:	ea4e 0000 	orr.w	r0, lr, r0
 801980e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019812:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019816:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801981a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801981e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019822:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019826:	ea4e 0909 	orr.w	r9, lr, r9
 801982a:	ea4a 0000 	orr.w	r0, sl, r0
 801982e:	f1bc 0f00 	cmp.w	ip, #0
 8019832:	f000 813c 	beq.w	8019aae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8019836:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801983a:	3a01      	subs	r2, #1
 801983c:	0052      	lsls	r2, r2, #1
 801983e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019840:	3202      	adds	r2, #2
 8019842:	2cff      	cmp	r4, #255	; 0xff
 8019844:	eb05 0e02 	add.w	lr, r5, r2
 8019848:	5aaa      	ldrh	r2, [r5, r2]
 801984a:	d018      	beq.n	801987e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801984c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019850:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019854:	fb04 fa02 	mul.w	sl, r4, r2
 8019858:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801985c:	fb08 f805 	mul.w	r8, r8, r5
 8019860:	f10a 0520 	add.w	r5, sl, #32
 8019864:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019868:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801986c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019870:	4442      	add	r2, r8
 8019872:	0a2d      	lsrs	r5, r5, #8
 8019874:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801987c:	432a      	orrs	r2, r5
 801987e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019880:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019884:	2cff      	cmp	r4, #255	; 0xff
 8019886:	d01a      	beq.n	80198be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019888:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801988c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019890:	fb04 fa05 	mul.w	sl, r4, r5
 8019894:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019898:	fb08 f80e 	mul.w	r8, r8, lr
 801989c:	f10a 0e20 	add.w	lr, sl, #32
 80198a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80198a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80198a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80198ac:	4445      	add	r5, r8
 80198ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80198b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80198b6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80198ba:	ea45 050e 	orr.w	r5, r5, lr
 80198be:	fb1c fe01 	smulbb	lr, ip, r1
 80198c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80198c6:	f1cc 0810 	rsb	r8, ip, #16
 80198ca:	eba8 0801 	sub.w	r8, r8, r1
 80198ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80198d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80198d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80198da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80198de:	4341      	muls	r1, r0
 80198e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80198e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80198e8:	ea4a 0202 	orr.w	r2, sl, r2
 80198ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80198f0:	fb09 1108 	mla	r1, r9, r8, r1
 80198f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80198f8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80198fc:	fb0c 1102 	mla	r1, ip, r2, r1
 8019900:	ea4b 0505 	orr.w	r5, fp, r5
 8019904:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019908:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801990c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019910:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019914:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019918:	ea42 0e0e 	orr.w	lr, r2, lr
 801991c:	fa1f f28e 	uxth.w	r2, lr
 8019920:	2bff      	cmp	r3, #255	; 0xff
 8019922:	f000 80d8 	beq.w	8019ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019926:	f8b7 c000 	ldrh.w	ip, [r7]
 801992a:	43db      	mvns	r3, r3
 801992c:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019930:	fa5f fe83 	uxtb.w	lr, r3
 8019934:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019938:	fb00 f00e 	mul.w	r0, r0, lr
 801993c:	1c41      	adds	r1, r0, #1
 801993e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019942:	1211      	asrs	r1, r2, #8
 8019944:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019948:	f021 0107 	bic.w	r1, r1, #7
 801994c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019950:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019954:	486f      	ldr	r0, [pc, #444]	; (8019b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8019956:	fb05 f50e 	mul.w	r5, r5, lr
 801995a:	b2c9      	uxtb	r1, r1
 801995c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8019960:	1c69      	adds	r1, r5, #1
 8019962:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019966:	10d1      	asrs	r1, r2, #3
 8019968:	f021 0103 	bic.w	r1, r1, #3
 801996c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019970:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019974:	b2db      	uxtb	r3, r3
 8019976:	00c9      	lsls	r1, r1, #3
 8019978:	fb03 f30e 	mul.w	r3, r3, lr
 801997c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019980:	4301      	orrs	r1, r0
 8019982:	1c58      	adds	r0, r3, #1
 8019984:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019988:	00d3      	lsls	r3, r2, #3
 801998a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801998e:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019992:	4319      	orrs	r1, r3
 8019994:	8039      	strh	r1, [r7, #0]
 8019996:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019998:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801999a:	4413      	add	r3, r2
 801999c:	9325      	str	r3, [sp, #148]	; 0x94
 801999e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80199a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80199a2:	441a      	add	r2, r3
 80199a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80199a6:	9226      	str	r2, [sp, #152]	; 0x98
 80199a8:	3b01      	subs	r3, #1
 80199aa:	3702      	adds	r7, #2
 80199ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80199ae:	e692      	b.n	80196d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80199b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199b2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80199b4:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80199b6:	4433      	add	r3, r6
 80199b8:	9325      	str	r3, [sp, #148]	; 0x94
 80199ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80199bc:	441c      	add	r4, r3
 80199be:	9b06      	ldr	r3, [sp, #24]
 80199c0:	9426      	str	r4, [sp, #152]	; 0x98
 80199c2:	3b01      	subs	r3, #1
 80199c4:	9306      	str	r3, [sp, #24]
 80199c6:	9b07      	ldr	r3, [sp, #28]
 80199c8:	3302      	adds	r3, #2
 80199ca:	9307      	str	r3, [sp, #28]
 80199cc:	e661      	b.n	8019692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80199ce:	d028      	beq.n	8019a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 80199d0:	9b06      	ldr	r3, [sp, #24]
 80199d2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80199d4:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80199d6:	3b01      	subs	r3, #1
 80199d8:	fb00 5003 	mla	r0, r0, r3, r5
 80199dc:	1400      	asrs	r0, r0, #16
 80199de:	f53f ae75 	bmi.w	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80199e2:	3901      	subs	r1, #1
 80199e4:	4288      	cmp	r0, r1
 80199e6:	f6bf ae71 	bge.w	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80199ea:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80199ec:	9826      	ldr	r0, [sp, #152]	; 0x98
 80199ee:	fb01 0303 	mla	r3, r1, r3, r0
 80199f2:	141b      	asrs	r3, r3, #16
 80199f4:	f53f ae6a 	bmi.w	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80199f8:	3a01      	subs	r2, #1
 80199fa:	4293      	cmp	r3, r2
 80199fc:	f6bf ae66 	bge.w	80196cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019a00:	9b06      	ldr	r3, [sp, #24]
 8019a02:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019a06:	930f      	str	r3, [sp, #60]	; 0x3c
 8019a08:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019a0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a0e:	2b00      	cmp	r3, #0
 8019a10:	f300 8082 	bgt.w	8019b18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019a14:	9b06      	ldr	r3, [sp, #24]
 8019a16:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019a1a:	9b07      	ldr	r3, [sp, #28]
 8019a1c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019a20:	9307      	str	r3, [sp, #28]
 8019a22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a24:	2b00      	cmp	r3, #0
 8019a26:	f340 81e4 	ble.w	8019df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8019a2a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019a2e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019a32:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019a36:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a38:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019a3c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019a40:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019a44:	eef0 6a48 	vmov.f32	s13, s16
 8019a48:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019a4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a50:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019a54:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8019a58:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019a5c:	eef0 6a68 	vmov.f32	s13, s17
 8019a60:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019a64:	ee18 2a10 	vmov	r2, s16
 8019a68:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019a6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a70:	ee18 2a90 	vmov	r2, s17
 8019a74:	9327      	str	r3, [sp, #156]	; 0x9c
 8019a76:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a78:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a7c:	9328      	str	r3, [sp, #160]	; 0xa0
 8019a7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a80:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a82:	3b01      	subs	r3, #1
 8019a84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a88:	930e      	str	r3, [sp, #56]	; 0x38
 8019a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a8c:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8019a90:	bf08      	it	eq
 8019a92:	4613      	moveq	r3, r2
 8019a94:	9306      	str	r3, [sp, #24]
 8019a96:	eef0 8a67 	vmov.f32	s17, s15
 8019a9a:	eeb0 8a47 	vmov.f32	s16, s14
 8019a9e:	e5ea      	b.n	8019676 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019aa0:	fb08 f505 	mul.w	r5, r8, r5
 8019aa4:	fb09 5303 	mla	r3, r9, r3, r5
 8019aa8:	e66a      	b.n	8019780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019aaa:	4681      	mov	r9, r0
 8019aac:	e691      	b.n	80197d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019aae:	f1c1 0210 	rsb	r2, r1, #16
 8019ab2:	4341      	muls	r1, r0
 8019ab4:	fb09 1902 	mla	r9, r9, r2, r1
 8019ab8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019abc:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019ac0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ac4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019ac8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019acc:	ea42 0909 	orr.w	r9, r2, r9
 8019ad0:	fa1f f289 	uxth.w	r2, r9
 8019ad4:	e724      	b.n	8019920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019ad6:	803a      	strh	r2, [r7, #0]
 8019ad8:	e75d      	b.n	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019ada:	f115 0e01 	adds.w	lr, r5, #1
 8019ade:	f53f af5a 	bmi.w	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019ae2:	4572      	cmp	r2, lr
 8019ae4:	f6ff af57 	blt.w	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019ae8:	f110 0e01 	adds.w	lr, r0, #1
 8019aec:	f53f af53 	bmi.w	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019af0:	4573      	cmp	r3, lr
 8019af2:	f6ff af50 	blt.w	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019af6:	b21b      	sxth	r3, r3
 8019af8:	b212      	sxth	r2, r2
 8019afa:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019afe:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8019b02:	9301      	str	r3, [sp, #4]
 8019b04:	9200      	str	r2, [sp, #0]
 8019b06:	4639      	mov	r1, r7
 8019b08:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019b0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019b0e:	f7ff fbf3 	bl	80192f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019b12:	e740      	b.n	8019996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019b14:	fffff800 	.word	0xfffff800
 8019b18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019b1a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019b1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b20:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019b24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019b26:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b2c:	141f      	asrs	r7, r3, #16
 8019b2e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019b30:	141b      	asrs	r3, r3, #16
 8019b32:	fb01 3707 	mla	r7, r1, r7, r3
 8019b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b38:	fa1f fc82 	uxth.w	ip, r2
 8019b3c:	eb03 0a07 	add.w	sl, r3, r7
 8019b40:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019b44:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019b48:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019b4c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019b50:	b29b      	uxth	r3, r3
 8019b52:	2d00      	cmp	r5, #0
 8019b54:	f000 8132 	beq.w	8019dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 8019b58:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019b5c:	940c      	str	r4, [sp, #48]	; 0x30
 8019b5e:	eb0a 0b01 	add.w	fp, sl, r1
 8019b62:	fa1f fa85 	uxth.w	sl, r5
 8019b66:	fb0a fc0c 	mul.w	ip, sl, ip
 8019b6a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019b6e:	fa1f fa8a 	uxth.w	sl, sl
 8019b72:	eba0 000c 	sub.w	r0, r0, ip
 8019b76:	eba3 030a 	sub.w	r3, r3, sl
 8019b7a:	b280      	uxth	r0, r0
 8019b7c:	fb08 f000 	mul.w	r0, r8, r0
 8019b80:	b29b      	uxth	r3, r3
 8019b82:	fb09 0303 	mla	r3, r9, r3, r0
 8019b86:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019b88:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019b8c:	940d      	str	r4, [sp, #52]	; 0x34
 8019b8e:	fb0a 3300 	mla	r3, sl, r0, r3
 8019b92:	fb0c 3304 	mla	r3, ip, r4, r3
 8019b96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019b9a:	2b00      	cmp	r3, #0
 8019b9c:	f000 8100 	beq.w	8019da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 8019ba0:	9808      	ldr	r0, [sp, #32]
 8019ba2:	9c08      	ldr	r4, [sp, #32]
 8019ba4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019ba8:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019bac:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019bb0:	f000 8109 	beq.w	8019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 8019bb4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019bb8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019bbc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019bc0:	fb09 f707 	mul.w	r7, r9, r7
 8019bc4:	fb0a fc0c 	mul.w	ip, sl, ip
 8019bc8:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019bcc:	f107 0b20 	add.w	fp, r7, #32
 8019bd0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019bd4:	44cc      	add	ip, r9
 8019bd6:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019bda:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019bde:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019be2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019be6:	ea4c 0909 	orr.w	r9, ip, r9
 8019bea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019bee:	8847      	ldrh	r7, [r0, #2]
 8019bf0:	d019      	beq.n	8019c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 8019bf2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019bf6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019bfa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019bfe:	fb08 f807 	mul.w	r8, r8, r7
 8019c02:	fb0a fc0c 	mul.w	ip, sl, ip
 8019c06:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019c0a:	f108 0b20 	add.w	fp, r8, #32
 8019c0e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019c12:	44bc      	add	ip, r7
 8019c14:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019c18:	0a3f      	lsrs	r7, r7, #8
 8019c1a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019c1e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019c22:	ea4c 0707 	orr.w	r7, ip, r7
 8019c26:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019c2a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019c2e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c32:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019c36:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019c3a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019c3e:	ea4c 0909 	orr.w	r9, ip, r9
 8019c42:	ea4a 0707 	orr.w	r7, sl, r7
 8019c46:	2d00      	cmp	r5, #0
 8019c48:	f000 80bf 	beq.w	8019dca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 8019c4c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019c50:	3901      	subs	r1, #1
 8019c52:	0049      	lsls	r1, r1, #1
 8019c54:	3102      	adds	r1, #2
 8019c56:	eb00 0c01 	add.w	ip, r0, r1
 8019c5a:	5a41      	ldrh	r1, [r0, r1]
 8019c5c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019c5e:	28ff      	cmp	r0, #255	; 0xff
 8019c60:	d019      	beq.n	8019c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 8019c62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019c64:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019c68:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019c6c:	fb04 fa01 	mul.w	sl, r4, r1
 8019c70:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019c74:	fb08 f800 	mul.w	r8, r8, r0
 8019c78:	f10a 0020 	add.w	r0, sl, #32
 8019c7c:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019c80:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019c84:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019c88:	4441      	add	r1, r8
 8019c8a:	0a00      	lsrs	r0, r0, #8
 8019c8c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019c90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c94:	4301      	orrs	r1, r0
 8019c96:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019c98:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019c9c:	2cff      	cmp	r4, #255	; 0xff
 8019c9e:	d01a      	beq.n	8019cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 8019ca0:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019ca4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019ca8:	fb04 fa00 	mul.w	sl, r4, r0
 8019cac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019cb0:	fb08 f80c 	mul.w	r8, r8, ip
 8019cb4:	f10a 0c20 	add.w	ip, sl, #32
 8019cb8:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019cbc:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019cc0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019cc4:	4440      	add	r0, r8
 8019cc6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019cca:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019cce:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019cd2:	ea40 000c 	orr.w	r0, r0, ip
 8019cd6:	fb15 fc02 	smulbb	ip, r5, r2
 8019cda:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019cde:	f1c5 0810 	rsb	r8, r5, #16
 8019ce2:	eba8 0802 	sub.w	r8, r8, r2
 8019ce6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019cea:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019cee:	437a      	muls	r2, r7
 8019cf0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019cf4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019cf8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019cfc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d00:	fb09 2208 	mla	r2, r9, r8, r2
 8019d04:	ea4a 0101 	orr.w	r1, sl, r1
 8019d08:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019d0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019d14:	fb05 2201 	mla	r2, r5, r1, r2
 8019d18:	ea4b 0000 	orr.w	r0, fp, r0
 8019d1c:	fb0c 2200 	mla	r2, ip, r0, r2
 8019d20:	0d57      	lsrs	r7, r2, #21
 8019d22:	0952      	lsrs	r2, r2, #5
 8019d24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019d28:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019d2c:	433a      	orrs	r2, r7
 8019d2e:	2bff      	cmp	r3, #255	; 0xff
 8019d30:	b292      	uxth	r2, r2
 8019d32:	d05b      	beq.n	8019dec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8019d34:	f8be 7000 	ldrh.w	r7, [lr]
 8019d38:	4c30      	ldr	r4, [pc, #192]	; (8019dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8019d3a:	43db      	mvns	r3, r3
 8019d3c:	1238      	asrs	r0, r7, #8
 8019d3e:	fa5f fc83 	uxtb.w	ip, r3
 8019d42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d46:	10fd      	asrs	r5, r7, #3
 8019d48:	fb00 f00c 	mul.w	r0, r0, ip
 8019d4c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019d50:	fb05 f10c 	mul.w	r1, r5, ip
 8019d54:	1c45      	adds	r5, r0, #1
 8019d56:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019d5a:	1215      	asrs	r5, r2, #8
 8019d5c:	f025 0507 	bic.w	r5, r5, #7
 8019d60:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019d64:	1c4d      	adds	r5, r1, #1
 8019d66:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8019d6a:	10d1      	asrs	r1, r2, #3
 8019d6c:	f021 0103 	bic.w	r1, r1, #3
 8019d70:	00fb      	lsls	r3, r7, #3
 8019d72:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019d76:	b2db      	uxtb	r3, r3
 8019d78:	b2c0      	uxtb	r0, r0
 8019d7a:	00c9      	lsls	r1, r1, #3
 8019d7c:	fb03 f30c 	mul.w	r3, r3, ip
 8019d80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019d84:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8019d88:	4308      	orrs	r0, r1
 8019d8a:	1c59      	adds	r1, r3, #1
 8019d8c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019d90:	00d2      	lsls	r2, r2, #3
 8019d92:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019d96:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019d9a:	4318      	orrs	r0, r3
 8019d9c:	f8ae 0000 	strh.w	r0, [lr]
 8019da0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019da2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019da4:	4413      	add	r3, r2
 8019da6:	9325      	str	r3, [sp, #148]	; 0x94
 8019da8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019daa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019dac:	441a      	add	r2, r3
 8019dae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019db0:	9226      	str	r2, [sp, #152]	; 0x98
 8019db2:	3b01      	subs	r3, #1
 8019db4:	f10e 0e02 	add.w	lr, lr, #2
 8019db8:	930f      	str	r3, [sp, #60]	; 0x3c
 8019dba:	e627      	b.n	8019a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 8019dbc:	fb08 f000 	mul.w	r0, r8, r0
 8019dc0:	fb09 0303 	mla	r3, r9, r3, r0
 8019dc4:	e6e7      	b.n	8019b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 8019dc6:	46b9      	mov	r9, r7
 8019dc8:	e70f      	b.n	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8019dca:	f1c2 0110 	rsb	r1, r2, #16
 8019dce:	437a      	muls	r2, r7
 8019dd0:	fb09 2901 	mla	r9, r9, r1, r2
 8019dd4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019dd8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019ddc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019de0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019de4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019de8:	4302      	orrs	r2, r0
 8019dea:	e7a0      	b.n	8019d2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8019dec:	f8ae 2000 	strh.w	r2, [lr]
 8019df0:	e7d6      	b.n	8019da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 8019df2:	b013      	add	sp, #76	; 0x4c
 8019df4:	ecbd 8b08 	vpop	{d8-d11}
 8019df8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019dfc:	fffff800 	.word	0xfffff800

08019e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8019e00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019e04:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8019e08:	fb0c 4e03 	mla	lr, ip, r3, r4
 8019e0c:	f1bc 0f00 	cmp.w	ip, #0
 8019e10:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019e14:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8019e18:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8019e1c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8019e20:	8808      	ldrh	r0, [r1, #0]
 8019e22:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8019e26:	db2f      	blt.n	8019e88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019e28:	45e2      	cmp	sl, ip
 8019e2a:	dd2d      	ble.n	8019e88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019e2c:	2c00      	cmp	r4, #0
 8019e2e:	db29      	blt.n	8019e84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019e30:	42a3      	cmp	r3, r4
 8019e32:	dd27      	ble.n	8019e84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019e34:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8019e38:	1c62      	adds	r2, r4, #1
 8019e3a:	d428      	bmi.n	8019e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019e3c:	4293      	cmp	r3, r2
 8019e3e:	dd26      	ble.n	8019e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019e40:	b32f      	cbz	r7, 8019e8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019e42:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8019e46:	f11c 0c01 	adds.w	ip, ip, #1
 8019e4a:	d424      	bmi.n	8019e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019e4c:	45e2      	cmp	sl, ip
 8019e4e:	dd22      	ble.n	8019e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019e50:	2e00      	cmp	r6, #0
 8019e52:	f000 809d 	beq.w	8019f90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8019e56:	2c00      	cmp	r4, #0
 8019e58:	db1b      	blt.n	8019e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019e5a:	42a3      	cmp	r3, r4
 8019e5c:	dd19      	ble.n	8019e92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019e5e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8019e62:	3401      	adds	r4, #1
 8019e64:	d41a      	bmi.n	8019e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019e66:	42a3      	cmp	r3, r4
 8019e68:	dd18      	ble.n	8019e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019e6a:	b1cf      	cbz	r7, 8019ea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8019e6c:	3301      	adds	r3, #1
 8019e6e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8019e72:	2f0f      	cmp	r7, #15
 8019e74:	d915      	bls.n	8019ea2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8019e76:	4b49      	ldr	r3, [pc, #292]	; (8019f9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8019e78:	4a49      	ldr	r2, [pc, #292]	; (8019fa0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8019e7a:	484a      	ldr	r0, [pc, #296]	; (8019fa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8019e7c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8019e80:	f002 ff8a 	bl	801cd98 <__assert_func>
 8019e84:	4681      	mov	r9, r0
 8019e86:	e7d7      	b.n	8019e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8019e88:	4686      	mov	lr, r0
 8019e8a:	4681      	mov	r9, r0
 8019e8c:	e7db      	b.n	8019e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019e8e:	4686      	mov	lr, r0
 8019e90:	e7d9      	b.n	8019e46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8019e92:	4684      	mov	ip, r0
 8019e94:	e7e5      	b.n	8019e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8019e96:	4603      	mov	r3, r0
 8019e98:	4684      	mov	ip, r0
 8019e9a:	e7ea      	b.n	8019e72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019e9c:	4603      	mov	r3, r0
 8019e9e:	e7e8      	b.n	8019e72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8019ea0:	4603      	mov	r3, r0
 8019ea2:	2e0f      	cmp	r6, #15
 8019ea4:	d8e7      	bhi.n	8019e76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019ea6:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8019eaa:	fb17 f806 	smulbb	r8, r7, r6
 8019eae:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019eb2:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8019eb6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019eba:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8019ebe:	ea44 0909 	orr.w	r9, r4, r9
 8019ec2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019ec6:	f1c6 0410 	rsb	r4, r6, #16
 8019eca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019ece:	1be4      	subs	r4, r4, r7
 8019ed0:	041a      	lsls	r2, r3, #16
 8019ed2:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8019ed6:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019eda:	fb07 fe0e 	mul.w	lr, r7, lr
 8019ede:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019ee2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019ee6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019eea:	fb04 e409 	mla	r4, r4, r9, lr
 8019eee:	4313      	orrs	r3, r2
 8019ef0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8019ef4:	fb08 4303 	mla	r3, r8, r3, r4
 8019ef8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019efc:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8019f00:	4322      	orrs	r2, r4
 8019f02:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8019f06:	fb06 3202 	mla	r2, r6, r2, r3
 8019f0a:	0d53      	lsrs	r3, r2, #21
 8019f0c:	0952      	lsrs	r2, r2, #5
 8019f0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019f16:	431a      	orrs	r2, r3
 8019f18:	b293      	uxth	r3, r2
 8019f1a:	b2af      	uxth	r7, r5
 8019f1c:	1202      	asrs	r2, r0, #8
 8019f1e:	43ed      	mvns	r5, r5
 8019f20:	b2ed      	uxtb	r5, r5
 8019f22:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019f26:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019f2a:	fb12 f205 	smulbb	r2, r2, r5
 8019f2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019f32:	fb0c 2c07 	mla	ip, ip, r7, r2
 8019f36:	00dc      	lsls	r4, r3, #3
 8019f38:	10da      	asrs	r2, r3, #3
 8019f3a:	10c6      	asrs	r6, r0, #3
 8019f3c:	00c3      	lsls	r3, r0, #3
 8019f3e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f42:	b2db      	uxtb	r3, r3
 8019f44:	fb16 f605 	smulbb	r6, r6, r5
 8019f48:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019f4c:	b2e4      	uxtb	r4, r4
 8019f4e:	fb13 f305 	smulbb	r3, r3, r5
 8019f52:	fa1f fc8c 	uxth.w	ip, ip
 8019f56:	fb02 6207 	mla	r2, r2, r7, r6
 8019f5a:	fb04 3307 	mla	r3, r4, r7, r3
 8019f5e:	b296      	uxth	r6, r2
 8019f60:	b29a      	uxth	r2, r3
 8019f62:	f10c 0301 	add.w	r3, ip, #1
 8019f66:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019f6a:	1c53      	adds	r3, r2, #1
 8019f6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019f70:	1c72      	adds	r2, r6, #1
 8019f72:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8019f76:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019f7e:	0952      	lsrs	r2, r2, #5
 8019f80:	ea43 030c 	orr.w	r3, r3, ip
 8019f84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f88:	4313      	orrs	r3, r2
 8019f8a:	800b      	strh	r3, [r1, #0]
 8019f8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f90:	2f0f      	cmp	r7, #15
 8019f92:	f63f af70 	bhi.w	8019e76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8019f96:	4603      	mov	r3, r0
 8019f98:	4684      	mov	ip, r0
 8019f9a:	e784      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8019f9c:	08021456 	.word	0x08021456
 8019fa0:	08021acb 	.word	0x08021acb
 8019fa4:	080214da 	.word	0x080214da

08019fa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fac:	ed2d 8b08 	vpush	{d8-d11}
 8019fb0:	b093      	sub	sp, #76	; 0x4c
 8019fb2:	461d      	mov	r5, r3
 8019fb4:	9210      	str	r2, [sp, #64]	; 0x40
 8019fb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019fb8:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8019fbc:	920b      	str	r2, [sp, #44]	; 0x2c
 8019fbe:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8019fc2:	910a      	str	r1, [sp, #40]	; 0x28
 8019fc4:	6859      	ldr	r1, [r3, #4]
 8019fc6:	681b      	ldr	r3, [r3, #0]
 8019fc8:	9011      	str	r0, [sp, #68]	; 0x44
 8019fca:	fb01 2707 	mla	r7, r1, r7, r2
 8019fce:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019fd2:	9307      	str	r3, [sp, #28]
 8019fd4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019fd6:	681b      	ldr	r3, [r3, #0]
 8019fd8:	9309      	str	r3, [sp, #36]	; 0x24
 8019fda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019fdc:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8019fe0:	43db      	mvns	r3, r3
 8019fe2:	b2db      	uxtb	r3, r3
 8019fe4:	eeb0 aa40 	vmov.f32	s20, s0
 8019fe8:	eef0 9a60 	vmov.f32	s19, s1
 8019fec:	eeb0 9a41 	vmov.f32	s18, s2
 8019ff0:	eeb0 8a62 	vmov.f32	s16, s5
 8019ff4:	eef0 8a43 	vmov.f32	s17, s6
 8019ff8:	eef0 ba44 	vmov.f32	s23, s8
 8019ffc:	eeb0 ba64 	vmov.f32	s22, s9
 801a000:	eef0 aa45 	vmov.f32	s21, s10
 801a004:	9308      	str	r3, [sp, #32]
 801a006:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a008:	2b00      	cmp	r3, #0
 801a00a:	dc03      	bgt.n	801a014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a00c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a00e:	2b00      	cmp	r3, #0
 801a010:	f340 8203 	ble.w	801a41a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801a014:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a016:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a01a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a01e:	1e48      	subs	r0, r1, #1
 801a020:	f102 3cff 	add.w	ip, r2, #4294967295
 801a024:	2d00      	cmp	r5, #0
 801a026:	f340 80da 	ble.w	801a1de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a02a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a02e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a032:	d406      	bmi.n	801a042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a034:	4586      	cmp	lr, r0
 801a036:	da04      	bge.n	801a042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a038:	2b00      	cmp	r3, #0
 801a03a:	db02      	blt.n	801a042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a03c:	4563      	cmp	r3, ip
 801a03e:	f2c0 80cf 	blt.w	801a1e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801a042:	f11e 0e01 	adds.w	lr, lr, #1
 801a046:	f100 80c1 	bmi.w	801a1cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801a04a:	4571      	cmp	r1, lr
 801a04c:	f2c0 80be 	blt.w	801a1cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801a050:	3301      	adds	r3, #1
 801a052:	f100 80bb 	bmi.w	801a1cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801a056:	429a      	cmp	r2, r3
 801a058:	f2c0 80b8 	blt.w	801a1cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801a05c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801a060:	46a9      	mov	r9, r5
 801a062:	f1b9 0f00 	cmp.w	r9, #0
 801a066:	f340 80d8 	ble.w	801a21a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a06a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a06c:	1421      	asrs	r1, r4, #16
 801a06e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a072:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a076:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a07a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a07e:	f100 8111 	bmi.w	801a2a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a082:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a086:	4551      	cmp	r1, sl
 801a088:	f280 810c 	bge.w	801a2a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a08c:	2800      	cmp	r0, #0
 801a08e:	f2c0 8109 	blt.w	801a2a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a092:	f103 3aff 	add.w	sl, r3, #4294967295
 801a096:	4550      	cmp	r0, sl
 801a098:	f280 8104 	bge.w	801a2a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a09c:	fa0f f38e 	sxth.w	r3, lr
 801a0a0:	fb00 1103 	mla	r1, r0, r3, r1
 801a0a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a0a6:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a0aa:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a0ae:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a0b2:	f1bc 0f00 	cmp.w	ip, #0
 801a0b6:	d007      	beq.n	801a0c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801a0b8:	005b      	lsls	r3, r3, #1
 801a0ba:	eb0a 0003 	add.w	r0, sl, r3
 801a0be:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a0c2:	930c      	str	r3, [sp, #48]	; 0x30
 801a0c4:	8843      	ldrh	r3, [r0, #2]
 801a0c6:	930d      	str	r3, [sp, #52]	; 0x34
 801a0c8:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a0cc:	fb12 f30c 	smulbb	r3, r2, ip
 801a0d0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a0d4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a0d8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a0dc:	10db      	asrs	r3, r3, #3
 801a0de:	ea40 000e 	orr.w	r0, r0, lr
 801a0e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a0e6:	f1cc 0e10 	rsb	lr, ip, #16
 801a0ea:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a0ee:	ebae 0e02 	sub.w	lr, lr, r2
 801a0f2:	ea4a 0101 	orr.w	r1, sl, r1
 801a0f6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a0fa:	4351      	muls	r1, r2
 801a0fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a0fe:	9f08      	ldr	r7, [sp, #32]
 801a100:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a104:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a108:	0410      	lsls	r0, r2, #16
 801a10a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a10e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a112:	4310      	orrs	r0, r2
 801a114:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a116:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a118:	0412      	lsls	r2, r2, #16
 801a11a:	fb03 e000 	mla	r0, r3, r0, lr
 801a11e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a122:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a126:	ea42 020e 	orr.w	r2, r2, lr
 801a12a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a12e:	fb03 0302 	mla	r3, r3, r2, r0
 801a132:	0d5a      	lsrs	r2, r3, #21
 801a134:	095b      	lsrs	r3, r3, #5
 801a136:	f8b8 0000 	ldrh.w	r0, [r8]
 801a13a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a13e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a142:	4313      	orrs	r3, r2
 801a144:	b29b      	uxth	r3, r3
 801a146:	1201      	asrs	r1, r0, #8
 801a148:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801a14c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a150:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a154:	fb11 f107 	smulbb	r1, r1, r7
 801a158:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a15c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a160:	00c0      	lsls	r0, r0, #3
 801a162:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a166:	b2c0      	uxtb	r0, r0
 801a168:	10d9      	asrs	r1, r3, #3
 801a16a:	00db      	lsls	r3, r3, #3
 801a16c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a170:	b2db      	uxtb	r3, r3
 801a172:	fb10 f007 	smulbb	r0, r0, r7
 801a176:	fa1f fc8c 	uxth.w	ip, ip
 801a17a:	fb03 0302 	mla	r3, r3, r2, r0
 801a17e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a182:	fb1e fe07 	smulbb	lr, lr, r7
 801a186:	fb01 e102 	mla	r1, r1, r2, lr
 801a18a:	b29a      	uxth	r2, r3
 801a18c:	f10c 0301 	add.w	r3, ip, #1
 801a190:	b289      	uxth	r1, r1
 801a192:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a196:	1c53      	adds	r3, r2, #1
 801a198:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a19c:	1c4a      	adds	r2, r1, #1
 801a19e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a1a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a1a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a1aa:	0949      	lsrs	r1, r1, #5
 801a1ac:	ea43 030c 	orr.w	r3, r3, ip
 801a1b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a1b4:	430b      	orrs	r3, r1
 801a1b6:	f8a8 3000 	strh.w	r3, [r8]
 801a1ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a1bc:	441c      	add	r4, r3
 801a1be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a1c0:	f108 0802 	add.w	r8, r8, #2
 801a1c4:	441e      	add	r6, r3
 801a1c6:	f109 39ff 	add.w	r9, r9, #4294967295
 801a1ca:	e74a      	b.n	801a062 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801a1cc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a1ce:	441c      	add	r4, r3
 801a1d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a1d2:	441e      	add	r6, r3
 801a1d4:	9b07      	ldr	r3, [sp, #28]
 801a1d6:	3302      	adds	r3, #2
 801a1d8:	3d01      	subs	r5, #1
 801a1da:	9307      	str	r3, [sp, #28]
 801a1dc:	e722      	b.n	801a024 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a1de:	d022      	beq.n	801a226 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801a1e0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a1e2:	1e6b      	subs	r3, r5, #1
 801a1e4:	fb00 4003 	mla	r0, r0, r3, r4
 801a1e8:	1400      	asrs	r0, r0, #16
 801a1ea:	f53f af37 	bmi.w	801a05c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a1ee:	3901      	subs	r1, #1
 801a1f0:	4288      	cmp	r0, r1
 801a1f2:	f6bf af33 	bge.w	801a05c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a1f6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a1f8:	fb01 6303 	mla	r3, r1, r3, r6
 801a1fc:	141b      	asrs	r3, r3, #16
 801a1fe:	f53f af2d 	bmi.w	801a05c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a202:	3a01      	subs	r2, #1
 801a204:	4293      	cmp	r3, r2
 801a206:	f6bf af29 	bge.w	801a05c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801a20a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a20e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801a212:	46a8      	mov	r8, r5
 801a214:	f1b8 0f00 	cmp.w	r8, #0
 801a218:	dc5e      	bgt.n	801a2d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801a21a:	9b07      	ldr	r3, [sp, #28]
 801a21c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a220:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a224:	9307      	str	r3, [sp, #28]
 801a226:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a228:	2b00      	cmp	r3, #0
 801a22a:	f340 80f6 	ble.w	801a41a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801a22e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a232:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a236:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a23a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a23c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a240:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a244:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a248:	eef0 6a48 	vmov.f32	s13, s16
 801a24c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a250:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a254:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a258:	ee16 4a90 	vmov	r4, s13
 801a25c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a260:	eef0 6a68 	vmov.f32	s13, s17
 801a264:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a268:	ee18 2a10 	vmov	r2, s16
 801a26c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a270:	fb92 f3f3 	sdiv	r3, r2, r3
 801a274:	ee18 2a90 	vmov	r2, s17
 801a278:	9327      	str	r3, [sp, #156]	; 0x9c
 801a27a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a27c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a280:	9328      	str	r3, [sp, #160]	; 0xa0
 801a282:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a284:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a286:	3b01      	subs	r3, #1
 801a288:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a28c:	930a      	str	r3, [sp, #40]	; 0x28
 801a28e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a290:	ee16 6a90 	vmov	r6, s13
 801a294:	bf14      	ite	ne
 801a296:	461d      	movne	r5, r3
 801a298:	4615      	moveq	r5, r2
 801a29a:	eef0 8a67 	vmov.f32	s17, s15
 801a29e:	eeb0 8a47 	vmov.f32	s16, s14
 801a2a2:	e6b0      	b.n	801a006 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a2a4:	f111 0a01 	adds.w	sl, r1, #1
 801a2a8:	d487      	bmi.n	801a1ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2aa:	45d6      	cmp	lr, sl
 801a2ac:	db85      	blt.n	801a1ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2ae:	f110 0a01 	adds.w	sl, r0, #1
 801a2b2:	d482      	bmi.n	801a1ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2b4:	4553      	cmp	r3, sl
 801a2b6:	db80      	blt.n	801a1ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2b8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a2ba:	9101      	str	r1, [sp, #4]
 801a2bc:	b21b      	sxth	r3, r3
 801a2be:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a2c2:	9300      	str	r3, [sp, #0]
 801a2c4:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a2c8:	fa0f f38e 	sxth.w	r3, lr
 801a2cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a2ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a2d0:	4641      	mov	r1, r8
 801a2d2:	f7ff fd95 	bl	8019e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a2d6:	e770      	b.n	801a1ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a2d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a2da:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a2dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2e0:	1430      	asrs	r0, r6, #16
 801a2e2:	1423      	asrs	r3, r4, #16
 801a2e4:	fb01 3000 	mla	r0, r1, r0, r3
 801a2e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2ea:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a2ee:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a2f2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a2f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a2fa:	8858      	ldrh	r0, [r3, #2]
 801a2fc:	f1be 0f00 	cmp.w	lr, #0
 801a300:	d00b      	beq.n	801a31a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801a302:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a306:	3901      	subs	r1, #1
 801a308:	0049      	lsls	r1, r1, #1
 801a30a:	3102      	adds	r1, #2
 801a30c:	eb03 0b01 	add.w	fp, r3, r1
 801a310:	5a5b      	ldrh	r3, [r3, r1]
 801a312:	930e      	str	r3, [sp, #56]	; 0x38
 801a314:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a318:	930f      	str	r3, [sp, #60]	; 0x3c
 801a31a:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a31e:	fb12 f30e 	smulbb	r3, r2, lr
 801a322:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a326:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a32a:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801a32e:	10db      	asrs	r3, r3, #3
 801a330:	ea41 010c 	orr.w	r1, r1, ip
 801a334:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a338:	f1ce 0c10 	rsb	ip, lr, #16
 801a33c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a340:	ebac 0c02 	sub.w	ip, ip, r2
 801a344:	ea4b 0000 	orr.w	r0, fp, r0
 801a348:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a34c:	4350      	muls	r0, r2
 801a34e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a350:	9f08      	ldr	r7, [sp, #32]
 801a352:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a356:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a35a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a35e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801a362:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a364:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a366:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a36a:	0412      	lsls	r2, r2, #16
 801a36c:	ea4b 0101 	orr.w	r1, fp, r1
 801a370:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a374:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a378:	fb03 c101 	mla	r1, r3, r1, ip
 801a37c:	4302      	orrs	r2, r0
 801a37e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a382:	fb03 1202 	mla	r2, r3, r2, r1
 801a386:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a38a:	0952      	lsrs	r2, r2, #5
 801a38c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801a390:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a394:	f8b9 2000 	ldrh.w	r2, [r9]
 801a398:	ea4b 0303 	orr.w	r3, fp, r3
 801a39c:	b29b      	uxth	r3, r3
 801a39e:	1211      	asrs	r1, r2, #8
 801a3a0:	1218      	asrs	r0, r3, #8
 801a3a2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a3a6:	fb11 f107 	smulbb	r1, r1, r7
 801a3aa:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a3ae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a3b2:	00d2      	lsls	r2, r2, #3
 801a3b4:	fb00 100a 	mla	r0, r0, sl, r1
 801a3b8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a3bc:	10d9      	asrs	r1, r3, #3
 801a3be:	b2d2      	uxtb	r2, r2
 801a3c0:	00db      	lsls	r3, r3, #3
 801a3c2:	fb1c fc07 	smulbb	ip, ip, r7
 801a3c6:	fb12 f207 	smulbb	r2, r2, r7
 801a3ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a3ce:	b2db      	uxtb	r3, r3
 801a3d0:	b280      	uxth	r0, r0
 801a3d2:	fb01 c10a 	mla	r1, r1, sl, ip
 801a3d6:	fb03 230a 	mla	r3, r3, sl, r2
 801a3da:	b29b      	uxth	r3, r3
 801a3dc:	b289      	uxth	r1, r1
 801a3de:	1c42      	adds	r2, r0, #1
 801a3e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a3e4:	f101 0c01 	add.w	ip, r1, #1
 801a3e8:	1c5a      	adds	r2, r3, #1
 801a3ea:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a3ee:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a3f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a3f4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a3f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a3fc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a400:	4310      	orrs	r0, r2
 801a402:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a406:	441c      	add	r4, r3
 801a408:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a40a:	ea40 000c 	orr.w	r0, r0, ip
 801a40e:	f829 0b02 	strh.w	r0, [r9], #2
 801a412:	441e      	add	r6, r3
 801a414:	f108 38ff 	add.w	r8, r8, #4294967295
 801a418:	e6fc      	b.n	801a214 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a41a:	b013      	add	sp, #76	; 0x4c
 801a41c:	ecbd 8b08 	vpop	{d8-d11}
 801a420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a424 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a428:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801a42c:	fb06 5c03 	mla	ip, r6, r3, r5
 801a430:	2e00      	cmp	r6, #0
 801a432:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801a436:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801a43a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801a43e:	8808      	ldrh	r0, [r1, #0]
 801a440:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a444:	db2e      	blt.n	801a4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a446:	45b0      	cmp	r8, r6
 801a448:	dd2c      	ble.n	801a4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801a44a:	2d00      	cmp	r5, #0
 801a44c:	db28      	blt.n	801a4a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a44e:	42ab      	cmp	r3, r5
 801a450:	dd26      	ble.n	801a4a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801a452:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801a456:	1c6a      	adds	r2, r5, #1
 801a458:	d427      	bmi.n	801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a45a:	4293      	cmp	r3, r2
 801a45c:	dd25      	ble.n	801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a45e:	b324      	cbz	r4, 801a4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801a460:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801a464:	3601      	adds	r6, #1
 801a466:	d424      	bmi.n	801a4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a468:	45b0      	cmp	r8, r6
 801a46a:	dd22      	ble.n	801a4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801a46c:	b31f      	cbz	r7, 801a4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801a46e:	2d00      	cmp	r5, #0
 801a470:	db1d      	blt.n	801a4ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a472:	42ab      	cmp	r3, r5
 801a474:	dd1b      	ble.n	801a4ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801a476:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801a47a:	3501      	adds	r5, #1
 801a47c:	d405      	bmi.n	801a48a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a47e:	42ab      	cmp	r3, r5
 801a480:	dd03      	ble.n	801a48a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a482:	b124      	cbz	r4, 801a48e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801a484:	3301      	adds	r3, #1
 801a486:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801a48a:	2c0f      	cmp	r4, #15
 801a48c:	d801      	bhi.n	801a492 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a48e:	2f0f      	cmp	r7, #15
 801a490:	d914      	bls.n	801a4bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801a492:	4b27      	ldr	r3, [pc, #156]	; (801a530 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801a494:	4a27      	ldr	r2, [pc, #156]	; (801a534 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801a496:	4828      	ldr	r0, [pc, #160]	; (801a538 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801a498:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 801a49c:	f002 fc7c 	bl	801cd98 <__assert_func>
 801a4a0:	4684      	mov	ip, r0
 801a4a2:	e7d8      	b.n	801a456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801a4a4:	4602      	mov	r2, r0
 801a4a6:	4684      	mov	ip, r0
 801a4a8:	e7dc      	b.n	801a464 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a4aa:	4602      	mov	r2, r0
 801a4ac:	e7da      	b.n	801a464 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801a4ae:	4606      	mov	r6, r0
 801a4b0:	e7e3      	b.n	801a47a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801a4b2:	4606      	mov	r6, r0
 801a4b4:	e7e9      	b.n	801a48a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801a4b6:	2c0f      	cmp	r4, #15
 801a4b8:	d8eb      	bhi.n	801a492 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a4ba:	4606      	mov	r6, r0
 801a4bc:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801a4c0:	fb14 f307 	smulbb	r3, r4, r7
 801a4c4:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801a4c8:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801a4cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a4d0:	10db      	asrs	r3, r3, #3
 801a4d2:	ea45 0c0c 	orr.w	ip, r5, ip
 801a4d6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a4da:	f1c7 0510 	rsb	r5, r7, #16
 801a4de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a4e2:	1b2d      	subs	r5, r5, r4
 801a4e4:	ea4e 0202 	orr.w	r2, lr, r2
 801a4e8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801a4ec:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a4f0:	4354      	muls	r4, r2
 801a4f2:	fb05 450c 	mla	r5, r5, ip, r4
 801a4f6:	0404      	lsls	r4, r0, #16
 801a4f8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a4fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a500:	4320      	orrs	r0, r4
 801a502:	fb03 5400 	mla	r4, r3, r0, r5
 801a506:	0430      	lsls	r0, r6, #16
 801a508:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a50c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801a510:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801a514:	4330      	orrs	r0, r6
 801a516:	fb07 4000 	mla	r0, r7, r0, r4
 801a51a:	0d43      	lsrs	r3, r0, #21
 801a51c:	0940      	lsrs	r0, r0, #5
 801a51e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a522:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a526:	4318      	orrs	r0, r3
 801a528:	8008      	strh	r0, [r1, #0]
 801a52a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a52e:	bf00      	nop
 801a530:	08021456 	.word	0x08021456
 801a534:	08021acb 	.word	0x08021acb
 801a538:	080214da 	.word	0x080214da

0801a53c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a540:	ed2d 8b08 	vpush	{d8-d11}
 801a544:	b08f      	sub	sp, #60	; 0x3c
 801a546:	461d      	mov	r5, r3
 801a548:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a54a:	920c      	str	r2, [sp, #48]	; 0x30
 801a54c:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801a550:	9107      	str	r1, [sp, #28]
 801a552:	6859      	ldr	r1, [r3, #4]
 801a554:	681b      	ldr	r3, [r3, #0]
 801a556:	900d      	str	r0, [sp, #52]	; 0x34
 801a558:	fb01 2707 	mla	r7, r1, r7, r2
 801a55c:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a560:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a562:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801a566:	f8d3 8000 	ldr.w	r8, [r3]
 801a56a:	eeb0 aa40 	vmov.f32	s20, s0
 801a56e:	eef0 9a60 	vmov.f32	s19, s1
 801a572:	eeb0 9a41 	vmov.f32	s18, s2
 801a576:	eeb0 8a62 	vmov.f32	s16, s5
 801a57a:	eef0 8a43 	vmov.f32	s17, s6
 801a57e:	eef0 ba44 	vmov.f32	s23, s8
 801a582:	eeb0 ba64 	vmov.f32	s22, s9
 801a586:	eef0 aa45 	vmov.f32	s21, s10
 801a58a:	9b07      	ldr	r3, [sp, #28]
 801a58c:	2b00      	cmp	r3, #0
 801a58e:	dc03      	bgt.n	801a598 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a590:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a592:	2b00      	cmp	r3, #0
 801a594:	f340 8181 	ble.w	801a89a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a598:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a59a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a59e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5a2:	1e48      	subs	r0, r1, #1
 801a5a4:	f102 3cff 	add.w	ip, r2, #4294967295
 801a5a8:	2d00      	cmp	r5, #0
 801a5aa:	f340 809b 	ble.w	801a6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801a5ae:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a5b2:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a5b6:	d406      	bmi.n	801a5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a5b8:	4586      	cmp	lr, r0
 801a5ba:	da04      	bge.n	801a5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a5bc:	2b00      	cmp	r3, #0
 801a5be:	db02      	blt.n	801a5c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a5c0:	4563      	cmp	r3, ip
 801a5c2:	f2c0 8090 	blt.w	801a6e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801a5c6:	f11e 0e01 	adds.w	lr, lr, #1
 801a5ca:	f100 8084 	bmi.w	801a6d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a5ce:	4571      	cmp	r1, lr
 801a5d0:	f2c0 8081 	blt.w	801a6d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a5d4:	3301      	adds	r3, #1
 801a5d6:	d47e      	bmi.n	801a6d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a5d8:	429a      	cmp	r2, r3
 801a5da:	db7c      	blt.n	801a6d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801a5dc:	46aa      	mov	sl, r5
 801a5de:	46b9      	mov	r9, r7
 801a5e0:	f1ba 0f00 	cmp.w	sl, #0
 801a5e4:	f340 8099 	ble.w	801a71a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801a5e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5ea:	1421      	asrs	r1, r4, #16
 801a5ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a5f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a5f4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a5f8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a5fc:	f100 80d0 	bmi.w	801a7a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a600:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a604:	4559      	cmp	r1, fp
 801a606:	f280 80cb 	bge.w	801a7a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a60a:	2800      	cmp	r0, #0
 801a60c:	f2c0 80c8 	blt.w	801a7a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a610:	f103 3bff 	add.w	fp, r3, #4294967295
 801a614:	4558      	cmp	r0, fp
 801a616:	f280 80c3 	bge.w	801a7a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a61a:	fa0f fe8e 	sxth.w	lr, lr
 801a61e:	fb00 110e 	mla	r1, r0, lr, r1
 801a622:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a626:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a62a:	8841      	ldrh	r1, [r0, #2]
 801a62c:	f1bc 0f00 	cmp.w	ip, #0
 801a630:	d00b      	beq.n	801a64a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a632:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801a636:	3b01      	subs	r3, #1
 801a638:	005b      	lsls	r3, r3, #1
 801a63a:	3302      	adds	r3, #2
 801a63c:	eb00 0e03 	add.w	lr, r0, r3
 801a640:	5ac3      	ldrh	r3, [r0, r3]
 801a642:	9308      	str	r3, [sp, #32]
 801a644:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a648:	9309      	str	r3, [sp, #36]	; 0x24
 801a64a:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a64e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a652:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a656:	ea40 000b 	orr.w	r0, r0, fp
 801a65a:	fb12 f30c 	smulbb	r3, r2, ip
 801a65e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a662:	10db      	asrs	r3, r3, #3
 801a664:	f1cc 0e10 	rsb	lr, ip, #16
 801a668:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a66c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a670:	ebae 0e02 	sub.w	lr, lr, r2
 801a674:	ea4b 0101 	orr.w	r1, fp, r1
 801a678:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a67c:	4351      	muls	r1, r2
 801a67e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a680:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a684:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a688:	0410      	lsls	r0, r2, #16
 801a68a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a68e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a692:	4310      	orrs	r0, r2
 801a694:	9a08      	ldr	r2, [sp, #32]
 801a696:	9908      	ldr	r1, [sp, #32]
 801a698:	0412      	lsls	r2, r2, #16
 801a69a:	fb03 e000 	mla	r0, r3, r0, lr
 801a69e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a6a2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a6a6:	ea42 020e 	orr.w	r2, r2, lr
 801a6aa:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a6ae:	fb03 0302 	mla	r3, r3, r2, r0
 801a6b2:	0d5a      	lsrs	r2, r3, #21
 801a6b4:	095b      	lsrs	r3, r3, #5
 801a6b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a6ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a6be:	4313      	orrs	r3, r2
 801a6c0:	f8a9 3000 	strh.w	r3, [r9]
 801a6c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a6c6:	441c      	add	r4, r3
 801a6c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a6ca:	f109 0902 	add.w	r9, r9, #2
 801a6ce:	441e      	add	r6, r3
 801a6d0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a6d4:	e784      	b.n	801a5e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a6d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a6d8:	441c      	add	r4, r3
 801a6da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a6dc:	3d01      	subs	r5, #1
 801a6de:	441e      	add	r6, r3
 801a6e0:	3702      	adds	r7, #2
 801a6e2:	e761      	b.n	801a5a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a6e4:	d01d      	beq.n	801a722 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a6e6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a6e8:	1e6b      	subs	r3, r5, #1
 801a6ea:	fb00 4003 	mla	r0, r0, r3, r4
 801a6ee:	1400      	asrs	r0, r0, #16
 801a6f0:	f53f af74 	bmi.w	801a5dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6f4:	3901      	subs	r1, #1
 801a6f6:	4288      	cmp	r0, r1
 801a6f8:	f6bf af70 	bge.w	801a5dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 801a6fe:	fb01 6303 	mla	r3, r1, r3, r6
 801a702:	141b      	asrs	r3, r3, #16
 801a704:	f53f af6a 	bmi.w	801a5dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a708:	3a01      	subs	r2, #1
 801a70a:	4293      	cmp	r3, r2
 801a70c:	f6bf af66 	bge.w	801a5dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a710:	46a9      	mov	r9, r5
 801a712:	46ba      	mov	sl, r7
 801a714:	f1b9 0f00 	cmp.w	r9, #0
 801a718:	dc5a      	bgt.n	801a7d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a71a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a71e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a722:	9b07      	ldr	r3, [sp, #28]
 801a724:	2b00      	cmp	r3, #0
 801a726:	f340 80b8 	ble.w	801a89a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a72a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a72e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a732:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a736:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a738:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a73c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a740:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a744:	eef0 6a48 	vmov.f32	s13, s16
 801a748:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a74c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a750:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a754:	ee16 4a90 	vmov	r4, s13
 801a758:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a75c:	eef0 6a68 	vmov.f32	s13, s17
 801a760:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a764:	ee18 2a10 	vmov	r2, s16
 801a768:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a76c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a770:	ee18 2a90 	vmov	r2, s17
 801a774:	9323      	str	r3, [sp, #140]	; 0x8c
 801a776:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a778:	fb92 f3f3 	sdiv	r3, r2, r3
 801a77c:	9324      	str	r3, [sp, #144]	; 0x90
 801a77e:	9b07      	ldr	r3, [sp, #28]
 801a780:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a782:	3b01      	subs	r3, #1
 801a784:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a788:	9307      	str	r3, [sp, #28]
 801a78a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a78c:	ee16 6a90 	vmov	r6, s13
 801a790:	bf14      	ite	ne
 801a792:	461d      	movne	r5, r3
 801a794:	4615      	moveq	r5, r2
 801a796:	eef0 8a67 	vmov.f32	s17, s15
 801a79a:	eeb0 8a47 	vmov.f32	s16, s14
 801a79e:	e6f4      	b.n	801a58a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a7a0:	f111 0b01 	adds.w	fp, r1, #1
 801a7a4:	d48e      	bmi.n	801a6c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a7a6:	45de      	cmp	lr, fp
 801a7a8:	db8c      	blt.n	801a6c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a7aa:	f110 0b01 	adds.w	fp, r0, #1
 801a7ae:	d489      	bmi.n	801a6c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a7b0:	455b      	cmp	r3, fp
 801a7b2:	db87      	blt.n	801a6c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a7b4:	b21b      	sxth	r3, r3
 801a7b6:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a7ba:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a7be:	9300      	str	r3, [sp, #0]
 801a7c0:	4642      	mov	r2, r8
 801a7c2:	fa0f f38e 	sxth.w	r3, lr
 801a7c6:	4649      	mov	r1, r9
 801a7c8:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a7ca:	f7ff fe2b 	bl	801a424 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a7ce:	e779      	b.n	801a6c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a7d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a7d6:	1420      	asrs	r0, r4, #16
 801a7d8:	1431      	asrs	r1, r6, #16
 801a7da:	fb03 0101 	mla	r1, r3, r1, r0
 801a7de:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a7e2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a7e6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a7ea:	8841      	ldrh	r1, [r0, #2]
 801a7ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a7f0:	f1be 0f00 	cmp.w	lr, #0
 801a7f4:	d00b      	beq.n	801a80e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801a7f6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a7fa:	3b01      	subs	r3, #1
 801a7fc:	005b      	lsls	r3, r3, #1
 801a7fe:	3302      	adds	r3, #2
 801a800:	eb00 0b03 	add.w	fp, r0, r3
 801a804:	5ac3      	ldrh	r3, [r0, r3]
 801a806:	930a      	str	r3, [sp, #40]	; 0x28
 801a808:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a80c:	930b      	str	r3, [sp, #44]	; 0x2c
 801a80e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a812:	fb12 f30e 	smulbb	r3, r2, lr
 801a816:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a81a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a81e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a822:	10db      	asrs	r3, r3, #3
 801a824:	ea40 000c 	orr.w	r0, r0, ip
 801a828:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a82c:	f1ce 0c10 	rsb	ip, lr, #16
 801a830:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a834:	ebac 0c02 	sub.w	ip, ip, r2
 801a838:	ea4b 0101 	orr.w	r1, fp, r1
 801a83c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a840:	4351      	muls	r1, r2
 801a842:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a844:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a848:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a84c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a850:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801a854:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a856:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a858:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a85c:	0412      	lsls	r2, r2, #16
 801a85e:	ea4b 0000 	orr.w	r0, fp, r0
 801a862:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a866:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801a86a:	fb03 c000 	mla	r0, r3, r0, ip
 801a86e:	ea42 0b0b 	orr.w	fp, r2, fp
 801a872:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a876:	fb03 000b 	mla	r0, r3, fp, r0
 801a87a:	0d43      	lsrs	r3, r0, #21
 801a87c:	0940      	lsrs	r0, r0, #5
 801a87e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a882:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a886:	4318      	orrs	r0, r3
 801a888:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a88a:	f82a 0b02 	strh.w	r0, [sl], #2
 801a88e:	441c      	add	r4, r3
 801a890:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a892:	f109 39ff 	add.w	r9, r9, #4294967295
 801a896:	441e      	add	r6, r3
 801a898:	e73c      	b.n	801a714 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a89a:	b00f      	add	sp, #60	; 0x3c
 801a89c:	ecbd 8b08 	vpop	{d8-d11}
 801a8a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8a8:	880e      	ldrh	r6, [r1, #0]
 801a8aa:	b085      	sub	sp, #20
 801a8ac:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801a8b0:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801a8b4:	4690      	mov	r8, r2
 801a8b6:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801a8ba:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801a8be:	9200      	str	r2, [sp, #0]
 801a8c0:	00f6      	lsls	r6, r6, #3
 801a8c2:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801a8c6:	9201      	str	r2, [sp, #4]
 801a8c8:	2c00      	cmp	r4, #0
 801a8ca:	b2f2      	uxtb	r2, r6
 801a8cc:	fb04 5603 	mla	r6, r4, r3, r5
 801a8d0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801a8d4:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801a8d8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801a8dc:	9202      	str	r2, [sp, #8]
 801a8de:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801a8e2:	db36      	blt.n	801a952 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801a8e4:	45a6      	cmp	lr, r4
 801a8e6:	dd34      	ble.n	801a952 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801a8e8:	2d00      	cmp	r5, #0
 801a8ea:	db30      	blt.n	801a94e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801a8ec:	42ab      	cmp	r3, r5
 801a8ee:	dd2e      	ble.n	801a94e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801a8f0:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801a8f4:	1c6e      	adds	r6, r5, #1
 801a8f6:	d42f      	bmi.n	801a958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a8f8:	42b3      	cmp	r3, r6
 801a8fa:	dd2d      	ble.n	801a958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a8fc:	b370      	cbz	r0, 801a95c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801a8fe:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a902:	3401      	adds	r4, #1
 801a904:	d42e      	bmi.n	801a964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801a906:	45a6      	cmp	lr, r4
 801a908:	dd2c      	ble.n	801a964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801a90a:	b377      	cbz	r7, 801a96a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801a90c:	2d00      	cmp	r5, #0
 801a90e:	db27      	blt.n	801a960 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801a910:	42ab      	cmp	r3, r5
 801a912:	dd25      	ble.n	801a960 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801a914:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a918:	3501      	adds	r5, #1
 801a91a:	d429      	bmi.n	801a970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801a91c:	42ab      	cmp	r3, r5
 801a91e:	dd27      	ble.n	801a970 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801a920:	b340      	cbz	r0, 801a974 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801a922:	3301      	adds	r3, #1
 801a924:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801a928:	280f      	cmp	r0, #15
 801a92a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a92e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a932:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a936:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a93a:	d801      	bhi.n	801a940 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a93c:	2f0f      	cmp	r7, #15
 801a93e:	d91b      	bls.n	801a978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801a940:	4b84      	ldr	r3, [pc, #528]	; (801ab54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801a942:	4a85      	ldr	r2, [pc, #532]	; (801ab58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801a944:	4885      	ldr	r0, [pc, #532]	; (801ab5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801a946:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801a94a:	f002 fa25 	bl	801cd98 <__assert_func>
 801a94e:	2200      	movs	r2, #0
 801a950:	e7d0      	b.n	801a8f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801a952:	2600      	movs	r6, #0
 801a954:	4632      	mov	r2, r6
 801a956:	e7d4      	b.n	801a902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a958:	2600      	movs	r6, #0
 801a95a:	e7d2      	b.n	801a902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a95c:	4606      	mov	r6, r0
 801a95e:	e7d0      	b.n	801a902 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a960:	2400      	movs	r4, #0
 801a962:	e7d9      	b.n	801a918 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801a964:	2300      	movs	r3, #0
 801a966:	461c      	mov	r4, r3
 801a968:	e7de      	b.n	801a928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a96a:	463b      	mov	r3, r7
 801a96c:	463c      	mov	r4, r7
 801a96e:	e7db      	b.n	801a928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a970:	2300      	movs	r3, #0
 801a972:	e7d9      	b.n	801a928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a974:	4603      	mov	r3, r0
 801a976:	e7d7      	b.n	801a928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a978:	b280      	uxth	r0, r0
 801a97a:	b2bf      	uxth	r7, r7
 801a97c:	fb00 fe07 	mul.w	lr, r0, r7
 801a980:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a984:	0100      	lsls	r0, r0, #4
 801a986:	eba0 0c0e 	sub.w	ip, r0, lr
 801a98a:	b2bf      	uxth	r7, r7
 801a98c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a990:	fa1f fc8c 	uxth.w	ip, ip
 801a994:	1bed      	subs	r5, r5, r7
 801a996:	b2ad      	uxth	r5, r5
 801a998:	fb0c f00a 	mul.w	r0, ip, sl
 801a99c:	fb05 000b 	mla	r0, r5, fp, r0
 801a9a0:	fb07 0009 	mla	r0, r7, r9, r0
 801a9a4:	fb0e 0008 	mla	r0, lr, r8, r0
 801a9a8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a9ac:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a9b0:	9003      	str	r0, [sp, #12]
 801a9b2:	d018      	beq.n	801a9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801a9b4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a9b8:	fb0b f000 	mul.w	r0, fp, r0
 801a9bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a9c0:	fb0b fb02 	mul.w	fp, fp, r2
 801a9c4:	0a02      	lsrs	r2, r0, #8
 801a9c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9ca:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a9ce:	4402      	add	r2, r0
 801a9d0:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a9d4:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a9d8:	0a12      	lsrs	r2, r2, #8
 801a9da:	0a00      	lsrs	r0, r0, #8
 801a9dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a9e0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a9e4:	4302      	orrs	r2, r0
 801a9e6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a9ea:	d019      	beq.n	801aa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801a9ec:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a9f0:	fb0a fb0b 	mul.w	fp, sl, fp
 801a9f4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a9f8:	fb0a fa06 	mul.w	sl, sl, r6
 801a9fc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801aa00:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801aa04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa08:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801aa0c:	445e      	add	r6, fp
 801aa0e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801aa12:	0a36      	lsrs	r6, r6, #8
 801aa14:	0a00      	lsrs	r0, r0, #8
 801aa16:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801aa1a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aa1e:	4306      	orrs	r6, r0
 801aa20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801aa24:	d019      	beq.n	801aa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801aa26:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801aa2a:	fb09 fa0a 	mul.w	sl, r9, sl
 801aa2e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aa32:	fb09 f904 	mul.w	r9, r9, r4
 801aa36:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801aa3a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aa3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aa42:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801aa46:	4454      	add	r4, sl
 801aa48:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801aa4c:	0a24      	lsrs	r4, r4, #8
 801aa4e:	0a00      	lsrs	r0, r0, #8
 801aa50:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801aa54:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aa58:	4304      	orrs	r4, r0
 801aa5a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801aa5e:	d019      	beq.n	801aa94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801aa60:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801aa64:	fb08 f909 	mul.w	r9, r8, r9
 801aa68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aa6c:	fb08 f803 	mul.w	r8, r8, r3
 801aa70:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801aa74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aa78:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801aa7c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801aa80:	444b      	add	r3, r9
 801aa82:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801aa86:	0a1b      	lsrs	r3, r3, #8
 801aa88:	0a00      	lsrs	r0, r0, #8
 801aa8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aa8e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aa92:	4303      	orrs	r3, r0
 801aa94:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801aa98:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801aa9c:	fb0c f808 	mul.w	r8, ip, r8
 801aaa0:	fb05 8800 	mla	r8, r5, r0, r8
 801aaa4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801aaa8:	fb07 8800 	mla	r8, r7, r0, r8
 801aaac:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801aab0:	fb0e 8000 	mla	r0, lr, r0, r8
 801aab4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801aab8:	fb0c f606 	mul.w	r6, ip, r6
 801aabc:	0a00      	lsrs	r0, r0, #8
 801aabe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801aac2:	fb05 6202 	mla	r2, r5, r2, r6
 801aac6:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801aaca:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801aace:	fb07 2700 	mla	r7, r7, r0, r2
 801aad2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801aad6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801aada:	9c03      	ldr	r4, [sp, #12]
 801aadc:	9e01      	ldr	r6, [sp, #4]
 801aade:	b29b      	uxth	r3, r3
 801aae0:	435c      	muls	r4, r3
 801aae2:	fb0e 7000 	mla	r0, lr, r0, r7
 801aae6:	1c62      	adds	r2, r4, #1
 801aae8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801aaec:	0a00      	lsrs	r0, r0, #8
 801aaee:	9c00      	ldr	r4, [sp, #0]
 801aaf0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aaf4:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801aaf8:	ea48 0000 	orr.w	r0, r8, r0
 801aafc:	b2d2      	uxtb	r2, r2
 801aafe:	fb14 f402 	smulbb	r4, r4, r2
 801ab02:	0c05      	lsrs	r5, r0, #16
 801ab04:	fb05 4503 	mla	r5, r5, r3, r4
 801ab08:	fb16 f602 	smulbb	r6, r6, r2
 801ab0c:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801ab10:	fb04 6403 	mla	r4, r4, r3, r6
 801ab14:	9e02      	ldr	r6, [sp, #8]
 801ab16:	b2c0      	uxtb	r0, r0
 801ab18:	fb16 f202 	smulbb	r2, r6, r2
 801ab1c:	fb00 2303 	mla	r3, r0, r3, r2
 801ab20:	b2ad      	uxth	r5, r5
 801ab22:	b298      	uxth	r0, r3
 801ab24:	1c43      	adds	r3, r0, #1
 801ab26:	1c6a      	adds	r2, r5, #1
 801ab28:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ab2c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801ab30:	b2a4      	uxth	r4, r4
 801ab32:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ab36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab3a:	4313      	orrs	r3, r2
 801ab3c:	1c62      	adds	r2, r4, #1
 801ab3e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ab42:	0952      	lsrs	r2, r2, #5
 801ab44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab48:	4313      	orrs	r3, r2
 801ab4a:	800b      	strh	r3, [r1, #0]
 801ab4c:	b005      	add	sp, #20
 801ab4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab52:	bf00      	nop
 801ab54:	08021456 	.word	0x08021456
 801ab58:	08021a22 	.word	0x08021a22
 801ab5c:	080214da 	.word	0x080214da

0801ab60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab64:	ed2d 8b08 	vpush	{d8-d11}
 801ab68:	b09d      	sub	sp, #116	; 0x74
 801ab6a:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801ab6e:	9219      	str	r2, [sp, #100]	; 0x64
 801ab70:	9307      	str	r3, [sp, #28]
 801ab72:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801ab74:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801ab78:	931a      	str	r3, [sp, #104]	; 0x68
 801ab7a:	9117      	str	r1, [sp, #92]	; 0x5c
 801ab7c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801ab80:	901b      	str	r0, [sp, #108]	; 0x6c
 801ab82:	6850      	ldr	r0, [r2, #4]
 801ab84:	6812      	ldr	r2, [r2, #0]
 801ab86:	fb00 1303 	mla	r3, r0, r3, r1
 801ab8a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ab8e:	930a      	str	r3, [sp, #40]	; 0x28
 801ab90:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801ab92:	681b      	ldr	r3, [r3, #0]
 801ab94:	9310      	str	r3, [sp, #64]	; 0x40
 801ab96:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ab9a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ab9c:	eeb0 aa40 	vmov.f32	s20, s0
 801aba0:	eef0 9a60 	vmov.f32	s19, s1
 801aba4:	eeb0 9a41 	vmov.f32	s18, s2
 801aba8:	eeb0 8a62 	vmov.f32	s16, s5
 801abac:	eef0 8a43 	vmov.f32	s17, s6
 801abb0:	eef0 ba44 	vmov.f32	s23, s8
 801abb4:	eeb0 ba64 	vmov.f32	s22, s9
 801abb8:	eef0 aa45 	vmov.f32	s21, s10
 801abbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801abbe:	2b00      	cmp	r3, #0
 801abc0:	dc03      	bgt.n	801abca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801abc2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801abc4:	2b00      	cmp	r3, #0
 801abc6:	f340 8375 	ble.w	801b2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801abca:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801abcc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801abd0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801abd4:	1e48      	subs	r0, r1, #1
 801abd6:	1e57      	subs	r7, r2, #1
 801abd8:	9b07      	ldr	r3, [sp, #28]
 801abda:	2b00      	cmp	r3, #0
 801abdc:	f340 818e 	ble.w	801aefc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801abe0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801abe4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801abe8:	d406      	bmi.n	801abf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801abea:	4584      	cmp	ip, r0
 801abec:	da04      	bge.n	801abf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801abee:	2b00      	cmp	r3, #0
 801abf0:	db02      	blt.n	801abf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801abf2:	42bb      	cmp	r3, r7
 801abf4:	f2c0 8183 	blt.w	801aefe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801abf8:	f11c 0c01 	adds.w	ip, ip, #1
 801abfc:	f100 8173 	bmi.w	801aee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ac00:	4561      	cmp	r1, ip
 801ac02:	f2c0 8170 	blt.w	801aee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ac06:	3301      	adds	r3, #1
 801ac08:	f100 816d 	bmi.w	801aee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ac0c:	429a      	cmp	r2, r3
 801ac0e:	f2c0 816a 	blt.w	801aee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801ac12:	9b07      	ldr	r3, [sp, #28]
 801ac14:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ac16:	9318      	str	r3, [sp, #96]	; 0x60
 801ac18:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ac1a:	2b00      	cmp	r3, #0
 801ac1c:	f340 818c 	ble.w	801af38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801ac20:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801ac22:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801ac24:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ac28:	689b      	ldr	r3, [r3, #8]
 801ac2a:	1422      	asrs	r2, r4, #16
 801ac2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ac30:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ac34:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ac38:	f100 81cd 	bmi.w	801afd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ac3c:	f103 38ff 	add.w	r8, r3, #4294967295
 801ac40:	4542      	cmp	r2, r8
 801ac42:	f280 81c8 	bge.w	801afd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ac46:	f1bc 0f00 	cmp.w	ip, #0
 801ac4a:	f2c0 81c4 	blt.w	801afd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ac4e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ac52:	45c4      	cmp	ip, r8
 801ac54:	f280 81bf 	bge.w	801afd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801ac58:	b21b      	sxth	r3, r3
 801ac5a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ac5e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ac60:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ac64:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ac68:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ac6c:	2800      	cmp	r0, #0
 801ac6e:	f000 81a9 	beq.w	801afc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801ac72:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ac76:	950c      	str	r5, [sp, #48]	; 0x30
 801ac78:	0e2d      	lsrs	r5, r5, #24
 801ac7a:	9513      	str	r5, [sp, #76]	; 0x4c
 801ac7c:	b181      	cbz	r1, 801aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801ac7e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ac82:	3b01      	subs	r3, #1
 801ac84:	009b      	lsls	r3, r3, #2
 801ac86:	3304      	adds	r3, #4
 801ac88:	eb08 0c03 	add.w	ip, r8, r3
 801ac8c:	f858 3003 	ldr.w	r3, [r8, r3]
 801ac90:	9308      	str	r3, [sp, #32]
 801ac92:	0e1b      	lsrs	r3, r3, #24
 801ac94:	9311      	str	r3, [sp, #68]	; 0x44
 801ac96:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ac9a:	930d      	str	r3, [sp, #52]	; 0x34
 801ac9c:	0e1b      	lsrs	r3, r3, #24
 801ac9e:	9314      	str	r3, [sp, #80]	; 0x50
 801aca0:	b280      	uxth	r0, r0
 801aca2:	b289      	uxth	r1, r1
 801aca4:	fb00 f901 	mul.w	r9, r0, r1
 801aca8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801acac:	0100      	lsls	r0, r0, #4
 801acae:	eba0 0809 	sub.w	r8, r0, r9
 801acb2:	b289      	uxth	r1, r1
 801acb4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801acb8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801acba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801acbc:	fa1f f888 	uxth.w	r8, r8
 801acc0:	1a5b      	subs	r3, r3, r1
 801acc2:	b29b      	uxth	r3, r3
 801acc4:	fb08 f000 	mul.w	r0, r8, r0
 801acc8:	fb03 000e 	mla	r0, r3, lr, r0
 801accc:	fb01 0005 	mla	r0, r1, r5, r0
 801acd0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801acd2:	fb09 0005 	mla	r0, r9, r5, r0
 801acd6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801acda:	2800      	cmp	r0, #0
 801acdc:	f000 80fa 	beq.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ace0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ace4:	d01b      	beq.n	801ad1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801ace6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801acea:	fb0e fa0a 	mul.w	sl, lr, sl
 801acee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801acf2:	fb0e fe02 	mul.w	lr, lr, r2
 801acf6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801acfa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801acfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ad02:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ad06:	4452      	add	r2, sl
 801ad08:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ad0c:	0a12      	lsrs	r2, r2, #8
 801ad0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ad16:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ad1a:	ea42 020c 	orr.w	r2, r2, ip
 801ad1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad20:	2dff      	cmp	r5, #255	; 0xff
 801ad22:	d021      	beq.n	801ad68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801ad24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ad26:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ad2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad2c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ad30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ad32:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ad36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ad38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad3c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ad40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad4c:	44de      	add	lr, fp
 801ad4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ad56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ad5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ad62:	ea4e 050a 	orr.w	r5, lr, sl
 801ad66:	950c      	str	r5, [sp, #48]	; 0x30
 801ad68:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad6a:	2dff      	cmp	r5, #255	; 0xff
 801ad6c:	d021      	beq.n	801adb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ad6e:	9d08      	ldr	r5, [sp, #32]
 801ad70:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ad74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad76:	fb05 fb0b 	mul.w	fp, r5, fp
 801ad7a:	9d08      	ldr	r5, [sp, #32]
 801ad7c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ad80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ad82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad86:	fb05 fa0a 	mul.w	sl, r5, sl
 801ad8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ad8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ad92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ad96:	44de      	add	lr, fp
 801ad98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ad9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ada0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ada4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ada8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adac:	ea4e 050a 	orr.w	r5, lr, sl
 801adb0:	9508      	str	r5, [sp, #32]
 801adb2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801adb4:	2dff      	cmp	r5, #255	; 0xff
 801adb6:	d021      	beq.n	801adfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801adb8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801adba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801adbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801adc0:	fb05 fb0b 	mul.w	fp, r5, fp
 801adc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801adc6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801adca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801adcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801add0:	fb05 fa0a 	mul.w	sl, r5, sl
 801add4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801add8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801addc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ade0:	44de      	add	lr, fp
 801ade2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ade6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801adea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801adf2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adf6:	ea4e 050a 	orr.w	r5, lr, sl
 801adfa:	950d      	str	r5, [sp, #52]	; 0x34
 801adfc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801adfe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ae02:	9d08      	ldr	r5, [sp, #32]
 801ae04:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ae08:	fb08 fc0c 	mul.w	ip, r8, ip
 801ae0c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ae10:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ae14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ae16:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ae1a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ae1e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ae20:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ae24:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ae28:	fb08 f80e 	mul.w	r8, r8, lr
 801ae2c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ae30:	fb03 8202 	mla	r2, r3, r2, r8
 801ae34:	9b08      	ldr	r3, [sp, #32]
 801ae36:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ae38:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801ae3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae3e:	fb01 220a 	mla	r2, r1, sl, r2
 801ae42:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801ae46:	fb09 2901 	mla	r9, r9, r1, r2
 801ae4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ae4c:	883b      	ldrh	r3, [r7, #0]
 801ae4e:	4342      	muls	r2, r0
 801ae50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ae58:	1c50      	adds	r0, r2, #1
 801ae5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae5e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ae62:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae66:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ae6a:	1219      	asrs	r1, r3, #8
 801ae6c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ae70:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ae74:	b2c0      	uxtb	r0, r0
 801ae76:	fb12 f205 	smulbb	r2, r2, r5
 801ae7a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ae7e:	fb01 2100 	mla	r1, r1, r0, r2
 801ae82:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ae86:	10da      	asrs	r2, r3, #3
 801ae88:	fa5f fc8c 	uxtb.w	ip, ip
 801ae8c:	00db      	lsls	r3, r3, #3
 801ae8e:	fb1c fc05 	smulbb	ip, ip, r5
 801ae92:	b2db      	uxtb	r3, r3
 801ae94:	b289      	uxth	r1, r1
 801ae96:	fb03 c300 	mla	r3, r3, r0, ip
 801ae9a:	fa1f fc83 	uxth.w	ip, r3
 801ae9e:	1c4b      	adds	r3, r1, #1
 801aea0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801aea4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801aea8:	fb1e fe05 	smulbb	lr, lr, r5
 801aeac:	f10c 0301 	add.w	r3, ip, #1
 801aeb0:	fb02 e200 	mla	r2, r2, r0, lr
 801aeb4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801aeb8:	b292      	uxth	r2, r2
 801aeba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801aebe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aec2:	430b      	orrs	r3, r1
 801aec4:	1c51      	adds	r1, r2, #1
 801aec6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aeca:	0952      	lsrs	r2, r2, #5
 801aecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aed0:	4313      	orrs	r3, r2
 801aed2:	803b      	strh	r3, [r7, #0]
 801aed4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801aed6:	441c      	add	r4, r3
 801aed8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801aeda:	441e      	add	r6, r3
 801aedc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aede:	3b01      	subs	r3, #1
 801aee0:	3702      	adds	r7, #2
 801aee2:	9318      	str	r3, [sp, #96]	; 0x60
 801aee4:	e698      	b.n	801ac18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801aee6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801aee8:	441c      	add	r4, r3
 801aeea:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801aeec:	441e      	add	r6, r3
 801aeee:	9b07      	ldr	r3, [sp, #28]
 801aef0:	3b01      	subs	r3, #1
 801aef2:	9307      	str	r3, [sp, #28]
 801aef4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aef6:	3302      	adds	r3, #2
 801aef8:	930a      	str	r3, [sp, #40]	; 0x28
 801aefa:	e66d      	b.n	801abd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aefc:	d023      	beq.n	801af46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801aefe:	9b07      	ldr	r3, [sp, #28]
 801af00:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801af02:	3b01      	subs	r3, #1
 801af04:	fb00 4003 	mla	r0, r0, r3, r4
 801af08:	1400      	asrs	r0, r0, #16
 801af0a:	f53f ae82 	bmi.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801af0e:	3901      	subs	r1, #1
 801af10:	4288      	cmp	r0, r1
 801af12:	f6bf ae7e 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801af16:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801af18:	fb01 6303 	mla	r3, r1, r3, r6
 801af1c:	141b      	asrs	r3, r3, #16
 801af1e:	f53f ae78 	bmi.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801af22:	3a01      	subs	r2, #1
 801af24:	4293      	cmp	r3, r2
 801af26:	f6bf ae74 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801af2a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801af2e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801af32:	f1bb 0f00 	cmp.w	fp, #0
 801af36:	dc6c      	bgt.n	801b012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801af38:	9b07      	ldr	r3, [sp, #28]
 801af3a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801af3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801af40:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801af44:	930a      	str	r3, [sp, #40]	; 0x28
 801af46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801af48:	2b00      	cmp	r3, #0
 801af4a:	f340 81b3 	ble.w	801b2b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801af4e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801af52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801af56:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801af5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801af5c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801af60:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801af64:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801af68:	eef0 6a48 	vmov.f32	s13, s16
 801af6c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801af70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801af74:	ee37 8a48 	vsub.f32	s16, s14, s16
 801af78:	ee16 4a90 	vmov	r4, s13
 801af7c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801af80:	eef0 6a68 	vmov.f32	s13, s17
 801af84:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801af88:	ee18 2a10 	vmov	r2, s16
 801af8c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801af90:	fb92 f3f3 	sdiv	r3, r2, r3
 801af94:	ee18 2a90 	vmov	r2, s17
 801af98:	9331      	str	r3, [sp, #196]	; 0xc4
 801af9a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801af9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801afa0:	9332      	str	r3, [sp, #200]	; 0xc8
 801afa2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801afa4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801afa6:	3b01      	subs	r3, #1
 801afa8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afac:	9317      	str	r3, [sp, #92]	; 0x5c
 801afae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801afb0:	bf08      	it	eq
 801afb2:	4613      	moveq	r3, r2
 801afb4:	ee16 6a90 	vmov	r6, s13
 801afb8:	9307      	str	r3, [sp, #28]
 801afba:	eef0 8a67 	vmov.f32	s17, s15
 801afbe:	eeb0 8a47 	vmov.f32	s16, s14
 801afc2:	e5fb      	b.n	801abbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801afc4:	2900      	cmp	r1, #0
 801afc6:	f43f ae6b 	beq.w	801aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801afca:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801afce:	9308      	str	r3, [sp, #32]
 801afd0:	0e1b      	lsrs	r3, r3, #24
 801afd2:	9311      	str	r3, [sp, #68]	; 0x44
 801afd4:	e664      	b.n	801aca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801afd6:	f112 0801 	adds.w	r8, r2, #1
 801afda:	f53f af7b 	bmi.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801afde:	4543      	cmp	r3, r8
 801afe0:	f6ff af78 	blt.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801afe4:	f11c 0801 	adds.w	r8, ip, #1
 801afe8:	f53f af74 	bmi.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801afec:	45c6      	cmp	lr, r8
 801afee:	f6ff af71 	blt.w	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801aff2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801aff4:	9201      	str	r2, [sp, #4]
 801aff6:	fa0f f28e 	sxth.w	r2, lr
 801affa:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801affe:	e9cd c002 	strd	ip, r0, [sp, #8]
 801b002:	9200      	str	r2, [sp, #0]
 801b004:	b21b      	sxth	r3, r3
 801b006:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b008:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b00a:	4639      	mov	r1, r7
 801b00c:	f7ff fc4a 	bl	801a8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801b010:	e760      	b.n	801aed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b012:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b014:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b016:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b01a:	1427      	asrs	r7, r4, #16
 801b01c:	1433      	asrs	r3, r6, #16
 801b01e:	fb01 7303 	mla	r3, r1, r3, r7
 801b022:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801b026:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b02a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b02e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b032:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b036:	2a00      	cmp	r2, #0
 801b038:	f000 8133 	beq.w	801b2a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801b03c:	687d      	ldr	r5, [r7, #4]
 801b03e:	950e      	str	r5, [sp, #56]	; 0x38
 801b040:	0e2d      	lsrs	r5, r5, #24
 801b042:	9515      	str	r5, [sp, #84]	; 0x54
 801b044:	b178      	cbz	r0, 801b066 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b046:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801b04a:	3901      	subs	r1, #1
 801b04c:	0089      	lsls	r1, r1, #2
 801b04e:	3104      	adds	r1, #4
 801b050:	eb07 0e01 	add.w	lr, r7, r1
 801b054:	5879      	ldr	r1, [r7, r1]
 801b056:	9109      	str	r1, [sp, #36]	; 0x24
 801b058:	0e09      	lsrs	r1, r1, #24
 801b05a:	9112      	str	r1, [sp, #72]	; 0x48
 801b05c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b060:	910f      	str	r1, [sp, #60]	; 0x3c
 801b062:	0e09      	lsrs	r1, r1, #24
 801b064:	9116      	str	r1, [sp, #88]	; 0x58
 801b066:	b292      	uxth	r2, r2
 801b068:	b280      	uxth	r0, r0
 801b06a:	fb02 f800 	mul.w	r8, r2, r0
 801b06e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b072:	0112      	lsls	r2, r2, #4
 801b074:	eba2 0e08 	sub.w	lr, r2, r8
 801b078:	b280      	uxth	r0, r0
 801b07a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b07e:	9915      	ldr	r1, [sp, #84]	; 0x54
 801b080:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b082:	fa1f fe8e 	uxth.w	lr, lr
 801b086:	1a12      	subs	r2, r2, r0
 801b088:	b292      	uxth	r2, r2
 801b08a:	fb0e f101 	mul.w	r1, lr, r1
 801b08e:	fb02 110c 	mla	r1, r2, ip, r1
 801b092:	fb00 1105 	mla	r1, r0, r5, r1
 801b096:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b098:	fb08 1105 	mla	r1, r8, r5, r1
 801b09c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b0a0:	2900      	cmp	r1, #0
 801b0a2:	f000 80f5 	beq.w	801b290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b0a6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b0aa:	d019      	beq.n	801b0e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b0ac:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b0b0:	fb0c fa0a 	mul.w	sl, ip, sl
 801b0b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b0b8:	fb0c fc03 	mul.w	ip, ip, r3
 801b0bc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b0c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0c4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b0c8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b0cc:	4453      	add	r3, sl
 801b0ce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b0d2:	0a1b      	lsrs	r3, r3, #8
 801b0d4:	0a3f      	lsrs	r7, r7, #8
 801b0d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b0da:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b0de:	433b      	orrs	r3, r7
 801b0e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b0e2:	2dff      	cmp	r5, #255	; 0xff
 801b0e4:	d020      	beq.n	801b128 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b0e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b0ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b0ee:	436f      	muls	r7, r5
 801b0f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b0f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b0f8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b0fc:	fb05 fa0a 	mul.w	sl, r5, sl
 801b100:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b104:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b108:	44bc      	add	ip, r7
 801b10a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b10e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b112:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b116:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b11a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b11e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b122:	ea4c 050a 	orr.w	r5, ip, sl
 801b126:	950e      	str	r5, [sp, #56]	; 0x38
 801b128:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b12a:	2dff      	cmp	r5, #255	; 0xff
 801b12c:	d020      	beq.n	801b170 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b12e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b130:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b134:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b136:	436f      	muls	r7, r5
 801b138:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b13a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b13e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b140:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b144:	fb05 fa0a 	mul.w	sl, r5, sl
 801b148:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b14c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b150:	44bc      	add	ip, r7
 801b152:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b156:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b15a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b15e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b162:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b166:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b16a:	ea4c 050a 	orr.w	r5, ip, sl
 801b16e:	9509      	str	r5, [sp, #36]	; 0x24
 801b170:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b172:	2dff      	cmp	r5, #255	; 0xff
 801b174:	d020      	beq.n	801b1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b176:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b178:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b17c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b17e:	436f      	muls	r7, r5
 801b180:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b182:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b186:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b188:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b18c:	fb05 fa0a 	mul.w	sl, r5, sl
 801b190:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b194:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b198:	44bc      	add	ip, r7
 801b19a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b19e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1b2:	ea4c 050a 	orr.w	r5, ip, sl
 801b1b6:	950f      	str	r5, [sp, #60]	; 0x3c
 801b1b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b1ba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b1be:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b1c0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b1c4:	fb0e f707 	mul.w	r7, lr, r7
 801b1c8:	fb02 770c 	mla	r7, r2, ip, r7
 801b1cc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b1d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b1d2:	fb00 770c 	mla	r7, r0, ip, r7
 801b1d6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b1da:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b1dc:	fb08 770c 	mla	r7, r8, ip, r7
 801b1e0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b1e4:	fb0e fe0c 	mul.w	lr, lr, ip
 801b1e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b1ec:	fb02 e303 	mla	r3, r2, r3, lr
 801b1f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b1f2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b1f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b1f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b1fa:	fb00 330a 	mla	r3, r0, sl, r3
 801b1fe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b202:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b206:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b208:	f8b9 0000 	ldrh.w	r0, [r9]
 801b20c:	4359      	muls	r1, r3
 801b20e:	0a3f      	lsrs	r7, r7, #8
 801b210:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b214:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b218:	1c4b      	adds	r3, r1, #1
 801b21a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b21e:	ea47 070c 	orr.w	r7, r7, ip
 801b222:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b226:	1202      	asrs	r2, r0, #8
 801b228:	0c3b      	lsrs	r3, r7, #16
 801b22a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b22e:	b2c9      	uxtb	r1, r1
 801b230:	fb13 f305 	smulbb	r3, r3, r5
 801b234:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b238:	fb02 3201 	mla	r2, r2, r1, r3
 801b23c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b240:	10c3      	asrs	r3, r0, #3
 801b242:	b2ff      	uxtb	r7, r7
 801b244:	00c0      	lsls	r0, r0, #3
 801b246:	b2c0      	uxtb	r0, r0
 801b248:	fb17 f705 	smulbb	r7, r7, r5
 801b24c:	fb00 7001 	mla	r0, r0, r1, r7
 801b250:	b292      	uxth	r2, r2
 801b252:	fb1c fc05 	smulbb	ip, ip, r5
 801b256:	b280      	uxth	r0, r0
 801b258:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b25c:	fb03 c301 	mla	r3, r3, r1, ip
 801b260:	1c51      	adds	r1, r2, #1
 801b262:	f100 0c01 	add.w	ip, r0, #1
 801b266:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b26a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b26e:	b29b      	uxth	r3, r3
 801b270:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b274:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b278:	ea4c 0202 	orr.w	r2, ip, r2
 801b27c:	f103 0c01 	add.w	ip, r3, #1
 801b280:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b284:	095b      	lsrs	r3, r3, #5
 801b286:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b28a:	431a      	orrs	r2, r3
 801b28c:	f8a9 2000 	strh.w	r2, [r9]
 801b290:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801b292:	441c      	add	r4, r3
 801b294:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801b296:	f109 0902 	add.w	r9, r9, #2
 801b29a:	441e      	add	r6, r3
 801b29c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b2a0:	e647      	b.n	801af32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801b2a2:	2800      	cmp	r0, #0
 801b2a4:	f43f aedf 	beq.w	801b066 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b2a8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b2ac:	9109      	str	r1, [sp, #36]	; 0x24
 801b2ae:	0e09      	lsrs	r1, r1, #24
 801b2b0:	9112      	str	r1, [sp, #72]	; 0x48
 801b2b2:	e6d8      	b.n	801b066 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b2b4:	b01d      	add	sp, #116	; 0x74
 801b2b6:	ecbd 8b08 	vpop	{d8-d11}
 801b2ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b2c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2c4:	880e      	ldrh	r6, [r1, #0]
 801b2c6:	b085      	sub	sp, #20
 801b2c8:	ea4f 2e26 	mov.w	lr, r6, asr #8
 801b2cc:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801b2d0:	4690      	mov	r8, r2
 801b2d2:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 801b2d6:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 801b2da:	9200      	str	r2, [sp, #0]
 801b2dc:	00f6      	lsls	r6, r6, #3
 801b2de:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801b2e2:	9201      	str	r2, [sp, #4]
 801b2e4:	2c00      	cmp	r4, #0
 801b2e6:	b2f2      	uxtb	r2, r6
 801b2e8:	fb04 5603 	mla	r6, r4, r3, r5
 801b2ec:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801b2f0:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801b2f4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801b2f8:	9202      	str	r2, [sp, #8]
 801b2fa:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 801b2fe:	db37      	blt.n	801b370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801b300:	45a4      	cmp	ip, r4
 801b302:	dd35      	ble.n	801b370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 801b304:	2d00      	cmp	r5, #0
 801b306:	db31      	blt.n	801b36c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 801b308:	42ab      	cmp	r3, r5
 801b30a:	dd2f      	ble.n	801b36c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 801b30c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801b310:	1c6e      	adds	r6, r5, #1
 801b312:	d430      	bmi.n	801b376 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801b314:	42b3      	cmp	r3, r6
 801b316:	dd2e      	ble.n	801b376 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801b318:	b378      	cbz	r0, 801b37a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 801b31a:	f8de 6004 	ldr.w	r6, [lr, #4]
 801b31e:	3401      	adds	r4, #1
 801b320:	d42f      	bmi.n	801b382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801b322:	45a4      	cmp	ip, r4
 801b324:	dd2d      	ble.n	801b382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 801b326:	b37f      	cbz	r7, 801b388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801b328:	2d00      	cmp	r5, #0
 801b32a:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 801b32e:	db26      	blt.n	801b37e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801b330:	42ab      	cmp	r3, r5
 801b332:	dd24      	ble.n	801b37e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801b334:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801b338:	3501      	adds	r5, #1
 801b33a:	d428      	bmi.n	801b38e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 801b33c:	42ab      	cmp	r3, r5
 801b33e:	dd26      	ble.n	801b38e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 801b340:	b338      	cbz	r0, 801b392 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 801b342:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b346:	280f      	cmp	r0, #15
 801b348:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b34c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b350:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b354:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b358:	d801      	bhi.n	801b35e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801b35a:	2f0f      	cmp	r7, #15
 801b35c:	d91b      	bls.n	801b396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 801b35e:	4b7d      	ldr	r3, [pc, #500]	; (801b554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801b360:	4a7d      	ldr	r2, [pc, #500]	; (801b558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801b362:	487e      	ldr	r0, [pc, #504]	; (801b55c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801b364:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801b368:	f001 fd16 	bl	801cd98 <__assert_func>
 801b36c:	2200      	movs	r2, #0
 801b36e:	e7cf      	b.n	801b310 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801b370:	2600      	movs	r6, #0
 801b372:	4632      	mov	r2, r6
 801b374:	e7d3      	b.n	801b31e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801b376:	2600      	movs	r6, #0
 801b378:	e7d1      	b.n	801b31e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801b37a:	4606      	mov	r6, r0
 801b37c:	e7cf      	b.n	801b31e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801b37e:	2400      	movs	r4, #0
 801b380:	e7da      	b.n	801b338 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801b382:	2300      	movs	r3, #0
 801b384:	461c      	mov	r4, r3
 801b386:	e7de      	b.n	801b346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801b388:	463b      	mov	r3, r7
 801b38a:	463c      	mov	r4, r7
 801b38c:	e7db      	b.n	801b346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801b38e:	2300      	movs	r3, #0
 801b390:	e7d9      	b.n	801b346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801b392:	4603      	mov	r3, r0
 801b394:	e7d7      	b.n	801b346 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 801b396:	b280      	uxth	r0, r0
 801b398:	b2bf      	uxth	r7, r7
 801b39a:	fb00 fe07 	mul.w	lr, r0, r7
 801b39e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b3a2:	0100      	lsls	r0, r0, #4
 801b3a4:	eba0 0c0e 	sub.w	ip, r0, lr
 801b3a8:	b2bf      	uxth	r7, r7
 801b3aa:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b3ae:	fa1f fc8c 	uxth.w	ip, ip
 801b3b2:	1bed      	subs	r5, r5, r7
 801b3b4:	b2ad      	uxth	r5, r5
 801b3b6:	fb0c f00a 	mul.w	r0, ip, sl
 801b3ba:	fb05 000b 	mla	r0, r5, fp, r0
 801b3be:	fb07 0009 	mla	r0, r7, r9, r0
 801b3c2:	fb0e 0008 	mla	r0, lr, r8, r0
 801b3c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b3ca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b3ce:	9003      	str	r0, [sp, #12]
 801b3d0:	d018      	beq.n	801b404 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 801b3d2:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b3d6:	fb0b f000 	mul.w	r0, fp, r0
 801b3da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b3de:	fb0b fb02 	mul.w	fp, fp, r2
 801b3e2:	0a02      	lsrs	r2, r0, #8
 801b3e4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3e8:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b3ec:	4402      	add	r2, r0
 801b3ee:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b3f2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b3f6:	0a12      	lsrs	r2, r2, #8
 801b3f8:	0a00      	lsrs	r0, r0, #8
 801b3fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3fe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b402:	4302      	orrs	r2, r0
 801b404:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b408:	d019      	beq.n	801b43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 801b40a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801b40e:	fb0a fb0b 	mul.w	fp, sl, fp
 801b412:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b416:	fb0a fa06 	mul.w	sl, sl, r6
 801b41a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801b41e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b422:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b426:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b42a:	445e      	add	r6, fp
 801b42c:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b430:	0a36      	lsrs	r6, r6, #8
 801b432:	0a00      	lsrs	r0, r0, #8
 801b434:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b438:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b43c:	4306      	orrs	r6, r0
 801b43e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b442:	d019      	beq.n	801b478 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 801b444:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b448:	fb09 fa0a 	mul.w	sl, r9, sl
 801b44c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b450:	fb09 f904 	mul.w	r9, r9, r4
 801b454:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b458:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b45c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b460:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801b464:	4454      	add	r4, sl
 801b466:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801b46a:	0a24      	lsrs	r4, r4, #8
 801b46c:	0a00      	lsrs	r0, r0, #8
 801b46e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b472:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b476:	4304      	orrs	r4, r0
 801b478:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b47c:	d019      	beq.n	801b4b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 801b47e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b482:	fb08 f909 	mul.w	r9, r8, r9
 801b486:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b48a:	fb08 f803 	mul.w	r8, r8, r3
 801b48e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b492:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b496:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b49a:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801b49e:	444b      	add	r3, r9
 801b4a0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b4a4:	0a1b      	lsrs	r3, r3, #8
 801b4a6:	0a00      	lsrs	r0, r0, #8
 801b4a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b4ac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b4b0:	4303      	orrs	r3, r0
 801b4b2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801b4b6:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b4ba:	fb0c f808 	mul.w	r8, ip, r8
 801b4be:	fb05 8800 	mla	r8, r5, r0, r8
 801b4c2:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801b4c6:	fb07 8800 	mla	r8, r7, r0, r8
 801b4ca:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801b4ce:	fb0e 8000 	mla	r0, lr, r0, r8
 801b4d2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4d6:	fb0c f606 	mul.w	r6, ip, r6
 801b4da:	0a00      	lsrs	r0, r0, #8
 801b4dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b4e0:	fb05 6202 	mla	r2, r5, r2, r6
 801b4e4:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801b4e8:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801b4ec:	fb07 2700 	mla	r7, r7, r0, r2
 801b4f0:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b4f4:	9b03      	ldr	r3, [sp, #12]
 801b4f6:	9d00      	ldr	r5, [sp, #0]
 801b4f8:	9a02      	ldr	r2, [sp, #8]
 801b4fa:	fb0e 7000 	mla	r0, lr, r0, r7
 801b4fe:	43dc      	mvns	r4, r3
 801b500:	9b01      	ldr	r3, [sp, #4]
 801b502:	b2e4      	uxtb	r4, r4
 801b504:	0a00      	lsrs	r0, r0, #8
 801b506:	4363      	muls	r3, r4
 801b508:	4365      	muls	r5, r4
 801b50a:	4362      	muls	r2, r4
 801b50c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b510:	ea48 0000 	orr.w	r0, r8, r0
 801b514:	4614      	mov	r4, r2
 801b516:	1c5e      	adds	r6, r3, #1
 801b518:	1c6a      	adds	r2, r5, #1
 801b51a:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 801b51e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b522:	0a03      	lsrs	r3, r0, #8
 801b524:	0c02      	lsrs	r2, r0, #16
 801b526:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801b52a:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801b52e:	00db      	lsls	r3, r3, #3
 801b530:	0212      	lsls	r2, r2, #8
 801b532:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b536:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b53a:	4313      	orrs	r3, r2
 801b53c:	1c62      	adds	r2, r4, #1
 801b53e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b542:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801b546:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b54a:	4318      	orrs	r0, r3
 801b54c:	8008      	strh	r0, [r1, #0]
 801b54e:	b005      	add	sp, #20
 801b550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b554:	08021456 	.word	0x08021456
 801b558:	08021a22 	.word	0x08021a22
 801b55c:	080214da 	.word	0x080214da

0801b560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b564:	ed2d 8b08 	vpush	{d8-d11}
 801b568:	b09b      	sub	sp, #108	; 0x6c
 801b56a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801b56e:	9218      	str	r2, [sp, #96]	; 0x60
 801b570:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801b572:	9116      	str	r1, [sp, #88]	; 0x58
 801b574:	9307      	str	r3, [sp, #28]
 801b576:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801b57a:	9019      	str	r0, [sp, #100]	; 0x64
 801b57c:	6850      	ldr	r0, [r2, #4]
 801b57e:	6812      	ldr	r2, [r2, #0]
 801b580:	fb00 1303 	mla	r3, r0, r3, r1
 801b584:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b588:	930a      	str	r3, [sp, #40]	; 0x28
 801b58a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b58c:	681b      	ldr	r3, [r3, #0]
 801b58e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b590:	eeb0 aa40 	vmov.f32	s20, s0
 801b594:	eef0 9a60 	vmov.f32	s19, s1
 801b598:	eeb0 9a41 	vmov.f32	s18, s2
 801b59c:	eeb0 8a62 	vmov.f32	s16, s5
 801b5a0:	eef0 8a43 	vmov.f32	s17, s6
 801b5a4:	eef0 ba44 	vmov.f32	s23, s8
 801b5a8:	eeb0 ba64 	vmov.f32	s22, s9
 801b5ac:	eef0 aa45 	vmov.f32	s21, s10
 801b5b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b5b2:	2b00      	cmp	r3, #0
 801b5b4:	dc03      	bgt.n	801b5be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b5b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b5b8:	2b00      	cmp	r3, #0
 801b5ba:	f340 8389 	ble.w	801bcd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801b5be:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b5c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b5c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b5c8:	1e48      	subs	r0, r1, #1
 801b5ca:	1e57      	subs	r7, r2, #1
 801b5cc:	9b07      	ldr	r3, [sp, #28]
 801b5ce:	2b00      	cmp	r3, #0
 801b5d0:	f340 818b 	ble.w	801b8ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b5d4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b5d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b5dc:	d406      	bmi.n	801b5ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b5de:	4584      	cmp	ip, r0
 801b5e0:	da04      	bge.n	801b5ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b5e2:	2b00      	cmp	r3, #0
 801b5e4:	db02      	blt.n	801b5ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b5e6:	42bb      	cmp	r3, r7
 801b5e8:	f2c0 8180 	blt.w	801b8ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b5ec:	f11c 0c01 	adds.w	ip, ip, #1
 801b5f0:	f100 8170 	bmi.w	801b8d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b5f4:	4561      	cmp	r1, ip
 801b5f6:	f2c0 816d 	blt.w	801b8d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b5fa:	3301      	adds	r3, #1
 801b5fc:	f100 816a 	bmi.w	801b8d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b600:	429a      	cmp	r2, r3
 801b602:	f2c0 8167 	blt.w	801b8d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b606:	9b07      	ldr	r3, [sp, #28]
 801b608:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b60a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b60c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b60e:	2b00      	cmp	r3, #0
 801b610:	f340 8189 	ble.w	801b926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801b614:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801b616:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b618:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b61c:	689b      	ldr	r3, [r3, #8]
 801b61e:	1422      	asrs	r2, r4, #16
 801b620:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b624:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b628:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b62c:	f100 81d4 	bmi.w	801b9d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801b630:	f103 38ff 	add.w	r8, r3, #4294967295
 801b634:	4542      	cmp	r2, r8
 801b636:	f280 81cf 	bge.w	801b9d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801b63a:	f1bc 0f00 	cmp.w	ip, #0
 801b63e:	f2c0 81cb 	blt.w	801b9d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801b642:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b646:	45c4      	cmp	ip, r8
 801b648:	f280 81c6 	bge.w	801b9d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801b64c:	b21b      	sxth	r3, r3
 801b64e:	fb0c 2203 	mla	r2, ip, r3, r2
 801b652:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b654:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b658:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b65c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b660:	2900      	cmp	r1, #0
 801b662:	f000 81a6 	beq.w	801b9b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b666:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b66a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b66c:	0e2d      	lsrs	r5, r5, #24
 801b66e:	9512      	str	r5, [sp, #72]	; 0x48
 801b670:	b180      	cbz	r0, 801b694 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b672:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b676:	3b01      	subs	r3, #1
 801b678:	009b      	lsls	r3, r3, #2
 801b67a:	3304      	adds	r3, #4
 801b67c:	eb08 0c03 	add.w	ip, r8, r3
 801b680:	f858 3003 	ldr.w	r3, [r8, r3]
 801b684:	9308      	str	r3, [sp, #32]
 801b686:	0e1b      	lsrs	r3, r3, #24
 801b688:	9310      	str	r3, [sp, #64]	; 0x40
 801b68a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b68e:	930c      	str	r3, [sp, #48]	; 0x30
 801b690:	0e1b      	lsrs	r3, r3, #24
 801b692:	9313      	str	r3, [sp, #76]	; 0x4c
 801b694:	b289      	uxth	r1, r1
 801b696:	b280      	uxth	r0, r0
 801b698:	fb01 f900 	mul.w	r9, r1, r0
 801b69c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b6a0:	0109      	lsls	r1, r1, #4
 801b6a2:	eba1 0809 	sub.w	r8, r1, r9
 801b6a6:	b280      	uxth	r0, r0
 801b6a8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b6ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b6ae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b6b0:	fa1f f888 	uxth.w	r8, r8
 801b6b4:	1a09      	subs	r1, r1, r0
 801b6b6:	b289      	uxth	r1, r1
 801b6b8:	fb08 f303 	mul.w	r3, r8, r3
 801b6bc:	fb01 330e 	mla	r3, r1, lr, r3
 801b6c0:	fb00 3305 	mla	r3, r0, r5, r3
 801b6c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b6c6:	fb09 3305 	mla	r3, r9, r5, r3
 801b6ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b6ce:	2b00      	cmp	r3, #0
 801b6d0:	f000 80f7 	beq.w	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b6d4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b6d8:	d01b      	beq.n	801b712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801b6da:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b6de:	fb0e fa0a 	mul.w	sl, lr, sl
 801b6e2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b6e6:	fb0e fe02 	mul.w	lr, lr, r2
 801b6ea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b6ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b6f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b6f6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b6fa:	4452      	add	r2, sl
 801b6fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b700:	0a12      	lsrs	r2, r2, #8
 801b702:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b706:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b70a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b70e:	ea42 020c 	orr.w	r2, r2, ip
 801b712:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b714:	2dff      	cmp	r5, #255	; 0xff
 801b716:	d021      	beq.n	801b75c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b718:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b71a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b71e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b720:	fb05 fb0b 	mul.w	fp, r5, fp
 801b724:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b726:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b72a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b72c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b730:	fb05 fa0a 	mul.w	sl, r5, sl
 801b734:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b738:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b73c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b740:	44de      	add	lr, fp
 801b742:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b746:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b74a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b74e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b752:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b756:	ea4e 050a 	orr.w	r5, lr, sl
 801b75a:	950b      	str	r5, [sp, #44]	; 0x2c
 801b75c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b75e:	2dff      	cmp	r5, #255	; 0xff
 801b760:	d021      	beq.n	801b7a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b762:	9d08      	ldr	r5, [sp, #32]
 801b764:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b768:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b76a:	fb05 fb0b 	mul.w	fp, r5, fp
 801b76e:	9d08      	ldr	r5, [sp, #32]
 801b770:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b774:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b776:	fb05 fa0e 	mul.w	sl, r5, lr
 801b77a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b77e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b782:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b786:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b78a:	44de      	add	lr, fp
 801b78c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b790:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b794:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b798:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b79c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7a0:	ea4e 050a 	orr.w	r5, lr, sl
 801b7a4:	9508      	str	r5, [sp, #32]
 801b7a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b7a8:	2dff      	cmp	r5, #255	; 0xff
 801b7aa:	d021      	beq.n	801b7f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b7ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b7ae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b7b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b7b4:	fb05 fb0b 	mul.w	fp, r5, fp
 801b7b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b7ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b7be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b7c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7c4:	fb05 fa0a 	mul.w	sl, r5, sl
 801b7c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7d4:	44de      	add	lr, fp
 801b7d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7ea:	ea4e 050a 	orr.w	r5, lr, sl
 801b7ee:	950c      	str	r5, [sp, #48]	; 0x30
 801b7f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b7f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b7f6:	9d08      	ldr	r5, [sp, #32]
 801b7f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b7fc:	fb08 fc0c 	mul.w	ip, r8, ip
 801b800:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b804:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b808:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b80a:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b80e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b812:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b814:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b818:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b81c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b820:	fb08 f80e 	mul.w	r8, r8, lr
 801b824:	fb01 8202 	mla	r2, r1, r2, r8
 801b828:	9908      	ldr	r1, [sp, #32]
 801b82a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b82e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b830:	fb00 220a 	mla	r2, r0, sl, r2
 801b834:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801b838:	fb09 2900 	mla	r9, r9, r0, r2
 801b83c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b840:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b844:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b848:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b84c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b850:	2bff      	cmp	r3, #255	; 0xff
 801b852:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b856:	f000 80b5 	beq.w	801b9c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801b85a:	8839      	ldrh	r1, [r7, #0]
 801b85c:	43db      	mvns	r3, r3
 801b85e:	ea4f 2821 	mov.w	r8, r1, asr #8
 801b862:	fa5f f983 	uxtb.w	r9, r3
 801b866:	10ca      	asrs	r2, r1, #3
 801b868:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b86c:	fb08 f809 	mul.w	r8, r8, r9
 801b870:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b874:	fb02 fe09 	mul.w	lr, r2, r9
 801b878:	f108 0201 	add.w	r2, r8, #1
 801b87c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b880:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b884:	00cb      	lsls	r3, r1, #3
 801b886:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 801b88a:	4961      	ldr	r1, [pc, #388]	; (801ba10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801b88c:	b2d2      	uxtb	r2, r2
 801b88e:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 801b892:	f10e 0201 	add.w	r2, lr, #1
 801b896:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 801b89a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b89e:	b2db      	uxtb	r3, r3
 801b8a0:	00d2      	lsls	r2, r2, #3
 801b8a2:	fb03 f309 	mul.w	r3, r3, r9
 801b8a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8aa:	430a      	orrs	r2, r1
 801b8ac:	1c59      	adds	r1, r3, #1
 801b8ae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b8b2:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b8b6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b8ba:	ea42 0c0c 	orr.w	ip, r2, ip
 801b8be:	f8a7 c000 	strh.w	ip, [r7]
 801b8c2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b8c4:	441c      	add	r4, r3
 801b8c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b8c8:	441e      	add	r6, r3
 801b8ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b8cc:	3b01      	subs	r3, #1
 801b8ce:	3702      	adds	r7, #2
 801b8d0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b8d2:	e69b      	b.n	801b60c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801b8d4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b8d6:	441c      	add	r4, r3
 801b8d8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b8da:	441e      	add	r6, r3
 801b8dc:	9b07      	ldr	r3, [sp, #28]
 801b8de:	3b01      	subs	r3, #1
 801b8e0:	9307      	str	r3, [sp, #28]
 801b8e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b8e4:	3302      	adds	r3, #2
 801b8e6:	930a      	str	r3, [sp, #40]	; 0x28
 801b8e8:	e670      	b.n	801b5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8ea:	d023      	beq.n	801b934 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801b8ec:	9b07      	ldr	r3, [sp, #28]
 801b8ee:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801b8f0:	3b01      	subs	r3, #1
 801b8f2:	fb00 4003 	mla	r0, r0, r3, r4
 801b8f6:	1400      	asrs	r0, r0, #16
 801b8f8:	f53f ae85 	bmi.w	801b606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b8fc:	3901      	subs	r1, #1
 801b8fe:	4288      	cmp	r0, r1
 801b900:	f6bf ae81 	bge.w	801b606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b904:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801b906:	fb01 6303 	mla	r3, r1, r3, r6
 801b90a:	141b      	asrs	r3, r3, #16
 801b90c:	f53f ae7b 	bmi.w	801b606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b910:	3a01      	subs	r2, #1
 801b912:	4293      	cmp	r3, r2
 801b914:	f6bf ae77 	bge.w	801b606 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b918:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b91c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801b920:	f1bb 0f00 	cmp.w	fp, #0
 801b924:	dc76      	bgt.n	801ba14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801b926:	9b07      	ldr	r3, [sp, #28]
 801b928:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b92c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b92e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b932:	930a      	str	r3, [sp, #40]	; 0x28
 801b934:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b936:	2b00      	cmp	r3, #0
 801b938:	f340 81ca 	ble.w	801bcd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 801b93c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b940:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b944:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b948:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b94a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b94e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b952:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b956:	eef0 6a48 	vmov.f32	s13, s16
 801b95a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b95e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b962:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b966:	ee16 4a90 	vmov	r4, s13
 801b96a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b96e:	eef0 6a68 	vmov.f32	s13, s17
 801b972:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b976:	ee18 2a10 	vmov	r2, s16
 801b97a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b97e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b982:	ee18 2a90 	vmov	r2, s17
 801b986:	932f      	str	r3, [sp, #188]	; 0xbc
 801b988:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b98a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b98e:	9330      	str	r3, [sp, #192]	; 0xc0
 801b990:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b992:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b994:	3b01      	subs	r3, #1
 801b996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b99a:	9316      	str	r3, [sp, #88]	; 0x58
 801b99c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b99e:	bf08      	it	eq
 801b9a0:	4613      	moveq	r3, r2
 801b9a2:	ee16 6a90 	vmov	r6, s13
 801b9a6:	9307      	str	r3, [sp, #28]
 801b9a8:	eef0 8a67 	vmov.f32	s17, s15
 801b9ac:	eeb0 8a47 	vmov.f32	s16, s14
 801b9b0:	e5fe      	b.n	801b5b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b9b2:	2800      	cmp	r0, #0
 801b9b4:	f43f ae6e 	beq.w	801b694 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b9b8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b9bc:	9308      	str	r3, [sp, #32]
 801b9be:	0e1b      	lsrs	r3, r3, #24
 801b9c0:	9310      	str	r3, [sp, #64]	; 0x40
 801b9c2:	e667      	b.n	801b694 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b9c4:	ea4f 125c 	mov.w	r2, ip, lsr #5
 801b9c8:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 801b9cc:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 801b9d0:	f022 0207 	bic.w	r2, r2, #7
 801b9d4:	431a      	orrs	r2, r3
 801b9d6:	e76e      	b.n	801b8b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801b9d8:	f112 0801 	adds.w	r8, r2, #1
 801b9dc:	f53f af71 	bmi.w	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b9e0:	4543      	cmp	r3, r8
 801b9e2:	f6ff af6e 	blt.w	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b9e6:	f11c 0801 	adds.w	r8, ip, #1
 801b9ea:	f53f af6a 	bmi.w	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b9ee:	45c6      	cmp	lr, r8
 801b9f0:	f6ff af67 	blt.w	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b9f4:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b9f8:	fa0f f28e 	sxth.w	r2, lr
 801b9fc:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ba00:	9200      	str	r2, [sp, #0]
 801ba02:	b21b      	sxth	r3, r3
 801ba04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba06:	9819      	ldr	r0, [sp, #100]	; 0x64
 801ba08:	4639      	mov	r1, r7
 801ba0a:	f7ff fc59 	bl	801b2c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ba0e:	e758      	b.n	801b8c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ba10:	fffff800 	.word	0xfffff800
 801ba14:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801ba16:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ba18:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ba1c:	1421      	asrs	r1, r4, #16
 801ba1e:	1433      	asrs	r3, r6, #16
 801ba20:	fb07 1303 	mla	r3, r7, r3, r1
 801ba24:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba26:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ba2a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ba2e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ba32:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ba36:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ba3a:	2a00      	cmp	r2, #0
 801ba3c:	f000 8131 	beq.w	801bca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801ba40:	684d      	ldr	r5, [r1, #4]
 801ba42:	950d      	str	r5, [sp, #52]	; 0x34
 801ba44:	0e2d      	lsrs	r5, r5, #24
 801ba46:	9514      	str	r5, [sp, #80]	; 0x50
 801ba48:	b178      	cbz	r0, 801ba6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801ba4a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ba4e:	3f01      	subs	r7, #1
 801ba50:	00bf      	lsls	r7, r7, #2
 801ba52:	3704      	adds	r7, #4
 801ba54:	eb01 0e07 	add.w	lr, r1, r7
 801ba58:	59c9      	ldr	r1, [r1, r7]
 801ba5a:	9109      	str	r1, [sp, #36]	; 0x24
 801ba5c:	0e09      	lsrs	r1, r1, #24
 801ba5e:	9111      	str	r1, [sp, #68]	; 0x44
 801ba60:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ba64:	910e      	str	r1, [sp, #56]	; 0x38
 801ba66:	0e09      	lsrs	r1, r1, #24
 801ba68:	9115      	str	r1, [sp, #84]	; 0x54
 801ba6a:	b292      	uxth	r2, r2
 801ba6c:	b280      	uxth	r0, r0
 801ba6e:	fb02 f900 	mul.w	r9, r2, r0
 801ba72:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ba76:	0112      	lsls	r2, r2, #4
 801ba78:	eba2 0e09 	sub.w	lr, r2, r9
 801ba7c:	b280      	uxth	r0, r0
 801ba7e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ba82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ba84:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ba86:	fa1f fe8e 	uxth.w	lr, lr
 801ba8a:	1a09      	subs	r1, r1, r0
 801ba8c:	b289      	uxth	r1, r1
 801ba8e:	fb0e f202 	mul.w	r2, lr, r2
 801ba92:	fb01 220c 	mla	r2, r1, ip, r2
 801ba96:	fb00 2205 	mla	r2, r0, r5, r2
 801ba9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ba9c:	fb09 2205 	mla	r2, r9, r5, r2
 801baa0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801baa4:	2a00      	cmp	r2, #0
 801baa6:	f000 80f3 	beq.w	801bc90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801baaa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801baae:	d019      	beq.n	801bae4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 801bab0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bab4:	fb0c fa0a 	mul.w	sl, ip, sl
 801bab8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801babc:	fb0c fc03 	mul.w	ip, ip, r3
 801bac0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bac4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bac8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bacc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bad0:	4453      	add	r3, sl
 801bad2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bad6:	0a1b      	lsrs	r3, r3, #8
 801bad8:	0a3f      	lsrs	r7, r7, #8
 801bada:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bade:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bae2:	433b      	orrs	r3, r7
 801bae4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bae6:	2dff      	cmp	r5, #255	; 0xff
 801bae8:	d020      	beq.n	801bb2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 801baea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801baec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801baf0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801baf2:	436f      	muls	r7, r5
 801baf4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801baf6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bafa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bafc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb00:	fb05 fa0a 	mul.w	sl, r5, sl
 801bb04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb0c:	44bc      	add	ip, r7
 801bb0e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb26:	ea4c 050a 	orr.w	r5, ip, sl
 801bb2a:	950d      	str	r5, [sp, #52]	; 0x34
 801bb2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb2e:	2dff      	cmp	r5, #255	; 0xff
 801bb30:	d020      	beq.n	801bb74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 801bb32:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bb34:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bb38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb3a:	436f      	muls	r7, r5
 801bb3c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bb3e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801bb42:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb44:	fb05 fa0c 	mul.w	sl, r5, ip
 801bb48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb50:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb54:	44bc      	add	ip, r7
 801bb56:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bb5a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bb5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb6e:	ea4c 050a 	orr.w	r5, ip, sl
 801bb72:	9509      	str	r5, [sp, #36]	; 0x24
 801bb74:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bb76:	2dff      	cmp	r5, #255	; 0xff
 801bb78:	d020      	beq.n	801bbbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 801bb7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bb7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bb80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bb82:	436f      	muls	r7, r5
 801bb84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bb86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bb8a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bb8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb90:	fb05 fa0a 	mul.w	sl, r5, sl
 801bb94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb9c:	44bc      	add	ip, r7
 801bb9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bba2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bba6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbb6:	ea4c 050a 	orr.w	r5, ip, sl
 801bbba:	950e      	str	r5, [sp, #56]	; 0x38
 801bbbc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bbbe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bbc2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bbc4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bbc8:	fb0e f707 	mul.w	r7, lr, r7
 801bbcc:	fb01 770c 	mla	r7, r1, ip, r7
 801bbd0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bbd4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bbd6:	fb00 770c 	mla	r7, r0, ip, r7
 801bbda:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bbde:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bbe0:	fb09 770c 	mla	r7, r9, ip, r7
 801bbe4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801bbe8:	fb0e fe0c 	mul.w	lr, lr, ip
 801bbec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbf0:	fb01 e303 	mla	r3, r1, r3, lr
 801bbf4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bbf6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bbfa:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bbfc:	fb00 330a 	mla	r3, r0, sl, r3
 801bc00:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bc04:	fb09 3c0c 	mla	ip, r9, ip, r3
 801bc08:	0a3f      	lsrs	r7, r7, #8
 801bc0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc0e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bc12:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bc16:	ea47 070c 	orr.w	r7, r7, ip
 801bc1a:	2aff      	cmp	r2, #255	; 0xff
 801bc1c:	ea4f 2017 	mov.w	r0, r7, lsr #8
 801bc20:	d048      	beq.n	801bcb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801bc22:	f8b8 1000 	ldrh.w	r1, [r8]
 801bc26:	43d2      	mvns	r2, r2
 801bc28:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801bc2c:	fa5f f982 	uxtb.w	r9, r2
 801bc30:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bc34:	fb0e fe09 	mul.w	lr, lr, r9
 801bc38:	f10e 0301 	add.w	r3, lr, #1
 801bc3c:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 801bc40:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801bc44:	0c3b      	lsrs	r3, r7, #16
 801bc46:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801bc4a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bc4e:	4b23      	ldr	r3, [pc, #140]	; (801bcdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801bc50:	fb0c fc09 	mul.w	ip, ip, r9
 801bc54:	00ca      	lsls	r2, r1, #3
 801bc56:	fa5f fe8e 	uxtb.w	lr, lr
 801bc5a:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 801bc5e:	b2d2      	uxtb	r2, r2
 801bc60:	f10c 0301 	add.w	r3, ip, #1
 801bc64:	fb02 f209 	mul.w	r2, r2, r9
 801bc68:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801bc6c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bc70:	1c51      	adds	r1, r2, #1
 801bc72:	00db      	lsls	r3, r3, #3
 801bc74:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bc78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bc7c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bc80:	ea4e 0e03 	orr.w	lr, lr, r3
 801bc84:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bc88:	ea47 0e0e 	orr.w	lr, r7, lr
 801bc8c:	f8a8 e000 	strh.w	lr, [r8]
 801bc90:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801bc92:	441c      	add	r4, r3
 801bc94:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bc96:	f108 0802 	add.w	r8, r8, #2
 801bc9a:	441e      	add	r6, r3
 801bc9c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bca0:	e63e      	b.n	801b920 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801bca2:	2800      	cmp	r0, #0
 801bca4:	f43f aee1 	beq.w	801ba6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801bca8:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bcac:	9109      	str	r1, [sp, #36]	; 0x24
 801bcae:	0e09      	lsrs	r1, r1, #24
 801bcb0:	9111      	str	r1, [sp, #68]	; 0x44
 801bcb2:	e6da      	b.n	801ba6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801bcb4:	097a      	lsrs	r2, r7, #5
 801bcb6:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 801bcba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bcbe:	f020 0007 	bic.w	r0, r0, #7
 801bcc2:	4310      	orrs	r0, r2
 801bcc4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bcc8:	4307      	orrs	r7, r0
 801bcca:	f8a8 7000 	strh.w	r7, [r8]
 801bcce:	e7df      	b.n	801bc90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bcd0:	b01b      	add	sp, #108	; 0x6c
 801bcd2:	ecbd 8b08 	vpop	{d8-d11}
 801bcd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcda:	bf00      	nop
 801bcdc:	fffff800 	.word	0xfffff800

0801bce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801bce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bce4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801bce8:	2c00      	cmp	r4, #0
 801bcea:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801bcee:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801bcf2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801bcf6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801bcfa:	fb04 ce03 	mla	lr, r4, r3, ip
 801bcfe:	db60      	blt.n	801bdc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801bd00:	45a1      	cmp	r9, r4
 801bd02:	dd5e      	ble.n	801bdc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801bd04:	f1bc 0f00 	cmp.w	ip, #0
 801bd08:	db59      	blt.n	801bdbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801bd0a:	45e0      	cmp	r8, ip
 801bd0c:	dd57      	ble.n	801bdbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801bd0e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801bd12:	f01e 0f01 	tst.w	lr, #1
 801bd16:	5c16      	ldrb	r6, [r2, r0]
 801bd18:	bf0c      	ite	eq
 801bd1a:	f006 060f 	andeq.w	r6, r6, #15
 801bd1e:	1136      	asrne	r6, r6, #4
 801bd20:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801bd24:	b2f6      	uxtb	r6, r6
 801bd26:	f11c 0001 	adds.w	r0, ip, #1
 801bd2a:	d44d      	bmi.n	801bdc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801bd2c:	4580      	cmp	r8, r0
 801bd2e:	dd4b      	ble.n	801bdc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801bd30:	2d00      	cmp	r5, #0
 801bd32:	d04b      	beq.n	801bdcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801bd34:	f10e 0a01 	add.w	sl, lr, #1
 801bd38:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801bd3c:	f01a 0f01 	tst.w	sl, #1
 801bd40:	5c10      	ldrb	r0, [r2, r0]
 801bd42:	bf0c      	ite	eq
 801bd44:	f000 000f 	andeq.w	r0, r0, #15
 801bd48:	1100      	asrne	r0, r0, #4
 801bd4a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bd4e:	b2c0      	uxtb	r0, r0
 801bd50:	3401      	adds	r4, #1
 801bd52:	d43f      	bmi.n	801bdd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801bd54:	45a1      	cmp	r9, r4
 801bd56:	dd3d      	ble.n	801bdd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801bd58:	2f00      	cmp	r7, #0
 801bd5a:	f000 809b 	beq.w	801be94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 801bd5e:	f1bc 0f00 	cmp.w	ip, #0
 801bd62:	db35      	blt.n	801bdd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801bd64:	45e0      	cmp	r8, ip
 801bd66:	dd33      	ble.n	801bdd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801bd68:	eb03 090e 	add.w	r9, r3, lr
 801bd6c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801bd70:	f019 0f01 	tst.w	r9, #1
 801bd74:	5d14      	ldrb	r4, [r2, r4]
 801bd76:	bf0c      	ite	eq
 801bd78:	f004 040f 	andeq.w	r4, r4, #15
 801bd7c:	1124      	asrne	r4, r4, #4
 801bd7e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801bd82:	b2e4      	uxtb	r4, r4
 801bd84:	f11c 0c01 	adds.w	ip, ip, #1
 801bd88:	d427      	bmi.n	801bdda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801bd8a:	45e0      	cmp	r8, ip
 801bd8c:	dd25      	ble.n	801bdda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801bd8e:	b335      	cbz	r5, 801bdde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801bd90:	3301      	adds	r3, #1
 801bd92:	449e      	add	lr, r3
 801bd94:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801bd98:	f01e 0f01 	tst.w	lr, #1
 801bd9c:	5cd2      	ldrb	r2, [r2, r3]
 801bd9e:	bf0c      	ite	eq
 801bda0:	f002 020f 	andeq.w	r2, r2, #15
 801bda4:	1112      	asrne	r2, r2, #4
 801bda6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bdaa:	b2d3      	uxtb	r3, r2
 801bdac:	2d0f      	cmp	r5, #15
 801bdae:	d917      	bls.n	801bde0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801bdb0:	4b3b      	ldr	r3, [pc, #236]	; (801bea0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 801bdb2:	4a3c      	ldr	r2, [pc, #240]	; (801bea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801bdb4:	483c      	ldr	r0, [pc, #240]	; (801bea8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801bdb6:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801bdba:	f000 ffed 	bl	801cd98 <__assert_func>
 801bdbe:	2600      	movs	r6, #0
 801bdc0:	e7b1      	b.n	801bd26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801bdc2:	2000      	movs	r0, #0
 801bdc4:	4606      	mov	r6, r0
 801bdc6:	e7c3      	b.n	801bd50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bdc8:	2000      	movs	r0, #0
 801bdca:	e7c1      	b.n	801bd50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bdcc:	4628      	mov	r0, r5
 801bdce:	e7bf      	b.n	801bd50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801bdd0:	2400      	movs	r4, #0
 801bdd2:	e7d7      	b.n	801bd84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801bdd4:	2300      	movs	r3, #0
 801bdd6:	461c      	mov	r4, r3
 801bdd8:	e7e8      	b.n	801bdac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801bdda:	2300      	movs	r3, #0
 801bddc:	e7e6      	b.n	801bdac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801bdde:	462b      	mov	r3, r5
 801bde0:	2f0f      	cmp	r7, #15
 801bde2:	d8e5      	bhi.n	801bdb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801bde4:	b2ad      	uxth	r5, r5
 801bde6:	b2bf      	uxth	r7, r7
 801bde8:	fb05 fc07 	mul.w	ip, r5, r7
 801bdec:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801bdf0:	012d      	lsls	r5, r5, #4
 801bdf2:	b2bf      	uxth	r7, r7
 801bdf4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801bdf8:	eba5 050c 	sub.w	r5, r5, ip
 801bdfc:	1bd2      	subs	r2, r2, r7
 801bdfe:	b2ad      	uxth	r5, r5
 801be00:	b292      	uxth	r2, r2
 801be02:	4368      	muls	r0, r5
 801be04:	fb06 0002 	mla	r0, r6, r2, r0
 801be08:	fb07 0404 	mla	r4, r7, r4, r0
 801be0c:	fb0c 4303 	mla	r3, ip, r3, r4
 801be10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801be14:	2b00      	cmp	r3, #0
 801be16:	d03b      	beq.n	801be90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 801be18:	4a24      	ldr	r2, [pc, #144]	; (801beac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801be1a:	880e      	ldrh	r6, [r1, #0]
 801be1c:	6815      	ldr	r5, [r2, #0]
 801be1e:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801be22:	435a      	muls	r2, r3
 801be24:	1c53      	adds	r3, r2, #1
 801be26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be2a:	121b      	asrs	r3, r3, #8
 801be2c:	b29a      	uxth	r2, r3
 801be2e:	1234      	asrs	r4, r6, #8
 801be30:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801be34:	43db      	mvns	r3, r3
 801be36:	b2db      	uxtb	r3, r3
 801be38:	fb10 f002 	smulbb	r0, r0, r2
 801be3c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801be40:	fb04 0403 	mla	r4, r4, r3, r0
 801be44:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801be48:	10f0      	asrs	r0, r6, #3
 801be4a:	b2ed      	uxtb	r5, r5
 801be4c:	00f6      	lsls	r6, r6, #3
 801be4e:	fb17 f702 	smulbb	r7, r7, r2
 801be52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801be56:	fb15 f202 	smulbb	r2, r5, r2
 801be5a:	b2f6      	uxtb	r6, r6
 801be5c:	b2a4      	uxth	r4, r4
 801be5e:	fb00 7003 	mla	r0, r0, r3, r7
 801be62:	fb06 2303 	mla	r3, r6, r3, r2
 801be66:	b29a      	uxth	r2, r3
 801be68:	1c63      	adds	r3, r4, #1
 801be6a:	b280      	uxth	r0, r0
 801be6c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801be70:	1c53      	adds	r3, r2, #1
 801be72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be76:	1c42      	adds	r2, r0, #1
 801be78:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801be7c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801be80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801be84:	0940      	lsrs	r0, r0, #5
 801be86:	4323      	orrs	r3, r4
 801be88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be8c:	4303      	orrs	r3, r0
 801be8e:	800b      	strh	r3, [r1, #0]
 801be90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801be94:	2d0f      	cmp	r5, #15
 801be96:	d88b      	bhi.n	801bdb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801be98:	463b      	mov	r3, r7
 801be9a:	463c      	mov	r4, r7
 801be9c:	e7a2      	b.n	801bde4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801be9e:	bf00      	nop
 801bea0:	08021456 	.word	0x08021456
 801bea4:	08021a22 	.word	0x08021a22
 801bea8:	080214da 	.word	0x080214da
 801beac:	20012dcc 	.word	0x20012dcc

0801beb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801beb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801beb4:	ed2d 8b08 	vpush	{d8-d11}
 801beb8:	b097      	sub	sp, #92	; 0x5c
 801beba:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801bebe:	9214      	str	r2, [sp, #80]	; 0x50
 801bec0:	9309      	str	r3, [sp, #36]	; 0x24
 801bec2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801bec4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801bec8:	910e      	str	r1, [sp, #56]	; 0x38
 801beca:	930f      	str	r3, [sp, #60]	; 0x3c
 801becc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801bed0:	9015      	str	r0, [sp, #84]	; 0x54
 801bed2:	6850      	ldr	r0, [r2, #4]
 801bed4:	6812      	ldr	r2, [r2, #0]
 801bed6:	fb00 1303 	mla	r3, r0, r3, r1
 801beda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bede:	930a      	str	r3, [sp, #40]	; 0x28
 801bee0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bee2:	689b      	ldr	r3, [r3, #8]
 801bee4:	3301      	adds	r3, #1
 801bee6:	f023 0301 	bic.w	r3, r3, #1
 801beea:	930b      	str	r3, [sp, #44]	; 0x2c
 801beec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801beee:	681f      	ldr	r7, [r3, #0]
 801bef0:	eeb0 aa40 	vmov.f32	s20, s0
 801bef4:	eef0 9a60 	vmov.f32	s19, s1
 801bef8:	eeb0 9a41 	vmov.f32	s18, s2
 801befc:	eeb0 8a62 	vmov.f32	s16, s5
 801bf00:	eef0 8a43 	vmov.f32	s17, s6
 801bf04:	eef0 ba44 	vmov.f32	s23, s8
 801bf08:	eeb0 ba64 	vmov.f32	s22, s9
 801bf0c:	eef0 aa45 	vmov.f32	s21, s10
 801bf10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf12:	2b00      	cmp	r3, #0
 801bf14:	dc03      	bgt.n	801bf1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bf16:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bf18:	2b00      	cmp	r3, #0
 801bf1a:	f340 8257 	ble.w	801c3cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801bf1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bf20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bf28:	1e48      	subs	r0, r1, #1
 801bf2a:	f102 3cff 	add.w	ip, r2, #4294967295
 801bf2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf30:	2b00      	cmp	r3, #0
 801bf32:	f340 80eb 	ble.w	801c10c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801bf36:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bf3a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bf3e:	d406      	bmi.n	801bf4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf40:	4586      	cmp	lr, r0
 801bf42:	da04      	bge.n	801bf4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf44:	2b00      	cmp	r3, #0
 801bf46:	db02      	blt.n	801bf4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf48:	4563      	cmp	r3, ip
 801bf4a:	f2c0 80e0 	blt.w	801c10e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801bf4e:	f11e 0e01 	adds.w	lr, lr, #1
 801bf52:	f100 80d0 	bmi.w	801c0f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801bf56:	4571      	cmp	r1, lr
 801bf58:	f2c0 80cd 	blt.w	801c0f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801bf5c:	3301      	adds	r3, #1
 801bf5e:	f100 80ca 	bmi.w	801c0f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801bf62:	429a      	cmp	r2, r3
 801bf64:	f2c0 80c7 	blt.w	801c0f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801bf68:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 801bf6c:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 801bf70:	f1b9 0f00 	cmp.w	r9, #0
 801bf74:	f340 80e8 	ble.w	801c148 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801bf78:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bf7a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801bf7e:	1423      	asrs	r3, r4, #16
 801bf80:	ea4f 4026 	mov.w	r0, r6, asr #16
 801bf84:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bf88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bf8c:	f100 8133 	bmi.w	801c1f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bf90:	f10c 3bff 	add.w	fp, ip, #4294967295
 801bf94:	455b      	cmp	r3, fp
 801bf96:	f280 812e 	bge.w	801c1f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bf9a:	2800      	cmp	r0, #0
 801bf9c:	f2c0 812b 	blt.w	801c1f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfa0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801bfa4:	4558      	cmp	r0, fp
 801bfa6:	f280 8126 	bge.w	801c1f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801bfaa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bfac:	fb00 3305 	mla	r3, r0, r5, r3
 801bfb0:	0858      	lsrs	r0, r3, #1
 801bfb2:	07dd      	lsls	r5, r3, #31
 801bfb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801bfb8:	bf54      	ite	pl
 801bfba:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bfbe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bfc2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bfc6:	fa5f fc8c 	uxtb.w	ip, ip
 801bfca:	2a00      	cmp	r2, #0
 801bfcc:	f000 8102 	beq.w	801c1d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801bfd0:	1c58      	adds	r0, r3, #1
 801bfd2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801bfd6:	07c0      	lsls	r0, r0, #31
 801bfd8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bfdc:	bf54      	ite	pl
 801bfde:	f00e 0e0f 	andpl.w	lr, lr, #15
 801bfe2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801bfe6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801bfea:	fa5f f08e 	uxtb.w	r0, lr
 801bfee:	9010      	str	r0, [sp, #64]	; 0x40
 801bff0:	b1c9      	cbz	r1, 801c026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801bff2:	4453      	add	r3, sl
 801bff4:	0858      	lsrs	r0, r3, #1
 801bff6:	07dd      	lsls	r5, r3, #31
 801bff8:	5c38      	ldrb	r0, [r7, r0]
 801bffa:	bf54      	ite	pl
 801bffc:	f000 000f 	andpl.w	r0, r0, #15
 801c000:	1100      	asrmi	r0, r0, #4
 801c002:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c006:	3301      	adds	r3, #1
 801c008:	b2c0      	uxtb	r0, r0
 801c00a:	900c      	str	r0, [sp, #48]	; 0x30
 801c00c:	0858      	lsrs	r0, r3, #1
 801c00e:	07dd      	lsls	r5, r3, #31
 801c010:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c014:	bf54      	ite	pl
 801c016:	f00e 030f 	andpl.w	r3, lr, #15
 801c01a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c01e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c022:	b2db      	uxtb	r3, r3
 801c024:	9311      	str	r3, [sp, #68]	; 0x44
 801c026:	b292      	uxth	r2, r2
 801c028:	b289      	uxth	r1, r1
 801c02a:	fb02 f301 	mul.w	r3, r2, r1
 801c02e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c032:	0112      	lsls	r2, r2, #4
 801c034:	b289      	uxth	r1, r1
 801c036:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c03a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c03c:	1ad2      	subs	r2, r2, r3
 801c03e:	1a40      	subs	r0, r0, r1
 801c040:	b292      	uxth	r2, r2
 801c042:	436a      	muls	r2, r5
 801c044:	b280      	uxth	r0, r0
 801c046:	fb0c 2c00 	mla	ip, ip, r0, r2
 801c04a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c04c:	fb01 c102 	mla	r1, r1, r2, ip
 801c050:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c052:	fb03 1302 	mla	r3, r3, r2, r1
 801c056:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c05a:	2b00      	cmp	r3, #0
 801c05c:	d042      	beq.n	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c05e:	4a76      	ldr	r2, [pc, #472]	; (801c238 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 801c060:	f8b8 c000 	ldrh.w	ip, [r8]
 801c064:	6810      	ldr	r0, [r2, #0]
 801c066:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c068:	4353      	muls	r3, r2
 801c06a:	1c5a      	adds	r2, r3, #1
 801c06c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c070:	121b      	asrs	r3, r3, #8
 801c072:	fa1f fe83 	uxth.w	lr, r3
 801c076:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c07a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c07e:	43db      	mvns	r3, r3
 801c080:	b2db      	uxtb	r3, r3
 801c082:	fb12 f20e 	smulbb	r2, r2, lr
 801c086:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c08a:	fb01 2103 	mla	r1, r1, r3, r2
 801c08e:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c092:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c096:	b2c0      	uxtb	r0, r0
 801c098:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c09c:	fb1b fb0e 	smulbb	fp, fp, lr
 801c0a0:	b289      	uxth	r1, r1
 801c0a2:	fb10 fe0e 	smulbb	lr, r0, lr
 801c0a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c0aa:	fa5f fc8c 	uxtb.w	ip, ip
 801c0ae:	fb02 b203 	mla	r2, r2, r3, fp
 801c0b2:	1c48      	adds	r0, r1, #1
 801c0b4:	fb0c e303 	mla	r3, ip, r3, lr
 801c0b8:	b292      	uxth	r2, r2
 801c0ba:	b29b      	uxth	r3, r3
 801c0bc:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801c0c0:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801c0c4:	f102 0b01 	add.w	fp, r2, #1
 801c0c8:	1c59      	adds	r1, r3, #1
 801c0ca:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c0ce:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c0d2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c0d6:	0952      	lsrs	r2, r2, #5
 801c0d8:	4301      	orrs	r1, r0
 801c0da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0de:	4311      	orrs	r1, r2
 801c0e0:	f8a8 1000 	strh.w	r1, [r8]
 801c0e4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c0e6:	441c      	add	r4, r3
 801c0e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c0ea:	f108 0802 	add.w	r8, r8, #2
 801c0ee:	441e      	add	r6, r3
 801c0f0:	f109 39ff 	add.w	r9, r9, #4294967295
 801c0f4:	e73c      	b.n	801bf70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801c0f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c0f8:	441c      	add	r4, r3
 801c0fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c0fc:	441e      	add	r6, r3
 801c0fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c100:	3b01      	subs	r3, #1
 801c102:	9309      	str	r3, [sp, #36]	; 0x24
 801c104:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c106:	3302      	adds	r3, #2
 801c108:	930a      	str	r3, [sp, #40]	; 0x28
 801c10a:	e710      	b.n	801bf2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c10c:	d023      	beq.n	801c156 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801c10e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c110:	982b      	ldr	r0, [sp, #172]	; 0xac
 801c112:	3b01      	subs	r3, #1
 801c114:	fb00 4003 	mla	r0, r0, r3, r4
 801c118:	1400      	asrs	r0, r0, #16
 801c11a:	f53f af25 	bmi.w	801bf68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c11e:	3901      	subs	r1, #1
 801c120:	4288      	cmp	r0, r1
 801c122:	f6bf af21 	bge.w	801bf68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c126:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801c128:	fb01 6303 	mla	r3, r1, r3, r6
 801c12c:	141b      	asrs	r3, r3, #16
 801c12e:	f53f af1b 	bmi.w	801bf68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c132:	3a01      	subs	r2, #1
 801c134:	4293      	cmp	r3, r2
 801c136:	f6bf af17 	bge.w	801bf68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801c13a:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 801c13e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801c142:	f1b8 0f00 	cmp.w	r8, #0
 801c146:	dc79      	bgt.n	801c23c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c14a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c14e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c150:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c154:	930a      	str	r3, [sp, #40]	; 0x28
 801c156:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c158:	2b00      	cmp	r3, #0
 801c15a:	f340 8137 	ble.w	801c3cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 801c15e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c162:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c166:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c16a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c16c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c170:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c174:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c178:	eef0 6a48 	vmov.f32	s13, s16
 801c17c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c180:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c184:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c188:	ee16 4a90 	vmov	r4, s13
 801c18c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c190:	eef0 6a68 	vmov.f32	s13, s17
 801c194:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c198:	ee18 2a10 	vmov	r2, s16
 801c19c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c1a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1a4:	ee18 2a90 	vmov	r2, s17
 801c1a8:	932b      	str	r3, [sp, #172]	; 0xac
 801c1aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1ac:	fb92 f3f3 	sdiv	r3, r2, r3
 801c1b0:	932c      	str	r3, [sp, #176]	; 0xb0
 801c1b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c1b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c1b6:	3b01      	subs	r3, #1
 801c1b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1bc:	930e      	str	r3, [sp, #56]	; 0x38
 801c1be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1c0:	bf08      	it	eq
 801c1c2:	4613      	moveq	r3, r2
 801c1c4:	ee16 6a90 	vmov	r6, s13
 801c1c8:	9309      	str	r3, [sp, #36]	; 0x24
 801c1ca:	eef0 8a67 	vmov.f32	s17, s15
 801c1ce:	eeb0 8a47 	vmov.f32	s16, s14
 801c1d2:	e69d      	b.n	801bf10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c1d4:	2900      	cmp	r1, #0
 801c1d6:	f43f af26 	beq.w	801c026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c1da:	eb0a 0003 	add.w	r0, sl, r3
 801c1de:	0843      	lsrs	r3, r0, #1
 801c1e0:	07c0      	lsls	r0, r0, #31
 801c1e2:	5cfb      	ldrb	r3, [r7, r3]
 801c1e4:	bf54      	ite	pl
 801c1e6:	f003 030f 	andpl.w	r3, r3, #15
 801c1ea:	111b      	asrmi	r3, r3, #4
 801c1ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c1f0:	b2db      	uxtb	r3, r3
 801c1f2:	930c      	str	r3, [sp, #48]	; 0x30
 801c1f4:	e717      	b.n	801c026 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801c1f6:	f113 0b01 	adds.w	fp, r3, #1
 801c1fa:	f53f af73 	bmi.w	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c1fe:	45dc      	cmp	ip, fp
 801c200:	f6ff af70 	blt.w	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c204:	f110 0b01 	adds.w	fp, r0, #1
 801c208:	f53f af6c 	bmi.w	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c20c:	45de      	cmp	lr, fp
 801c20e:	f6ff af69 	blt.w	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c212:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c214:	9302      	str	r3, [sp, #8]
 801c216:	fa0f f38e 	sxth.w	r3, lr
 801c21a:	9301      	str	r3, [sp, #4]
 801c21c:	fa0f f38c 	sxth.w	r3, ip
 801c220:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c224:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c228:	9300      	str	r3, [sp, #0]
 801c22a:	463a      	mov	r2, r7
 801c22c:	4653      	mov	r3, sl
 801c22e:	4641      	mov	r1, r8
 801c230:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c232:	f7ff fd55 	bl	801bce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c236:	e755      	b.n	801c0e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c238:	20012dcc 	.word	0x20012dcc
 801c23c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c23e:	1422      	asrs	r2, r4, #16
 801c240:	1433      	asrs	r3, r6, #16
 801c242:	fb05 2303 	mla	r3, r5, r3, r2
 801c246:	085a      	lsrs	r2, r3, #1
 801c248:	07dd      	lsls	r5, r3, #31
 801c24a:	5cba      	ldrb	r2, [r7, r2]
 801c24c:	bf54      	ite	pl
 801c24e:	f002 020f 	andpl.w	r2, r2, #15
 801c252:	1112      	asrmi	r2, r2, #4
 801c254:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c258:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c25c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c260:	b2d2      	uxtb	r2, r2
 801c262:	2900      	cmp	r1, #0
 801c264:	f000 809f 	beq.w	801c3a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801c268:	f103 0901 	add.w	r9, r3, #1
 801c26c:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 801c270:	f019 0f01 	tst.w	r9, #1
 801c274:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c278:	bf0c      	ite	eq
 801c27a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c27e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c282:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c286:	fa5f f58c 	uxtb.w	r5, ip
 801c28a:	9512      	str	r5, [sp, #72]	; 0x48
 801c28c:	b1f8      	cbz	r0, 801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801c28e:	445b      	add	r3, fp
 801c290:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c294:	07dd      	lsls	r5, r3, #31
 801c296:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c29a:	bf54      	ite	pl
 801c29c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c2a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c2a4:	3301      	adds	r3, #1
 801c2a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c2aa:	fa5f f58c 	uxtb.w	r5, ip
 801c2ae:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c2b2:	950d      	str	r5, [sp, #52]	; 0x34
 801c2b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c2b8:	07dd      	lsls	r5, r3, #31
 801c2ba:	bf54      	ite	pl
 801c2bc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c2c0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c2c4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c2c8:	fa5f f38c 	uxtb.w	r3, ip
 801c2cc:	9313      	str	r3, [sp, #76]	; 0x4c
 801c2ce:	b289      	uxth	r1, r1
 801c2d0:	b280      	uxth	r0, r0
 801c2d2:	fb01 f300 	mul.w	r3, r1, r0
 801c2d6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c2da:	0109      	lsls	r1, r1, #4
 801c2dc:	b280      	uxth	r0, r0
 801c2de:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c2e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c2e4:	1ac9      	subs	r1, r1, r3
 801c2e6:	ebac 0c00 	sub.w	ip, ip, r0
 801c2ea:	b289      	uxth	r1, r1
 801c2ec:	4369      	muls	r1, r5
 801c2ee:	fa1f fc8c 	uxth.w	ip, ip
 801c2f2:	fb02 120c 	mla	r2, r2, ip, r1
 801c2f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 801c2f8:	fb00 2001 	mla	r0, r0, r1, r2
 801c2fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c2fe:	fb03 0302 	mla	r3, r3, r2, r0
 801c302:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c306:	2b00      	cmp	r3, #0
 801c308:	d044      	beq.n	801c394 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c30a:	4a33      	ldr	r2, [pc, #204]	; (801c3d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 801c30c:	f8be c000 	ldrh.w	ip, [lr]
 801c310:	6810      	ldr	r0, [r2, #0]
 801c312:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c314:	4353      	muls	r3, r2
 801c316:	1c5a      	adds	r2, r3, #1
 801c318:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c31c:	121b      	asrs	r3, r3, #8
 801c31e:	fa1f f983 	uxth.w	r9, r3
 801c322:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c326:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c32a:	43db      	mvns	r3, r3
 801c32c:	b2db      	uxtb	r3, r3
 801c32e:	fb12 f209 	smulbb	r2, r2, r9
 801c332:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c336:	fb01 2103 	mla	r1, r1, r3, r2
 801c33a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c33e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c342:	b2c0      	uxtb	r0, r0
 801c344:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c348:	fa5f fc8c 	uxtb.w	ip, ip
 801c34c:	fb10 f009 	smulbb	r0, r0, r9
 801c350:	fb0c 0003 	mla	r0, ip, r3, r0
 801c354:	b289      	uxth	r1, r1
 801c356:	fb1a fa09 	smulbb	sl, sl, r9
 801c35a:	b280      	uxth	r0, r0
 801c35c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c360:	fb02 a203 	mla	r2, r2, r3, sl
 801c364:	1c4b      	adds	r3, r1, #1
 801c366:	f100 0a01 	add.w	sl, r0, #1
 801c36a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c36e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c372:	b292      	uxth	r2, r2
 801c374:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c378:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c37c:	ea4a 0101 	orr.w	r1, sl, r1
 801c380:	f102 0a01 	add.w	sl, r2, #1
 801c384:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c388:	0952      	lsrs	r2, r2, #5
 801c38a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c38e:	4311      	orrs	r1, r2
 801c390:	f8ae 1000 	strh.w	r1, [lr]
 801c394:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c396:	441c      	add	r4, r3
 801c398:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c39a:	f10e 0e02 	add.w	lr, lr, #2
 801c39e:	441e      	add	r6, r3
 801c3a0:	f108 38ff 	add.w	r8, r8, #4294967295
 801c3a4:	e6cd      	b.n	801c142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c3a6:	2800      	cmp	r0, #0
 801c3a8:	d091      	beq.n	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801c3aa:	445b      	add	r3, fp
 801c3ac:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c3b0:	07db      	lsls	r3, r3, #31
 801c3b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c3b6:	bf54      	ite	pl
 801c3b8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c3bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c3c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c3c4:	fa5f f38c 	uxtb.w	r3, ip
 801c3c8:	930d      	str	r3, [sp, #52]	; 0x34
 801c3ca:	e780      	b.n	801c2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 801c3cc:	b017      	add	sp, #92	; 0x5c
 801c3ce:	ecbd 8b08 	vpop	{d8-d11}
 801c3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3d6:	bf00      	nop
 801c3d8:	20012dcc 	.word	0x20012dcc

0801c3dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c3dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c3e0:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801c3e4:	2c00      	cmp	r4, #0
 801c3e6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c3ea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c3ee:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801c3f2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801c3f6:	fb04 ce03 	mla	lr, r4, r3, ip
 801c3fa:	db60      	blt.n	801c4be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c3fc:	45a1      	cmp	r9, r4
 801c3fe:	dd5e      	ble.n	801c4be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801c400:	f1bc 0f00 	cmp.w	ip, #0
 801c404:	db59      	blt.n	801c4ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c406:	45e0      	cmp	r8, ip
 801c408:	dd57      	ble.n	801c4ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801c40a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801c40e:	f01e 0f01 	tst.w	lr, #1
 801c412:	5c16      	ldrb	r6, [r2, r0]
 801c414:	bf0c      	ite	eq
 801c416:	f006 060f 	andeq.w	r6, r6, #15
 801c41a:	1136      	asrne	r6, r6, #4
 801c41c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c420:	b2f6      	uxtb	r6, r6
 801c422:	f11c 0001 	adds.w	r0, ip, #1
 801c426:	d44d      	bmi.n	801c4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c428:	4580      	cmp	r8, r0
 801c42a:	dd4b      	ble.n	801c4c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801c42c:	2d00      	cmp	r5, #0
 801c42e:	d04b      	beq.n	801c4c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801c430:	f10e 0a01 	add.w	sl, lr, #1
 801c434:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801c438:	f01a 0f01 	tst.w	sl, #1
 801c43c:	5c10      	ldrb	r0, [r2, r0]
 801c43e:	bf0c      	ite	eq
 801c440:	f000 000f 	andeq.w	r0, r0, #15
 801c444:	1100      	asrne	r0, r0, #4
 801c446:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c44a:	b2c0      	uxtb	r0, r0
 801c44c:	3401      	adds	r4, #1
 801c44e:	d43f      	bmi.n	801c4d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c450:	45a1      	cmp	r9, r4
 801c452:	dd3d      	ble.n	801c4d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801c454:	2f00      	cmp	r7, #0
 801c456:	f000 8093 	beq.w	801c580 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c45a:	f1bc 0f00 	cmp.w	ip, #0
 801c45e:	db35      	blt.n	801c4cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c460:	45e0      	cmp	r8, ip
 801c462:	dd33      	ble.n	801c4cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801c464:	eb03 090e 	add.w	r9, r3, lr
 801c468:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801c46c:	f019 0f01 	tst.w	r9, #1
 801c470:	5d14      	ldrb	r4, [r2, r4]
 801c472:	bf0c      	ite	eq
 801c474:	f004 040f 	andeq.w	r4, r4, #15
 801c478:	1124      	asrne	r4, r4, #4
 801c47a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c47e:	b2e4      	uxtb	r4, r4
 801c480:	f11c 0c01 	adds.w	ip, ip, #1
 801c484:	d427      	bmi.n	801c4d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c486:	45e0      	cmp	r8, ip
 801c488:	dd25      	ble.n	801c4d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801c48a:	b335      	cbz	r5, 801c4da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801c48c:	3301      	adds	r3, #1
 801c48e:	449e      	add	lr, r3
 801c490:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c494:	f01e 0f01 	tst.w	lr, #1
 801c498:	5cd2      	ldrb	r2, [r2, r3]
 801c49a:	bf0c      	ite	eq
 801c49c:	f002 020f 	andeq.w	r2, r2, #15
 801c4a0:	1112      	asrne	r2, r2, #4
 801c4a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c4a6:	b2d3      	uxtb	r3, r2
 801c4a8:	2d0f      	cmp	r5, #15
 801c4aa:	d917      	bls.n	801c4dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801c4ac:	4b37      	ldr	r3, [pc, #220]	; (801c58c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801c4ae:	4a38      	ldr	r2, [pc, #224]	; (801c590 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801c4b0:	4838      	ldr	r0, [pc, #224]	; (801c594 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801c4b2:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801c4b6:	f000 fc6f 	bl	801cd98 <__assert_func>
 801c4ba:	2600      	movs	r6, #0
 801c4bc:	e7b1      	b.n	801c422 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801c4be:	2000      	movs	r0, #0
 801c4c0:	4606      	mov	r6, r0
 801c4c2:	e7c3      	b.n	801c44c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c4c4:	2000      	movs	r0, #0
 801c4c6:	e7c1      	b.n	801c44c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c4c8:	4628      	mov	r0, r5
 801c4ca:	e7bf      	b.n	801c44c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801c4cc:	2400      	movs	r4, #0
 801c4ce:	e7d7      	b.n	801c480 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801c4d0:	2300      	movs	r3, #0
 801c4d2:	461c      	mov	r4, r3
 801c4d4:	e7e8      	b.n	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c4d6:	2300      	movs	r3, #0
 801c4d8:	e7e6      	b.n	801c4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801c4da:	462b      	mov	r3, r5
 801c4dc:	2f0f      	cmp	r7, #15
 801c4de:	d8e5      	bhi.n	801c4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c4e0:	b2ad      	uxth	r5, r5
 801c4e2:	b2bf      	uxth	r7, r7
 801c4e4:	fb05 fc07 	mul.w	ip, r5, r7
 801c4e8:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801c4ec:	012d      	lsls	r5, r5, #4
 801c4ee:	b2bf      	uxth	r7, r7
 801c4f0:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801c4f4:	eba5 050c 	sub.w	r5, r5, ip
 801c4f8:	1bd2      	subs	r2, r2, r7
 801c4fa:	b2ad      	uxth	r5, r5
 801c4fc:	b292      	uxth	r2, r2
 801c4fe:	4368      	muls	r0, r5
 801c500:	fb06 0002 	mla	r0, r6, r2, r0
 801c504:	fb07 0404 	mla	r4, r7, r4, r0
 801c508:	fb0c 4303 	mla	r3, ip, r3, r4
 801c50c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c510:	b3a3      	cbz	r3, 801c57c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c512:	4a21      	ldr	r2, [pc, #132]	; (801c598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801c514:	880e      	ldrh	r6, [r1, #0]
 801c516:	6815      	ldr	r5, [r2, #0]
 801c518:	1234      	asrs	r4, r6, #8
 801c51a:	b29a      	uxth	r2, r3
 801c51c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c520:	43db      	mvns	r3, r3
 801c522:	b2db      	uxtb	r3, r3
 801c524:	fb10 f002 	smulbb	r0, r0, r2
 801c528:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c52c:	fb04 0403 	mla	r4, r4, r3, r0
 801c530:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c534:	10f0      	asrs	r0, r6, #3
 801c536:	b2ed      	uxtb	r5, r5
 801c538:	00f6      	lsls	r6, r6, #3
 801c53a:	fb17 f702 	smulbb	r7, r7, r2
 801c53e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c542:	fb15 f202 	smulbb	r2, r5, r2
 801c546:	b2f6      	uxtb	r6, r6
 801c548:	b2a4      	uxth	r4, r4
 801c54a:	fb00 7003 	mla	r0, r0, r3, r7
 801c54e:	fb06 2303 	mla	r3, r6, r3, r2
 801c552:	b29a      	uxth	r2, r3
 801c554:	1c63      	adds	r3, r4, #1
 801c556:	b280      	uxth	r0, r0
 801c558:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c55c:	1c53      	adds	r3, r2, #1
 801c55e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c562:	1c42      	adds	r2, r0, #1
 801c564:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c568:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c56c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c570:	0940      	lsrs	r0, r0, #5
 801c572:	4323      	orrs	r3, r4
 801c574:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c578:	4303      	orrs	r3, r0
 801c57a:	800b      	strh	r3, [r1, #0]
 801c57c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c580:	2d0f      	cmp	r5, #15
 801c582:	d893      	bhi.n	801c4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801c584:	463b      	mov	r3, r7
 801c586:	463c      	mov	r4, r7
 801c588:	e7aa      	b.n	801c4e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801c58a:	bf00      	nop
 801c58c:	08021456 	.word	0x08021456
 801c590:	08021a22 	.word	0x08021a22
 801c594:	080214da 	.word	0x080214da
 801c598:	20012dcc 	.word	0x20012dcc

0801c59c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5a0:	ed2d 8b08 	vpush	{d8-d11}
 801c5a4:	b093      	sub	sp, #76	; 0x4c
 801c5a6:	461d      	mov	r5, r3
 801c5a8:	920c      	str	r2, [sp, #48]	; 0x30
 801c5aa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c5ac:	9107      	str	r1, [sp, #28]
 801c5ae:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c5b2:	9011      	str	r0, [sp, #68]	; 0x44
 801c5b4:	6850      	ldr	r0, [r2, #4]
 801c5b6:	6812      	ldr	r2, [r2, #0]
 801c5b8:	fb00 1303 	mla	r3, r0, r3, r1
 801c5bc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c5c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c5c2:	689b      	ldr	r3, [r3, #8]
 801c5c4:	3301      	adds	r3, #1
 801c5c6:	f023 0301 	bic.w	r3, r3, #1
 801c5ca:	9306      	str	r3, [sp, #24]
 801c5cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c5ce:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c5d2:	681f      	ldr	r7, [r3, #0]
 801c5d4:	eeb0 aa40 	vmov.f32	s20, s0
 801c5d8:	eef0 9a60 	vmov.f32	s19, s1
 801c5dc:	eeb0 9a41 	vmov.f32	s18, s2
 801c5e0:	eeb0 8a62 	vmov.f32	s16, s5
 801c5e4:	eef0 8a43 	vmov.f32	s17, s6
 801c5e8:	eef0 ba44 	vmov.f32	s23, s8
 801c5ec:	eeb0 ba64 	vmov.f32	s22, s9
 801c5f0:	eef0 aa45 	vmov.f32	s21, s10
 801c5f4:	9b07      	ldr	r3, [sp, #28]
 801c5f6:	2b00      	cmp	r3, #0
 801c5f8:	dc03      	bgt.n	801c602 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c5fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c5fc:	2b00      	cmp	r3, #0
 801c5fe:	f340 8267 	ble.w	801cad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c602:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c604:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c608:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c60c:	1e48      	subs	r0, r1, #1
 801c60e:	f102 3cff 	add.w	ip, r2, #4294967295
 801c612:	2d00      	cmp	r5, #0
 801c614:	f340 80eb 	ble.w	801c7ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c618:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c61c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c620:	d406      	bmi.n	801c630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c622:	4586      	cmp	lr, r0
 801c624:	da04      	bge.n	801c630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c626:	2b00      	cmp	r3, #0
 801c628:	db02      	blt.n	801c630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c62a:	4563      	cmp	r3, ip
 801c62c:	f2c0 80e0 	blt.w	801c7f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801c630:	f11e 0e01 	adds.w	lr, lr, #1
 801c634:	f100 80d3 	bmi.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c638:	4571      	cmp	r1, lr
 801c63a:	f2c0 80d0 	blt.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c63e:	3301      	adds	r3, #1
 801c640:	f100 80cd 	bmi.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c644:	429a      	cmp	r2, r3
 801c646:	f2c0 80ca 	blt.w	801c7de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c64a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c64e:	9509      	str	r5, [sp, #36]	; 0x24
 801c650:	46c8      	mov	r8, r9
 801c652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c654:	2b00      	cmp	r3, #0
 801c656:	f340 80e9 	ble.w	801c82c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c65a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c65e:	9308      	str	r3, [sp, #32]
 801c660:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c662:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c666:	1423      	asrs	r3, r4, #16
 801c668:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c66c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c670:	f100 813d 	bmi.w	801c8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c674:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c678:	455b      	cmp	r3, fp
 801c67a:	f280 8138 	bge.w	801c8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c67e:	2800      	cmp	r0, #0
 801c680:	f2c0 8135 	blt.w	801c8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c684:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c688:	4558      	cmp	r0, fp
 801c68a:	f280 8130 	bge.w	801c8ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c68e:	9a06      	ldr	r2, [sp, #24]
 801c690:	fb00 3302 	mla	r3, r0, r2, r3
 801c694:	0858      	lsrs	r0, r3, #1
 801c696:	07da      	lsls	r2, r3, #31
 801c698:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c69c:	9a08      	ldr	r2, [sp, #32]
 801c69e:	bf54      	ite	pl
 801c6a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c6a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c6a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c6ac:	fa5f fc8c 	uxtb.w	ip, ip
 801c6b0:	2a00      	cmp	r2, #0
 801c6b2:	f000 80fe 	beq.w	801c8b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801c6b6:	1c58      	adds	r0, r3, #1
 801c6b8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c6bc:	07c0      	lsls	r0, r0, #31
 801c6be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c6c2:	bf54      	ite	pl
 801c6c4:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c6c8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c6cc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c6d0:	fa5f fe8e 	uxtb.w	lr, lr
 801c6d4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801c6d8:	b1b9      	cbz	r1, 801c70a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c6da:	4453      	add	r3, sl
 801c6dc:	0858      	lsrs	r0, r3, #1
 801c6de:	07da      	lsls	r2, r3, #31
 801c6e0:	5c38      	ldrb	r0, [r7, r0]
 801c6e2:	bf54      	ite	pl
 801c6e4:	f000 000f 	andpl.w	r0, r0, #15
 801c6e8:	1100      	asrmi	r0, r0, #4
 801c6ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c6ee:	b2c0      	uxtb	r0, r0
 801c6f0:	900a      	str	r0, [sp, #40]	; 0x28
 801c6f2:	1c58      	adds	r0, r3, #1
 801c6f4:	0843      	lsrs	r3, r0, #1
 801c6f6:	07c2      	lsls	r2, r0, #31
 801c6f8:	5cfb      	ldrb	r3, [r7, r3]
 801c6fa:	bf54      	ite	pl
 801c6fc:	f003 030f 	andpl.w	r3, r3, #15
 801c700:	111b      	asrmi	r3, r3, #4
 801c702:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c706:	b2db      	uxtb	r3, r3
 801c708:	930e      	str	r3, [sp, #56]	; 0x38
 801c70a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c70e:	b289      	uxth	r1, r1
 801c710:	fb02 f301 	mul.w	r3, r2, r1
 801c714:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c718:	0112      	lsls	r2, r2, #4
 801c71a:	b289      	uxth	r1, r1
 801c71c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c720:	1a40      	subs	r0, r0, r1
 801c722:	fa1f fe80 	uxth.w	lr, r0
 801c726:	1ad2      	subs	r2, r2, r3
 801c728:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c72a:	b292      	uxth	r2, r2
 801c72c:	4342      	muls	r2, r0
 801c72e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c732:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c734:	fb01 c102 	mla	r1, r1, r2, ip
 801c738:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c73a:	fb03 1302 	mla	r3, r3, r2, r1
 801c73e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c742:	2b00      	cmp	r3, #0
 801c744:	d041      	beq.n	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c746:	4a7a      	ldr	r2, [pc, #488]	; (801c930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 801c748:	6810      	ldr	r0, [r2, #0]
 801c74a:	2bff      	cmp	r3, #255	; 0xff
 801c74c:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801c750:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801c754:	fa5f fe80 	uxtb.w	lr, r0
 801c758:	f000 80bc 	beq.w	801c8d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801c75c:	f8b8 c000 	ldrh.w	ip, [r8]
 801c760:	fa1f fb83 	uxth.w	fp, r3
 801c764:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c768:	43db      	mvns	r3, r3
 801c76a:	b2d2      	uxtb	r2, r2
 801c76c:	b2db      	uxtb	r3, r3
 801c76e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c772:	fb12 f20b 	smulbb	r2, r2, fp
 801c776:	fb00 2203 	mla	r2, r0, r3, r2
 801c77a:	b2c9      	uxtb	r1, r1
 801c77c:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801c780:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c784:	b292      	uxth	r2, r2
 801c786:	fb11 f10b 	smulbb	r1, r1, fp
 801c78a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c78e:	fa5f fc8c 	uxtb.w	ip, ip
 801c792:	fb1e fe0b 	smulbb	lr, lr, fp
 801c796:	fb00 1003 	mla	r0, r0, r3, r1
 801c79a:	1c51      	adds	r1, r2, #1
 801c79c:	fb0c e303 	mla	r3, ip, r3, lr
 801c7a0:	b29b      	uxth	r3, r3
 801c7a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c7a6:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 801c7aa:	1c5a      	adds	r2, r3, #1
 801c7ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c7b0:	b280      	uxth	r0, r0
 801c7b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c7b6:	430a      	orrs	r2, r1
 801c7b8:	1c41      	adds	r1, r0, #1
 801c7ba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c7be:	0940      	lsrs	r0, r0, #5
 801c7c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7c4:	4302      	orrs	r2, r0
 801c7c6:	f8a8 2000 	strh.w	r2, [r8]
 801c7ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c7cc:	441c      	add	r4, r3
 801c7ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c7d0:	441e      	add	r6, r3
 801c7d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7d4:	3b01      	subs	r3, #1
 801c7d6:	f108 0802 	add.w	r8, r8, #2
 801c7da:	9309      	str	r3, [sp, #36]	; 0x24
 801c7dc:	e739      	b.n	801c652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801c7de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c7e0:	441c      	add	r4, r3
 801c7e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c7e4:	3d01      	subs	r5, #1
 801c7e6:	441e      	add	r6, r3
 801c7e8:	f109 0902 	add.w	r9, r9, #2
 801c7ec:	e711      	b.n	801c612 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c7ee:	d021      	beq.n	801c834 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801c7f0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c7f2:	1e6b      	subs	r3, r5, #1
 801c7f4:	fb00 4003 	mla	r0, r0, r3, r4
 801c7f8:	1400      	asrs	r0, r0, #16
 801c7fa:	f53f af26 	bmi.w	801c64a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c7fe:	3901      	subs	r1, #1
 801c800:	4288      	cmp	r0, r1
 801c802:	f6bf af22 	bge.w	801c64a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c806:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c808:	fb01 6303 	mla	r3, r1, r3, r6
 801c80c:	141b      	asrs	r3, r3, #16
 801c80e:	f53f af1c 	bmi.w	801c64a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c812:	3a01      	subs	r2, #1
 801c814:	4293      	cmp	r3, r2
 801c816:	f6bf af18 	bge.w	801c64a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c81a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c81e:	9308      	str	r3, [sp, #32]
 801c820:	46aa      	mov	sl, r5
 801c822:	46c8      	mov	r8, r9
 801c824:	f1ba 0f00 	cmp.w	sl, #0
 801c828:	f300 8086 	bgt.w	801c938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801c82c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c830:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c834:	9b07      	ldr	r3, [sp, #28]
 801c836:	2b00      	cmp	r3, #0
 801c838:	f340 814a 	ble.w	801cad0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801c83c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c840:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c844:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c848:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c84a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c84e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c852:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c856:	eef0 6a48 	vmov.f32	s13, s16
 801c85a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c85e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c862:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c866:	ee16 4a90 	vmov	r4, s13
 801c86a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c86e:	eef0 6a68 	vmov.f32	s13, s17
 801c872:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c876:	ee18 2a10 	vmov	r2, s16
 801c87a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c87e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c882:	ee18 2a90 	vmov	r2, s17
 801c886:	9327      	str	r3, [sp, #156]	; 0x9c
 801c888:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c88a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c88e:	9328      	str	r3, [sp, #160]	; 0xa0
 801c890:	9b07      	ldr	r3, [sp, #28]
 801c892:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c894:	3b01      	subs	r3, #1
 801c896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c89a:	9307      	str	r3, [sp, #28]
 801c89c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c89e:	ee16 6a90 	vmov	r6, s13
 801c8a2:	bf14      	ite	ne
 801c8a4:	461d      	movne	r5, r3
 801c8a6:	4615      	moveq	r5, r2
 801c8a8:	eef0 8a67 	vmov.f32	s17, s15
 801c8ac:	eeb0 8a47 	vmov.f32	s16, s14
 801c8b0:	e6a0      	b.n	801c5f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c8b2:	2900      	cmp	r1, #0
 801c8b4:	f43f af29 	beq.w	801c70a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c8b8:	eb0a 0003 	add.w	r0, sl, r3
 801c8bc:	0843      	lsrs	r3, r0, #1
 801c8be:	07c0      	lsls	r0, r0, #31
 801c8c0:	5cfb      	ldrb	r3, [r7, r3]
 801c8c2:	bf54      	ite	pl
 801c8c4:	f003 030f 	andpl.w	r3, r3, #15
 801c8c8:	111b      	asrmi	r3, r3, #4
 801c8ca:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c8ce:	b2db      	uxtb	r3, r3
 801c8d0:	930a      	str	r3, [sp, #40]	; 0x28
 801c8d2:	e71a      	b.n	801c70a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c8d4:	4b17      	ldr	r3, [pc, #92]	; (801c934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801c8d6:	00c9      	lsls	r1, r1, #3
 801c8d8:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801c8dc:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801c8e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c8e4:	ea4e 0e01 	orr.w	lr, lr, r1
 801c8e8:	f8a8 e000 	strh.w	lr, [r8]
 801c8ec:	e76d      	b.n	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c8ee:	f113 0b01 	adds.w	fp, r3, #1
 801c8f2:	f53f af6a 	bmi.w	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c8f6:	45dc      	cmp	ip, fp
 801c8f8:	f6ff af67 	blt.w	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c8fc:	f110 0b01 	adds.w	fp, r0, #1
 801c900:	f53f af63 	bmi.w	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c904:	45de      	cmp	lr, fp
 801c906:	f6ff af60 	blt.w	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c90a:	9a08      	ldr	r2, [sp, #32]
 801c90c:	9302      	str	r3, [sp, #8]
 801c90e:	fa0f f38e 	sxth.w	r3, lr
 801c912:	9301      	str	r3, [sp, #4]
 801c914:	fa0f f38c 	sxth.w	r3, ip
 801c918:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c91c:	9105      	str	r1, [sp, #20]
 801c91e:	9300      	str	r3, [sp, #0]
 801c920:	463a      	mov	r2, r7
 801c922:	4653      	mov	r3, sl
 801c924:	4641      	mov	r1, r8
 801c926:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c928:	f7ff fd58 	bl	801c3dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c92c:	e74d      	b.n	801c7ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801c92e:	bf00      	nop
 801c930:	20012dcc 	.word	0x20012dcc
 801c934:	fffff800 	.word	0xfffff800
 801c938:	9906      	ldr	r1, [sp, #24]
 801c93a:	1422      	asrs	r2, r4, #16
 801c93c:	1433      	asrs	r3, r6, #16
 801c93e:	fb01 2303 	mla	r3, r1, r3, r2
 801c942:	085a      	lsrs	r2, r3, #1
 801c944:	07d9      	lsls	r1, r3, #31
 801c946:	5cba      	ldrb	r2, [r7, r2]
 801c948:	bf54      	ite	pl
 801c94a:	f002 020f 	andpl.w	r2, r2, #15
 801c94e:	1112      	asrmi	r2, r2, #4
 801c950:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c954:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c958:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c95c:	b2d2      	uxtb	r2, r2
 801c95e:	2800      	cmp	r0, #0
 801c960:	f000 8098 	beq.w	801ca94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 801c964:	f103 0e01 	add.w	lr, r3, #1
 801c968:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801c96c:	f01e 0f01 	tst.w	lr, #1
 801c970:	5c79      	ldrb	r1, [r7, r1]
 801c972:	bf0c      	ite	eq
 801c974:	f001 010f 	andeq.w	r1, r1, #15
 801c978:	1109      	asrne	r1, r1, #4
 801c97a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c97e:	b2c9      	uxtb	r1, r1
 801c980:	910f      	str	r1, [sp, #60]	; 0x3c
 801c982:	f1bc 0f00 	cmp.w	ip, #0
 801c986:	d019      	beq.n	801c9bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801c988:	9908      	ldr	r1, [sp, #32]
 801c98a:	440b      	add	r3, r1
 801c98c:	0859      	lsrs	r1, r3, #1
 801c98e:	f013 0f01 	tst.w	r3, #1
 801c992:	5c79      	ldrb	r1, [r7, r1]
 801c994:	bf0c      	ite	eq
 801c996:	f001 010f 	andeq.w	r1, r1, #15
 801c99a:	1109      	asrne	r1, r1, #4
 801c99c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c9a0:	b2c9      	uxtb	r1, r1
 801c9a2:	3301      	adds	r3, #1
 801c9a4:	910b      	str	r1, [sp, #44]	; 0x2c
 801c9a6:	0859      	lsrs	r1, r3, #1
 801c9a8:	07db      	lsls	r3, r3, #31
 801c9aa:	5c79      	ldrb	r1, [r7, r1]
 801c9ac:	bf54      	ite	pl
 801c9ae:	f001 010f 	andpl.w	r1, r1, #15
 801c9b2:	1109      	asrmi	r1, r1, #4
 801c9b4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c9b8:	b2c9      	uxtb	r1, r1
 801c9ba:	9110      	str	r1, [sp, #64]	; 0x40
 801c9bc:	b280      	uxth	r0, r0
 801c9be:	fa1f fc8c 	uxth.w	ip, ip
 801c9c2:	fb00 f30c 	mul.w	r3, r0, ip
 801c9c6:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c9ca:	0100      	lsls	r0, r0, #4
 801c9cc:	fa1f fc8c 	uxth.w	ip, ip
 801c9d0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801c9d4:	eba1 010c 	sub.w	r1, r1, ip
 801c9d8:	fa1f fe81 	uxth.w	lr, r1
 801c9dc:	1ac0      	subs	r0, r0, r3
 801c9de:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c9e0:	b280      	uxth	r0, r0
 801c9e2:	4348      	muls	r0, r1
 801c9e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c9e6:	fb02 020e 	mla	r2, r2, lr, r0
 801c9ea:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c9ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9f0:	fb03 c302 	mla	r3, r3, r2, ip
 801c9f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c9f8:	2b00      	cmp	r3, #0
 801c9fa:	d042      	beq.n	801ca82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801c9fc:	4a37      	ldr	r2, [pc, #220]	; (801cadc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801c9fe:	6810      	ldr	r0, [r2, #0]
 801ca00:	2bff      	cmp	r3, #255	; 0xff
 801ca02:	ea4f 4210 	mov.w	r2, r0, lsr #16
 801ca06:	ea4f 2110 	mov.w	r1, r0, lsr #8
 801ca0a:	fa5f fe80 	uxtb.w	lr, r0
 801ca0e:	d052      	beq.n	801cab6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 801ca10:	f8b8 c000 	ldrh.w	ip, [r8]
 801ca14:	fa1f fb83 	uxth.w	fp, r3
 801ca18:	ea4f 202c 	mov.w	r0, ip, asr #8
 801ca1c:	43db      	mvns	r3, r3
 801ca1e:	b2d2      	uxtb	r2, r2
 801ca20:	b2db      	uxtb	r3, r3
 801ca22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ca26:	fb12 f20b 	smulbb	r2, r2, fp
 801ca2a:	fb00 2203 	mla	r2, r0, r3, r2
 801ca2e:	ea4f 00ec 	mov.w	r0, ip, asr #3
 801ca32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ca36:	fa5f fc8c 	uxtb.w	ip, ip
 801ca3a:	fb1e fe0b 	smulbb	lr, lr, fp
 801ca3e:	fb0c ee03 	mla	lr, ip, r3, lr
 801ca42:	b2c9      	uxtb	r1, r1
 801ca44:	b292      	uxth	r2, r2
 801ca46:	fb11 f10b 	smulbb	r1, r1, fp
 801ca4a:	fa1f fe8e 	uxth.w	lr, lr
 801ca4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca52:	fb00 1003 	mla	r0, r0, r3, r1
 801ca56:	1c53      	adds	r3, r2, #1
 801ca58:	f10e 0101 	add.w	r1, lr, #1
 801ca5c:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ca60:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ca64:	b280      	uxth	r0, r0
 801ca66:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ca6a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ca6e:	430a      	orrs	r2, r1
 801ca70:	1c41      	adds	r1, r0, #1
 801ca72:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ca76:	0940      	lsrs	r0, r0, #5
 801ca78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca7c:	4302      	orrs	r2, r0
 801ca7e:	f8a8 2000 	strh.w	r2, [r8]
 801ca82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ca84:	441c      	add	r4, r3
 801ca86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca88:	f108 0802 	add.w	r8, r8, #2
 801ca8c:	441e      	add	r6, r3
 801ca8e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ca92:	e6c7      	b.n	801c824 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ca94:	f1bc 0f00 	cmp.w	ip, #0
 801ca98:	d090      	beq.n	801c9bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ca9a:	9908      	ldr	r1, [sp, #32]
 801ca9c:	440b      	add	r3, r1
 801ca9e:	0859      	lsrs	r1, r3, #1
 801caa0:	07db      	lsls	r3, r3, #31
 801caa2:	5c79      	ldrb	r1, [r7, r1]
 801caa4:	bf54      	ite	pl
 801caa6:	f001 010f 	andpl.w	r1, r1, #15
 801caaa:	1109      	asrmi	r1, r1, #4
 801caac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cab0:	b2c9      	uxtb	r1, r1
 801cab2:	910b      	str	r1, [sp, #44]	; 0x2c
 801cab4:	e782      	b.n	801c9bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cab6:	4b0a      	ldr	r3, [pc, #40]	; (801cae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801cab8:	00c9      	lsls	r1, r1, #3
 801caba:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801cabe:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 801cac2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cac6:	ea4e 0e01 	orr.w	lr, lr, r1
 801caca:	f8a8 e000 	strh.w	lr, [r8]
 801cace:	e7d8      	b.n	801ca82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 801cad0:	b013      	add	sp, #76	; 0x4c
 801cad2:	ecbd 8b08 	vpop	{d8-d11}
 801cad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cada:	bf00      	nop
 801cadc:	20012dcc 	.word	0x20012dcc
 801cae0:	fffff800 	.word	0xfffff800

0801cae4 <CRC_Lock>:
 801cae4:	b530      	push	{r4, r5, lr}
 801cae6:	4a20      	ldr	r2, [pc, #128]	; (801cb68 <CRC_Lock+0x84>)
 801cae8:	6813      	ldr	r3, [r2, #0]
 801caea:	f023 0301 	bic.w	r3, r3, #1
 801caee:	6013      	str	r3, [r2, #0]
 801caf0:	4b1e      	ldr	r3, [pc, #120]	; (801cb6c <CRC_Lock+0x88>)
 801caf2:	681a      	ldr	r2, [r3, #0]
 801caf4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801caf8:	4022      	ands	r2, r4
 801cafa:	f24c 2540 	movw	r5, #49728	; 0xc240
 801cafe:	42aa      	cmp	r2, r5
 801cb00:	d005      	beq.n	801cb0e <CRC_Lock+0x2a>
 801cb02:	681b      	ldr	r3, [r3, #0]
 801cb04:	f24c 2270 	movw	r2, #49776	; 0xc270
 801cb08:	4023      	ands	r3, r4
 801cb0a:	4293      	cmp	r3, r2
 801cb0c:	d124      	bne.n	801cb58 <CRC_Lock+0x74>
 801cb0e:	4b18      	ldr	r3, [pc, #96]	; (801cb70 <CRC_Lock+0x8c>)
 801cb10:	681b      	ldr	r3, [r3, #0]
 801cb12:	bb0b      	cbnz	r3, 801cb58 <CRC_Lock+0x74>
 801cb14:	4b17      	ldr	r3, [pc, #92]	; (801cb74 <CRC_Lock+0x90>)
 801cb16:	681a      	ldr	r2, [r3, #0]
 801cb18:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801cb1c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801cb20:	d00d      	beq.n	801cb3e <CRC_Lock+0x5a>
 801cb22:	681a      	ldr	r2, [r3, #0]
 801cb24:	f240 4483 	movw	r4, #1155	; 0x483
 801cb28:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801cb2c:	42a2      	cmp	r2, r4
 801cb2e:	d006      	beq.n	801cb3e <CRC_Lock+0x5a>
 801cb30:	681b      	ldr	r3, [r3, #0]
 801cb32:	f240 4285 	movw	r2, #1157	; 0x485
 801cb36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801cb3a:	4293      	cmp	r3, r2
 801cb3c:	d10c      	bne.n	801cb58 <CRC_Lock+0x74>
 801cb3e:	4b0e      	ldr	r3, [pc, #56]	; (801cb78 <CRC_Lock+0x94>)
 801cb40:	2201      	movs	r2, #1
 801cb42:	601a      	str	r2, [r3, #0]
 801cb44:	681a      	ldr	r2, [r3, #0]
 801cb46:	2a00      	cmp	r2, #0
 801cb48:	d1fc      	bne.n	801cb44 <CRC_Lock+0x60>
 801cb4a:	4b0c      	ldr	r3, [pc, #48]	; (801cb7c <CRC_Lock+0x98>)
 801cb4c:	6018      	str	r0, [r3, #0]
 801cb4e:	6818      	ldr	r0, [r3, #0]
 801cb50:	1a43      	subs	r3, r0, r1
 801cb52:	4258      	negs	r0, r3
 801cb54:	4158      	adcs	r0, r3
 801cb56:	bd30      	pop	{r4, r5, pc}
 801cb58:	4b09      	ldr	r3, [pc, #36]	; (801cb80 <CRC_Lock+0x9c>)
 801cb5a:	2201      	movs	r2, #1
 801cb5c:	601a      	str	r2, [r3, #0]
 801cb5e:	681a      	ldr	r2, [r3, #0]
 801cb60:	2a00      	cmp	r2, #0
 801cb62:	d1fc      	bne.n	801cb5e <CRC_Lock+0x7a>
 801cb64:	4b07      	ldr	r3, [pc, #28]	; (801cb84 <CRC_Lock+0xa0>)
 801cb66:	e7f1      	b.n	801cb4c <CRC_Lock+0x68>
 801cb68:	e0002000 	.word	0xe0002000
 801cb6c:	e000ed00 	.word	0xe000ed00
 801cb70:	e0042000 	.word	0xe0042000
 801cb74:	5c001000 	.word	0x5c001000
 801cb78:	58024c08 	.word	0x58024c08
 801cb7c:	58024c00 	.word	0x58024c00
 801cb80:	40023008 	.word	0x40023008
 801cb84:	40023000 	.word	0x40023000

0801cb88 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801cb88:	6101      	str	r1, [r0, #16]
 801cb8a:	4770      	bx	lr

0801cb8c <_ZN8touchgfx8Gestures4tickEv>:
 801cb8c:	7b83      	ldrb	r3, [r0, #14]
 801cb8e:	b14b      	cbz	r3, 801cba4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801cb90:	8903      	ldrh	r3, [r0, #8]
 801cb92:	3301      	adds	r3, #1
 801cb94:	b29b      	uxth	r3, r3
 801cb96:	2b07      	cmp	r3, #7
 801cb98:	8103      	strh	r3, [r0, #8]
 801cb9a:	bf81      	itttt	hi
 801cb9c:	2300      	movhi	r3, #0
 801cb9e:	8143      	strhhi	r3, [r0, #10]
 801cba0:	8183      	strhhi	r3, [r0, #12]
 801cba2:	7383      	strbhi	r3, [r0, #14]
 801cba4:	4770      	bx	lr
	...

0801cba8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801cba8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801cbac:	4604      	mov	r4, r0
 801cbae:	8880      	ldrh	r0, [r0, #4]
 801cbb0:	f8ad 0006 	strh.w	r0, [sp, #6]
 801cbb4:	4698      	mov	r8, r3
 801cbb6:	eba8 0000 	sub.w	r0, r8, r0
 801cbba:	4b1c      	ldr	r3, [pc, #112]	; (801cc2c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801cbbc:	9300      	str	r3, [sp, #0]
 801cbbe:	b280      	uxth	r0, r0
 801cbc0:	2300      	movs	r3, #0
 801cbc2:	f88d 3004 	strb.w	r3, [sp, #4]
 801cbc6:	b203      	sxth	r3, r0
 801cbc8:	2b00      	cmp	r3, #0
 801cbca:	bfb8      	it	lt
 801cbcc:	4240      	neglt	r0, r0
 801cbce:	4617      	mov	r7, r2
 801cbd0:	8aa2      	ldrh	r2, [r4, #20]
 801cbd2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801cbd6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801cbda:	bfb8      	it	lt
 801cbdc:	b203      	sxthlt	r3, r0
 801cbde:	460e      	mov	r6, r1
 801cbe0:	4293      	cmp	r3, r2
 801cbe2:	88e1      	ldrh	r1, [r4, #6]
 801cbe4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801cbe8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801cbec:	dc08      	bgt.n	801cc00 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801cbee:	1a69      	subs	r1, r5, r1
 801cbf0:	b289      	uxth	r1, r1
 801cbf2:	b20b      	sxth	r3, r1
 801cbf4:	2b00      	cmp	r3, #0
 801cbf6:	bfbc      	itt	lt
 801cbf8:	4249      	neglt	r1, r1
 801cbfa:	b20b      	sxthlt	r3, r1
 801cbfc:	429a      	cmp	r2, r3
 801cbfe:	da13      	bge.n	801cc28 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801cc00:	6920      	ldr	r0, [r4, #16]
 801cc02:	6803      	ldr	r3, [r0, #0]
 801cc04:	4669      	mov	r1, sp
 801cc06:	685b      	ldr	r3, [r3, #4]
 801cc08:	4798      	blx	r3
 801cc0a:	eba8 0606 	sub.w	r6, r8, r6
 801cc0e:	2300      	movs	r3, #0
 801cc10:	1bef      	subs	r7, r5, r7
 801cc12:	2001      	movs	r0, #1
 801cc14:	8123      	strh	r3, [r4, #8]
 801cc16:	8166      	strh	r6, [r4, #10]
 801cc18:	81a7      	strh	r7, [r4, #12]
 801cc1a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801cc1e:	80e5      	strh	r5, [r4, #6]
 801cc20:	73a0      	strb	r0, [r4, #14]
 801cc22:	b004      	add	sp, #16
 801cc24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cc28:	2000      	movs	r0, #0
 801cc2a:	e7fa      	b.n	801cc22 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801cc2c:	08020928 	.word	0x08020928

0801cc30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801cc30:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cc32:	461e      	mov	r6, r3
 801cc34:	1e4b      	subs	r3, r1, #1
 801cc36:	2b01      	cmp	r3, #1
 801cc38:	b085      	sub	sp, #20
 801cc3a:	4604      	mov	r4, r0
 801cc3c:	460d      	mov	r5, r1
 801cc3e:	4617      	mov	r7, r2
 801cc40:	d84b      	bhi.n	801ccda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801cc42:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801cc46:	1cd3      	adds	r3, r2, #3
 801cc48:	b29b      	uxth	r3, r3
 801cc4a:	2b06      	cmp	r3, #6
 801cc4c:	d916      	bls.n	801cc7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801cc4e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801ccf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801cc52:	f8cd c004 	str.w	ip, [sp, #4]
 801cc56:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cc5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cc5e:	6900      	ldr	r0, [r0, #16]
 801cc60:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cc64:	f04f 0c00 	mov.w	ip, #0
 801cc68:	f88d c008 	strb.w	ip, [sp, #8]
 801cc6c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801cc70:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cc74:	6803      	ldr	r3, [r0, #0]
 801cc76:	a901      	add	r1, sp, #4
 801cc78:	689b      	ldr	r3, [r3, #8]
 801cc7a:	4798      	blx	r3
 801cc7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801cc80:	1cd3      	adds	r3, r2, #3
 801cc82:	b29b      	uxth	r3, r3
 801cc84:	2b06      	cmp	r3, #6
 801cc86:	d916      	bls.n	801ccb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cc88:	f8df c064 	ldr.w	ip, [pc, #100]	; 801ccf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801cc8c:	f8cd c004 	str.w	ip, [sp, #4]
 801cc90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cc94:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cc98:	6920      	ldr	r0, [r4, #16]
 801cc9a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cc9e:	f04f 0c01 	mov.w	ip, #1
 801cca2:	f88d c008 	strb.w	ip, [sp, #8]
 801cca6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ccaa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ccae:	6803      	ldr	r3, [r0, #0]
 801ccb0:	a901      	add	r1, sp, #4
 801ccb2:	689b      	ldr	r3, [r3, #8]
 801ccb4:	4798      	blx	r3
 801ccb6:	4b0d      	ldr	r3, [pc, #52]	; (801ccec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801ccb8:	9301      	str	r3, [sp, #4]
 801ccba:	6920      	ldr	r0, [r4, #16]
 801ccbc:	f88d 5008 	strb.w	r5, [sp, #8]
 801ccc0:	2300      	movs	r3, #0
 801ccc2:	f8ad 700a 	strh.w	r7, [sp, #10]
 801ccc6:	f8ad 600c 	strh.w	r6, [sp, #12]
 801ccca:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ccce:	6803      	ldr	r3, [r0, #0]
 801ccd0:	a901      	add	r1, sp, #4
 801ccd2:	681b      	ldr	r3, [r3, #0]
 801ccd4:	4798      	blx	r3
 801ccd6:	b005      	add	sp, #20
 801ccd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ccda:	2900      	cmp	r1, #0
 801ccdc:	d1eb      	bne.n	801ccb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ccde:	80a2      	strh	r2, [r4, #4]
 801cce0:	80c6      	strh	r6, [r0, #6]
 801cce2:	60a1      	str	r1, [r4, #8]
 801cce4:	81a1      	strh	r1, [r4, #12]
 801cce6:	73a1      	strb	r1, [r4, #14]
 801cce8:	e7e5      	b.n	801ccb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ccea:	bf00      	nop
 801ccec:	08020914 	.word	0x08020914
 801ccf0:	0802093c 	.word	0x0802093c

0801ccf4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801ccf4:	b570      	push	{r4, r5, r6, lr}
 801ccf6:	790b      	ldrb	r3, [r1, #4]
 801ccf8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801ccfc:	2b00      	cmp	r3, #0
 801ccfe:	bf0c      	ite	eq
 801cd00:	2301      	moveq	r3, #1
 801cd02:	2300      	movne	r3, #0
 801cd04:	4604      	mov	r4, r0
 801cd06:	460e      	mov	r6, r1
 801cd08:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801cd0c:	d109      	bne.n	801cd22 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801cd0e:	b14d      	cbz	r5, 801cd24 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801cd10:	7933      	ldrb	r3, [r6, #4]
 801cd12:	2b01      	cmp	r3, #1
 801cd14:	d10c      	bne.n	801cd30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cd16:	6823      	ldr	r3, [r4, #0]
 801cd18:	4620      	mov	r0, r4
 801cd1a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cd1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801cd20:	4718      	bx	r3
 801cd22:	b12d      	cbz	r5, 801cd30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801cd24:	6823      	ldr	r3, [r4, #0]
 801cd26:	4620      	mov	r0, r4
 801cd28:	695b      	ldr	r3, [r3, #20]
 801cd2a:	4798      	blx	r3
 801cd2c:	2d00      	cmp	r5, #0
 801cd2e:	d1ef      	bne.n	801cd10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801cd30:	bd70      	pop	{r4, r5, r6, pc}

0801cd32 <__aeabi_atexit>:
 801cd32:	460b      	mov	r3, r1
 801cd34:	4601      	mov	r1, r0
 801cd36:	4618      	mov	r0, r3
 801cd38:	f000 b856 	b.w	801cde8 <__cxa_atexit>

0801cd3c <_ZdlPvj>:
 801cd3c:	f000 b812 	b.w	801cd64 <_ZdlPv>

0801cd40 <__cxa_guard_acquire>:
 801cd40:	6803      	ldr	r3, [r0, #0]
 801cd42:	07db      	lsls	r3, r3, #31
 801cd44:	d406      	bmi.n	801cd54 <__cxa_guard_acquire+0x14>
 801cd46:	7843      	ldrb	r3, [r0, #1]
 801cd48:	b103      	cbz	r3, 801cd4c <__cxa_guard_acquire+0xc>
 801cd4a:	deff      	udf	#255	; 0xff
 801cd4c:	2301      	movs	r3, #1
 801cd4e:	7043      	strb	r3, [r0, #1]
 801cd50:	4618      	mov	r0, r3
 801cd52:	4770      	bx	lr
 801cd54:	2000      	movs	r0, #0
 801cd56:	4770      	bx	lr

0801cd58 <__cxa_guard_release>:
 801cd58:	2301      	movs	r3, #1
 801cd5a:	6003      	str	r3, [r0, #0]
 801cd5c:	4770      	bx	lr

0801cd5e <__cxa_pure_virtual>:
 801cd5e:	b508      	push	{r3, lr}
 801cd60:	f000 f80e 	bl	801cd80 <_ZSt9terminatev>

0801cd64 <_ZdlPv>:
 801cd64:	f000 b98c 	b.w	801d080 <free>

0801cd68 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801cd68:	b508      	push	{r3, lr}
 801cd6a:	4780      	blx	r0
 801cd6c:	f000 f80d 	bl	801cd8a <abort>

0801cd70 <_ZSt13get_terminatev>:
 801cd70:	4b02      	ldr	r3, [pc, #8]	; (801cd7c <_ZSt13get_terminatev+0xc>)
 801cd72:	6818      	ldr	r0, [r3, #0]
 801cd74:	f3bf 8f5b 	dmb	ish
 801cd78:	4770      	bx	lr
 801cd7a:	bf00      	nop
 801cd7c:	200000f8 	.word	0x200000f8

0801cd80 <_ZSt9terminatev>:
 801cd80:	b508      	push	{r3, lr}
 801cd82:	f7ff fff5 	bl	801cd70 <_ZSt13get_terminatev>
 801cd86:	f7ff ffef 	bl	801cd68 <_ZN10__cxxabiv111__terminateEPFvvE>

0801cd8a <abort>:
 801cd8a:	b508      	push	{r3, lr}
 801cd8c:	2006      	movs	r0, #6
 801cd8e:	f000 fdcf 	bl	801d930 <raise>
 801cd92:	2001      	movs	r0, #1
 801cd94:	f7e4 ffce 	bl	8001d34 <_exit>

0801cd98 <__assert_func>:
 801cd98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801cd9a:	4614      	mov	r4, r2
 801cd9c:	461a      	mov	r2, r3
 801cd9e:	4b09      	ldr	r3, [pc, #36]	; (801cdc4 <__assert_func+0x2c>)
 801cda0:	681b      	ldr	r3, [r3, #0]
 801cda2:	4605      	mov	r5, r0
 801cda4:	68d8      	ldr	r0, [r3, #12]
 801cda6:	b14c      	cbz	r4, 801cdbc <__assert_func+0x24>
 801cda8:	4b07      	ldr	r3, [pc, #28]	; (801cdc8 <__assert_func+0x30>)
 801cdaa:	9100      	str	r1, [sp, #0]
 801cdac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801cdb0:	4906      	ldr	r1, [pc, #24]	; (801cdcc <__assert_func+0x34>)
 801cdb2:	462b      	mov	r3, r5
 801cdb4:	f000 f902 	bl	801cfbc <fiprintf>
 801cdb8:	f7ff ffe7 	bl	801cd8a <abort>
 801cdbc:	4b04      	ldr	r3, [pc, #16]	; (801cdd0 <__assert_func+0x38>)
 801cdbe:	461c      	mov	r4, r3
 801cdc0:	e7f3      	b.n	801cdaa <__assert_func+0x12>
 801cdc2:	bf00      	nop
 801cdc4:	200000fc 	.word	0x200000fc
 801cdc8:	08021c5d 	.word	0x08021c5d
 801cdcc:	08021c6a 	.word	0x08021c6a
 801cdd0:	08021c98 	.word	0x08021c98

0801cdd4 <atexit>:
 801cdd4:	2300      	movs	r3, #0
 801cdd6:	4601      	mov	r1, r0
 801cdd8:	461a      	mov	r2, r3
 801cdda:	4618      	mov	r0, r3
 801cddc:	f000 bf68 	b.w	801dcb0 <__register_exitproc>

0801cde0 <atoi>:
 801cde0:	220a      	movs	r2, #10
 801cde2:	2100      	movs	r1, #0
 801cde4:	f000 be88 	b.w	801daf8 <strtol>

0801cde8 <__cxa_atexit>:
 801cde8:	b510      	push	{r4, lr}
 801cdea:	4c05      	ldr	r4, [pc, #20]	; (801ce00 <__cxa_atexit+0x18>)
 801cdec:	4613      	mov	r3, r2
 801cdee:	b12c      	cbz	r4, 801cdfc <__cxa_atexit+0x14>
 801cdf0:	460a      	mov	r2, r1
 801cdf2:	4601      	mov	r1, r0
 801cdf4:	2002      	movs	r0, #2
 801cdf6:	f000 ff5b 	bl	801dcb0 <__register_exitproc>
 801cdfa:	bd10      	pop	{r4, pc}
 801cdfc:	4620      	mov	r0, r4
 801cdfe:	e7fc      	b.n	801cdfa <__cxa_atexit+0x12>
 801ce00:	0801dcb1 	.word	0x0801dcb1

0801ce04 <__errno>:
 801ce04:	4b01      	ldr	r3, [pc, #4]	; (801ce0c <__errno+0x8>)
 801ce06:	6818      	ldr	r0, [r3, #0]
 801ce08:	4770      	bx	lr
 801ce0a:	bf00      	nop
 801ce0c:	200000fc 	.word	0x200000fc

0801ce10 <std>:
 801ce10:	2300      	movs	r3, #0
 801ce12:	b510      	push	{r4, lr}
 801ce14:	4604      	mov	r4, r0
 801ce16:	e9c0 3300 	strd	r3, r3, [r0]
 801ce1a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ce1e:	6083      	str	r3, [r0, #8]
 801ce20:	8181      	strh	r1, [r0, #12]
 801ce22:	6643      	str	r3, [r0, #100]	; 0x64
 801ce24:	81c2      	strh	r2, [r0, #14]
 801ce26:	6183      	str	r3, [r0, #24]
 801ce28:	4619      	mov	r1, r3
 801ce2a:	2208      	movs	r2, #8
 801ce2c:	305c      	adds	r0, #92	; 0x5c
 801ce2e:	f000 f93d 	bl	801d0ac <memset>
 801ce32:	4b05      	ldr	r3, [pc, #20]	; (801ce48 <std+0x38>)
 801ce34:	6263      	str	r3, [r4, #36]	; 0x24
 801ce36:	4b05      	ldr	r3, [pc, #20]	; (801ce4c <std+0x3c>)
 801ce38:	62a3      	str	r3, [r4, #40]	; 0x28
 801ce3a:	4b05      	ldr	r3, [pc, #20]	; (801ce50 <std+0x40>)
 801ce3c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ce3e:	4b05      	ldr	r3, [pc, #20]	; (801ce54 <std+0x44>)
 801ce40:	6224      	str	r4, [r4, #32]
 801ce42:	6323      	str	r3, [r4, #48]	; 0x30
 801ce44:	bd10      	pop	{r4, pc}
 801ce46:	bf00      	nop
 801ce48:	0801d969 	.word	0x0801d969
 801ce4c:	0801d98b 	.word	0x0801d98b
 801ce50:	0801d9c3 	.word	0x0801d9c3
 801ce54:	0801d9e7 	.word	0x0801d9e7

0801ce58 <_cleanup_r>:
 801ce58:	4901      	ldr	r1, [pc, #4]	; (801ce60 <_cleanup_r+0x8>)
 801ce5a:	f000 b8c1 	b.w	801cfe0 <_fwalk_reent>
 801ce5e:	bf00      	nop
 801ce60:	0801dea1 	.word	0x0801dea1

0801ce64 <__sfmoreglue>:
 801ce64:	b570      	push	{r4, r5, r6, lr}
 801ce66:	1e4a      	subs	r2, r1, #1
 801ce68:	2568      	movs	r5, #104	; 0x68
 801ce6a:	4355      	muls	r5, r2
 801ce6c:	460e      	mov	r6, r1
 801ce6e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ce72:	f000 f973 	bl	801d15c <_malloc_r>
 801ce76:	4604      	mov	r4, r0
 801ce78:	b140      	cbz	r0, 801ce8c <__sfmoreglue+0x28>
 801ce7a:	2100      	movs	r1, #0
 801ce7c:	e9c0 1600 	strd	r1, r6, [r0]
 801ce80:	300c      	adds	r0, #12
 801ce82:	60a0      	str	r0, [r4, #8]
 801ce84:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801ce88:	f000 f910 	bl	801d0ac <memset>
 801ce8c:	4620      	mov	r0, r4
 801ce8e:	bd70      	pop	{r4, r5, r6, pc}

0801ce90 <__sfp_lock_acquire>:
 801ce90:	4801      	ldr	r0, [pc, #4]	; (801ce98 <__sfp_lock_acquire+0x8>)
 801ce92:	f000 b8ea 	b.w	801d06a <__retarget_lock_acquire_recursive>
 801ce96:	bf00      	nop
 801ce98:	20013314 	.word	0x20013314

0801ce9c <__sfp_lock_release>:
 801ce9c:	4801      	ldr	r0, [pc, #4]	; (801cea4 <__sfp_lock_release+0x8>)
 801ce9e:	f000 b8e6 	b.w	801d06e <__retarget_lock_release_recursive>
 801cea2:	bf00      	nop
 801cea4:	20013314 	.word	0x20013314

0801cea8 <__sinit_lock_acquire>:
 801cea8:	4801      	ldr	r0, [pc, #4]	; (801ceb0 <__sinit_lock_acquire+0x8>)
 801ceaa:	f000 b8de 	b.w	801d06a <__retarget_lock_acquire_recursive>
 801ceae:	bf00      	nop
 801ceb0:	2001330f 	.word	0x2001330f

0801ceb4 <__sinit_lock_release>:
 801ceb4:	4801      	ldr	r0, [pc, #4]	; (801cebc <__sinit_lock_release+0x8>)
 801ceb6:	f000 b8da 	b.w	801d06e <__retarget_lock_release_recursive>
 801ceba:	bf00      	nop
 801cebc:	2001330f 	.word	0x2001330f

0801cec0 <__sinit>:
 801cec0:	b510      	push	{r4, lr}
 801cec2:	4604      	mov	r4, r0
 801cec4:	f7ff fff0 	bl	801cea8 <__sinit_lock_acquire>
 801cec8:	69a3      	ldr	r3, [r4, #24]
 801ceca:	b11b      	cbz	r3, 801ced4 <__sinit+0x14>
 801cecc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ced0:	f7ff bff0 	b.w	801ceb4 <__sinit_lock_release>
 801ced4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ced8:	6523      	str	r3, [r4, #80]	; 0x50
 801ceda:	4b13      	ldr	r3, [pc, #76]	; (801cf28 <__sinit+0x68>)
 801cedc:	4a13      	ldr	r2, [pc, #76]	; (801cf2c <__sinit+0x6c>)
 801cede:	681b      	ldr	r3, [r3, #0]
 801cee0:	62a2      	str	r2, [r4, #40]	; 0x28
 801cee2:	42a3      	cmp	r3, r4
 801cee4:	bf04      	itt	eq
 801cee6:	2301      	moveq	r3, #1
 801cee8:	61a3      	streq	r3, [r4, #24]
 801ceea:	4620      	mov	r0, r4
 801ceec:	f000 f820 	bl	801cf30 <__sfp>
 801cef0:	6060      	str	r0, [r4, #4]
 801cef2:	4620      	mov	r0, r4
 801cef4:	f000 f81c 	bl	801cf30 <__sfp>
 801cef8:	60a0      	str	r0, [r4, #8]
 801cefa:	4620      	mov	r0, r4
 801cefc:	f000 f818 	bl	801cf30 <__sfp>
 801cf00:	2200      	movs	r2, #0
 801cf02:	60e0      	str	r0, [r4, #12]
 801cf04:	2104      	movs	r1, #4
 801cf06:	6860      	ldr	r0, [r4, #4]
 801cf08:	f7ff ff82 	bl	801ce10 <std>
 801cf0c:	68a0      	ldr	r0, [r4, #8]
 801cf0e:	2201      	movs	r2, #1
 801cf10:	2109      	movs	r1, #9
 801cf12:	f7ff ff7d 	bl	801ce10 <std>
 801cf16:	68e0      	ldr	r0, [r4, #12]
 801cf18:	2202      	movs	r2, #2
 801cf1a:	2112      	movs	r1, #18
 801cf1c:	f7ff ff78 	bl	801ce10 <std>
 801cf20:	2301      	movs	r3, #1
 801cf22:	61a3      	str	r3, [r4, #24]
 801cf24:	e7d2      	b.n	801cecc <__sinit+0xc>
 801cf26:	bf00      	nop
 801cf28:	08021cfc 	.word	0x08021cfc
 801cf2c:	0801ce59 	.word	0x0801ce59

0801cf30 <__sfp>:
 801cf30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cf32:	4607      	mov	r7, r0
 801cf34:	f7ff ffac 	bl	801ce90 <__sfp_lock_acquire>
 801cf38:	4b1e      	ldr	r3, [pc, #120]	; (801cfb4 <__sfp+0x84>)
 801cf3a:	681e      	ldr	r6, [r3, #0]
 801cf3c:	69b3      	ldr	r3, [r6, #24]
 801cf3e:	b913      	cbnz	r3, 801cf46 <__sfp+0x16>
 801cf40:	4630      	mov	r0, r6
 801cf42:	f7ff ffbd 	bl	801cec0 <__sinit>
 801cf46:	3648      	adds	r6, #72	; 0x48
 801cf48:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801cf4c:	3b01      	subs	r3, #1
 801cf4e:	d503      	bpl.n	801cf58 <__sfp+0x28>
 801cf50:	6833      	ldr	r3, [r6, #0]
 801cf52:	b30b      	cbz	r3, 801cf98 <__sfp+0x68>
 801cf54:	6836      	ldr	r6, [r6, #0]
 801cf56:	e7f7      	b.n	801cf48 <__sfp+0x18>
 801cf58:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801cf5c:	b9d5      	cbnz	r5, 801cf94 <__sfp+0x64>
 801cf5e:	4b16      	ldr	r3, [pc, #88]	; (801cfb8 <__sfp+0x88>)
 801cf60:	60e3      	str	r3, [r4, #12]
 801cf62:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801cf66:	6665      	str	r5, [r4, #100]	; 0x64
 801cf68:	f000 f87e 	bl	801d068 <__retarget_lock_init_recursive>
 801cf6c:	f7ff ff96 	bl	801ce9c <__sfp_lock_release>
 801cf70:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801cf74:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801cf78:	6025      	str	r5, [r4, #0]
 801cf7a:	61a5      	str	r5, [r4, #24]
 801cf7c:	2208      	movs	r2, #8
 801cf7e:	4629      	mov	r1, r5
 801cf80:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801cf84:	f000 f892 	bl	801d0ac <memset>
 801cf88:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801cf8c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801cf90:	4620      	mov	r0, r4
 801cf92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cf94:	3468      	adds	r4, #104	; 0x68
 801cf96:	e7d9      	b.n	801cf4c <__sfp+0x1c>
 801cf98:	2104      	movs	r1, #4
 801cf9a:	4638      	mov	r0, r7
 801cf9c:	f7ff ff62 	bl	801ce64 <__sfmoreglue>
 801cfa0:	4604      	mov	r4, r0
 801cfa2:	6030      	str	r0, [r6, #0]
 801cfa4:	2800      	cmp	r0, #0
 801cfa6:	d1d5      	bne.n	801cf54 <__sfp+0x24>
 801cfa8:	f7ff ff78 	bl	801ce9c <__sfp_lock_release>
 801cfac:	230c      	movs	r3, #12
 801cfae:	603b      	str	r3, [r7, #0]
 801cfb0:	e7ee      	b.n	801cf90 <__sfp+0x60>
 801cfb2:	bf00      	nop
 801cfb4:	08021cfc 	.word	0x08021cfc
 801cfb8:	ffff0001 	.word	0xffff0001

0801cfbc <fiprintf>:
 801cfbc:	b40e      	push	{r1, r2, r3}
 801cfbe:	b503      	push	{r0, r1, lr}
 801cfc0:	4601      	mov	r1, r0
 801cfc2:	ab03      	add	r3, sp, #12
 801cfc4:	4805      	ldr	r0, [pc, #20]	; (801cfdc <fiprintf+0x20>)
 801cfc6:	f853 2b04 	ldr.w	r2, [r3], #4
 801cfca:	6800      	ldr	r0, [r0, #0]
 801cfcc:	9301      	str	r3, [sp, #4]
 801cfce:	f000 f949 	bl	801d264 <_vfiprintf_r>
 801cfd2:	b002      	add	sp, #8
 801cfd4:	f85d eb04 	ldr.w	lr, [sp], #4
 801cfd8:	b003      	add	sp, #12
 801cfda:	4770      	bx	lr
 801cfdc:	200000fc 	.word	0x200000fc

0801cfe0 <_fwalk_reent>:
 801cfe0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cfe4:	4606      	mov	r6, r0
 801cfe6:	4688      	mov	r8, r1
 801cfe8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801cfec:	2700      	movs	r7, #0
 801cfee:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801cff2:	f1b9 0901 	subs.w	r9, r9, #1
 801cff6:	d505      	bpl.n	801d004 <_fwalk_reent+0x24>
 801cff8:	6824      	ldr	r4, [r4, #0]
 801cffa:	2c00      	cmp	r4, #0
 801cffc:	d1f7      	bne.n	801cfee <_fwalk_reent+0xe>
 801cffe:	4638      	mov	r0, r7
 801d000:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d004:	89ab      	ldrh	r3, [r5, #12]
 801d006:	2b01      	cmp	r3, #1
 801d008:	d907      	bls.n	801d01a <_fwalk_reent+0x3a>
 801d00a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d00e:	3301      	adds	r3, #1
 801d010:	d003      	beq.n	801d01a <_fwalk_reent+0x3a>
 801d012:	4629      	mov	r1, r5
 801d014:	4630      	mov	r0, r6
 801d016:	47c0      	blx	r8
 801d018:	4307      	orrs	r7, r0
 801d01a:	3568      	adds	r5, #104	; 0x68
 801d01c:	e7e9      	b.n	801cff2 <_fwalk_reent+0x12>
	...

0801d020 <__libc_init_array>:
 801d020:	b570      	push	{r4, r5, r6, lr}
 801d022:	4d0d      	ldr	r5, [pc, #52]	; (801d058 <__libc_init_array+0x38>)
 801d024:	4c0d      	ldr	r4, [pc, #52]	; (801d05c <__libc_init_array+0x3c>)
 801d026:	1b64      	subs	r4, r4, r5
 801d028:	10a4      	asrs	r4, r4, #2
 801d02a:	2600      	movs	r6, #0
 801d02c:	42a6      	cmp	r6, r4
 801d02e:	d109      	bne.n	801d044 <__libc_init_array+0x24>
 801d030:	4d0b      	ldr	r5, [pc, #44]	; (801d060 <__libc_init_array+0x40>)
 801d032:	4c0c      	ldr	r4, [pc, #48]	; (801d064 <__libc_init_array+0x44>)
 801d034:	f001 f826 	bl	801e084 <_init>
 801d038:	1b64      	subs	r4, r4, r5
 801d03a:	10a4      	asrs	r4, r4, #2
 801d03c:	2600      	movs	r6, #0
 801d03e:	42a6      	cmp	r6, r4
 801d040:	d105      	bne.n	801d04e <__libc_init_array+0x2e>
 801d042:	bd70      	pop	{r4, r5, r6, pc}
 801d044:	f855 3b04 	ldr.w	r3, [r5], #4
 801d048:	4798      	blx	r3
 801d04a:	3601      	adds	r6, #1
 801d04c:	e7ee      	b.n	801d02c <__libc_init_array+0xc>
 801d04e:	f855 3b04 	ldr.w	r3, [r5], #4
 801d052:	4798      	blx	r3
 801d054:	3601      	adds	r6, #1
 801d056:	e7f2      	b.n	801d03e <__libc_init_array+0x1e>
 801d058:	080995c4 	.word	0x080995c4
 801d05c:	080995c4 	.word	0x080995c4
 801d060:	080995c4 	.word	0x080995c4
 801d064:	080995d8 	.word	0x080995d8

0801d068 <__retarget_lock_init_recursive>:
 801d068:	4770      	bx	lr

0801d06a <__retarget_lock_acquire_recursive>:
 801d06a:	4770      	bx	lr

0801d06c <__retarget_lock_release>:
 801d06c:	4770      	bx	lr

0801d06e <__retarget_lock_release_recursive>:
 801d06e:	4770      	bx	lr

0801d070 <malloc>:
 801d070:	4b02      	ldr	r3, [pc, #8]	; (801d07c <malloc+0xc>)
 801d072:	4601      	mov	r1, r0
 801d074:	6818      	ldr	r0, [r3, #0]
 801d076:	f000 b871 	b.w	801d15c <_malloc_r>
 801d07a:	bf00      	nop
 801d07c:	200000fc 	.word	0x200000fc

0801d080 <free>:
 801d080:	4b02      	ldr	r3, [pc, #8]	; (801d08c <free+0xc>)
 801d082:	4601      	mov	r1, r0
 801d084:	6818      	ldr	r0, [r3, #0]
 801d086:	f000 b819 	b.w	801d0bc <_free_r>
 801d08a:	bf00      	nop
 801d08c:	200000fc 	.word	0x200000fc

0801d090 <memcpy>:
 801d090:	440a      	add	r2, r1
 801d092:	4291      	cmp	r1, r2
 801d094:	f100 33ff 	add.w	r3, r0, #4294967295
 801d098:	d100      	bne.n	801d09c <memcpy+0xc>
 801d09a:	4770      	bx	lr
 801d09c:	b510      	push	{r4, lr}
 801d09e:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d0a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d0a6:	4291      	cmp	r1, r2
 801d0a8:	d1f9      	bne.n	801d09e <memcpy+0xe>
 801d0aa:	bd10      	pop	{r4, pc}

0801d0ac <memset>:
 801d0ac:	4402      	add	r2, r0
 801d0ae:	4603      	mov	r3, r0
 801d0b0:	4293      	cmp	r3, r2
 801d0b2:	d100      	bne.n	801d0b6 <memset+0xa>
 801d0b4:	4770      	bx	lr
 801d0b6:	f803 1b01 	strb.w	r1, [r3], #1
 801d0ba:	e7f9      	b.n	801d0b0 <memset+0x4>

0801d0bc <_free_r>:
 801d0bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d0be:	2900      	cmp	r1, #0
 801d0c0:	d048      	beq.n	801d154 <_free_r+0x98>
 801d0c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801d0c6:	9001      	str	r0, [sp, #4]
 801d0c8:	2b00      	cmp	r3, #0
 801d0ca:	f1a1 0404 	sub.w	r4, r1, #4
 801d0ce:	bfb8      	it	lt
 801d0d0:	18e4      	addlt	r4, r4, r3
 801d0d2:	f000 ff97 	bl	801e004 <__malloc_lock>
 801d0d6:	4a20      	ldr	r2, [pc, #128]	; (801d158 <_free_r+0x9c>)
 801d0d8:	9801      	ldr	r0, [sp, #4]
 801d0da:	6813      	ldr	r3, [r2, #0]
 801d0dc:	4615      	mov	r5, r2
 801d0de:	b933      	cbnz	r3, 801d0ee <_free_r+0x32>
 801d0e0:	6063      	str	r3, [r4, #4]
 801d0e2:	6014      	str	r4, [r2, #0]
 801d0e4:	b003      	add	sp, #12
 801d0e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801d0ea:	f000 bf91 	b.w	801e010 <__malloc_unlock>
 801d0ee:	42a3      	cmp	r3, r4
 801d0f0:	d90b      	bls.n	801d10a <_free_r+0x4e>
 801d0f2:	6821      	ldr	r1, [r4, #0]
 801d0f4:	1862      	adds	r2, r4, r1
 801d0f6:	4293      	cmp	r3, r2
 801d0f8:	bf04      	itt	eq
 801d0fa:	681a      	ldreq	r2, [r3, #0]
 801d0fc:	685b      	ldreq	r3, [r3, #4]
 801d0fe:	6063      	str	r3, [r4, #4]
 801d100:	bf04      	itt	eq
 801d102:	1852      	addeq	r2, r2, r1
 801d104:	6022      	streq	r2, [r4, #0]
 801d106:	602c      	str	r4, [r5, #0]
 801d108:	e7ec      	b.n	801d0e4 <_free_r+0x28>
 801d10a:	461a      	mov	r2, r3
 801d10c:	685b      	ldr	r3, [r3, #4]
 801d10e:	b10b      	cbz	r3, 801d114 <_free_r+0x58>
 801d110:	42a3      	cmp	r3, r4
 801d112:	d9fa      	bls.n	801d10a <_free_r+0x4e>
 801d114:	6811      	ldr	r1, [r2, #0]
 801d116:	1855      	adds	r5, r2, r1
 801d118:	42a5      	cmp	r5, r4
 801d11a:	d10b      	bne.n	801d134 <_free_r+0x78>
 801d11c:	6824      	ldr	r4, [r4, #0]
 801d11e:	4421      	add	r1, r4
 801d120:	1854      	adds	r4, r2, r1
 801d122:	42a3      	cmp	r3, r4
 801d124:	6011      	str	r1, [r2, #0]
 801d126:	d1dd      	bne.n	801d0e4 <_free_r+0x28>
 801d128:	681c      	ldr	r4, [r3, #0]
 801d12a:	685b      	ldr	r3, [r3, #4]
 801d12c:	6053      	str	r3, [r2, #4]
 801d12e:	4421      	add	r1, r4
 801d130:	6011      	str	r1, [r2, #0]
 801d132:	e7d7      	b.n	801d0e4 <_free_r+0x28>
 801d134:	d902      	bls.n	801d13c <_free_r+0x80>
 801d136:	230c      	movs	r3, #12
 801d138:	6003      	str	r3, [r0, #0]
 801d13a:	e7d3      	b.n	801d0e4 <_free_r+0x28>
 801d13c:	6825      	ldr	r5, [r4, #0]
 801d13e:	1961      	adds	r1, r4, r5
 801d140:	428b      	cmp	r3, r1
 801d142:	bf04      	itt	eq
 801d144:	6819      	ldreq	r1, [r3, #0]
 801d146:	685b      	ldreq	r3, [r3, #4]
 801d148:	6063      	str	r3, [r4, #4]
 801d14a:	bf04      	itt	eq
 801d14c:	1949      	addeq	r1, r1, r5
 801d14e:	6021      	streq	r1, [r4, #0]
 801d150:	6054      	str	r4, [r2, #4]
 801d152:	e7c7      	b.n	801d0e4 <_free_r+0x28>
 801d154:	b003      	add	sp, #12
 801d156:	bd30      	pop	{r4, r5, pc}
 801d158:	20012ec0 	.word	0x20012ec0

0801d15c <_malloc_r>:
 801d15c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d15e:	1ccd      	adds	r5, r1, #3
 801d160:	f025 0503 	bic.w	r5, r5, #3
 801d164:	3508      	adds	r5, #8
 801d166:	2d0c      	cmp	r5, #12
 801d168:	bf38      	it	cc
 801d16a:	250c      	movcc	r5, #12
 801d16c:	2d00      	cmp	r5, #0
 801d16e:	4606      	mov	r6, r0
 801d170:	db01      	blt.n	801d176 <_malloc_r+0x1a>
 801d172:	42a9      	cmp	r1, r5
 801d174:	d903      	bls.n	801d17e <_malloc_r+0x22>
 801d176:	230c      	movs	r3, #12
 801d178:	6033      	str	r3, [r6, #0]
 801d17a:	2000      	movs	r0, #0
 801d17c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801d17e:	f000 ff41 	bl	801e004 <__malloc_lock>
 801d182:	4921      	ldr	r1, [pc, #132]	; (801d208 <_malloc_r+0xac>)
 801d184:	680a      	ldr	r2, [r1, #0]
 801d186:	4614      	mov	r4, r2
 801d188:	b99c      	cbnz	r4, 801d1b2 <_malloc_r+0x56>
 801d18a:	4f20      	ldr	r7, [pc, #128]	; (801d20c <_malloc_r+0xb0>)
 801d18c:	683b      	ldr	r3, [r7, #0]
 801d18e:	b923      	cbnz	r3, 801d19a <_malloc_r+0x3e>
 801d190:	4621      	mov	r1, r4
 801d192:	4630      	mov	r0, r6
 801d194:	f000 fb94 	bl	801d8c0 <_sbrk_r>
 801d198:	6038      	str	r0, [r7, #0]
 801d19a:	4629      	mov	r1, r5
 801d19c:	4630      	mov	r0, r6
 801d19e:	f000 fb8f 	bl	801d8c0 <_sbrk_r>
 801d1a2:	1c43      	adds	r3, r0, #1
 801d1a4:	d123      	bne.n	801d1ee <_malloc_r+0x92>
 801d1a6:	230c      	movs	r3, #12
 801d1a8:	6033      	str	r3, [r6, #0]
 801d1aa:	4630      	mov	r0, r6
 801d1ac:	f000 ff30 	bl	801e010 <__malloc_unlock>
 801d1b0:	e7e3      	b.n	801d17a <_malloc_r+0x1e>
 801d1b2:	6823      	ldr	r3, [r4, #0]
 801d1b4:	1b5b      	subs	r3, r3, r5
 801d1b6:	d417      	bmi.n	801d1e8 <_malloc_r+0x8c>
 801d1b8:	2b0b      	cmp	r3, #11
 801d1ba:	d903      	bls.n	801d1c4 <_malloc_r+0x68>
 801d1bc:	6023      	str	r3, [r4, #0]
 801d1be:	441c      	add	r4, r3
 801d1c0:	6025      	str	r5, [r4, #0]
 801d1c2:	e004      	b.n	801d1ce <_malloc_r+0x72>
 801d1c4:	6863      	ldr	r3, [r4, #4]
 801d1c6:	42a2      	cmp	r2, r4
 801d1c8:	bf0c      	ite	eq
 801d1ca:	600b      	streq	r3, [r1, #0]
 801d1cc:	6053      	strne	r3, [r2, #4]
 801d1ce:	4630      	mov	r0, r6
 801d1d0:	f000 ff1e 	bl	801e010 <__malloc_unlock>
 801d1d4:	f104 000b 	add.w	r0, r4, #11
 801d1d8:	1d23      	adds	r3, r4, #4
 801d1da:	f020 0007 	bic.w	r0, r0, #7
 801d1de:	1ac2      	subs	r2, r0, r3
 801d1e0:	d0cc      	beq.n	801d17c <_malloc_r+0x20>
 801d1e2:	1a1b      	subs	r3, r3, r0
 801d1e4:	50a3      	str	r3, [r4, r2]
 801d1e6:	e7c9      	b.n	801d17c <_malloc_r+0x20>
 801d1e8:	4622      	mov	r2, r4
 801d1ea:	6864      	ldr	r4, [r4, #4]
 801d1ec:	e7cc      	b.n	801d188 <_malloc_r+0x2c>
 801d1ee:	1cc4      	adds	r4, r0, #3
 801d1f0:	f024 0403 	bic.w	r4, r4, #3
 801d1f4:	42a0      	cmp	r0, r4
 801d1f6:	d0e3      	beq.n	801d1c0 <_malloc_r+0x64>
 801d1f8:	1a21      	subs	r1, r4, r0
 801d1fa:	4630      	mov	r0, r6
 801d1fc:	f000 fb60 	bl	801d8c0 <_sbrk_r>
 801d200:	3001      	adds	r0, #1
 801d202:	d1dd      	bne.n	801d1c0 <_malloc_r+0x64>
 801d204:	e7cf      	b.n	801d1a6 <_malloc_r+0x4a>
 801d206:	bf00      	nop
 801d208:	20012ec0 	.word	0x20012ec0
 801d20c:	20012ec4 	.word	0x20012ec4

0801d210 <__sfputc_r>:
 801d210:	6893      	ldr	r3, [r2, #8]
 801d212:	3b01      	subs	r3, #1
 801d214:	2b00      	cmp	r3, #0
 801d216:	b410      	push	{r4}
 801d218:	6093      	str	r3, [r2, #8]
 801d21a:	da08      	bge.n	801d22e <__sfputc_r+0x1e>
 801d21c:	6994      	ldr	r4, [r2, #24]
 801d21e:	42a3      	cmp	r3, r4
 801d220:	db01      	blt.n	801d226 <__sfputc_r+0x16>
 801d222:	290a      	cmp	r1, #10
 801d224:	d103      	bne.n	801d22e <__sfputc_r+0x1e>
 801d226:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d22a:	f000 bc6f 	b.w	801db0c <__swbuf_r>
 801d22e:	6813      	ldr	r3, [r2, #0]
 801d230:	1c58      	adds	r0, r3, #1
 801d232:	6010      	str	r0, [r2, #0]
 801d234:	7019      	strb	r1, [r3, #0]
 801d236:	4608      	mov	r0, r1
 801d238:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d23c:	4770      	bx	lr

0801d23e <__sfputs_r>:
 801d23e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d240:	4606      	mov	r6, r0
 801d242:	460f      	mov	r7, r1
 801d244:	4614      	mov	r4, r2
 801d246:	18d5      	adds	r5, r2, r3
 801d248:	42ac      	cmp	r4, r5
 801d24a:	d101      	bne.n	801d250 <__sfputs_r+0x12>
 801d24c:	2000      	movs	r0, #0
 801d24e:	e007      	b.n	801d260 <__sfputs_r+0x22>
 801d250:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d254:	463a      	mov	r2, r7
 801d256:	4630      	mov	r0, r6
 801d258:	f7ff ffda 	bl	801d210 <__sfputc_r>
 801d25c:	1c43      	adds	r3, r0, #1
 801d25e:	d1f3      	bne.n	801d248 <__sfputs_r+0xa>
 801d260:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801d264 <_vfiprintf_r>:
 801d264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d268:	460d      	mov	r5, r1
 801d26a:	b09d      	sub	sp, #116	; 0x74
 801d26c:	4614      	mov	r4, r2
 801d26e:	4698      	mov	r8, r3
 801d270:	4606      	mov	r6, r0
 801d272:	b118      	cbz	r0, 801d27c <_vfiprintf_r+0x18>
 801d274:	6983      	ldr	r3, [r0, #24]
 801d276:	b90b      	cbnz	r3, 801d27c <_vfiprintf_r+0x18>
 801d278:	f7ff fe22 	bl	801cec0 <__sinit>
 801d27c:	4b89      	ldr	r3, [pc, #548]	; (801d4a4 <_vfiprintf_r+0x240>)
 801d27e:	429d      	cmp	r5, r3
 801d280:	d11b      	bne.n	801d2ba <_vfiprintf_r+0x56>
 801d282:	6875      	ldr	r5, [r6, #4]
 801d284:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d286:	07d9      	lsls	r1, r3, #31
 801d288:	d405      	bmi.n	801d296 <_vfiprintf_r+0x32>
 801d28a:	89ab      	ldrh	r3, [r5, #12]
 801d28c:	059a      	lsls	r2, r3, #22
 801d28e:	d402      	bmi.n	801d296 <_vfiprintf_r+0x32>
 801d290:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d292:	f7ff feea 	bl	801d06a <__retarget_lock_acquire_recursive>
 801d296:	89ab      	ldrh	r3, [r5, #12]
 801d298:	071b      	lsls	r3, r3, #28
 801d29a:	d501      	bpl.n	801d2a0 <_vfiprintf_r+0x3c>
 801d29c:	692b      	ldr	r3, [r5, #16]
 801d29e:	b9eb      	cbnz	r3, 801d2dc <_vfiprintf_r+0x78>
 801d2a0:	4629      	mov	r1, r5
 801d2a2:	4630      	mov	r0, r6
 801d2a4:	f000 fc96 	bl	801dbd4 <__swsetup_r>
 801d2a8:	b1c0      	cbz	r0, 801d2dc <_vfiprintf_r+0x78>
 801d2aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d2ac:	07dc      	lsls	r4, r3, #31
 801d2ae:	d50e      	bpl.n	801d2ce <_vfiprintf_r+0x6a>
 801d2b0:	f04f 30ff 	mov.w	r0, #4294967295
 801d2b4:	b01d      	add	sp, #116	; 0x74
 801d2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2ba:	4b7b      	ldr	r3, [pc, #492]	; (801d4a8 <_vfiprintf_r+0x244>)
 801d2bc:	429d      	cmp	r5, r3
 801d2be:	d101      	bne.n	801d2c4 <_vfiprintf_r+0x60>
 801d2c0:	68b5      	ldr	r5, [r6, #8]
 801d2c2:	e7df      	b.n	801d284 <_vfiprintf_r+0x20>
 801d2c4:	4b79      	ldr	r3, [pc, #484]	; (801d4ac <_vfiprintf_r+0x248>)
 801d2c6:	429d      	cmp	r5, r3
 801d2c8:	bf08      	it	eq
 801d2ca:	68f5      	ldreq	r5, [r6, #12]
 801d2cc:	e7da      	b.n	801d284 <_vfiprintf_r+0x20>
 801d2ce:	89ab      	ldrh	r3, [r5, #12]
 801d2d0:	0598      	lsls	r0, r3, #22
 801d2d2:	d4ed      	bmi.n	801d2b0 <_vfiprintf_r+0x4c>
 801d2d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d2d6:	f7ff feca 	bl	801d06e <__retarget_lock_release_recursive>
 801d2da:	e7e9      	b.n	801d2b0 <_vfiprintf_r+0x4c>
 801d2dc:	2300      	movs	r3, #0
 801d2de:	9309      	str	r3, [sp, #36]	; 0x24
 801d2e0:	2320      	movs	r3, #32
 801d2e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801d2e6:	f8cd 800c 	str.w	r8, [sp, #12]
 801d2ea:	2330      	movs	r3, #48	; 0x30
 801d2ec:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801d4b0 <_vfiprintf_r+0x24c>
 801d2f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801d2f4:	f04f 0901 	mov.w	r9, #1
 801d2f8:	4623      	mov	r3, r4
 801d2fa:	469a      	mov	sl, r3
 801d2fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801d300:	b10a      	cbz	r2, 801d306 <_vfiprintf_r+0xa2>
 801d302:	2a25      	cmp	r2, #37	; 0x25
 801d304:	d1f9      	bne.n	801d2fa <_vfiprintf_r+0x96>
 801d306:	ebba 0b04 	subs.w	fp, sl, r4
 801d30a:	d00b      	beq.n	801d324 <_vfiprintf_r+0xc0>
 801d30c:	465b      	mov	r3, fp
 801d30e:	4622      	mov	r2, r4
 801d310:	4629      	mov	r1, r5
 801d312:	4630      	mov	r0, r6
 801d314:	f7ff ff93 	bl	801d23e <__sfputs_r>
 801d318:	3001      	adds	r0, #1
 801d31a:	f000 80aa 	beq.w	801d472 <_vfiprintf_r+0x20e>
 801d31e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d320:	445a      	add	r2, fp
 801d322:	9209      	str	r2, [sp, #36]	; 0x24
 801d324:	f89a 3000 	ldrb.w	r3, [sl]
 801d328:	2b00      	cmp	r3, #0
 801d32a:	f000 80a2 	beq.w	801d472 <_vfiprintf_r+0x20e>
 801d32e:	2300      	movs	r3, #0
 801d330:	f04f 32ff 	mov.w	r2, #4294967295
 801d334:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801d338:	f10a 0a01 	add.w	sl, sl, #1
 801d33c:	9304      	str	r3, [sp, #16]
 801d33e:	9307      	str	r3, [sp, #28]
 801d340:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801d344:	931a      	str	r3, [sp, #104]	; 0x68
 801d346:	4654      	mov	r4, sl
 801d348:	2205      	movs	r2, #5
 801d34a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d34e:	4858      	ldr	r0, [pc, #352]	; (801d4b0 <_vfiprintf_r+0x24c>)
 801d350:	f7e2 ff4e 	bl	80001f0 <memchr>
 801d354:	9a04      	ldr	r2, [sp, #16]
 801d356:	b9d8      	cbnz	r0, 801d390 <_vfiprintf_r+0x12c>
 801d358:	06d1      	lsls	r1, r2, #27
 801d35a:	bf44      	itt	mi
 801d35c:	2320      	movmi	r3, #32
 801d35e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d362:	0713      	lsls	r3, r2, #28
 801d364:	bf44      	itt	mi
 801d366:	232b      	movmi	r3, #43	; 0x2b
 801d368:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d36c:	f89a 3000 	ldrb.w	r3, [sl]
 801d370:	2b2a      	cmp	r3, #42	; 0x2a
 801d372:	d015      	beq.n	801d3a0 <_vfiprintf_r+0x13c>
 801d374:	9a07      	ldr	r2, [sp, #28]
 801d376:	4654      	mov	r4, sl
 801d378:	2000      	movs	r0, #0
 801d37a:	f04f 0c0a 	mov.w	ip, #10
 801d37e:	4621      	mov	r1, r4
 801d380:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d384:	3b30      	subs	r3, #48	; 0x30
 801d386:	2b09      	cmp	r3, #9
 801d388:	d94e      	bls.n	801d428 <_vfiprintf_r+0x1c4>
 801d38a:	b1b0      	cbz	r0, 801d3ba <_vfiprintf_r+0x156>
 801d38c:	9207      	str	r2, [sp, #28]
 801d38e:	e014      	b.n	801d3ba <_vfiprintf_r+0x156>
 801d390:	eba0 0308 	sub.w	r3, r0, r8
 801d394:	fa09 f303 	lsl.w	r3, r9, r3
 801d398:	4313      	orrs	r3, r2
 801d39a:	9304      	str	r3, [sp, #16]
 801d39c:	46a2      	mov	sl, r4
 801d39e:	e7d2      	b.n	801d346 <_vfiprintf_r+0xe2>
 801d3a0:	9b03      	ldr	r3, [sp, #12]
 801d3a2:	1d19      	adds	r1, r3, #4
 801d3a4:	681b      	ldr	r3, [r3, #0]
 801d3a6:	9103      	str	r1, [sp, #12]
 801d3a8:	2b00      	cmp	r3, #0
 801d3aa:	bfbb      	ittet	lt
 801d3ac:	425b      	neglt	r3, r3
 801d3ae:	f042 0202 	orrlt.w	r2, r2, #2
 801d3b2:	9307      	strge	r3, [sp, #28]
 801d3b4:	9307      	strlt	r3, [sp, #28]
 801d3b6:	bfb8      	it	lt
 801d3b8:	9204      	strlt	r2, [sp, #16]
 801d3ba:	7823      	ldrb	r3, [r4, #0]
 801d3bc:	2b2e      	cmp	r3, #46	; 0x2e
 801d3be:	d10c      	bne.n	801d3da <_vfiprintf_r+0x176>
 801d3c0:	7863      	ldrb	r3, [r4, #1]
 801d3c2:	2b2a      	cmp	r3, #42	; 0x2a
 801d3c4:	d135      	bne.n	801d432 <_vfiprintf_r+0x1ce>
 801d3c6:	9b03      	ldr	r3, [sp, #12]
 801d3c8:	1d1a      	adds	r2, r3, #4
 801d3ca:	681b      	ldr	r3, [r3, #0]
 801d3cc:	9203      	str	r2, [sp, #12]
 801d3ce:	2b00      	cmp	r3, #0
 801d3d0:	bfb8      	it	lt
 801d3d2:	f04f 33ff 	movlt.w	r3, #4294967295
 801d3d6:	3402      	adds	r4, #2
 801d3d8:	9305      	str	r3, [sp, #20]
 801d3da:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801d4c0 <_vfiprintf_r+0x25c>
 801d3de:	7821      	ldrb	r1, [r4, #0]
 801d3e0:	2203      	movs	r2, #3
 801d3e2:	4650      	mov	r0, sl
 801d3e4:	f7e2 ff04 	bl	80001f0 <memchr>
 801d3e8:	b140      	cbz	r0, 801d3fc <_vfiprintf_r+0x198>
 801d3ea:	2340      	movs	r3, #64	; 0x40
 801d3ec:	eba0 000a 	sub.w	r0, r0, sl
 801d3f0:	fa03 f000 	lsl.w	r0, r3, r0
 801d3f4:	9b04      	ldr	r3, [sp, #16]
 801d3f6:	4303      	orrs	r3, r0
 801d3f8:	3401      	adds	r4, #1
 801d3fa:	9304      	str	r3, [sp, #16]
 801d3fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d400:	482c      	ldr	r0, [pc, #176]	; (801d4b4 <_vfiprintf_r+0x250>)
 801d402:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801d406:	2206      	movs	r2, #6
 801d408:	f7e2 fef2 	bl	80001f0 <memchr>
 801d40c:	2800      	cmp	r0, #0
 801d40e:	d03f      	beq.n	801d490 <_vfiprintf_r+0x22c>
 801d410:	4b29      	ldr	r3, [pc, #164]	; (801d4b8 <_vfiprintf_r+0x254>)
 801d412:	bb1b      	cbnz	r3, 801d45c <_vfiprintf_r+0x1f8>
 801d414:	9b03      	ldr	r3, [sp, #12]
 801d416:	3307      	adds	r3, #7
 801d418:	f023 0307 	bic.w	r3, r3, #7
 801d41c:	3308      	adds	r3, #8
 801d41e:	9303      	str	r3, [sp, #12]
 801d420:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d422:	443b      	add	r3, r7
 801d424:	9309      	str	r3, [sp, #36]	; 0x24
 801d426:	e767      	b.n	801d2f8 <_vfiprintf_r+0x94>
 801d428:	fb0c 3202 	mla	r2, ip, r2, r3
 801d42c:	460c      	mov	r4, r1
 801d42e:	2001      	movs	r0, #1
 801d430:	e7a5      	b.n	801d37e <_vfiprintf_r+0x11a>
 801d432:	2300      	movs	r3, #0
 801d434:	3401      	adds	r4, #1
 801d436:	9305      	str	r3, [sp, #20]
 801d438:	4619      	mov	r1, r3
 801d43a:	f04f 0c0a 	mov.w	ip, #10
 801d43e:	4620      	mov	r0, r4
 801d440:	f810 2b01 	ldrb.w	r2, [r0], #1
 801d444:	3a30      	subs	r2, #48	; 0x30
 801d446:	2a09      	cmp	r2, #9
 801d448:	d903      	bls.n	801d452 <_vfiprintf_r+0x1ee>
 801d44a:	2b00      	cmp	r3, #0
 801d44c:	d0c5      	beq.n	801d3da <_vfiprintf_r+0x176>
 801d44e:	9105      	str	r1, [sp, #20]
 801d450:	e7c3      	b.n	801d3da <_vfiprintf_r+0x176>
 801d452:	fb0c 2101 	mla	r1, ip, r1, r2
 801d456:	4604      	mov	r4, r0
 801d458:	2301      	movs	r3, #1
 801d45a:	e7f0      	b.n	801d43e <_vfiprintf_r+0x1da>
 801d45c:	ab03      	add	r3, sp, #12
 801d45e:	9300      	str	r3, [sp, #0]
 801d460:	462a      	mov	r2, r5
 801d462:	4b16      	ldr	r3, [pc, #88]	; (801d4bc <_vfiprintf_r+0x258>)
 801d464:	a904      	add	r1, sp, #16
 801d466:	4630      	mov	r0, r6
 801d468:	f3af 8000 	nop.w
 801d46c:	4607      	mov	r7, r0
 801d46e:	1c78      	adds	r0, r7, #1
 801d470:	d1d6      	bne.n	801d420 <_vfiprintf_r+0x1bc>
 801d472:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d474:	07d9      	lsls	r1, r3, #31
 801d476:	d405      	bmi.n	801d484 <_vfiprintf_r+0x220>
 801d478:	89ab      	ldrh	r3, [r5, #12]
 801d47a:	059a      	lsls	r2, r3, #22
 801d47c:	d402      	bmi.n	801d484 <_vfiprintf_r+0x220>
 801d47e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d480:	f7ff fdf5 	bl	801d06e <__retarget_lock_release_recursive>
 801d484:	89ab      	ldrh	r3, [r5, #12]
 801d486:	065b      	lsls	r3, r3, #25
 801d488:	f53f af12 	bmi.w	801d2b0 <_vfiprintf_r+0x4c>
 801d48c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d48e:	e711      	b.n	801d2b4 <_vfiprintf_r+0x50>
 801d490:	ab03      	add	r3, sp, #12
 801d492:	9300      	str	r3, [sp, #0]
 801d494:	462a      	mov	r2, r5
 801d496:	4b09      	ldr	r3, [pc, #36]	; (801d4bc <_vfiprintf_r+0x258>)
 801d498:	a904      	add	r1, sp, #16
 801d49a:	4630      	mov	r0, r6
 801d49c:	f000 f880 	bl	801d5a0 <_printf_i>
 801d4a0:	e7e4      	b.n	801d46c <_vfiprintf_r+0x208>
 801d4a2:	bf00      	nop
 801d4a4:	08021cbc 	.word	0x08021cbc
 801d4a8:	08021cdc 	.word	0x08021cdc
 801d4ac:	08021c9c 	.word	0x08021c9c
 801d4b0:	08021d00 	.word	0x08021d00
 801d4b4:	08021d0a 	.word	0x08021d0a
 801d4b8:	00000000 	.word	0x00000000
 801d4bc:	0801d23f 	.word	0x0801d23f
 801d4c0:	08021d06 	.word	0x08021d06

0801d4c4 <_printf_common>:
 801d4c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d4c8:	4616      	mov	r6, r2
 801d4ca:	4699      	mov	r9, r3
 801d4cc:	688a      	ldr	r2, [r1, #8]
 801d4ce:	690b      	ldr	r3, [r1, #16]
 801d4d0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801d4d4:	4293      	cmp	r3, r2
 801d4d6:	bfb8      	it	lt
 801d4d8:	4613      	movlt	r3, r2
 801d4da:	6033      	str	r3, [r6, #0]
 801d4dc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801d4e0:	4607      	mov	r7, r0
 801d4e2:	460c      	mov	r4, r1
 801d4e4:	b10a      	cbz	r2, 801d4ea <_printf_common+0x26>
 801d4e6:	3301      	adds	r3, #1
 801d4e8:	6033      	str	r3, [r6, #0]
 801d4ea:	6823      	ldr	r3, [r4, #0]
 801d4ec:	0699      	lsls	r1, r3, #26
 801d4ee:	bf42      	ittt	mi
 801d4f0:	6833      	ldrmi	r3, [r6, #0]
 801d4f2:	3302      	addmi	r3, #2
 801d4f4:	6033      	strmi	r3, [r6, #0]
 801d4f6:	6825      	ldr	r5, [r4, #0]
 801d4f8:	f015 0506 	ands.w	r5, r5, #6
 801d4fc:	d106      	bne.n	801d50c <_printf_common+0x48>
 801d4fe:	f104 0a19 	add.w	sl, r4, #25
 801d502:	68e3      	ldr	r3, [r4, #12]
 801d504:	6832      	ldr	r2, [r6, #0]
 801d506:	1a9b      	subs	r3, r3, r2
 801d508:	42ab      	cmp	r3, r5
 801d50a:	dc26      	bgt.n	801d55a <_printf_common+0x96>
 801d50c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801d510:	1e13      	subs	r3, r2, #0
 801d512:	6822      	ldr	r2, [r4, #0]
 801d514:	bf18      	it	ne
 801d516:	2301      	movne	r3, #1
 801d518:	0692      	lsls	r2, r2, #26
 801d51a:	d42b      	bmi.n	801d574 <_printf_common+0xb0>
 801d51c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801d520:	4649      	mov	r1, r9
 801d522:	4638      	mov	r0, r7
 801d524:	47c0      	blx	r8
 801d526:	3001      	adds	r0, #1
 801d528:	d01e      	beq.n	801d568 <_printf_common+0xa4>
 801d52a:	6823      	ldr	r3, [r4, #0]
 801d52c:	68e5      	ldr	r5, [r4, #12]
 801d52e:	6832      	ldr	r2, [r6, #0]
 801d530:	f003 0306 	and.w	r3, r3, #6
 801d534:	2b04      	cmp	r3, #4
 801d536:	bf08      	it	eq
 801d538:	1aad      	subeq	r5, r5, r2
 801d53a:	68a3      	ldr	r3, [r4, #8]
 801d53c:	6922      	ldr	r2, [r4, #16]
 801d53e:	bf0c      	ite	eq
 801d540:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801d544:	2500      	movne	r5, #0
 801d546:	4293      	cmp	r3, r2
 801d548:	bfc4      	itt	gt
 801d54a:	1a9b      	subgt	r3, r3, r2
 801d54c:	18ed      	addgt	r5, r5, r3
 801d54e:	2600      	movs	r6, #0
 801d550:	341a      	adds	r4, #26
 801d552:	42b5      	cmp	r5, r6
 801d554:	d11a      	bne.n	801d58c <_printf_common+0xc8>
 801d556:	2000      	movs	r0, #0
 801d558:	e008      	b.n	801d56c <_printf_common+0xa8>
 801d55a:	2301      	movs	r3, #1
 801d55c:	4652      	mov	r2, sl
 801d55e:	4649      	mov	r1, r9
 801d560:	4638      	mov	r0, r7
 801d562:	47c0      	blx	r8
 801d564:	3001      	adds	r0, #1
 801d566:	d103      	bne.n	801d570 <_printf_common+0xac>
 801d568:	f04f 30ff 	mov.w	r0, #4294967295
 801d56c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d570:	3501      	adds	r5, #1
 801d572:	e7c6      	b.n	801d502 <_printf_common+0x3e>
 801d574:	18e1      	adds	r1, r4, r3
 801d576:	1c5a      	adds	r2, r3, #1
 801d578:	2030      	movs	r0, #48	; 0x30
 801d57a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801d57e:	4422      	add	r2, r4
 801d580:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801d584:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801d588:	3302      	adds	r3, #2
 801d58a:	e7c7      	b.n	801d51c <_printf_common+0x58>
 801d58c:	2301      	movs	r3, #1
 801d58e:	4622      	mov	r2, r4
 801d590:	4649      	mov	r1, r9
 801d592:	4638      	mov	r0, r7
 801d594:	47c0      	blx	r8
 801d596:	3001      	adds	r0, #1
 801d598:	d0e6      	beq.n	801d568 <_printf_common+0xa4>
 801d59a:	3601      	adds	r6, #1
 801d59c:	e7d9      	b.n	801d552 <_printf_common+0x8e>
	...

0801d5a0 <_printf_i>:
 801d5a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d5a4:	460c      	mov	r4, r1
 801d5a6:	4691      	mov	r9, r2
 801d5a8:	7e27      	ldrb	r7, [r4, #24]
 801d5aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d5ac:	2f78      	cmp	r7, #120	; 0x78
 801d5ae:	4680      	mov	r8, r0
 801d5b0:	469a      	mov	sl, r3
 801d5b2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801d5b6:	d807      	bhi.n	801d5c8 <_printf_i+0x28>
 801d5b8:	2f62      	cmp	r7, #98	; 0x62
 801d5ba:	d80a      	bhi.n	801d5d2 <_printf_i+0x32>
 801d5bc:	2f00      	cmp	r7, #0
 801d5be:	f000 80d8 	beq.w	801d772 <_printf_i+0x1d2>
 801d5c2:	2f58      	cmp	r7, #88	; 0x58
 801d5c4:	f000 80a3 	beq.w	801d70e <_printf_i+0x16e>
 801d5c8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801d5cc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801d5d0:	e03a      	b.n	801d648 <_printf_i+0xa8>
 801d5d2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801d5d6:	2b15      	cmp	r3, #21
 801d5d8:	d8f6      	bhi.n	801d5c8 <_printf_i+0x28>
 801d5da:	a001      	add	r0, pc, #4	; (adr r0, 801d5e0 <_printf_i+0x40>)
 801d5dc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 801d5e0:	0801d639 	.word	0x0801d639
 801d5e4:	0801d64d 	.word	0x0801d64d
 801d5e8:	0801d5c9 	.word	0x0801d5c9
 801d5ec:	0801d5c9 	.word	0x0801d5c9
 801d5f0:	0801d5c9 	.word	0x0801d5c9
 801d5f4:	0801d5c9 	.word	0x0801d5c9
 801d5f8:	0801d64d 	.word	0x0801d64d
 801d5fc:	0801d5c9 	.word	0x0801d5c9
 801d600:	0801d5c9 	.word	0x0801d5c9
 801d604:	0801d5c9 	.word	0x0801d5c9
 801d608:	0801d5c9 	.word	0x0801d5c9
 801d60c:	0801d759 	.word	0x0801d759
 801d610:	0801d67d 	.word	0x0801d67d
 801d614:	0801d73b 	.word	0x0801d73b
 801d618:	0801d5c9 	.word	0x0801d5c9
 801d61c:	0801d5c9 	.word	0x0801d5c9
 801d620:	0801d77b 	.word	0x0801d77b
 801d624:	0801d5c9 	.word	0x0801d5c9
 801d628:	0801d67d 	.word	0x0801d67d
 801d62c:	0801d5c9 	.word	0x0801d5c9
 801d630:	0801d5c9 	.word	0x0801d5c9
 801d634:	0801d743 	.word	0x0801d743
 801d638:	680b      	ldr	r3, [r1, #0]
 801d63a:	1d1a      	adds	r2, r3, #4
 801d63c:	681b      	ldr	r3, [r3, #0]
 801d63e:	600a      	str	r2, [r1, #0]
 801d640:	f104 0642 	add.w	r6, r4, #66	; 0x42
 801d644:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801d648:	2301      	movs	r3, #1
 801d64a:	e0a3      	b.n	801d794 <_printf_i+0x1f4>
 801d64c:	6825      	ldr	r5, [r4, #0]
 801d64e:	6808      	ldr	r0, [r1, #0]
 801d650:	062e      	lsls	r6, r5, #24
 801d652:	f100 0304 	add.w	r3, r0, #4
 801d656:	d50a      	bpl.n	801d66e <_printf_i+0xce>
 801d658:	6805      	ldr	r5, [r0, #0]
 801d65a:	600b      	str	r3, [r1, #0]
 801d65c:	2d00      	cmp	r5, #0
 801d65e:	da03      	bge.n	801d668 <_printf_i+0xc8>
 801d660:	232d      	movs	r3, #45	; 0x2d
 801d662:	426d      	negs	r5, r5
 801d664:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d668:	485e      	ldr	r0, [pc, #376]	; (801d7e4 <_printf_i+0x244>)
 801d66a:	230a      	movs	r3, #10
 801d66c:	e019      	b.n	801d6a2 <_printf_i+0x102>
 801d66e:	f015 0f40 	tst.w	r5, #64	; 0x40
 801d672:	6805      	ldr	r5, [r0, #0]
 801d674:	600b      	str	r3, [r1, #0]
 801d676:	bf18      	it	ne
 801d678:	b22d      	sxthne	r5, r5
 801d67a:	e7ef      	b.n	801d65c <_printf_i+0xbc>
 801d67c:	680b      	ldr	r3, [r1, #0]
 801d67e:	6825      	ldr	r5, [r4, #0]
 801d680:	1d18      	adds	r0, r3, #4
 801d682:	6008      	str	r0, [r1, #0]
 801d684:	0628      	lsls	r0, r5, #24
 801d686:	d501      	bpl.n	801d68c <_printf_i+0xec>
 801d688:	681d      	ldr	r5, [r3, #0]
 801d68a:	e002      	b.n	801d692 <_printf_i+0xf2>
 801d68c:	0669      	lsls	r1, r5, #25
 801d68e:	d5fb      	bpl.n	801d688 <_printf_i+0xe8>
 801d690:	881d      	ldrh	r5, [r3, #0]
 801d692:	4854      	ldr	r0, [pc, #336]	; (801d7e4 <_printf_i+0x244>)
 801d694:	2f6f      	cmp	r7, #111	; 0x6f
 801d696:	bf0c      	ite	eq
 801d698:	2308      	moveq	r3, #8
 801d69a:	230a      	movne	r3, #10
 801d69c:	2100      	movs	r1, #0
 801d69e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801d6a2:	6866      	ldr	r6, [r4, #4]
 801d6a4:	60a6      	str	r6, [r4, #8]
 801d6a6:	2e00      	cmp	r6, #0
 801d6a8:	bfa2      	ittt	ge
 801d6aa:	6821      	ldrge	r1, [r4, #0]
 801d6ac:	f021 0104 	bicge.w	r1, r1, #4
 801d6b0:	6021      	strge	r1, [r4, #0]
 801d6b2:	b90d      	cbnz	r5, 801d6b8 <_printf_i+0x118>
 801d6b4:	2e00      	cmp	r6, #0
 801d6b6:	d04d      	beq.n	801d754 <_printf_i+0x1b4>
 801d6b8:	4616      	mov	r6, r2
 801d6ba:	fbb5 f1f3 	udiv	r1, r5, r3
 801d6be:	fb03 5711 	mls	r7, r3, r1, r5
 801d6c2:	5dc7      	ldrb	r7, [r0, r7]
 801d6c4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d6c8:	462f      	mov	r7, r5
 801d6ca:	42bb      	cmp	r3, r7
 801d6cc:	460d      	mov	r5, r1
 801d6ce:	d9f4      	bls.n	801d6ba <_printf_i+0x11a>
 801d6d0:	2b08      	cmp	r3, #8
 801d6d2:	d10b      	bne.n	801d6ec <_printf_i+0x14c>
 801d6d4:	6823      	ldr	r3, [r4, #0]
 801d6d6:	07df      	lsls	r7, r3, #31
 801d6d8:	d508      	bpl.n	801d6ec <_printf_i+0x14c>
 801d6da:	6923      	ldr	r3, [r4, #16]
 801d6dc:	6861      	ldr	r1, [r4, #4]
 801d6de:	4299      	cmp	r1, r3
 801d6e0:	bfde      	ittt	le
 801d6e2:	2330      	movle	r3, #48	; 0x30
 801d6e4:	f806 3c01 	strble.w	r3, [r6, #-1]
 801d6e8:	f106 36ff 	addle.w	r6, r6, #4294967295
 801d6ec:	1b92      	subs	r2, r2, r6
 801d6ee:	6122      	str	r2, [r4, #16]
 801d6f0:	f8cd a000 	str.w	sl, [sp]
 801d6f4:	464b      	mov	r3, r9
 801d6f6:	aa03      	add	r2, sp, #12
 801d6f8:	4621      	mov	r1, r4
 801d6fa:	4640      	mov	r0, r8
 801d6fc:	f7ff fee2 	bl	801d4c4 <_printf_common>
 801d700:	3001      	adds	r0, #1
 801d702:	d14c      	bne.n	801d79e <_printf_i+0x1fe>
 801d704:	f04f 30ff 	mov.w	r0, #4294967295
 801d708:	b004      	add	sp, #16
 801d70a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d70e:	4835      	ldr	r0, [pc, #212]	; (801d7e4 <_printf_i+0x244>)
 801d710:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801d714:	6823      	ldr	r3, [r4, #0]
 801d716:	680e      	ldr	r6, [r1, #0]
 801d718:	061f      	lsls	r7, r3, #24
 801d71a:	f856 5b04 	ldr.w	r5, [r6], #4
 801d71e:	600e      	str	r6, [r1, #0]
 801d720:	d514      	bpl.n	801d74c <_printf_i+0x1ac>
 801d722:	07d9      	lsls	r1, r3, #31
 801d724:	bf44      	itt	mi
 801d726:	f043 0320 	orrmi.w	r3, r3, #32
 801d72a:	6023      	strmi	r3, [r4, #0]
 801d72c:	b91d      	cbnz	r5, 801d736 <_printf_i+0x196>
 801d72e:	6823      	ldr	r3, [r4, #0]
 801d730:	f023 0320 	bic.w	r3, r3, #32
 801d734:	6023      	str	r3, [r4, #0]
 801d736:	2310      	movs	r3, #16
 801d738:	e7b0      	b.n	801d69c <_printf_i+0xfc>
 801d73a:	6823      	ldr	r3, [r4, #0]
 801d73c:	f043 0320 	orr.w	r3, r3, #32
 801d740:	6023      	str	r3, [r4, #0]
 801d742:	2378      	movs	r3, #120	; 0x78
 801d744:	4828      	ldr	r0, [pc, #160]	; (801d7e8 <_printf_i+0x248>)
 801d746:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801d74a:	e7e3      	b.n	801d714 <_printf_i+0x174>
 801d74c:	065e      	lsls	r6, r3, #25
 801d74e:	bf48      	it	mi
 801d750:	b2ad      	uxthmi	r5, r5
 801d752:	e7e6      	b.n	801d722 <_printf_i+0x182>
 801d754:	4616      	mov	r6, r2
 801d756:	e7bb      	b.n	801d6d0 <_printf_i+0x130>
 801d758:	680b      	ldr	r3, [r1, #0]
 801d75a:	6826      	ldr	r6, [r4, #0]
 801d75c:	6960      	ldr	r0, [r4, #20]
 801d75e:	1d1d      	adds	r5, r3, #4
 801d760:	600d      	str	r5, [r1, #0]
 801d762:	0635      	lsls	r5, r6, #24
 801d764:	681b      	ldr	r3, [r3, #0]
 801d766:	d501      	bpl.n	801d76c <_printf_i+0x1cc>
 801d768:	6018      	str	r0, [r3, #0]
 801d76a:	e002      	b.n	801d772 <_printf_i+0x1d2>
 801d76c:	0671      	lsls	r1, r6, #25
 801d76e:	d5fb      	bpl.n	801d768 <_printf_i+0x1c8>
 801d770:	8018      	strh	r0, [r3, #0]
 801d772:	2300      	movs	r3, #0
 801d774:	6123      	str	r3, [r4, #16]
 801d776:	4616      	mov	r6, r2
 801d778:	e7ba      	b.n	801d6f0 <_printf_i+0x150>
 801d77a:	680b      	ldr	r3, [r1, #0]
 801d77c:	1d1a      	adds	r2, r3, #4
 801d77e:	600a      	str	r2, [r1, #0]
 801d780:	681e      	ldr	r6, [r3, #0]
 801d782:	6862      	ldr	r2, [r4, #4]
 801d784:	2100      	movs	r1, #0
 801d786:	4630      	mov	r0, r6
 801d788:	f7e2 fd32 	bl	80001f0 <memchr>
 801d78c:	b108      	cbz	r0, 801d792 <_printf_i+0x1f2>
 801d78e:	1b80      	subs	r0, r0, r6
 801d790:	6060      	str	r0, [r4, #4]
 801d792:	6863      	ldr	r3, [r4, #4]
 801d794:	6123      	str	r3, [r4, #16]
 801d796:	2300      	movs	r3, #0
 801d798:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d79c:	e7a8      	b.n	801d6f0 <_printf_i+0x150>
 801d79e:	6923      	ldr	r3, [r4, #16]
 801d7a0:	4632      	mov	r2, r6
 801d7a2:	4649      	mov	r1, r9
 801d7a4:	4640      	mov	r0, r8
 801d7a6:	47d0      	blx	sl
 801d7a8:	3001      	adds	r0, #1
 801d7aa:	d0ab      	beq.n	801d704 <_printf_i+0x164>
 801d7ac:	6823      	ldr	r3, [r4, #0]
 801d7ae:	079b      	lsls	r3, r3, #30
 801d7b0:	d413      	bmi.n	801d7da <_printf_i+0x23a>
 801d7b2:	68e0      	ldr	r0, [r4, #12]
 801d7b4:	9b03      	ldr	r3, [sp, #12]
 801d7b6:	4298      	cmp	r0, r3
 801d7b8:	bfb8      	it	lt
 801d7ba:	4618      	movlt	r0, r3
 801d7bc:	e7a4      	b.n	801d708 <_printf_i+0x168>
 801d7be:	2301      	movs	r3, #1
 801d7c0:	4632      	mov	r2, r6
 801d7c2:	4649      	mov	r1, r9
 801d7c4:	4640      	mov	r0, r8
 801d7c6:	47d0      	blx	sl
 801d7c8:	3001      	adds	r0, #1
 801d7ca:	d09b      	beq.n	801d704 <_printf_i+0x164>
 801d7cc:	3501      	adds	r5, #1
 801d7ce:	68e3      	ldr	r3, [r4, #12]
 801d7d0:	9903      	ldr	r1, [sp, #12]
 801d7d2:	1a5b      	subs	r3, r3, r1
 801d7d4:	42ab      	cmp	r3, r5
 801d7d6:	dcf2      	bgt.n	801d7be <_printf_i+0x21e>
 801d7d8:	e7eb      	b.n	801d7b2 <_printf_i+0x212>
 801d7da:	2500      	movs	r5, #0
 801d7dc:	f104 0619 	add.w	r6, r4, #25
 801d7e0:	e7f5      	b.n	801d7ce <_printf_i+0x22e>
 801d7e2:	bf00      	nop
 801d7e4:	08021d11 	.word	0x08021d11
 801d7e8:	08021d22 	.word	0x08021d22

0801d7ec <cleanup_glue>:
 801d7ec:	b538      	push	{r3, r4, r5, lr}
 801d7ee:	460c      	mov	r4, r1
 801d7f0:	6809      	ldr	r1, [r1, #0]
 801d7f2:	4605      	mov	r5, r0
 801d7f4:	b109      	cbz	r1, 801d7fa <cleanup_glue+0xe>
 801d7f6:	f7ff fff9 	bl	801d7ec <cleanup_glue>
 801d7fa:	4621      	mov	r1, r4
 801d7fc:	4628      	mov	r0, r5
 801d7fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d802:	f7ff bc5b 	b.w	801d0bc <_free_r>
	...

0801d808 <_reclaim_reent>:
 801d808:	4b2c      	ldr	r3, [pc, #176]	; (801d8bc <_reclaim_reent+0xb4>)
 801d80a:	681b      	ldr	r3, [r3, #0]
 801d80c:	4283      	cmp	r3, r0
 801d80e:	b570      	push	{r4, r5, r6, lr}
 801d810:	4604      	mov	r4, r0
 801d812:	d051      	beq.n	801d8b8 <_reclaim_reent+0xb0>
 801d814:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801d816:	b143      	cbz	r3, 801d82a <_reclaim_reent+0x22>
 801d818:	68db      	ldr	r3, [r3, #12]
 801d81a:	2b00      	cmp	r3, #0
 801d81c:	d14a      	bne.n	801d8b4 <_reclaim_reent+0xac>
 801d81e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d820:	6819      	ldr	r1, [r3, #0]
 801d822:	b111      	cbz	r1, 801d82a <_reclaim_reent+0x22>
 801d824:	4620      	mov	r0, r4
 801d826:	f7ff fc49 	bl	801d0bc <_free_r>
 801d82a:	6961      	ldr	r1, [r4, #20]
 801d82c:	b111      	cbz	r1, 801d834 <_reclaim_reent+0x2c>
 801d82e:	4620      	mov	r0, r4
 801d830:	f7ff fc44 	bl	801d0bc <_free_r>
 801d834:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801d836:	b111      	cbz	r1, 801d83e <_reclaim_reent+0x36>
 801d838:	4620      	mov	r0, r4
 801d83a:	f7ff fc3f 	bl	801d0bc <_free_r>
 801d83e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801d840:	b111      	cbz	r1, 801d848 <_reclaim_reent+0x40>
 801d842:	4620      	mov	r0, r4
 801d844:	f7ff fc3a 	bl	801d0bc <_free_r>
 801d848:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 801d84a:	b111      	cbz	r1, 801d852 <_reclaim_reent+0x4a>
 801d84c:	4620      	mov	r0, r4
 801d84e:	f7ff fc35 	bl	801d0bc <_free_r>
 801d852:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d854:	b111      	cbz	r1, 801d85c <_reclaim_reent+0x54>
 801d856:	4620      	mov	r0, r4
 801d858:	f7ff fc30 	bl	801d0bc <_free_r>
 801d85c:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 801d85e:	b111      	cbz	r1, 801d866 <_reclaim_reent+0x5e>
 801d860:	4620      	mov	r0, r4
 801d862:	f7ff fc2b 	bl	801d0bc <_free_r>
 801d866:	6da1      	ldr	r1, [r4, #88]	; 0x58
 801d868:	b111      	cbz	r1, 801d870 <_reclaim_reent+0x68>
 801d86a:	4620      	mov	r0, r4
 801d86c:	f7ff fc26 	bl	801d0bc <_free_r>
 801d870:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d872:	b111      	cbz	r1, 801d87a <_reclaim_reent+0x72>
 801d874:	4620      	mov	r0, r4
 801d876:	f7ff fc21 	bl	801d0bc <_free_r>
 801d87a:	69a3      	ldr	r3, [r4, #24]
 801d87c:	b1e3      	cbz	r3, 801d8b8 <_reclaim_reent+0xb0>
 801d87e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801d880:	4620      	mov	r0, r4
 801d882:	4798      	blx	r3
 801d884:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801d886:	b1b9      	cbz	r1, 801d8b8 <_reclaim_reent+0xb0>
 801d888:	4620      	mov	r0, r4
 801d88a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d88e:	f7ff bfad 	b.w	801d7ec <cleanup_glue>
 801d892:	5949      	ldr	r1, [r1, r5]
 801d894:	b941      	cbnz	r1, 801d8a8 <_reclaim_reent+0xa0>
 801d896:	3504      	adds	r5, #4
 801d898:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801d89a:	2d80      	cmp	r5, #128	; 0x80
 801d89c:	68d9      	ldr	r1, [r3, #12]
 801d89e:	d1f8      	bne.n	801d892 <_reclaim_reent+0x8a>
 801d8a0:	4620      	mov	r0, r4
 801d8a2:	f7ff fc0b 	bl	801d0bc <_free_r>
 801d8a6:	e7ba      	b.n	801d81e <_reclaim_reent+0x16>
 801d8a8:	680e      	ldr	r6, [r1, #0]
 801d8aa:	4620      	mov	r0, r4
 801d8ac:	f7ff fc06 	bl	801d0bc <_free_r>
 801d8b0:	4631      	mov	r1, r6
 801d8b2:	e7ef      	b.n	801d894 <_reclaim_reent+0x8c>
 801d8b4:	2500      	movs	r5, #0
 801d8b6:	e7ef      	b.n	801d898 <_reclaim_reent+0x90>
 801d8b8:	bd70      	pop	{r4, r5, r6, pc}
 801d8ba:	bf00      	nop
 801d8bc:	200000fc 	.word	0x200000fc

0801d8c0 <_sbrk_r>:
 801d8c0:	b538      	push	{r3, r4, r5, lr}
 801d8c2:	4d06      	ldr	r5, [pc, #24]	; (801d8dc <_sbrk_r+0x1c>)
 801d8c4:	2300      	movs	r3, #0
 801d8c6:	4604      	mov	r4, r0
 801d8c8:	4608      	mov	r0, r1
 801d8ca:	602b      	str	r3, [r5, #0]
 801d8cc:	f7e4 fa5e 	bl	8001d8c <_sbrk>
 801d8d0:	1c43      	adds	r3, r0, #1
 801d8d2:	d102      	bne.n	801d8da <_sbrk_r+0x1a>
 801d8d4:	682b      	ldr	r3, [r5, #0]
 801d8d6:	b103      	cbz	r3, 801d8da <_sbrk_r+0x1a>
 801d8d8:	6023      	str	r3, [r4, #0]
 801d8da:	bd38      	pop	{r3, r4, r5, pc}
 801d8dc:	20013318 	.word	0x20013318

0801d8e0 <_raise_r>:
 801d8e0:	291f      	cmp	r1, #31
 801d8e2:	b538      	push	{r3, r4, r5, lr}
 801d8e4:	4604      	mov	r4, r0
 801d8e6:	460d      	mov	r5, r1
 801d8e8:	d904      	bls.n	801d8f4 <_raise_r+0x14>
 801d8ea:	2316      	movs	r3, #22
 801d8ec:	6003      	str	r3, [r0, #0]
 801d8ee:	f04f 30ff 	mov.w	r0, #4294967295
 801d8f2:	bd38      	pop	{r3, r4, r5, pc}
 801d8f4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801d8f6:	b112      	cbz	r2, 801d8fe <_raise_r+0x1e>
 801d8f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d8fc:	b94b      	cbnz	r3, 801d912 <_raise_r+0x32>
 801d8fe:	4620      	mov	r0, r4
 801d900:	f000 f830 	bl	801d964 <_getpid_r>
 801d904:	462a      	mov	r2, r5
 801d906:	4601      	mov	r1, r0
 801d908:	4620      	mov	r0, r4
 801d90a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d90e:	f000 b817 	b.w	801d940 <_kill_r>
 801d912:	2b01      	cmp	r3, #1
 801d914:	d00a      	beq.n	801d92c <_raise_r+0x4c>
 801d916:	1c59      	adds	r1, r3, #1
 801d918:	d103      	bne.n	801d922 <_raise_r+0x42>
 801d91a:	2316      	movs	r3, #22
 801d91c:	6003      	str	r3, [r0, #0]
 801d91e:	2001      	movs	r0, #1
 801d920:	e7e7      	b.n	801d8f2 <_raise_r+0x12>
 801d922:	2400      	movs	r4, #0
 801d924:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d928:	4628      	mov	r0, r5
 801d92a:	4798      	blx	r3
 801d92c:	2000      	movs	r0, #0
 801d92e:	e7e0      	b.n	801d8f2 <_raise_r+0x12>

0801d930 <raise>:
 801d930:	4b02      	ldr	r3, [pc, #8]	; (801d93c <raise+0xc>)
 801d932:	4601      	mov	r1, r0
 801d934:	6818      	ldr	r0, [r3, #0]
 801d936:	f7ff bfd3 	b.w	801d8e0 <_raise_r>
 801d93a:	bf00      	nop
 801d93c:	200000fc 	.word	0x200000fc

0801d940 <_kill_r>:
 801d940:	b538      	push	{r3, r4, r5, lr}
 801d942:	4d07      	ldr	r5, [pc, #28]	; (801d960 <_kill_r+0x20>)
 801d944:	2300      	movs	r3, #0
 801d946:	4604      	mov	r4, r0
 801d948:	4608      	mov	r0, r1
 801d94a:	4611      	mov	r1, r2
 801d94c:	602b      	str	r3, [r5, #0]
 801d94e:	f7e4 f9e9 	bl	8001d24 <_kill>
 801d952:	1c43      	adds	r3, r0, #1
 801d954:	d102      	bne.n	801d95c <_kill_r+0x1c>
 801d956:	682b      	ldr	r3, [r5, #0]
 801d958:	b103      	cbz	r3, 801d95c <_kill_r+0x1c>
 801d95a:	6023      	str	r3, [r4, #0]
 801d95c:	bd38      	pop	{r3, r4, r5, pc}
 801d95e:	bf00      	nop
 801d960:	20013318 	.word	0x20013318

0801d964 <_getpid_r>:
 801d964:	f7e4 b9dc 	b.w	8001d20 <_getpid>

0801d968 <__sread>:
 801d968:	b510      	push	{r4, lr}
 801d96a:	460c      	mov	r4, r1
 801d96c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d970:	f000 fb54 	bl	801e01c <_read_r>
 801d974:	2800      	cmp	r0, #0
 801d976:	bfab      	itete	ge
 801d978:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801d97a:	89a3      	ldrhlt	r3, [r4, #12]
 801d97c:	181b      	addge	r3, r3, r0
 801d97e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801d982:	bfac      	ite	ge
 801d984:	6563      	strge	r3, [r4, #84]	; 0x54
 801d986:	81a3      	strhlt	r3, [r4, #12]
 801d988:	bd10      	pop	{r4, pc}

0801d98a <__swrite>:
 801d98a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d98e:	461f      	mov	r7, r3
 801d990:	898b      	ldrh	r3, [r1, #12]
 801d992:	05db      	lsls	r3, r3, #23
 801d994:	4605      	mov	r5, r0
 801d996:	460c      	mov	r4, r1
 801d998:	4616      	mov	r6, r2
 801d99a:	d505      	bpl.n	801d9a8 <__swrite+0x1e>
 801d99c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d9a0:	2302      	movs	r3, #2
 801d9a2:	2200      	movs	r2, #0
 801d9a4:	f000 fab8 	bl	801df18 <_lseek_r>
 801d9a8:	89a3      	ldrh	r3, [r4, #12]
 801d9aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d9ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801d9b2:	81a3      	strh	r3, [r4, #12]
 801d9b4:	4632      	mov	r2, r6
 801d9b6:	463b      	mov	r3, r7
 801d9b8:	4628      	mov	r0, r5
 801d9ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d9be:	f000 b8f7 	b.w	801dbb0 <_write_r>

0801d9c2 <__sseek>:
 801d9c2:	b510      	push	{r4, lr}
 801d9c4:	460c      	mov	r4, r1
 801d9c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d9ca:	f000 faa5 	bl	801df18 <_lseek_r>
 801d9ce:	1c43      	adds	r3, r0, #1
 801d9d0:	89a3      	ldrh	r3, [r4, #12]
 801d9d2:	bf15      	itete	ne
 801d9d4:	6560      	strne	r0, [r4, #84]	; 0x54
 801d9d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801d9da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801d9de:	81a3      	strheq	r3, [r4, #12]
 801d9e0:	bf18      	it	ne
 801d9e2:	81a3      	strhne	r3, [r4, #12]
 801d9e4:	bd10      	pop	{r4, pc}

0801d9e6 <__sclose>:
 801d9e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d9ea:	f000 b9c3 	b.w	801dd74 <_close_r>
	...

0801d9f0 <_strtol_l.isra.0>:
 801d9f0:	2b01      	cmp	r3, #1
 801d9f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d9f6:	d001      	beq.n	801d9fc <_strtol_l.isra.0+0xc>
 801d9f8:	2b24      	cmp	r3, #36	; 0x24
 801d9fa:	d906      	bls.n	801da0a <_strtol_l.isra.0+0x1a>
 801d9fc:	f7ff fa02 	bl	801ce04 <__errno>
 801da00:	2316      	movs	r3, #22
 801da02:	6003      	str	r3, [r0, #0]
 801da04:	2000      	movs	r0, #0
 801da06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801da0a:	4f3a      	ldr	r7, [pc, #232]	; (801daf4 <_strtol_l.isra.0+0x104>)
 801da0c:	468e      	mov	lr, r1
 801da0e:	4676      	mov	r6, lr
 801da10:	f81e 4b01 	ldrb.w	r4, [lr], #1
 801da14:	5de5      	ldrb	r5, [r4, r7]
 801da16:	f015 0508 	ands.w	r5, r5, #8
 801da1a:	d1f8      	bne.n	801da0e <_strtol_l.isra.0+0x1e>
 801da1c:	2c2d      	cmp	r4, #45	; 0x2d
 801da1e:	d134      	bne.n	801da8a <_strtol_l.isra.0+0x9a>
 801da20:	f89e 4000 	ldrb.w	r4, [lr]
 801da24:	f04f 0801 	mov.w	r8, #1
 801da28:	f106 0e02 	add.w	lr, r6, #2
 801da2c:	2b00      	cmp	r3, #0
 801da2e:	d05c      	beq.n	801daea <_strtol_l.isra.0+0xfa>
 801da30:	2b10      	cmp	r3, #16
 801da32:	d10c      	bne.n	801da4e <_strtol_l.isra.0+0x5e>
 801da34:	2c30      	cmp	r4, #48	; 0x30
 801da36:	d10a      	bne.n	801da4e <_strtol_l.isra.0+0x5e>
 801da38:	f89e 4000 	ldrb.w	r4, [lr]
 801da3c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 801da40:	2c58      	cmp	r4, #88	; 0x58
 801da42:	d14d      	bne.n	801dae0 <_strtol_l.isra.0+0xf0>
 801da44:	f89e 4001 	ldrb.w	r4, [lr, #1]
 801da48:	2310      	movs	r3, #16
 801da4a:	f10e 0e02 	add.w	lr, lr, #2
 801da4e:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 801da52:	f10c 3cff 	add.w	ip, ip, #4294967295
 801da56:	2600      	movs	r6, #0
 801da58:	fbbc f9f3 	udiv	r9, ip, r3
 801da5c:	4635      	mov	r5, r6
 801da5e:	fb03 ca19 	mls	sl, r3, r9, ip
 801da62:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 801da66:	2f09      	cmp	r7, #9
 801da68:	d818      	bhi.n	801da9c <_strtol_l.isra.0+0xac>
 801da6a:	463c      	mov	r4, r7
 801da6c:	42a3      	cmp	r3, r4
 801da6e:	dd24      	ble.n	801daba <_strtol_l.isra.0+0xca>
 801da70:	2e00      	cmp	r6, #0
 801da72:	db1f      	blt.n	801dab4 <_strtol_l.isra.0+0xc4>
 801da74:	45a9      	cmp	r9, r5
 801da76:	d31d      	bcc.n	801dab4 <_strtol_l.isra.0+0xc4>
 801da78:	d101      	bne.n	801da7e <_strtol_l.isra.0+0x8e>
 801da7a:	45a2      	cmp	sl, r4
 801da7c:	db1a      	blt.n	801dab4 <_strtol_l.isra.0+0xc4>
 801da7e:	fb05 4503 	mla	r5, r5, r3, r4
 801da82:	2601      	movs	r6, #1
 801da84:	f81e 4b01 	ldrb.w	r4, [lr], #1
 801da88:	e7eb      	b.n	801da62 <_strtol_l.isra.0+0x72>
 801da8a:	2c2b      	cmp	r4, #43	; 0x2b
 801da8c:	bf08      	it	eq
 801da8e:	f89e 4000 	ldrbeq.w	r4, [lr]
 801da92:	46a8      	mov	r8, r5
 801da94:	bf08      	it	eq
 801da96:	f106 0e02 	addeq.w	lr, r6, #2
 801da9a:	e7c7      	b.n	801da2c <_strtol_l.isra.0+0x3c>
 801da9c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 801daa0:	2f19      	cmp	r7, #25
 801daa2:	d801      	bhi.n	801daa8 <_strtol_l.isra.0+0xb8>
 801daa4:	3c37      	subs	r4, #55	; 0x37
 801daa6:	e7e1      	b.n	801da6c <_strtol_l.isra.0+0x7c>
 801daa8:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 801daac:	2f19      	cmp	r7, #25
 801daae:	d804      	bhi.n	801daba <_strtol_l.isra.0+0xca>
 801dab0:	3c57      	subs	r4, #87	; 0x57
 801dab2:	e7db      	b.n	801da6c <_strtol_l.isra.0+0x7c>
 801dab4:	f04f 36ff 	mov.w	r6, #4294967295
 801dab8:	e7e4      	b.n	801da84 <_strtol_l.isra.0+0x94>
 801daba:	2e00      	cmp	r6, #0
 801dabc:	da05      	bge.n	801daca <_strtol_l.isra.0+0xda>
 801dabe:	2322      	movs	r3, #34	; 0x22
 801dac0:	6003      	str	r3, [r0, #0]
 801dac2:	4665      	mov	r5, ip
 801dac4:	b942      	cbnz	r2, 801dad8 <_strtol_l.isra.0+0xe8>
 801dac6:	4628      	mov	r0, r5
 801dac8:	e79d      	b.n	801da06 <_strtol_l.isra.0+0x16>
 801daca:	f1b8 0f00 	cmp.w	r8, #0
 801dace:	d000      	beq.n	801dad2 <_strtol_l.isra.0+0xe2>
 801dad0:	426d      	negs	r5, r5
 801dad2:	2a00      	cmp	r2, #0
 801dad4:	d0f7      	beq.n	801dac6 <_strtol_l.isra.0+0xd6>
 801dad6:	b10e      	cbz	r6, 801dadc <_strtol_l.isra.0+0xec>
 801dad8:	f10e 31ff 	add.w	r1, lr, #4294967295
 801dadc:	6011      	str	r1, [r2, #0]
 801dade:	e7f2      	b.n	801dac6 <_strtol_l.isra.0+0xd6>
 801dae0:	2430      	movs	r4, #48	; 0x30
 801dae2:	2b00      	cmp	r3, #0
 801dae4:	d1b3      	bne.n	801da4e <_strtol_l.isra.0+0x5e>
 801dae6:	2308      	movs	r3, #8
 801dae8:	e7b1      	b.n	801da4e <_strtol_l.isra.0+0x5e>
 801daea:	2c30      	cmp	r4, #48	; 0x30
 801daec:	d0a4      	beq.n	801da38 <_strtol_l.isra.0+0x48>
 801daee:	230a      	movs	r3, #10
 801daf0:	e7ad      	b.n	801da4e <_strtol_l.isra.0+0x5e>
 801daf2:	bf00      	nop
 801daf4:	08021d39 	.word	0x08021d39

0801daf8 <strtol>:
 801daf8:	4613      	mov	r3, r2
 801dafa:	460a      	mov	r2, r1
 801dafc:	4601      	mov	r1, r0
 801dafe:	4802      	ldr	r0, [pc, #8]	; (801db08 <strtol+0x10>)
 801db00:	6800      	ldr	r0, [r0, #0]
 801db02:	f7ff bf75 	b.w	801d9f0 <_strtol_l.isra.0>
 801db06:	bf00      	nop
 801db08:	200000fc 	.word	0x200000fc

0801db0c <__swbuf_r>:
 801db0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801db0e:	460e      	mov	r6, r1
 801db10:	4614      	mov	r4, r2
 801db12:	4605      	mov	r5, r0
 801db14:	b118      	cbz	r0, 801db1e <__swbuf_r+0x12>
 801db16:	6983      	ldr	r3, [r0, #24]
 801db18:	b90b      	cbnz	r3, 801db1e <__swbuf_r+0x12>
 801db1a:	f7ff f9d1 	bl	801cec0 <__sinit>
 801db1e:	4b21      	ldr	r3, [pc, #132]	; (801dba4 <__swbuf_r+0x98>)
 801db20:	429c      	cmp	r4, r3
 801db22:	d12b      	bne.n	801db7c <__swbuf_r+0x70>
 801db24:	686c      	ldr	r4, [r5, #4]
 801db26:	69a3      	ldr	r3, [r4, #24]
 801db28:	60a3      	str	r3, [r4, #8]
 801db2a:	89a3      	ldrh	r3, [r4, #12]
 801db2c:	071a      	lsls	r2, r3, #28
 801db2e:	d52f      	bpl.n	801db90 <__swbuf_r+0x84>
 801db30:	6923      	ldr	r3, [r4, #16]
 801db32:	b36b      	cbz	r3, 801db90 <__swbuf_r+0x84>
 801db34:	6923      	ldr	r3, [r4, #16]
 801db36:	6820      	ldr	r0, [r4, #0]
 801db38:	1ac0      	subs	r0, r0, r3
 801db3a:	6963      	ldr	r3, [r4, #20]
 801db3c:	b2f6      	uxtb	r6, r6
 801db3e:	4283      	cmp	r3, r0
 801db40:	4637      	mov	r7, r6
 801db42:	dc04      	bgt.n	801db4e <__swbuf_r+0x42>
 801db44:	4621      	mov	r1, r4
 801db46:	4628      	mov	r0, r5
 801db48:	f000 f9aa 	bl	801dea0 <_fflush_r>
 801db4c:	bb30      	cbnz	r0, 801db9c <__swbuf_r+0x90>
 801db4e:	68a3      	ldr	r3, [r4, #8]
 801db50:	3b01      	subs	r3, #1
 801db52:	60a3      	str	r3, [r4, #8]
 801db54:	6823      	ldr	r3, [r4, #0]
 801db56:	1c5a      	adds	r2, r3, #1
 801db58:	6022      	str	r2, [r4, #0]
 801db5a:	701e      	strb	r6, [r3, #0]
 801db5c:	6963      	ldr	r3, [r4, #20]
 801db5e:	3001      	adds	r0, #1
 801db60:	4283      	cmp	r3, r0
 801db62:	d004      	beq.n	801db6e <__swbuf_r+0x62>
 801db64:	89a3      	ldrh	r3, [r4, #12]
 801db66:	07db      	lsls	r3, r3, #31
 801db68:	d506      	bpl.n	801db78 <__swbuf_r+0x6c>
 801db6a:	2e0a      	cmp	r6, #10
 801db6c:	d104      	bne.n	801db78 <__swbuf_r+0x6c>
 801db6e:	4621      	mov	r1, r4
 801db70:	4628      	mov	r0, r5
 801db72:	f000 f995 	bl	801dea0 <_fflush_r>
 801db76:	b988      	cbnz	r0, 801db9c <__swbuf_r+0x90>
 801db78:	4638      	mov	r0, r7
 801db7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801db7c:	4b0a      	ldr	r3, [pc, #40]	; (801dba8 <__swbuf_r+0x9c>)
 801db7e:	429c      	cmp	r4, r3
 801db80:	d101      	bne.n	801db86 <__swbuf_r+0x7a>
 801db82:	68ac      	ldr	r4, [r5, #8]
 801db84:	e7cf      	b.n	801db26 <__swbuf_r+0x1a>
 801db86:	4b09      	ldr	r3, [pc, #36]	; (801dbac <__swbuf_r+0xa0>)
 801db88:	429c      	cmp	r4, r3
 801db8a:	bf08      	it	eq
 801db8c:	68ec      	ldreq	r4, [r5, #12]
 801db8e:	e7ca      	b.n	801db26 <__swbuf_r+0x1a>
 801db90:	4621      	mov	r1, r4
 801db92:	4628      	mov	r0, r5
 801db94:	f000 f81e 	bl	801dbd4 <__swsetup_r>
 801db98:	2800      	cmp	r0, #0
 801db9a:	d0cb      	beq.n	801db34 <__swbuf_r+0x28>
 801db9c:	f04f 37ff 	mov.w	r7, #4294967295
 801dba0:	e7ea      	b.n	801db78 <__swbuf_r+0x6c>
 801dba2:	bf00      	nop
 801dba4:	08021cbc 	.word	0x08021cbc
 801dba8:	08021cdc 	.word	0x08021cdc
 801dbac:	08021c9c 	.word	0x08021c9c

0801dbb0 <_write_r>:
 801dbb0:	b538      	push	{r3, r4, r5, lr}
 801dbb2:	4d07      	ldr	r5, [pc, #28]	; (801dbd0 <_write_r+0x20>)
 801dbb4:	4604      	mov	r4, r0
 801dbb6:	4608      	mov	r0, r1
 801dbb8:	4611      	mov	r1, r2
 801dbba:	2200      	movs	r2, #0
 801dbbc:	602a      	str	r2, [r5, #0]
 801dbbe:	461a      	mov	r2, r3
 801dbc0:	f7e4 f8cb 	bl	8001d5a <_write>
 801dbc4:	1c43      	adds	r3, r0, #1
 801dbc6:	d102      	bne.n	801dbce <_write_r+0x1e>
 801dbc8:	682b      	ldr	r3, [r5, #0]
 801dbca:	b103      	cbz	r3, 801dbce <_write_r+0x1e>
 801dbcc:	6023      	str	r3, [r4, #0]
 801dbce:	bd38      	pop	{r3, r4, r5, pc}
 801dbd0:	20013318 	.word	0x20013318

0801dbd4 <__swsetup_r>:
 801dbd4:	4b32      	ldr	r3, [pc, #200]	; (801dca0 <__swsetup_r+0xcc>)
 801dbd6:	b570      	push	{r4, r5, r6, lr}
 801dbd8:	681d      	ldr	r5, [r3, #0]
 801dbda:	4606      	mov	r6, r0
 801dbdc:	460c      	mov	r4, r1
 801dbde:	b125      	cbz	r5, 801dbea <__swsetup_r+0x16>
 801dbe0:	69ab      	ldr	r3, [r5, #24]
 801dbe2:	b913      	cbnz	r3, 801dbea <__swsetup_r+0x16>
 801dbe4:	4628      	mov	r0, r5
 801dbe6:	f7ff f96b 	bl	801cec0 <__sinit>
 801dbea:	4b2e      	ldr	r3, [pc, #184]	; (801dca4 <__swsetup_r+0xd0>)
 801dbec:	429c      	cmp	r4, r3
 801dbee:	d10f      	bne.n	801dc10 <__swsetup_r+0x3c>
 801dbf0:	686c      	ldr	r4, [r5, #4]
 801dbf2:	89a3      	ldrh	r3, [r4, #12]
 801dbf4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dbf8:	0719      	lsls	r1, r3, #28
 801dbfa:	d42c      	bmi.n	801dc56 <__swsetup_r+0x82>
 801dbfc:	06dd      	lsls	r5, r3, #27
 801dbfe:	d411      	bmi.n	801dc24 <__swsetup_r+0x50>
 801dc00:	2309      	movs	r3, #9
 801dc02:	6033      	str	r3, [r6, #0]
 801dc04:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801dc08:	81a3      	strh	r3, [r4, #12]
 801dc0a:	f04f 30ff 	mov.w	r0, #4294967295
 801dc0e:	e03e      	b.n	801dc8e <__swsetup_r+0xba>
 801dc10:	4b25      	ldr	r3, [pc, #148]	; (801dca8 <__swsetup_r+0xd4>)
 801dc12:	429c      	cmp	r4, r3
 801dc14:	d101      	bne.n	801dc1a <__swsetup_r+0x46>
 801dc16:	68ac      	ldr	r4, [r5, #8]
 801dc18:	e7eb      	b.n	801dbf2 <__swsetup_r+0x1e>
 801dc1a:	4b24      	ldr	r3, [pc, #144]	; (801dcac <__swsetup_r+0xd8>)
 801dc1c:	429c      	cmp	r4, r3
 801dc1e:	bf08      	it	eq
 801dc20:	68ec      	ldreq	r4, [r5, #12]
 801dc22:	e7e6      	b.n	801dbf2 <__swsetup_r+0x1e>
 801dc24:	0758      	lsls	r0, r3, #29
 801dc26:	d512      	bpl.n	801dc4e <__swsetup_r+0x7a>
 801dc28:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801dc2a:	b141      	cbz	r1, 801dc3e <__swsetup_r+0x6a>
 801dc2c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801dc30:	4299      	cmp	r1, r3
 801dc32:	d002      	beq.n	801dc3a <__swsetup_r+0x66>
 801dc34:	4630      	mov	r0, r6
 801dc36:	f7ff fa41 	bl	801d0bc <_free_r>
 801dc3a:	2300      	movs	r3, #0
 801dc3c:	6363      	str	r3, [r4, #52]	; 0x34
 801dc3e:	89a3      	ldrh	r3, [r4, #12]
 801dc40:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801dc44:	81a3      	strh	r3, [r4, #12]
 801dc46:	2300      	movs	r3, #0
 801dc48:	6063      	str	r3, [r4, #4]
 801dc4a:	6923      	ldr	r3, [r4, #16]
 801dc4c:	6023      	str	r3, [r4, #0]
 801dc4e:	89a3      	ldrh	r3, [r4, #12]
 801dc50:	f043 0308 	orr.w	r3, r3, #8
 801dc54:	81a3      	strh	r3, [r4, #12]
 801dc56:	6923      	ldr	r3, [r4, #16]
 801dc58:	b94b      	cbnz	r3, 801dc6e <__swsetup_r+0x9a>
 801dc5a:	89a3      	ldrh	r3, [r4, #12]
 801dc5c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801dc60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801dc64:	d003      	beq.n	801dc6e <__swsetup_r+0x9a>
 801dc66:	4621      	mov	r1, r4
 801dc68:	4630      	mov	r0, r6
 801dc6a:	f000 f98b 	bl	801df84 <__smakebuf_r>
 801dc6e:	89a0      	ldrh	r0, [r4, #12]
 801dc70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dc74:	f010 0301 	ands.w	r3, r0, #1
 801dc78:	d00a      	beq.n	801dc90 <__swsetup_r+0xbc>
 801dc7a:	2300      	movs	r3, #0
 801dc7c:	60a3      	str	r3, [r4, #8]
 801dc7e:	6963      	ldr	r3, [r4, #20]
 801dc80:	425b      	negs	r3, r3
 801dc82:	61a3      	str	r3, [r4, #24]
 801dc84:	6923      	ldr	r3, [r4, #16]
 801dc86:	b943      	cbnz	r3, 801dc9a <__swsetup_r+0xc6>
 801dc88:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801dc8c:	d1ba      	bne.n	801dc04 <__swsetup_r+0x30>
 801dc8e:	bd70      	pop	{r4, r5, r6, pc}
 801dc90:	0781      	lsls	r1, r0, #30
 801dc92:	bf58      	it	pl
 801dc94:	6963      	ldrpl	r3, [r4, #20]
 801dc96:	60a3      	str	r3, [r4, #8]
 801dc98:	e7f4      	b.n	801dc84 <__swsetup_r+0xb0>
 801dc9a:	2000      	movs	r0, #0
 801dc9c:	e7f7      	b.n	801dc8e <__swsetup_r+0xba>
 801dc9e:	bf00      	nop
 801dca0:	200000fc 	.word	0x200000fc
 801dca4:	08021cbc 	.word	0x08021cbc
 801dca8:	08021cdc 	.word	0x08021cdc
 801dcac:	08021c9c 	.word	0x08021c9c

0801dcb0 <__register_exitproc>:
 801dcb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dcb4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801dd70 <__register_exitproc+0xc0>
 801dcb8:	4606      	mov	r6, r0
 801dcba:	f8d8 0000 	ldr.w	r0, [r8]
 801dcbe:	461f      	mov	r7, r3
 801dcc0:	460d      	mov	r5, r1
 801dcc2:	4691      	mov	r9, r2
 801dcc4:	f7ff f9d1 	bl	801d06a <__retarget_lock_acquire_recursive>
 801dcc8:	4b25      	ldr	r3, [pc, #148]	; (801dd60 <__register_exitproc+0xb0>)
 801dcca:	681c      	ldr	r4, [r3, #0]
 801dccc:	b934      	cbnz	r4, 801dcdc <__register_exitproc+0x2c>
 801dcce:	4c25      	ldr	r4, [pc, #148]	; (801dd64 <__register_exitproc+0xb4>)
 801dcd0:	601c      	str	r4, [r3, #0]
 801dcd2:	4b25      	ldr	r3, [pc, #148]	; (801dd68 <__register_exitproc+0xb8>)
 801dcd4:	b113      	cbz	r3, 801dcdc <__register_exitproc+0x2c>
 801dcd6:	681b      	ldr	r3, [r3, #0]
 801dcd8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801dcdc:	6863      	ldr	r3, [r4, #4]
 801dcde:	2b1f      	cmp	r3, #31
 801dce0:	dd07      	ble.n	801dcf2 <__register_exitproc+0x42>
 801dce2:	f8d8 0000 	ldr.w	r0, [r8]
 801dce6:	f7ff f9c2 	bl	801d06e <__retarget_lock_release_recursive>
 801dcea:	f04f 30ff 	mov.w	r0, #4294967295
 801dcee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dcf2:	b34e      	cbz	r6, 801dd48 <__register_exitproc+0x98>
 801dcf4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801dcf8:	b988      	cbnz	r0, 801dd1e <__register_exitproc+0x6e>
 801dcfa:	4b1c      	ldr	r3, [pc, #112]	; (801dd6c <__register_exitproc+0xbc>)
 801dcfc:	b923      	cbnz	r3, 801dd08 <__register_exitproc+0x58>
 801dcfe:	f8d8 0000 	ldr.w	r0, [r8]
 801dd02:	f7ff f9b3 	bl	801d06c <__retarget_lock_release>
 801dd06:	e7f0      	b.n	801dcea <__register_exitproc+0x3a>
 801dd08:	f44f 7084 	mov.w	r0, #264	; 0x108
 801dd0c:	f7ff f9b0 	bl	801d070 <malloc>
 801dd10:	2800      	cmp	r0, #0
 801dd12:	d0f4      	beq.n	801dcfe <__register_exitproc+0x4e>
 801dd14:	2300      	movs	r3, #0
 801dd16:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801dd1a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801dd1e:	6863      	ldr	r3, [r4, #4]
 801dd20:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801dd24:	2201      	movs	r2, #1
 801dd26:	409a      	lsls	r2, r3
 801dd28:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801dd2c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801dd30:	4313      	orrs	r3, r2
 801dd32:	2e02      	cmp	r6, #2
 801dd34:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801dd38:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801dd3c:	bf02      	ittt	eq
 801dd3e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801dd42:	431a      	orreq	r2, r3
 801dd44:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801dd48:	6863      	ldr	r3, [r4, #4]
 801dd4a:	f8d8 0000 	ldr.w	r0, [r8]
 801dd4e:	1c5a      	adds	r2, r3, #1
 801dd50:	3302      	adds	r3, #2
 801dd52:	6062      	str	r2, [r4, #4]
 801dd54:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801dd58:	f7ff f989 	bl	801d06e <__retarget_lock_release_recursive>
 801dd5c:	2000      	movs	r0, #0
 801dd5e:	e7c6      	b.n	801dcee <__register_exitproc+0x3e>
 801dd60:	2001305c 	.word	0x2001305c
 801dd64:	20012fd0 	.word	0x20012fd0
 801dd68:	08021d34 	.word	0x08021d34
 801dd6c:	0801d071 	.word	0x0801d071
 801dd70:	20000160 	.word	0x20000160

0801dd74 <_close_r>:
 801dd74:	b538      	push	{r3, r4, r5, lr}
 801dd76:	4d06      	ldr	r5, [pc, #24]	; (801dd90 <_close_r+0x1c>)
 801dd78:	2300      	movs	r3, #0
 801dd7a:	4604      	mov	r4, r0
 801dd7c:	4608      	mov	r0, r1
 801dd7e:	602b      	str	r3, [r5, #0]
 801dd80:	f7e3 fff8 	bl	8001d74 <_close>
 801dd84:	1c43      	adds	r3, r0, #1
 801dd86:	d102      	bne.n	801dd8e <_close_r+0x1a>
 801dd88:	682b      	ldr	r3, [r5, #0]
 801dd8a:	b103      	cbz	r3, 801dd8e <_close_r+0x1a>
 801dd8c:	6023      	str	r3, [r4, #0]
 801dd8e:	bd38      	pop	{r3, r4, r5, pc}
 801dd90:	20013318 	.word	0x20013318

0801dd94 <__sflush_r>:
 801dd94:	898a      	ldrh	r2, [r1, #12]
 801dd96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dd9a:	4605      	mov	r5, r0
 801dd9c:	0710      	lsls	r0, r2, #28
 801dd9e:	460c      	mov	r4, r1
 801dda0:	d458      	bmi.n	801de54 <__sflush_r+0xc0>
 801dda2:	684b      	ldr	r3, [r1, #4]
 801dda4:	2b00      	cmp	r3, #0
 801dda6:	dc05      	bgt.n	801ddb4 <__sflush_r+0x20>
 801dda8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801ddaa:	2b00      	cmp	r3, #0
 801ddac:	dc02      	bgt.n	801ddb4 <__sflush_r+0x20>
 801ddae:	2000      	movs	r0, #0
 801ddb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ddb4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ddb6:	2e00      	cmp	r6, #0
 801ddb8:	d0f9      	beq.n	801ddae <__sflush_r+0x1a>
 801ddba:	2300      	movs	r3, #0
 801ddbc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ddc0:	682f      	ldr	r7, [r5, #0]
 801ddc2:	602b      	str	r3, [r5, #0]
 801ddc4:	d032      	beq.n	801de2c <__sflush_r+0x98>
 801ddc6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801ddc8:	89a3      	ldrh	r3, [r4, #12]
 801ddca:	075a      	lsls	r2, r3, #29
 801ddcc:	d505      	bpl.n	801ddda <__sflush_r+0x46>
 801ddce:	6863      	ldr	r3, [r4, #4]
 801ddd0:	1ac0      	subs	r0, r0, r3
 801ddd2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ddd4:	b10b      	cbz	r3, 801ddda <__sflush_r+0x46>
 801ddd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801ddd8:	1ac0      	subs	r0, r0, r3
 801ddda:	2300      	movs	r3, #0
 801dddc:	4602      	mov	r2, r0
 801ddde:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801dde0:	6a21      	ldr	r1, [r4, #32]
 801dde2:	4628      	mov	r0, r5
 801dde4:	47b0      	blx	r6
 801dde6:	1c43      	adds	r3, r0, #1
 801dde8:	89a3      	ldrh	r3, [r4, #12]
 801ddea:	d106      	bne.n	801ddfa <__sflush_r+0x66>
 801ddec:	6829      	ldr	r1, [r5, #0]
 801ddee:	291d      	cmp	r1, #29
 801ddf0:	d82c      	bhi.n	801de4c <__sflush_r+0xb8>
 801ddf2:	4a2a      	ldr	r2, [pc, #168]	; (801de9c <__sflush_r+0x108>)
 801ddf4:	40ca      	lsrs	r2, r1
 801ddf6:	07d6      	lsls	r6, r2, #31
 801ddf8:	d528      	bpl.n	801de4c <__sflush_r+0xb8>
 801ddfa:	2200      	movs	r2, #0
 801ddfc:	6062      	str	r2, [r4, #4]
 801ddfe:	04d9      	lsls	r1, r3, #19
 801de00:	6922      	ldr	r2, [r4, #16]
 801de02:	6022      	str	r2, [r4, #0]
 801de04:	d504      	bpl.n	801de10 <__sflush_r+0x7c>
 801de06:	1c42      	adds	r2, r0, #1
 801de08:	d101      	bne.n	801de0e <__sflush_r+0x7a>
 801de0a:	682b      	ldr	r3, [r5, #0]
 801de0c:	b903      	cbnz	r3, 801de10 <__sflush_r+0x7c>
 801de0e:	6560      	str	r0, [r4, #84]	; 0x54
 801de10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801de12:	602f      	str	r7, [r5, #0]
 801de14:	2900      	cmp	r1, #0
 801de16:	d0ca      	beq.n	801ddae <__sflush_r+0x1a>
 801de18:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801de1c:	4299      	cmp	r1, r3
 801de1e:	d002      	beq.n	801de26 <__sflush_r+0x92>
 801de20:	4628      	mov	r0, r5
 801de22:	f7ff f94b 	bl	801d0bc <_free_r>
 801de26:	2000      	movs	r0, #0
 801de28:	6360      	str	r0, [r4, #52]	; 0x34
 801de2a:	e7c1      	b.n	801ddb0 <__sflush_r+0x1c>
 801de2c:	6a21      	ldr	r1, [r4, #32]
 801de2e:	2301      	movs	r3, #1
 801de30:	4628      	mov	r0, r5
 801de32:	47b0      	blx	r6
 801de34:	1c41      	adds	r1, r0, #1
 801de36:	d1c7      	bne.n	801ddc8 <__sflush_r+0x34>
 801de38:	682b      	ldr	r3, [r5, #0]
 801de3a:	2b00      	cmp	r3, #0
 801de3c:	d0c4      	beq.n	801ddc8 <__sflush_r+0x34>
 801de3e:	2b1d      	cmp	r3, #29
 801de40:	d001      	beq.n	801de46 <__sflush_r+0xb2>
 801de42:	2b16      	cmp	r3, #22
 801de44:	d101      	bne.n	801de4a <__sflush_r+0xb6>
 801de46:	602f      	str	r7, [r5, #0]
 801de48:	e7b1      	b.n	801ddae <__sflush_r+0x1a>
 801de4a:	89a3      	ldrh	r3, [r4, #12]
 801de4c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801de50:	81a3      	strh	r3, [r4, #12]
 801de52:	e7ad      	b.n	801ddb0 <__sflush_r+0x1c>
 801de54:	690f      	ldr	r7, [r1, #16]
 801de56:	2f00      	cmp	r7, #0
 801de58:	d0a9      	beq.n	801ddae <__sflush_r+0x1a>
 801de5a:	0793      	lsls	r3, r2, #30
 801de5c:	680e      	ldr	r6, [r1, #0]
 801de5e:	bf08      	it	eq
 801de60:	694b      	ldreq	r3, [r1, #20]
 801de62:	600f      	str	r7, [r1, #0]
 801de64:	bf18      	it	ne
 801de66:	2300      	movne	r3, #0
 801de68:	eba6 0807 	sub.w	r8, r6, r7
 801de6c:	608b      	str	r3, [r1, #8]
 801de6e:	f1b8 0f00 	cmp.w	r8, #0
 801de72:	dd9c      	ble.n	801ddae <__sflush_r+0x1a>
 801de74:	6a21      	ldr	r1, [r4, #32]
 801de76:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801de78:	4643      	mov	r3, r8
 801de7a:	463a      	mov	r2, r7
 801de7c:	4628      	mov	r0, r5
 801de7e:	47b0      	blx	r6
 801de80:	2800      	cmp	r0, #0
 801de82:	dc06      	bgt.n	801de92 <__sflush_r+0xfe>
 801de84:	89a3      	ldrh	r3, [r4, #12]
 801de86:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801de8a:	81a3      	strh	r3, [r4, #12]
 801de8c:	f04f 30ff 	mov.w	r0, #4294967295
 801de90:	e78e      	b.n	801ddb0 <__sflush_r+0x1c>
 801de92:	4407      	add	r7, r0
 801de94:	eba8 0800 	sub.w	r8, r8, r0
 801de98:	e7e9      	b.n	801de6e <__sflush_r+0xda>
 801de9a:	bf00      	nop
 801de9c:	20400001 	.word	0x20400001

0801dea0 <_fflush_r>:
 801dea0:	b538      	push	{r3, r4, r5, lr}
 801dea2:	690b      	ldr	r3, [r1, #16]
 801dea4:	4605      	mov	r5, r0
 801dea6:	460c      	mov	r4, r1
 801dea8:	b913      	cbnz	r3, 801deb0 <_fflush_r+0x10>
 801deaa:	2500      	movs	r5, #0
 801deac:	4628      	mov	r0, r5
 801deae:	bd38      	pop	{r3, r4, r5, pc}
 801deb0:	b118      	cbz	r0, 801deba <_fflush_r+0x1a>
 801deb2:	6983      	ldr	r3, [r0, #24]
 801deb4:	b90b      	cbnz	r3, 801deba <_fflush_r+0x1a>
 801deb6:	f7ff f803 	bl	801cec0 <__sinit>
 801deba:	4b14      	ldr	r3, [pc, #80]	; (801df0c <_fflush_r+0x6c>)
 801debc:	429c      	cmp	r4, r3
 801debe:	d11b      	bne.n	801def8 <_fflush_r+0x58>
 801dec0:	686c      	ldr	r4, [r5, #4]
 801dec2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dec6:	2b00      	cmp	r3, #0
 801dec8:	d0ef      	beq.n	801deaa <_fflush_r+0xa>
 801deca:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801decc:	07d0      	lsls	r0, r2, #31
 801dece:	d404      	bmi.n	801deda <_fflush_r+0x3a>
 801ded0:	0599      	lsls	r1, r3, #22
 801ded2:	d402      	bmi.n	801deda <_fflush_r+0x3a>
 801ded4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ded6:	f7ff f8c8 	bl	801d06a <__retarget_lock_acquire_recursive>
 801deda:	4628      	mov	r0, r5
 801dedc:	4621      	mov	r1, r4
 801dede:	f7ff ff59 	bl	801dd94 <__sflush_r>
 801dee2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801dee4:	07da      	lsls	r2, r3, #31
 801dee6:	4605      	mov	r5, r0
 801dee8:	d4e0      	bmi.n	801deac <_fflush_r+0xc>
 801deea:	89a3      	ldrh	r3, [r4, #12]
 801deec:	059b      	lsls	r3, r3, #22
 801deee:	d4dd      	bmi.n	801deac <_fflush_r+0xc>
 801def0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801def2:	f7ff f8bc 	bl	801d06e <__retarget_lock_release_recursive>
 801def6:	e7d9      	b.n	801deac <_fflush_r+0xc>
 801def8:	4b05      	ldr	r3, [pc, #20]	; (801df10 <_fflush_r+0x70>)
 801defa:	429c      	cmp	r4, r3
 801defc:	d101      	bne.n	801df02 <_fflush_r+0x62>
 801defe:	68ac      	ldr	r4, [r5, #8]
 801df00:	e7df      	b.n	801dec2 <_fflush_r+0x22>
 801df02:	4b04      	ldr	r3, [pc, #16]	; (801df14 <_fflush_r+0x74>)
 801df04:	429c      	cmp	r4, r3
 801df06:	bf08      	it	eq
 801df08:	68ec      	ldreq	r4, [r5, #12]
 801df0a:	e7da      	b.n	801dec2 <_fflush_r+0x22>
 801df0c:	08021cbc 	.word	0x08021cbc
 801df10:	08021cdc 	.word	0x08021cdc
 801df14:	08021c9c 	.word	0x08021c9c

0801df18 <_lseek_r>:
 801df18:	b538      	push	{r3, r4, r5, lr}
 801df1a:	4d07      	ldr	r5, [pc, #28]	; (801df38 <_lseek_r+0x20>)
 801df1c:	4604      	mov	r4, r0
 801df1e:	4608      	mov	r0, r1
 801df20:	4611      	mov	r1, r2
 801df22:	2200      	movs	r2, #0
 801df24:	602a      	str	r2, [r5, #0]
 801df26:	461a      	mov	r2, r3
 801df28:	f7e3 ff2e 	bl	8001d88 <_lseek>
 801df2c:	1c43      	adds	r3, r0, #1
 801df2e:	d102      	bne.n	801df36 <_lseek_r+0x1e>
 801df30:	682b      	ldr	r3, [r5, #0]
 801df32:	b103      	cbz	r3, 801df36 <_lseek_r+0x1e>
 801df34:	6023      	str	r3, [r4, #0]
 801df36:	bd38      	pop	{r3, r4, r5, pc}
 801df38:	20013318 	.word	0x20013318

0801df3c <__swhatbuf_r>:
 801df3c:	b570      	push	{r4, r5, r6, lr}
 801df3e:	460e      	mov	r6, r1
 801df40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801df44:	2900      	cmp	r1, #0
 801df46:	b096      	sub	sp, #88	; 0x58
 801df48:	4614      	mov	r4, r2
 801df4a:	461d      	mov	r5, r3
 801df4c:	da07      	bge.n	801df5e <__swhatbuf_r+0x22>
 801df4e:	2300      	movs	r3, #0
 801df50:	602b      	str	r3, [r5, #0]
 801df52:	89b3      	ldrh	r3, [r6, #12]
 801df54:	061a      	lsls	r2, r3, #24
 801df56:	d410      	bmi.n	801df7a <__swhatbuf_r+0x3e>
 801df58:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801df5c:	e00e      	b.n	801df7c <__swhatbuf_r+0x40>
 801df5e:	466a      	mov	r2, sp
 801df60:	f000 f86e 	bl	801e040 <_fstat_r>
 801df64:	2800      	cmp	r0, #0
 801df66:	dbf2      	blt.n	801df4e <__swhatbuf_r+0x12>
 801df68:	9a01      	ldr	r2, [sp, #4]
 801df6a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801df6e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801df72:	425a      	negs	r2, r3
 801df74:	415a      	adcs	r2, r3
 801df76:	602a      	str	r2, [r5, #0]
 801df78:	e7ee      	b.n	801df58 <__swhatbuf_r+0x1c>
 801df7a:	2340      	movs	r3, #64	; 0x40
 801df7c:	2000      	movs	r0, #0
 801df7e:	6023      	str	r3, [r4, #0]
 801df80:	b016      	add	sp, #88	; 0x58
 801df82:	bd70      	pop	{r4, r5, r6, pc}

0801df84 <__smakebuf_r>:
 801df84:	898b      	ldrh	r3, [r1, #12]
 801df86:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801df88:	079d      	lsls	r5, r3, #30
 801df8a:	4606      	mov	r6, r0
 801df8c:	460c      	mov	r4, r1
 801df8e:	d507      	bpl.n	801dfa0 <__smakebuf_r+0x1c>
 801df90:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801df94:	6023      	str	r3, [r4, #0]
 801df96:	6123      	str	r3, [r4, #16]
 801df98:	2301      	movs	r3, #1
 801df9a:	6163      	str	r3, [r4, #20]
 801df9c:	b002      	add	sp, #8
 801df9e:	bd70      	pop	{r4, r5, r6, pc}
 801dfa0:	ab01      	add	r3, sp, #4
 801dfa2:	466a      	mov	r2, sp
 801dfa4:	f7ff ffca 	bl	801df3c <__swhatbuf_r>
 801dfa8:	9900      	ldr	r1, [sp, #0]
 801dfaa:	4605      	mov	r5, r0
 801dfac:	4630      	mov	r0, r6
 801dfae:	f7ff f8d5 	bl	801d15c <_malloc_r>
 801dfb2:	b948      	cbnz	r0, 801dfc8 <__smakebuf_r+0x44>
 801dfb4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801dfb8:	059a      	lsls	r2, r3, #22
 801dfba:	d4ef      	bmi.n	801df9c <__smakebuf_r+0x18>
 801dfbc:	f023 0303 	bic.w	r3, r3, #3
 801dfc0:	f043 0302 	orr.w	r3, r3, #2
 801dfc4:	81a3      	strh	r3, [r4, #12]
 801dfc6:	e7e3      	b.n	801df90 <__smakebuf_r+0xc>
 801dfc8:	4b0d      	ldr	r3, [pc, #52]	; (801e000 <__smakebuf_r+0x7c>)
 801dfca:	62b3      	str	r3, [r6, #40]	; 0x28
 801dfcc:	89a3      	ldrh	r3, [r4, #12]
 801dfce:	6020      	str	r0, [r4, #0]
 801dfd0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801dfd4:	81a3      	strh	r3, [r4, #12]
 801dfd6:	9b00      	ldr	r3, [sp, #0]
 801dfd8:	6163      	str	r3, [r4, #20]
 801dfda:	9b01      	ldr	r3, [sp, #4]
 801dfdc:	6120      	str	r0, [r4, #16]
 801dfde:	b15b      	cbz	r3, 801dff8 <__smakebuf_r+0x74>
 801dfe0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dfe4:	4630      	mov	r0, r6
 801dfe6:	f000 f83d 	bl	801e064 <_isatty_r>
 801dfea:	b128      	cbz	r0, 801dff8 <__smakebuf_r+0x74>
 801dfec:	89a3      	ldrh	r3, [r4, #12]
 801dfee:	f023 0303 	bic.w	r3, r3, #3
 801dff2:	f043 0301 	orr.w	r3, r3, #1
 801dff6:	81a3      	strh	r3, [r4, #12]
 801dff8:	89a0      	ldrh	r0, [r4, #12]
 801dffa:	4305      	orrs	r5, r0
 801dffc:	81a5      	strh	r5, [r4, #12]
 801dffe:	e7cd      	b.n	801df9c <__smakebuf_r+0x18>
 801e000:	0801ce59 	.word	0x0801ce59

0801e004 <__malloc_lock>:
 801e004:	4801      	ldr	r0, [pc, #4]	; (801e00c <__malloc_lock+0x8>)
 801e006:	f7ff b830 	b.w	801d06a <__retarget_lock_acquire_recursive>
 801e00a:	bf00      	nop
 801e00c:	20013310 	.word	0x20013310

0801e010 <__malloc_unlock>:
 801e010:	4801      	ldr	r0, [pc, #4]	; (801e018 <__malloc_unlock+0x8>)
 801e012:	f7ff b82c 	b.w	801d06e <__retarget_lock_release_recursive>
 801e016:	bf00      	nop
 801e018:	20013310 	.word	0x20013310

0801e01c <_read_r>:
 801e01c:	b538      	push	{r3, r4, r5, lr}
 801e01e:	4d07      	ldr	r5, [pc, #28]	; (801e03c <_read_r+0x20>)
 801e020:	4604      	mov	r4, r0
 801e022:	4608      	mov	r0, r1
 801e024:	4611      	mov	r1, r2
 801e026:	2200      	movs	r2, #0
 801e028:	602a      	str	r2, [r5, #0]
 801e02a:	461a      	mov	r2, r3
 801e02c:	f7e3 fe88 	bl	8001d40 <_read>
 801e030:	1c43      	adds	r3, r0, #1
 801e032:	d102      	bne.n	801e03a <_read_r+0x1e>
 801e034:	682b      	ldr	r3, [r5, #0]
 801e036:	b103      	cbz	r3, 801e03a <_read_r+0x1e>
 801e038:	6023      	str	r3, [r4, #0]
 801e03a:	bd38      	pop	{r3, r4, r5, pc}
 801e03c:	20013318 	.word	0x20013318

0801e040 <_fstat_r>:
 801e040:	b538      	push	{r3, r4, r5, lr}
 801e042:	4d07      	ldr	r5, [pc, #28]	; (801e060 <_fstat_r+0x20>)
 801e044:	2300      	movs	r3, #0
 801e046:	4604      	mov	r4, r0
 801e048:	4608      	mov	r0, r1
 801e04a:	4611      	mov	r1, r2
 801e04c:	602b      	str	r3, [r5, #0]
 801e04e:	f7e3 fe94 	bl	8001d7a <_fstat>
 801e052:	1c43      	adds	r3, r0, #1
 801e054:	d102      	bne.n	801e05c <_fstat_r+0x1c>
 801e056:	682b      	ldr	r3, [r5, #0]
 801e058:	b103      	cbz	r3, 801e05c <_fstat_r+0x1c>
 801e05a:	6023      	str	r3, [r4, #0]
 801e05c:	bd38      	pop	{r3, r4, r5, pc}
 801e05e:	bf00      	nop
 801e060:	20013318 	.word	0x20013318

0801e064 <_isatty_r>:
 801e064:	b538      	push	{r3, r4, r5, lr}
 801e066:	4d06      	ldr	r5, [pc, #24]	; (801e080 <_isatty_r+0x1c>)
 801e068:	2300      	movs	r3, #0
 801e06a:	4604      	mov	r4, r0
 801e06c:	4608      	mov	r0, r1
 801e06e:	602b      	str	r3, [r5, #0]
 801e070:	f7e3 fe88 	bl	8001d84 <_isatty>
 801e074:	1c43      	adds	r3, r0, #1
 801e076:	d102      	bne.n	801e07e <_isatty_r+0x1a>
 801e078:	682b      	ldr	r3, [r5, #0]
 801e07a:	b103      	cbz	r3, 801e07e <_isatty_r+0x1a>
 801e07c:	6023      	str	r3, [r4, #0]
 801e07e:	bd38      	pop	{r3, r4, r5, pc}
 801e080:	20013318 	.word	0x20013318

0801e084 <_init>:
 801e084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e086:	bf00      	nop
 801e088:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e08a:	bc08      	pop	{r3}
 801e08c:	469e      	mov	lr, r3
 801e08e:	4770      	bx	lr

0801e090 <_fini>:
 801e090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e092:	bf00      	nop
 801e094:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e096:	bc08      	pop	{r3}
 801e098:	469e      	mov	lr, r3
 801e09a:	4770      	bx	lr
